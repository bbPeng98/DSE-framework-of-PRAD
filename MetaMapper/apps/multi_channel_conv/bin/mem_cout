program: multi_channel_conv
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int conv_s0_z = 0; conv_s0_z < 3; conv_s0_z++) {
    for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
      for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
        op_hcompute_conv_stencil: conv_stencil[conv_s0_z, conv_s0_y, conv_s0_x] = hcompute_conv_stencil()
      }
    }
  }
  for (int conv_s1_z = 0; conv_s1_z < 3; conv_s1_z++) {
    for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
      for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
        op_hcompute_conv_stencil_1: conv_stencil[conv_s1_z, conv_s1_y, conv_s1_x] = hcompute_conv_stencil_1(conv_stencil[conv_s1_z, conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 1)], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 1)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 1)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 2)])
      }
    }
  }
  for (int hw_output_s0_z = 0; hw_output_s0_z < 3; hw_output_s0_z++) {
    for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
      for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
        op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi])
      }
    }
  }
}
Is rate matchable
reduced kernel : conv_stencil
insert kernel: conv_s0_z to producer buffer: conv_stencil
insert kernel: conv_s1_z to producer buffer: conv_stencil
insert kernel: hw_input_global_wrapper_s0_y to producer buffer: hw_input_global_wrapper_stencil
insert kernel: hw_output_s0_z to producer buffer: hw_output_stencil
Producer kernels...
  conv_stencil -> conv_s0_z conv_s1_z 
    MULTIPLE PRODUCERS
  hw_input_global_wrapper_stencil -> hw_input_global_wrapper_s0_y 
  hw_output_stencil -> hw_output_s0_z 
conv_stencil has 2 producers
  conv_s0_z
  conv_s1_z
program: multi_channel_conv
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int conv_s0_z = 0; conv_s0_z < 3; conv_s0_z++) {
    for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
      for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
        op_hcompute_conv_stencil: conv_stencil[conv_s0_z, conv_s0_y, conv_s0_x] = hcompute_conv_stencil()
      }
    }
  }
  for (int conv_s1_z = 0; conv_s1_z < 3; conv_s1_z++) {
    for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
      for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
        op_hcompute_conv_stencil_1: conv_stencil[conv_s1_z, conv_s1_y, conv_s1_x] = hcompute_conv_stencil_1(conv_stencil[conv_s1_z, conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 1)], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 1)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 1)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 2)])
      }
    }
  }
  for (int hw_output_s0_z = 0; hw_output_s0_z < 3; hw_output_s0_z++) {
    for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
      for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
        op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi])
      }
    }
  }
}
conv_stencil has 2 producers
  conv_s0_z
  conv_s1_z
program: multi_channel_conv
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int conv_s0_z = 0; conv_s0_z < 3; conv_s0_z++) {
    for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
      for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
        op_hcompute_conv_stencil: conv_stencil[conv_s0_z, conv_s0_y, conv_s0_x] = hcompute_conv_stencil()
      }
    }
  }
  for (int conv_s1_z = 0; conv_s1_z < 3; conv_s1_z++) {
    for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
      for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
        op_hcompute_conv_stencil_1: conv_stencil[conv_s1_z, conv_s1_y, conv_s1_x] = hcompute_conv_stencil_1(conv_stencil[conv_s1_z, conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 1)], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 1)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 1)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 2)])
      }
    }
  }
  for (int hw_output_s0_z = 0; hw_output_s0_z < 3; hw_output_s0_z++) {
    for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
      for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
        op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi])
      }
    }
  }
}
Multi-write buffers
  conv_stencil
Built initializer / update maps
  # multi_write buffers = 1
program: multi_channel_conv
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int conv_s0_z = 0; conv_s0_z < 3; conv_s0_z++) {
    for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
      for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
        op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_z, conv_s0_y, conv_s0_x] = hcompute_conv_stencil()
      }
    }
  }
  for (int conv_s1_z = 0; conv_s1_z < 3; conv_s1_z++) {
    for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
      for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
        op_hcompute_conv_stencil_1: conv_stencil[conv_s1_z, conv_s1_y, conv_s1_x] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_z, conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 1)], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 1)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 1)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 2)])
      }
    }
  }
  for (int hw_output_s0_z = 0; hw_output_s0_z < 3; hw_output_s0_z++) {
    for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
      for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
        op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi])
      }
    }
  }
}
Unoptimized schedule...
  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0, 0, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_z, 0, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_z, 0, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
{
  for (int c3 = 0; c3 <= 63; c3 += 1)
    for (int c5 = 0; c5 <= 63; c5 += 1)
      op_hcompute_hw_input_global_wrapper_stencil(0, c3, c5);
  for (int c3 = 0; c3 <= 2; c3 += 1)
    for (int c5 = 0; c5 <= 61; c5 += 1)
      for (int c7 = 0; c7 <= 61; c7 += 1)
        op_hcompute_conv_stencil(0, c3, c5, c7);
  for (int c3 = 0; c3 <= 2; c3 += 1)
    for (int c5 = 0; c5 <= 61; c5 += 1)
      for (int c7 = 0; c7 <= 61; c7 += 1)
        op_hcompute_conv_stencil_1(0, c3, c5, c7);
  for (int c3 = 0; c3 <= 2; c3 += 1)
    for (int c5 = 0; c5 <= 61; c5 += 1)
      for (int c7 = 0; c7 <= 61; c7 += 1)
        op_hcompute_hw_output_stencil(0, c3, c5, c7);
}
Creating ports for op: hw_output_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] }
	Adding output port: hw_output_stencil_op_hcompute_hw_output_stencil_0
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
current out port name: 
	hw_output_stencil_op_hcompute_hw_output_stencil_0
Creating ports for op: conv_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] }
	Adding output port: conv_stencil_op_hcompute_hw_output_stencil_1
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Opt sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0, 0, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_z, 0, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_z, 0, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_hw_output_stencil
  other_dspace_id = op_hcompute_hw_output_stencil
  Schedule domain set: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
  Domain set from prg: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
  ITS: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
ITS      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_z, 0, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
current out port name: 
	conv_stencil_op_hcompute_hw_output_stencil_1
Creating ports for op: hw_input_global_wrapper_stencil
cond = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
		Consumed: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Creating ports for op: hw_input_stencil
cond = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
	Adding output port: hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_3
		Consumed: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Opt sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0, 0, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_z, 0, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_z, 0, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_hw_input_global_wrapper_stencil
  other_dspace_id = op_hcompute_hw_input_global_wrapper_stencil
  Schedule domain set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  Domain set from prg: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  ITS: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
ITS      : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0, 0, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
current out port name: 
	hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_3
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_z, conv_s1_y, conv_s1_x] }
	Adding output port: conv_stencil_op_hcompute_conv_stencil_1_4
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	conv_stencil_op_hcompute_conv_stencil_1_4
Creating ports for op: conv_stencil_clkwrk_dsa0
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_z, conv_s1_y, conv_s1_x] }
	Adding output port: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0, 0, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_z, 0, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_z, 0, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0, 0, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_z, 0, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_z, 0, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 1)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0, 0, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_z, 0, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_z, 0, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 2)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0, 0, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_z, 0, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_z, 0, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 1), conv_s1_x] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0, 0, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_z, 0, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_z, 0, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 1)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0, 0, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_z, 0, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_z, 0, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 2)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0, 0, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_z, 0, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_z, 0, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 2), conv_s1_x] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0, 0, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_z, 0, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_z, 0, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 1)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0, 0, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_z, 0, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_z, 0, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 2)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0, 0, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_z, 0, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_z, 0, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_z, 0, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_z, conv_s0_y, conv_s0_x] }
	Adding output port: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
		Consumed: { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
current out port name: 
	conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
generating banks for buffer: conv_stencil
getting rddom
rddom = { conv_stencil[i0, i1, i2] : 0 <= i0 <= 2 and 0 <= i1 <= 61 and 0 <= i2 <= 61 }
Adding bank between conv_stencil_op_hcompute_conv_stencil_1_4 and conv_stencil_op_hcompute_hw_output_stencil_1
Done generating register-file style banks for conv_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: conv_stencil_all_inputs_to_all_outputs
	input: 
    conv_stencil_op_hcompute_conv_stencil_1_4
	 output: 
    conv_stencil_op_hcompute_hw_output_stencil_1
extracting box from { conv_stencil[i0, i1, i2] : 0 <= i0 <= 2 and 0 <= i1 <= 61 and 0 <= i2 <= 61 }
extracting box from { conv_stencil[i0, i1, i2] : 0 <= i0 <= 2 and 0 <= i1 <= 61 and 0 <= i2 <= 61 }
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_z)] }
cg = (((1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 - conv_s1_z)] }
cg = (((2 + -1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Input port:conv_stencil_op_hcompute_conv_stencil_1_4, Get ram string: (((1*conv_s1_z)) - 0) * 1 + (((1*conv_s1_y)) - 0) * 3 + (((1*conv_s1_x)) - 0) * 186
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(hw_output_s0_z)] }
cg = (((1*hw_output_s0_z)) >= 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(2 - hw_output_s0_z)] }
cg = (((2 + -1*hw_output_s0_z)) >= 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(hw_output_s0_y_yi)] }
cg = (((1*hw_output_s0_y_yi)) >= 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(61 - hw_output_s0_y_yi)] }
cg = (((61 + -1*hw_output_s0_y_yi)) >= 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
cg = (((1*hw_output_s0_x_xi)) >= 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(61 - hw_output_s0_x_xi)] }
cg = (((61 + -1*hw_output_s0_x_xi)) >= 0)
generating banks for buffer: conv_stencil_clkwrk_dsa0
getting rddom
rddom = { conv_stencil_clkwrk_dsa0[i0, i1, i2] : 0 <= i0 <= 2 and 0 <= i1 <= 61 and 0 <= i2 <= 61 }
Adding bank between conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15 and conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
Done generating register-file style banks for conv_stencil_clkwrk_dsa0, bank list size = 1
  after banking there are 1 banks
  Bank name: conv_stencil_clkwrk_dsa0_all_inputs_to_all_outputs
	input: 
    conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
	 output: 
    conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
extracting box from { conv_stencil_clkwrk_dsa0[i0, i1, i2] : 0 <= i0 <= 2 and 0 <= i1 <= 61 and 0 <= i2 <= 61 }
extracting box from { conv_stencil_clkwrk_dsa0[i0, i1, i2] : 0 <= i0 <= 2 and 0 <= i1 <= 61 and 0 <= i2 <= 61 }
Constraint aff with div: { op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [(conv_s0_z)] }
cg = (((1*conv_s0_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [(2 - conv_s0_z)] }
cg = (((2 + -1*conv_s0_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [(conv_s0_y)] }
cg = (((1*conv_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [(61 - conv_s0_y)] }
cg = (((61 + -1*conv_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [(conv_s0_x)] }
cg = (((1*conv_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [(61 - conv_s0_x)] }
cg = (((61 + -1*conv_s0_x)) >= 0)
Input port:conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15, Get ram string: (((1*conv_s0_z)) - 0) * 1 + (((1*conv_s0_y)) - 0) * 3 + (((1*conv_s0_x)) - 0) * 186
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_z)] }
cg = (((1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 - conv_s1_z)] }
cg = (((2 + -1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
generating banks for buffer: hw_input_global_wrapper_stencil
getting rddom
rddom = { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
Done generating register-file style banks for hw_input_global_wrapper_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: hw_input_global_wrapper_stencil_all_inputs_to_all_outputs
	input: 
    hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	 output: 
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
extracting box from { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
extracting box from { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_y)] }
cg = (((1*hw_input_global_wrapper_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(63 - hw_input_global_wrapper_s0_y)] }
cg = (((63 + -1*hw_input_global_wrapper_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_x)] }
cg = (((1*hw_input_global_wrapper_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(63 - hw_input_global_wrapper_s0_x)] }
cg = (((63 + -1*hw_input_global_wrapper_s0_x)) >= 0)
Input port:hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2, Get ram string: (((1*hw_input_global_wrapper_s0_y)) - 0) * 1 + (((1*hw_input_global_wrapper_s0_x)) - 0) * 64
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_z)] }
cg = (((1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 - conv_s1_z)] }
cg = (((2 + -1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_z)] }
cg = (((1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 - conv_s1_z)] }
cg = (((2 + -1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_z)] }
cg = (((1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 - conv_s1_z)] }
cg = (((2 + -1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_z)] }
cg = (((1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 - conv_s1_z)] }
cg = (((2 + -1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_z)] }
cg = (((1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 - conv_s1_z)] }
cg = (((2 + -1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_z)] }
cg = (((1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 - conv_s1_z)] }
cg = (((2 + -1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_z)] }
cg = (((1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 - conv_s1_z)] }
cg = (((2 + -1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_z)] }
cg = (((1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 - conv_s1_z)] }
cg = (((2 + -1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_z)] }
cg = (((1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 - conv_s1_z)] }
cg = (((2 + -1*conv_s1_z)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Prog: unoptimized_multi_channel_conv
Generating compute for: op_hcompute_hw_input_global_wrapper_stencil
Got srcs
Got iteration variables
got in_buffers
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_conv_stencil
Got srcs
Got iteration variables
got in_buffers
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_conv_stencil_1
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_conv_stencil_1
op = op_hcompute_conv_stencil_1
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_hw_output_stencil
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_hw_output_stencil
created res
finding out buffers
Checking if program is a boundary
Trying to find hw_input_stencil in buffers
Trying bundle: op_hcompute_hw_input_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_input_stencil
No bundle for input: hw_input_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i8)] }
cg = (((1*i8)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(-2 + i2)] }
cg = (((-2 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(2 - i3)] }
cg = (((2 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(61 - i5)] }
cg = (((61 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i7)] }
cg = (((1*i7)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(61 - i7)] }
cg = (((61 + -1*i7)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i8)] }
cg = (((1*i8)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i7)] }
cg = (((1*i7)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i2)] }
cg = (((1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(63 - i3)] }
cg = (((63 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(63 - i5)] }
cg = (((63 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i8)] }
cg = (((1*i8)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(-1 + i2)] }
cg = (((-1 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(2 - i3)] }
cg = (((2 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(61 - i5)] }
cg = (((61 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i7)] }
cg = (((1*i7)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(61 - i7)] }
cg = (((61 + -1*i7)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i8)] }
cg = (((1*i8)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(-3 + i2)] }
cg = (((-3 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(2 - i3)] }
cg = (((2 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(61 - i5)] }
cg = (((61 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(i7)] }
cg = (((1*i7)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6, i7, i8] -> [(61 - i7)] }
cg = (((61 + -1*i7)) >= 0)
Trying to find hw_input_stencil in buffers
Trying bundle: op_hcompute_hw_input_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_input_stencil
No bundle for input: hw_input_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
Trying to find hw_input_stencil in buffers
Trying bundle: op_hcompute_hw_input_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_input_stencil
No bundle for input: hw_input_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
Generating accel wrapper
# in bundles: 1
Generating arg list
Generating driver function
buf = hw_input_stencil
Generated accel wrapper
Generating accel wrapper
Generating arg list
Generating driver function
Generating bmp harness
Generated channels
Generating inputs
in dim = 0
Trying to find hw_input_stencil in buffers
Trying bundle: op_hcompute_hw_input_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_input_stencil
No bundle for input: hw_input_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
Built unoptimized code
cmd: echo $CLKWRK_PATH
/home/dai-dirk/MetaMapper/MetaMapper/clockwork
cmd: g++ -fstack-protector-all -std=c++11 -I $CLKWRK_PATH regression_tb_unoptimized_multi_channel_conv.cpp unoptimized_multi_channel_conv.cpp
Running CGRA flow on multi_channel_conv
program: multi_channel_conv
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int conv_s0_z = 0; conv_s0_z < 3; conv_s0_z++) {
    for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
      for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
        op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_z, conv_s0_y, conv_s0_x] = hcompute_conv_stencil()
      }
    }
  }
  for (int conv_s1_z = 0; conv_s1_z < 3; conv_s1_z++) {
    for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
      for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
        op_hcompute_conv_stencil_1: conv_stencil[conv_s1_z, conv_s1_y, conv_s1_x] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_z, conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 1)], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 1)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 1)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 2)])
      }
    }
  }
  for (int hw_output_s0_z = 0; hw_output_s0_z < 3; hw_output_s0_z++) {
    for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
      for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
        op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi])
      }
    }
  }
}
Buffer: conv_stencil
  Producers...
Got consumers
Writes: { conv_stencil[i0, i1, i2] : 0 <= i0 <= 2 and 0 <= i1 <= 61 and 0 <= i2 <= 61 }
    Min offset (counting only writers): 0, 0, 0
Visit produce locations: conv_stencil: addr =  [conv_s1_z, conv_s1_y, conv_s1_x]
New produce locations: conv_stencil: addr =  [conv_s1_z+0,  conv_s1_y+0,  conv_s1_x+0]
Visit consume locations: conv_stencil: addr =  [hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi]
New consume locations: conv_stencil: addr =  [hw_output_s0_z+0,  hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0]
Buffer: conv_stencil_clkwrk_dsa0
  Producers...
Got consumers
Writes: { conv_stencil_clkwrk_dsa0[i0, i1, i2] : 0 <= i0 <= 2 and 0 <= i1 <= 61 and 0 <= i2 <= 61 }
    Min offset (counting only writers): 0, 0, 0
Visit produce locations: conv_stencil_clkwrk_dsa0: addr =  [conv_s0_z, conv_s0_y, conv_s0_x]
New produce locations: conv_stencil_clkwrk_dsa0: addr =  [conv_s0_z+0,  conv_s0_y+0,  conv_s0_x+0]
Visit consume locations: conv_stencil_clkwrk_dsa0: addr =  [conv_s1_z, conv_s1_y, conv_s1_x]
New consume locations: conv_stencil_clkwrk_dsa0: addr =  [conv_s1_z+0,  conv_s1_y+0,  conv_s1_x+0]
Buffer: hw_input_global_wrapper_stencil
  Producers...
Got consumers
Writes: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 and ((0 < i0 <= 62 and i1 >= 2) or (i0 >= 2 and i1 >= 2) or (i0 >= 2 and 0 < i1 <= 62) or (i0 >= 2 and i1 <= 61) or (0 < i0 <= 62 and 0 < i1 <= 62) or (0 < i0 <= 62 and i1 <= 61) or (i0 <= 61 and i1 >= 2) or (i0 <= 61 and 0 < i1 <= 62) or (i0 <= 61 and i1 <= 61)) }
    Min offset (counting only writers): 0, 0
Visit produce locations: hw_input_global_wrapper_stencil: addr =  [hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x]
New produce locations: hw_input_global_wrapper_stencil: addr =  [hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [conv_s1_y, conv_s1_x]
New consume locations: hw_input_global_wrapper_stencil: addr =  [conv_s1_y+0,  conv_s1_x+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [conv_s1_y, (conv_s1_x + 1)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [conv_s1_y+0,  (conv_s1_x + 1)+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [conv_s1_y, (conv_s1_x + 2)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [conv_s1_y+0,  (conv_s1_x + 2)+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 1), conv_s1_x]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 1)+0,  conv_s1_x+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 1), (conv_s1_x + 1)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 1)+0,  (conv_s1_x + 1)+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 1), (conv_s1_x + 2)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 1)+0,  (conv_s1_x + 2)+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 2), conv_s1_x]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 2)+0,  conv_s1_x+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 2), (conv_s1_x + 1)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 2)+0,  (conv_s1_x + 1)+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 2), (conv_s1_x + 2)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 2)+0,  (conv_s1_x + 2)+0]
Buffer: hw_input_stencil
  Producers...
4
Got consumers
Writes: { hw_input_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
    Min offset (counting only writers): 0, 0
Visit consume locations: hw_input_stencil: addr =  [hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x]
New consume locations: hw_input_stencil: addr =  [hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0]
Buffer: hw_output_stencil
  Producers...
Got consumers
    Min offset (counting only writers): 0, 0, 0
Visit produce locations: hw_output_stencil: addr =  [hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi]
New produce locations: hw_output_stencil: addr =  [hw_output_s0_z+0,  hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0]
program: multi_channel_conv
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int conv_s0_z = 0; conv_s0_z < 3; conv_s0_z++) {
    for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
      for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
        op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_z+0,  conv_s0_y+0,  conv_s0_x+0] = hcompute_conv_stencil()
      }
    }
  }
  for (int conv_s1_z = 0; conv_s1_z < 3; conv_s1_z++) {
    for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
      for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
        op_hcompute_conv_stencil_1: conv_stencil[conv_s1_z+0,  conv_s1_y+0,  conv_s1_x+0] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_z+0,  conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 2)+0])
      }
    }
  }
  for (int hw_output_s0_z = 0; hw_output_s0_z < 3; hw_output_s0_z++) {
    for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
      for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
        op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_z+0,  hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_z+0,  hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
      }
    }
  }
}
cmd: mkdir -p ./map_result/multi_channel_conv
After Loop Perfection
program: multi_channel_conv
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int conv_s0_z = 0; conv_s0_z < 3; conv_s0_z++) {
    for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
      for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
        op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_z+0,  conv_s0_y+0,  conv_s0_x+0] = hcompute_conv_stencil()
      }
    }
  }
  for (int conv_s1_z = 0; conv_s1_z < 3; conv_s1_z++) {
    for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
      for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
        op_hcompute_conv_stencil_1: conv_stencil[conv_s1_z+0,  conv_s1_y+0,  conv_s1_x+0] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_z+0,  conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 2)+0])
      }
    }
  }
  for (int hw_output_s0_z = 0; hw_output_s0_z < 3; hw_output_s0_z++) {
    for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
      for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
        op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_z+0,  hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_z+0,  hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
      }
    }
  }
}
hcompute_hw_input_global_wrapper_stencil
	Buffer <hw_input_global_wrapper_stencil> 
	producer map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	capacity: 4096
	hierarchy level: glb
	Buffer <hw_input_stencil> 
	producer map: {  }
	capacity: 4096
	hierarchy level: glb
hcompute_conv_stencil
	Buffer <conv_stencil_clkwrk_dsa0> 
	producer map: { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
	capacity: 11532
	hierarchy level: glb
hcompute_conv_stencil_1
KERNEL LATENCY hcompute_conv_stencil_1 : 1
	Buffer <conv_stencil> 
	producer map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	capacity: 11532
	hierarchy level: glb
	Buffer <conv_stencil_clkwrk_dsa0> 
	producer map: { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
	capacity: 11532
	hierarchy level: glb
	Buffer <hw_input_global_wrapper_stencil> 
	producer map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	capacity: 4096
	hierarchy level: glb
hcompute_hw_output_stencil
	Buffer <conv_stencil> 
	producer map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	capacity: 11532
	hierarchy level: glb
	Buffer <hw_output_stencil> 
	producer map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
	capacity: 11532
	hierarchy level: glb
hcompute_conv_stencil: 0 
hcompute_conv_stencil_1: 1 
hcompute_hw_input_global_wrapper_stencil: 0 
hcompute_hw_output_stencil: 0 

hcompute_conv_stencil: 0 
hcompute_conv_stencil_1: 1 
hcompute_hw_input_global_wrapper_stencil: 0 
hcompute_hw_output_stencil: 0 

Compute file dse found
No compute unit file: 
program: multi_channel_conv
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int conv_s0_z = 0; conv_s0_z < 3; conv_s0_z++) {
    for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
      for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
        op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_z+0,  conv_s0_y+0,  conv_s0_x+0] = hcompute_conv_stencil()
      }
    }
  }
  for (int conv_s1_z = 0; conv_s1_z < 3; conv_s1_z++) {
    for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
      for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
        op_hcompute_conv_stencil_1: conv_stencil[conv_s1_z+0,  conv_s1_y+0,  conv_s1_x+0] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_z+0,  conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 2)+0])
      }
    }
  }
  for (int hw_output_s0_z = 0; hw_output_s0_z < 3; hw_output_s0_z++) {
    for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
      for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
        op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_z+0,  hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_z+0,  hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
      }
    }
  }
}
 op: op_hcompute_conv_stencil
    [3, 62, 62, ]
 op: op_hcompute_conv_stencil_1
    [3, 62, 62, ]
 op: op_hcompute_hw_output_stencil
    [3, 62, 62, ]
Final depth vec: {3, 62, 62}
Pad inds...
  op_hcompute_conv_stencil: 0, 1, 2, 3
  op_hcompute_conv_stencil_1: 0, 1, 2, 3
  op_hcompute_hw_input_global_wrapper_stencil: 0, -1, 1, 2
  op_hcompute_hw_output_stencil: 0, 1, 2, 3
level = 0, op = root
  child = hw_input_global_wrapper_s0_y
    checking if we should pad op_hcompute_hw_input_global_wrapper_stencil
Should insert pad between: root and hw_input_global_wrapper_s0_y
  child = conv_s0_z
    checking if we should pad op_hcompute_conv_stencil
  child = conv_s1_z
    checking if we should pad op_hcompute_conv_stencil_1
  child = hw_output_s0_z
    checking if we should pad op_hcompute_hw_output_stencil
level = 1, op = pad_root_to_hw_input_global_wrapper_s0_y
  child = hw_input_global_wrapper_s0_y
    checking if we should pad op_hcompute_hw_input_global_wrapper_stencil
level = 2, op = hw_input_global_wrapper_s0_y
  child = hw_input_global_wrapper_s0_x
    checking if we should pad op_hcompute_hw_input_global_wrapper_stencil
level = 3, op = hw_input_global_wrapper_s0_x
  child = op_hcompute_hw_input_global_wrapper_stencil
    checking if we should pad op_hcompute_hw_input_global_wrapper_stencil
level = 1, op = conv_s0_z
  child = conv_s0_y
    checking if we should pad op_hcompute_conv_stencil
level = 2, op = conv_s0_y
  child = conv_s0_x
    checking if we should pad op_hcompute_conv_stencil
level = 3, op = conv_s0_x
  child = op_hcompute_conv_stencil
    checking if we should pad op_hcompute_conv_stencil
level = 1, op = conv_s1_z
  child = conv_s1_y
    checking if we should pad op_hcompute_conv_stencil_1
level = 2, op = conv_s1_y
  child = conv_s1_x
    checking if we should pad op_hcompute_conv_stencil_1
level = 3, op = conv_s1_x
  child = op_hcompute_conv_stencil_1
    checking if we should pad op_hcompute_conv_stencil_1
level = 1, op = hw_output_s0_z
  child = hw_output_s0_y_yi
    checking if we should pad op_hcompute_hw_output_stencil
level = 2, op = hw_output_s0_y_yi
  child = hw_output_s0_x_xi
    checking if we should pad op_hcompute_hw_output_stencil
level = 3, op = hw_output_s0_x_xi
  child = op_hcompute_hw_output_stencil
    checking if we should pad op_hcompute_hw_output_stencil
program: multi_channel_conv
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int pad_root_to_hw_input_global_wrapper_s0_y = 0; pad_root_to_hw_input_global_wrapper_s0_y < 1; pad_root_to_hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
      for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
        op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
      }
    }
  }
  for (int conv_s0_z = 0; conv_s0_z < 3; conv_s0_z++) {
    for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
      for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
        op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_z+0,  conv_s0_y+0,  conv_s0_x+0] = hcompute_conv_stencil()
      }
    }
  }
  for (int conv_s1_z = 0; conv_s1_z < 3; conv_s1_z++) {
    for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
      for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
        op_hcompute_conv_stencil_1: conv_stencil[conv_s1_z+0,  conv_s1_y+0,  conv_s1_x+0] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_z+0,  conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 2)+0])
      }
    }
  }
  for (int hw_output_s0_z = 0; hw_output_s0_z < 3; hw_output_s0_z++) {
    for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
      for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
        op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_z+0,  hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_z+0,  hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
      }
    }
  }
}
program: multi_channel_conv
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int pad_root_to_hw_input_global_wrapper_s0_y = 0; pad_root_to_hw_input_global_wrapper_s0_y < 1; pad_root_to_hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
      for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
        op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
      }
    }
  }
  for (int conv_s0_z = 0; conv_s0_z < 3; conv_s0_z++) {
    for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
      for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
        op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_z+0,  conv_s0_y+0,  conv_s0_x+0] = hcompute_conv_stencil()
      }
    }
  }
  for (int conv_s1_z = 0; conv_s1_z < 3; conv_s1_z++) {
    for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
      for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
        op_hcompute_conv_stencil_1: conv_stencil[conv_s1_z+0,  conv_s1_y+0,  conv_s1_x+0] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_z+0,  conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 2)+0])
      }
    }
  }
  for (int hw_output_s0_z = 0; hw_output_s0_z < 3; hw_output_s0_z++) {
    for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
      for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
        op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_z+0,  hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_z+0,  hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
      }
    }
  }
}
multi_channel_conv is a stencil pipeline
Computing validity deps for conv_stencil
Computing validity deps for conv_stencil_clkwrk_dsa0
Computing validity deps for hw_input_global_wrapper_stencil
Computing validity deps for hw_input_stencil
Computing validity deps for hw_output_stencil
Finite validity: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 <= hw_input_global_wrapper_s0_x <= 61 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 61 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 61 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 < hw_input_global_wrapper_s0_x <= 62 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 62 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 < hw_input_global_wrapper_s0_x <= 62 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 2 <= hw_input_global_wrapper_s0_x <= 63 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 2 <= hw_input_global_wrapper_s0_x <= 63 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 2 <= hw_input_global_wrapper_s0_x <= 63 and 0 <= conv_s1_z <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_z = conv_s1_z, hw_output_s0_y_yi = conv_s1_y, hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z = conv_s0_z, conv_s1_y = conv_s0_y, conv_s1_x = conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
  Dep = { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 <= hw_input_global_wrapper_s0_x <= 61 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 61 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 61 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 < hw_input_global_wrapper_s0_x <= 62 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 62 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 < hw_input_global_wrapper_s0_x <= 62 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 2 <= hw_input_global_wrapper_s0_x <= 63 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 2 <= hw_input_global_wrapper_s0_x <= 63 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 2 <= hw_input_global_wrapper_s0_x <= 63 and 0 <= conv_s1_z <= 2 }
  Dep = { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_z = conv_s1_z, hw_output_s0_y_yi = conv_s1_y, hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Dep = { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z = conv_s0_z, conv_s1_y = conv_s0_y, conv_s1_x = conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
Got deps
Schedule dim = 4
  scheduling dimension 0
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_output_stencil[root' = 0] }
  { op_hcompute_conv_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
Consumed data...
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0] }
bound: { op_hcompute_conv_stencil_1[root] -> op_hcompute_hw_input_global_wrapper_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[root] -> [(0)] }
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
bound: { op_hcompute_hw_output_stencil[root] -> op_hcompute_conv_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_hw_output_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[root] -> [(0)] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_conv_stencil[root' = 0] }
bound: { op_hcompute_conv_stencil_1[root] -> op_hcompute_conv_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[root] -> [(0)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_hw_output_stencil, s_op_hcompute_conv_stencil_1, s_op_hcompute_conv_stencil, s_op_hcompute_hw_input_global_wrapper_stencil] : s_op_hcompute_hw_output_stencil > 0 and s_op_hcompute_conv_stencil_1 > 0 and s_op_hcompute_conv_stencil > 0 and s_op_hcompute_hw_input_global_wrapper_stencil > 0 }
Writing problem to mod file...
  # of constraints: 4
  legal point  : { [1, 1, 1, 1] }
  minimal point: 0
Schedule params...
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_conv_stencil[root' = 0] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0] }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(i)] }
  scheduling dimension 1
  { op_hcompute_hw_input_global_wrapper_stencil[pad_root_to_hw_input_global_wrapper_s0_y = 0] -> op_hcompute_conv_stencil_1[conv_s1_z] : 0 <= conv_s1_z <= 2 }
  { op_hcompute_conv_stencil_1[conv_s1_z] -> op_hcompute_hw_output_stencil[hw_output_s0_z = conv_s1_z] : 0 <= conv_s1_z <= 2 }
  { op_hcompute_conv_stencil[conv_s0_z] -> op_hcompute_conv_stencil_1[conv_s1_z = conv_s0_z] : 0 <= conv_s0_z <= 2 }
Consumed data...
  { op_hcompute_conv_stencil_1[conv_s1_z] -> op_hcompute_hw_input_global_wrapper_stencil[pad_root_to_hw_input_global_wrapper_s0_y = 0] : 0 <= conv_s1_z <= 2 }
bound: { op_hcompute_conv_stencil_1[conv_s1_z] -> op_hcompute_hw_input_global_wrapper_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_z] -> [(0)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_z] : 0 <= conv_s1_z <= 2 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_z] -> [(0)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_z] -> op_hcompute_conv_stencil_1[conv_s1_z = hw_output_s0_z] : 0 <= hw_output_s0_z <= 2 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_z] -> op_hcompute_conv_stencil_1[(hw_output_s0_z)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_z] -> [(hw_output_s0_z)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_z] : 0 <= hw_output_s0_z <= 2 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_z] -> [(hw_output_s0_z)] }
  { op_hcompute_conv_stencil_1[conv_s1_z] -> op_hcompute_conv_stencil[conv_s0_z = conv_s1_z] : 0 <= conv_s1_z <= 2 }
bound: { op_hcompute_conv_stencil_1[conv_s1_z] -> op_hcompute_conv_stencil[(conv_s1_z)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_z] -> [(conv_s1_z)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_z] : 0 <= conv_s1_z <= 2 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_z] -> [(conv_s1_z)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv_stencil_1, s_op_hcompute_hw_input_global_wrapper_stencil, s_op_hcompute_hw_output_stencil, s_op_hcompute_conv_stencil] : s_op_hcompute_hw_output_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil_1 > 0 and s_op_hcompute_hw_input_global_wrapper_stencil > 0 }
Writing problem to mod file...
  # of constraints: 6
  legal point  : { [1, 1, 1, 1] }
  minimal point: -3
Schedule params...
  { op_hcompute_conv_stencil_1[conv_s1_z] -> op_hcompute_hw_input_global_wrapper_stencil[pad_root_to_hw_input_global_wrapper_s0_y = 0] : 0 <= conv_s1_z <= 2 }
  { op_hcompute_hw_output_stencil[hw_output_s0_z] -> op_hcompute_conv_stencil_1[conv_s1_z = hw_output_s0_z] : 0 <= hw_output_s0_z <= 2 }
  { op_hcompute_conv_stencil_1[conv_s1_z] -> op_hcompute_conv_stencil[conv_s0_z = conv_s1_z] : 0 <= conv_s1_z <= 2 }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(i)] }
  scheduling dimension 2
  { op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = hw_input_global_wrapper_s0_y] : 0 <= hw_input_global_wrapper_s0_y <= 61; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = -1 + hw_input_global_wrapper_s0_y] : 0 < hw_input_global_wrapper_s0_y <= 62; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = -2 + hw_input_global_wrapper_s0_y] : 2 <= hw_input_global_wrapper_s0_y <= 63 }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_output_stencil[hw_output_s0_y_yi = conv_s1_y] : 0 <= conv_s1_y <= 61 }
  { op_hcompute_conv_stencil[conv_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = conv_s0_y] : 0 <= conv_s0_y <= 61 }
Consumed data...
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 2 + conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 1 + conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[(2 + conv_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(2 + conv_s1_y)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(2 + conv_s1_y)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_conv_stencil_1[conv_s1_y = hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 61 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_conv_stencil_1[(hw_output_s0_y_yi)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> [(hw_output_s0_y_yi)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 61 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> [(hw_output_s0_y_yi)] }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_conv_stencil[conv_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_conv_stencil[(conv_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(conv_s1_y)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(conv_s1_y)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv_stencil_1, s_op_hcompute_hw_input_global_wrapper_stencil, s_op_hcompute_conv_stencil, s_op_hcompute_hw_output_stencil] : s_op_hcompute_hw_input_global_wrapper_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil_1 > 0 }
Writing problem to mod file...
  # of constraints: 7
  legal point  : { [1, 1, 1, 1] }
  minimal point: -4
Schedule params...
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 2 + conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 1 + conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 61 }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_conv_stencil[conv_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 61 }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_conv_stencil_1[conv_s1_y = hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 61 }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(2 + i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(2 + i)] }
  scheduling dimension 3
  { op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_output_stencil[hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_x <= 61 }
  { op_hcompute_conv_stencil[conv_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = conv_s0_x] : 0 <= conv_s0_x <= 61 }
Consumed data...
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 2 + conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[(2 + conv_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(2 + conv_s1_x)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(2 + conv_s1_x)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv_stencil_1[conv_s1_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 61 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv_stencil_1[(hw_output_s0_x_xi)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 61 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_conv_stencil[conv_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_conv_stencil[(conv_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(conv_s1_x)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(conv_s1_x)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv_stencil_1, s_op_hcompute_conv_stencil, s_op_hcompute_hw_output_stencil, s_op_hcompute_hw_input_global_wrapper_stencil] : s_op_hcompute_conv_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_input_global_wrapper_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil_1 > 0 }
Writing problem to mod file...
  # of constraints: 7
  legal point  : { [1, 1, 1, 1] }
  minimal point: -4
Schedule params...
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_conv_stencil[conv_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv_stencil_1[conv_s1_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 61 }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 2 + conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 61 }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(2 + i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(2 + i)] }
Final schedule...
  op_hcompute_conv_stencil
    1*d3*1*1 + 1*2
    1*d2*1*1 + 1*2
    1*d1*1*1 + 1*0
    1*d0*1*1 + 1*0

  op_hcompute_conv_stencil_1
    1*d3*1*1 + 1*2
    1*d2*1*1 + 1*2
    1*d1*1*1 + 1*0
    1*d0*1*1 + 1*0

  op_hcompute_hw_input_global_wrapper_stencil
    1*d3*1*1 + 1*0
    1*d2*1*1 + 1*0
    1*d1*1*1 + 1*0
    1*d0*1*1 + 1*0

  op_hcompute_hw_output_stencil
    1*d3*1*1 + 1*2
    1*d2*1*1 + 1*2
    1*d1*1*1 + 1*0
    1*d0*1*1 + 1*0

Sched expr: 1*d3 + 2
Sched expr: 1*d2 + 2
Sched expr: 1*d1 + 0
Sched expr: 1*d0 + 0
Map str: { op_hcompute_conv_stencil[d0, d1, d2, d3] -> [1*d3 + 2, 1*d2 + 2, 1*d1 + 0, 1*d0 + 0] }
map got str
Sched expr: 1*d3 + 2
Sched expr: 1*d2 + 2
Sched expr: 1*d1 + 0
Sched expr: 1*d0 + 0
Map str: { op_hcompute_conv_stencil_1[d0, d1, d2, d3] -> [1*d3 + 2, 1*d2 + 2, 1*d1 + 0, 1*d0 + 0] }
map got str
Sched expr: 1*d3 + 0
Sched expr: 1*d2 + 0
Sched expr: 1*d1 + 0
Sched expr: 1*d0 + 0
Map str: { op_hcompute_hw_input_global_wrapper_stencil[d0, d1, d2, d3] -> [1*d3 + 0, 1*d2 + 0, 1*d1 + 0, 1*d0 + 0] }
map got str
Sched expr: 1*d3 + 2
Sched expr: 1*d2 + 2
Sched expr: 1*d1 + 0
Sched expr: 1*d0 + 0
Map str: { op_hcompute_hw_output_stencil[d0, d1, d2, d3] -> [1*d3 + 2, 1*d2 + 2, 1*d1 + 0, 1*d0 + 0] }
map got str
Clockwork schedule...
  { op_hcompute_conv_stencil_1[d0, d1, d2, d3] -> [2 + d3, 2 + d2, d1, d0] }
  { op_hcompute_hw_output_stencil[d0, d1, d2, d3] -> [2 + d3, 2 + d2, d1, d0] }
  { op_hcompute_conv_stencil[d0, d1, d2, d3] -> [2 + d3, 2 + d2, d1, d0] }
  { op_hcompute_hw_input_global_wrapper_stencil[d0, d1, d2, d3] -> [d3, d2, d1, d0] }
Domain...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
bounds...{ [i0, i1, i2, 0] : 2 <= i0 <= 63 and 2 <= i1 <= 63 and 0 <= i2 <= 2; [i0, i1, 0, 0] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
lengths
1
3
64
64
1
Fused iis
  12288
  4096
  64
  1
Finite validity: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 <= hw_input_global_wrapper_s0_x <= 61 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 61 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 61 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 < hw_input_global_wrapper_s0_x <= 62 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 62 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 < hw_input_global_wrapper_s0_x <= 62 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 2 <= hw_input_global_wrapper_s0_x <= 63 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 2 <= hw_input_global_wrapper_s0_x <= 63 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 2 <= hw_input_global_wrapper_s0_x <= 63 and 0 <= conv_s1_z <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_z = conv_s1_z, hw_output_s0_y_yi = conv_s1_y, hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z = conv_s0_z, conv_s1_y = conv_s0_y, conv_s1_x = conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
  Dep = { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 <= hw_input_global_wrapper_s0_x <= 61 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 61 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 61 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 < hw_input_global_wrapper_s0_x <= 62 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 62 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 < hw_input_global_wrapper_s0_x <= 62 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 2 <= hw_input_global_wrapper_s0_x <= 63 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 2 <= hw_input_global_wrapper_s0_x <= 63 and 0 <= conv_s1_z <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 2 <= hw_input_global_wrapper_s0_x <= 63 and 0 <= conv_s1_z <= 2 }
  Dep = { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_z = conv_s1_z, hw_output_s0_y_yi = conv_s1_y, hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Dep = { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_z = conv_s0_z, conv_s1_y = conv_s0_y, conv_s1_x = conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
Got deps
Schedule dim = 4
  scheduling dimension 0
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_output_stencil[root' = 0] }
  { op_hcompute_conv_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
Consumed data...
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0] }
bound: { op_hcompute_conv_stencil_1[root] -> op_hcompute_hw_input_global_wrapper_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[root] -> [(0)] }
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
bound: { op_hcompute_hw_output_stencil[root] -> op_hcompute_conv_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_hw_output_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[root] -> [(0)] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_conv_stencil[root' = 0] }
bound: { op_hcompute_conv_stencil_1[root] -> op_hcompute_conv_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[root] -> [(0)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_hw_output_stencil, s_op_hcompute_conv_stencil_1, s_op_hcompute_conv_stencil, s_op_hcompute_hw_input_global_wrapper_stencil] : s_op_hcompute_hw_output_stencil > 0 and s_op_hcompute_conv_stencil_1 > 0 and s_op_hcompute_conv_stencil > 0 and s_op_hcompute_hw_input_global_wrapper_stencil > 0 }
Writing problem to mod file...
  # of constraints: 4
  legal point  : { [1, 1, 1, 1] }
  minimal point: 0
Schedule params...
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_conv_stencil[root' = 0] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0] }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(i)] }
  scheduling dimension 1
  { op_hcompute_hw_input_global_wrapper_stencil[pad_root_to_hw_input_global_wrapper_s0_y = 0] -> op_hcompute_conv_stencil_1[conv_s1_z] : 0 <= conv_s1_z <= 2 }
  { op_hcompute_conv_stencil_1[conv_s1_z] -> op_hcompute_hw_output_stencil[hw_output_s0_z = conv_s1_z] : 0 <= conv_s1_z <= 2 }
  { op_hcompute_conv_stencil[conv_s0_z] -> op_hcompute_conv_stencil_1[conv_s1_z = conv_s0_z] : 0 <= conv_s0_z <= 2 }
Consumed data...
  { op_hcompute_conv_stencil_1[conv_s1_z] -> op_hcompute_hw_input_global_wrapper_stencil[pad_root_to_hw_input_global_wrapper_s0_y = 0] : 0 <= conv_s1_z <= 2 }
bound: { op_hcompute_conv_stencil_1[conv_s1_z] -> op_hcompute_hw_input_global_wrapper_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_z] -> [(0)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_z] : 0 <= conv_s1_z <= 2 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_z] -> [(0)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_z] -> op_hcompute_conv_stencil_1[conv_s1_z = hw_output_s0_z] : 0 <= hw_output_s0_z <= 2 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_z] -> op_hcompute_conv_stencil_1[(hw_output_s0_z)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_z] -> [(hw_output_s0_z)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_z] : 0 <= hw_output_s0_z <= 2 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_z] -> [(hw_output_s0_z)] }
  { op_hcompute_conv_stencil_1[conv_s1_z] -> op_hcompute_conv_stencil[conv_s0_z = conv_s1_z] : 0 <= conv_s1_z <= 2 }
bound: { op_hcompute_conv_stencil_1[conv_s1_z] -> op_hcompute_conv_stencil[(conv_s1_z)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_z] -> [(conv_s1_z)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_z] : 0 <= conv_s1_z <= 2 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_z] -> [(conv_s1_z)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv_stencil_1, s_op_hcompute_hw_input_global_wrapper_stencil, s_op_hcompute_hw_output_stencil, s_op_hcompute_conv_stencil] : s_op_hcompute_hw_output_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil_1 > 0 and s_op_hcompute_hw_input_global_wrapper_stencil > 0 }
Writing problem to mod file...
  # of constraints: 6
  legal point  : { [1, 1, 1, 1] }
  minimal point: -3
Schedule params...
  { op_hcompute_conv_stencil_1[conv_s1_z] -> op_hcompute_hw_input_global_wrapper_stencil[pad_root_to_hw_input_global_wrapper_s0_y = 0] : 0 <= conv_s1_z <= 2 }
  { op_hcompute_hw_output_stencil[hw_output_s0_z] -> op_hcompute_conv_stencil_1[conv_s1_z = hw_output_s0_z] : 0 <= hw_output_s0_z <= 2 }
  { op_hcompute_conv_stencil_1[conv_s1_z] -> op_hcompute_conv_stencil[conv_s0_z = conv_s1_z] : 0 <= conv_s1_z <= 2 }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(i)] }
  scheduling dimension 2
  { op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = hw_input_global_wrapper_s0_y] : 0 <= hw_input_global_wrapper_s0_y <= 61; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = -1 + hw_input_global_wrapper_s0_y] : 0 < hw_input_global_wrapper_s0_y <= 62; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = -2 + hw_input_global_wrapper_s0_y] : 2 <= hw_input_global_wrapper_s0_y <= 63 }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_output_stencil[hw_output_s0_y_yi = conv_s1_y] : 0 <= conv_s1_y <= 61 }
  { op_hcompute_conv_stencil[conv_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = conv_s0_y] : 0 <= conv_s0_y <= 61 }
Consumed data...
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 2 + conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 1 + conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[(2 + conv_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(2 + conv_s1_y)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(2 + conv_s1_y)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_conv_stencil_1[conv_s1_y = hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 61 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_conv_stencil_1[(hw_output_s0_y_yi)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> [(hw_output_s0_y_yi)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 61 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> [(hw_output_s0_y_yi)] }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_conv_stencil[conv_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_conv_stencil[(conv_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(conv_s1_y)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(conv_s1_y)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv_stencil_1, s_op_hcompute_conv_stencil, s_op_hcompute_hw_output_stencil, s_op_hcompute_hw_input_global_wrapper_stencil] : s_op_hcompute_conv_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_input_global_wrapper_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil_1 > 0 }
Writing problem to mod file...
  # of constraints: 7
  legal point  : { [1, 1, 1, 1] }
  minimal point: -4
Schedule params...
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_conv_stencil[conv_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 61 }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_conv_stencil_1[conv_s1_y = hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 61 }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 2 + conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 1 + conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 61 }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(2 + i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(2 + i)] }
  scheduling dimension 3
  { op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_output_stencil[hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_x <= 61 }
  { op_hcompute_conv_stencil[conv_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = conv_s0_x] : 0 <= conv_s0_x <= 61 }
Consumed data...
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 2 + conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[(2 + conv_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(2 + conv_s1_x)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(2 + conv_s1_x)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv_stencil_1[conv_s1_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 61 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv_stencil_1[(hw_output_s0_x_xi)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 61 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_conv_stencil[conv_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_conv_stencil[(conv_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(conv_s1_x)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(conv_s1_x)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv_stencil_1, s_op_hcompute_conv_stencil, s_op_hcompute_hw_output_stencil, s_op_hcompute_hw_input_global_wrapper_stencil] : s_op_hcompute_conv_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_input_global_wrapper_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil_1 > 0 }
Writing problem to mod file...
  # of constraints: 7
  legal point  : { [1, 1, 1, 1] }
  minimal point: -4
Schedule params...
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_conv_stencil[conv_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv_stencil_1[conv_s1_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 61 }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 2 + conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 61 }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(2 + i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(2 + i)] }
Original Loop iis
op_hcompute_hw_input_global_wrapper_stencil
  root q: 1, d = 0
    ii = 12288
op_hcompute_hw_input_global_wrapper_stencil
  pad_root_to_hw_input_global_wrapper_s0_y q: 1, d = 0
    ii = 4096
op_hcompute_hw_input_global_wrapper_stencil
  hw_input_global_wrapper_s0_y q: 1, d = 0
    ii = 64
op_hcompute_hw_input_global_wrapper_stencil
  hw_input_global_wrapper_s0_x q: 1, d = 0
    ii = 1
op_hcompute_conv_stencil
  root q: 1, d = 0
    ii = 12288
op_hcompute_conv_stencil
  conv_s0_z q: 1, d = 0
    ii = 4096
op_hcompute_conv_stencil
  conv_s0_y q: 1, d = 2
    ii = 64
op_hcompute_conv_stencil
  conv_s0_x q: 1, d = 2
    ii = 1
op_hcompute_conv_stencil_1
  root q: 1, d = 0
    ii = 12288
op_hcompute_conv_stencil_1
  conv_s1_z q: 1, d = 0
    ii = 4096
op_hcompute_conv_stencil_1
  conv_s1_y q: 1, d = 2
    ii = 64
op_hcompute_conv_stencil_1
  conv_s1_x q: 1, d = 2
    ii = 1
op_hcompute_hw_output_stencil
  root q: 1, d = 0
    ii = 12288
op_hcompute_hw_output_stencil
  hw_output_s0_z q: 1, d = 0
    ii = 4096
op_hcompute_hw_output_stencil
  hw_output_s0_y_yi q: 1, d = 2
    ii = 64
op_hcompute_hw_output_stencil
  hw_output_s0_x_xi q: 1, d = 2
    ii = 1
inner ops: op_hcompute_hw_input_global_wrapper_stencil
inner ops: op_hcompute_hw_input_global_wrapper_stencil, offset: 0
inner ops: op_hcompute_conv_stencil
inner ops: op_hcompute_conv_stencil, offset: 0
inner ops: op_hcompute_conv_stencil_1
force inner op: op_hcompute_conv_stencil, has same offset as update: 0
inner ops: op_hcompute_conv_stencil_1, offset: 0
inner ops: op_hcompute_hw_output_stencil
inner ops: op_hcompute_hw_output_stencil, offset: 1
schedule for n: { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedule for n: { start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [131 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [131 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
orginal schedule before relax: { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [131 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedule for n: { start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [131 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [131 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
Start times...
{ start_op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; start_op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; start_op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [131 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; start_op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
  pre adjustment min: { [0] }
Adjusting delays of multi_channel_conv
schedule for n: { op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedmap = { op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [131 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [131 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
sorted kernel: {}
sorted kernel: {conv_s0_z}
sorted kernel: {conv_s0_z}
sorted kernel: {conv_s0_z}
sorted kernel: {conv_s0_z, pad_root_to_hw_input_global_wrapper_s0_y}
sorted kernel: {conv_s0_z, pad_root_to_hw_input_global_wrapper_s0_y, conv_s1_z}
Adjusting delay of conv_s0_z
Adjusting delay of pad_root_to_hw_input_global_wrapper_s0_y
read map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Kernel <pad_root_to_hw_input_global_wrapper_s0_y> has Delay slack: 0
Offset with in parent: 0
Adjusting delay of conv_s1_z
read map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
writes: { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [131 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Time to write: { [i0] -> conv_stencil_clkwrk_dsa0[o0, o1, -130 + i0 - 4096o0 - 64o1] : 0 <= o0 <= 2 and 0 <= o1 <= 61 and -191 + i0 - 4096o0 <= 64o1 <= -130 + i0 - 4096o0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, o1] : 0 <= o0 <= 63 and o1 >= -8322 + i0 - 64o0 and 0 <= o1 <= 63 and o1 <= i0 - 64o0 and (((64 - i0 + 64o0 + o1) mod 4096 = 0 and 0 < o0 <= 62 and o1 >= -8256 + i0 - 64o0 and 2 <= o1 <= -64 + i0 - 64o0) or ((130 - i0 + 64o0 + o1) mod 4096 = 0 and o0 <= 61 and o1 <= 61 and o1 <= -130 + i0 - 64o0) or ((129 - i0 + 64o0 + o1) mod 4096 = 0 and o0 <= 61 and o1 >= -8321 + i0 - 64o0 and 0 < o1 <= 62 and o1 <= -129 + i0 - 64o0) or ((128 - i0 + 64o0 + o1) mod 4096 = 0 and o0 <= 61 and o1 >= -8320 + i0 - 64o0 and 2 <= o1 <= -128 + i0 - 64o0) or ((66 - i0 + 64o0 + o1) mod 4096 = 0 and 0 < o0 <= 62 and -8258 + i0 - 64o0 <= o1 <= 61 and o1 <= -66 + i0 - 64o0) or ((65 - i0 + 64o0 + o1) mod 4096 = 0 and 0 < o0 <= 62 and o1 >= -8257 + i0 - 64o0 and 0 < o1 <= 62 and o1 <= -65 + i0 - 64o0) or ((2 - i0 + 64o0 + o1) mod 4096 = 0 and o0 >= 2 and -8194 + i0 - 64o0 <= o1 <= 61 and o1 <= -2 + i0 - 64o0) or ((1 - i0 + 64o0 + o1) mod 4096 = 0 and o0 >= 2 and o1 >= -8193 + i0 - 64o0 and 0 < o1 <= 62 and o1 < i0 - 64o0) or ((-i0 + 64o0 + o1) mod 4096 = 0 and o0 >= 2 and o1 >= -8192 + i0 - 64o0 and o1 >= 2)); [i0] -> conv_stencil_clkwrk_dsa0[o0, o1, -130 + i0 - 4096o0 - 64o1] : 0 <= o0 <= 2 and 0 <= o1 <= 61 and -191 + i0 - 4096o0 <= 64o1 <= -130 + i0 - 4096o0 }
PC times     : { [i0] -> [i0] : exists (e0, e1: 0 <= e0 <= 2 and 0 <= e1 <= 61 and -191 + i0 - 4096e0 <= 64e1 <= -130 + i0 - 4096e0) }
DDs          : { [0] }
    Producers: op_hcompute_conv_stencil
    sched: { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
    Consumers: op_hcompute_conv_stencil_1
    sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [131 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, o1] : 0 <= o0 <= 63 and o1 >= -8322 + i0 - 64o0 and 0 <= o1 <= 63 and o1 <= i0 - 64o0 and (((64 - i0 + 64o0 + o1) mod 4096 = 0 and 0 < o0 <= 62 and o1 >= -8256 + i0 - 64o0 and 2 <= o1 <= -64 + i0 - 64o0) or ((130 - i0 + 64o0 + o1) mod 4096 = 0 and o0 <= 61 and o1 <= 61 and o1 <= -130 + i0 - 64o0) or ((129 - i0 + 64o0 + o1) mod 4096 = 0 and o0 <= 61 and o1 >= -8321 + i0 - 64o0 and 0 < o1 <= 62 and o1 <= -129 + i0 - 64o0) or ((128 - i0 + 64o0 + o1) mod 4096 = 0 and o0 <= 61 and o1 >= -8320 + i0 - 64o0 and 2 <= o1 <= -128 + i0 - 64o0) or ((66 - i0 + 64o0 + o1) mod 4096 = 0 and 0 < o0 <= 62 and -8258 + i0 - 64o0 <= o1 <= 61 and o1 <= -66 + i0 - 64o0) or ((65 - i0 + 64o0 + o1) mod 4096 = 0 and 0 < o0 <= 62 and o1 >= -8257 + i0 - 64o0 and 0 < o1 <= 62 and o1 <= -65 + i0 - 64o0) or ((2 - i0 + 64o0 + o1) mod 4096 = 0 and o0 >= 2 and -8194 + i0 - 64o0 <= o1 <= 61 and o1 <= -2 + i0 - 64o0) or ((1 - i0 + 64o0 + o1) mod 4096 = 0 and o0 >= 2 and o1 >= -8193 + i0 - 64o0 and 0 < o1 <= 62 and o1 < i0 - 64o0) or ((-i0 + 64o0 + o1) mod 4096 = 0 and o0 >= 2 and o1 >= -8192 + i0 - 64o0 and o1 >= 2)); [i0] -> conv_stencil_clkwrk_dsa0[o0, o1, -130 + i0 - 4096o0 - 64o1] : 0 <= o0 <= 2 and 0 <= o1 <= 61 and -191 + i0 - 4096o0 <= 64o1 <= -130 + i0 - 4096o0 }
PC times     : { [i0] -> [o0] : -2 <= i0 <= 4095 and i0 <= o0 <= 8322 + i0 and (((-64 - i0 + o0) mod 4096 = 0 and 64 <= i0 <= 4031 and 64 + i0 <= o0 <= 8256 + i0 and 64*floor((i0)/64) <= -2 + i0) or ((-i0 + o0) mod 4096 = 0 and i0 >= 128 and o0 <= 8192 + i0 and 64*floor((i0)/64) <= -2 + i0) or ((-1 - i0 + o0) mod 4096 = 0 and 127 <= i0 <= 4094 and i0 < o0 <= 8193 + i0 and 64*floor((1 + i0)/64) < i0) or ((-2 - i0 + o0) mod 4096 = 0 and 126 <= i0 <= 4093 and 2 + i0 <= o0 <= 8194 + i0 and 64*floor((2 + i0)/64) <= i0) or ((-65 - i0 + o0) mod 4096 = 0 and 63 <= i0 <= 4030 and 65 + i0 <= o0 <= 8257 + i0 and 64*floor((1 + i0)/64) < i0) or ((-66 - i0 + o0) mod 4096 = 0 and 62 <= i0 <= 4029 and 66 + i0 <= o0 <= 8258 + i0 and 64*floor((2 + i0)/64) <= i0) or ((-128 - i0 + o0) mod 4096 = 0 and 0 <= i0 <= 3967 and 128 + i0 <= o0 <= 8320 + i0 and 64*floor((i0)/64) <= -2 + i0) or ((-129 - i0 + o0) mod 4096 = 0 and -1 <= i0 <= 3966 and 129 + i0 <= o0 <= 8321 + i0 and 64*floor((1 + i0)/64) < i0) or ((-130 - i0 + o0) mod 4096 = 0 and i0 <= 3965 and o0 >= 130 + i0 and 64*floor((2 + i0)/64) <= i0)) }
DDs          : { [i0] : 0 <= i0 <= 8322 and (((-64 + i0) mod 4096 = 0 and 64 <= i0 <= 8256) or ((i0) mod 4096 = 0 and i0 <= 8192) or ((-1 + i0) mod 4096 = 0 and 0 < i0 <= 8193) or ((-2 + i0) mod 4096 = 0 and 2 <= i0 <= 8194) or ((-65 + i0) mod 4096 = 0 and 65 <= i0 <= 8257) or ((-66 + i0) mod 4096 = 0 and 66 <= i0 <= 8258) or ((-128 + i0) mod 4096 = 0 and 128 <= i0 <= 8320) or ((-129 + i0) mod 4096 = 0 and 129 <= i0 <= 8321) or ((-130 + i0) mod 4096 = 0 and i0 >= 130)) }
    Min DD: 0
    Max DD: 8322
		op op_hcompute_hw_input_global_wrapper_stencil has ii: 1
    Producers: op_hcompute_hw_input_global_wrapper_stencil
    sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
    Consumers: op_hcompute_conv_stencil_1
    sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Kernel <conv_s1_z> has Delay slack: 8
Offset with in parent: 8
Adjusting delay of hw_output_s0_z
read map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
write map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
writes: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
reads : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Schedule...
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [130 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [131 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Time to write: { [i0] -> conv_stencil[o0, o1, -130 + i0 - 4096o0 - 64o1] : 0 <= o0 <= 2 and 0 <= o1 <= 61 and -191 + i0 - 4096o0 <= 64o1 <= -130 + i0 - 4096o0 }
Time to read : { [i0] -> conv_stencil[o0, o1, -131 + i0 - 4096o0 - 64o1] : 0 <= o0 <= 2 and 0 <= o1 <= 61 and -192 + i0 - 4096o0 <= 64o1 <= -131 + i0 - 4096o0 }
PC times     : { [i0] -> [1 + i0] : exists (e0, e1: 0 <= e0 <= 2 and 0 <= e1 <= 61 and -191 + i0 - 4096e0 <= 64e1 <= -130 + i0 - 4096e0) }
DDs          : { [1] }
    Producers: op_hcompute_conv_stencil_1
    sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [130 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    Consumers: op_hcompute_hw_output_stencil
    sched: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [131 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Kernel <hw_output_s0_z> has Delay slack: 8
Offset with in parent: 8
    Find buffers need to be rewritten: conv_stencil_clkwrk_dsa0
    Find buffers need to be rewritten: hw_input_global_wrapper_stencil

Filter buffers...

schedule for n: { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedule for n: { start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
Final schedule after relax: { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedmap = { end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedule for n: { end_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [139 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] }
schedmap = { end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; end_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [139 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] }
schedule for n: { end_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; end_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [139 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; end_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { end_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; end_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [139 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; end_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
Final end schedule after relax: { end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; end_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [139 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; end_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedmap = { op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
Computing validity deps for conv_stencil
Computing validity deps for conv_stencil_clkwrk_dsa0
Computing validity deps for hw_input_global_wrapper_stencil
Computing validity deps for hw_input_stencil
Computing validity deps for hw_output_stencil
program: multi_channel_conv
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int pad_root_to_hw_input_global_wrapper_s0_y = 0; pad_root_to_hw_input_global_wrapper_s0_y < 1; pad_root_to_hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
      for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
        op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
      }
    }
  }
  for (int conv_s0_z = 0; conv_s0_z < 3; conv_s0_z++) {
    for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
      for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
        op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_z+0,  conv_s0_y+0,  conv_s0_x+0] = hcompute_conv_stencil()
      }
    }
  }
  for (int conv_s1_z = 0; conv_s1_z < 3; conv_s1_z++) {
    for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
      for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
        op_hcompute_conv_stencil_1: conv_stencil[conv_s1_z+0,  conv_s1_y+0,  conv_s1_x+0] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_z+0,  conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 2)+0])
      }
    }
  }
  for (int hw_output_s0_z = 0; hw_output_s0_z < 3; hw_output_s0_z++) {
    for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
      for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
        op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_z+0,  hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_z+0,  hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
      }
    }
  }
}
schedule for n: { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedule for n: { start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
Start times...
  { start_op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { start_op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { start_op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
  { start_op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
  min: { [0] }
schedule for n: { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedule for n: { start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedmap = { end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedule for n: { end_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [139 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] }
schedmap = { end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; end_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [139 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] }
schedule for n: { end_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; end_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [139 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; end_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { end_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; end_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [139 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; end_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
Schedule...
  { start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
  { start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] }
  { start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
  { start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
  Cycle deps: { end_op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_z = conv_s0_z, conv_s1_y = conv_s0_y, conv_s1_x = conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 <= hw_input_global_wrapper_s0_x <= 61 and 0 <= conv_s1_z <= 2; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 61 and 0 <= conv_s1_z <= 2; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 61 and 0 <= conv_s1_z <= 2; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 < hw_input_global_wrapper_s0_x <= 62 and 0 <= conv_s1_z <= 2; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 62 and 0 <= conv_s1_z <= 2; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 < hw_input_global_wrapper_s0_x <= 62 and 0 <= conv_s1_z <= 2; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 2 <= hw_input_global_wrapper_s0_x <= 63 and 0 <= conv_s1_z <= 2; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 2 <= hw_input_global_wrapper_s0_x <= 63 and 0 <= conv_s1_z <= 2; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_z, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 2 <= hw_input_global_wrapper_s0_x <= 63 and 0 <= conv_s1_z <= 2; end_op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> start_op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_z = conv_s1_z, hw_output_s0_y_yi = conv_s1_y, hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Earlier deps: { end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 139 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x - 12288root' - 4096pad_root_to_hw_input_global_wrapper_s0_y - 64hw_input_global_wrapper_s0_y; end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 139 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x - 12288root' - 4096pad_root_to_hw_input_global_wrapper_s0_y - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x - 12288root' - 4096hw_output_s0_z - 64hw_output_s0_y_yi; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', pad_root_to_hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_x'] : hw_input_global_wrapper_s0_x' > 12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 12288root' - 4096pad_root_to_hw_input_global_wrapper_s0_y' - 64hw_input_global_wrapper_s0_y'; end_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_conv_stencil_1[root', conv_s1_z, conv_s1_y, conv_s1_x] : conv_s1_x > 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 12288root' - 4096conv_s1_z - 64conv_s1_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', pad_root_to_hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_x'] : hw_input_global_wrapper_s0_x' > 12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 12288root' - 4096pad_root_to_hw_input_global_wrapper_s0_y' - 64hw_input_global_wrapper_s0_y'; end_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_conv_stencil[root', conv_s0_z, conv_s0_y, conv_s0_x] : conv_s0_x >= 2 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 12288root' - 4096conv_s0_z - 64conv_s0_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', pad_root_to_hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_x'] : hw_input_global_wrapper_s0_x' > 12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 12288root' - 4096pad_root_to_hw_input_global_wrapper_s0_y' - 64hw_input_global_wrapper_s0_y'; start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> start_op_hcompute_conv_stencil[root', conv_s0_z', conv_s0_y', conv_s0_x'] : conv_s0_x' > 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x - 12288root' - 4096conv_s0_z' - 64conv_s0_y'; start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_z, conv_s1_y, conv_s1_x] : conv_s1_x >= 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x - 12288root' - 4096conv_s1_z - 64conv_s1_y; start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_z, conv_s1_y, conv_s1_x] : conv_s1_x > 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x - 12288root' - 4096conv_s1_z - 64conv_s1_y; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_z', conv_s1_y', conv_s1_x'] : conv_s1_x' > 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x - 12288root' - 4096conv_s1_z' - 64conv_s1_y'; start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_z', hw_output_s0_y_yi', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 12288root' - 4096hw_output_s0_z' - 64hw_output_s0_y_yi'; end_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_z, conv_s1_y, conv_s1_x] : conv_s1_x >= -138 + 12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 12288root' - 4096conv_s1_z - 64conv_s1_y; start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x - 12288root' - 4096hw_output_s0_z - 64hw_output_s0_y_yi; end_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv_stencil[root', conv_s0_z, conv_s0_y, conv_s0_x] : conv_s0_x >= -137 + 12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 12288root' - 4096conv_s0_z - 64conv_s0_y; end_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_z', conv_s1_y', conv_s1_x'] : conv_s1_x' >= 2 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x - 12288root' - 4096conv_s1_z' - 64conv_s1_y'; start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_conv_stencil[root', conv_s0_z, conv_s0_y, conv_s0_x] : conv_s0_x >= 2 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 12288root' - 4096conv_s0_z - 64conv_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_conv_stencil[root', conv_s0_z, conv_s0_y, conv_s0_x] : conv_s0_x >= 2 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 12288root' - 4096conv_s0_z - 64conv_s0_y; end_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> end_op_hcompute_conv_stencil[root', conv_s0_z, conv_s0_y, conv_s0_x] : conv_s0_x >= 2 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x - 12288root' - 4096conv_s0_z - 64conv_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_conv_stencil[root', conv_s0_z, conv_s0_y, conv_s0_x] : conv_s0_x >= 2 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 12288root' - 4096conv_s0_z - 64conv_s0_y; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> start_op_hcompute_conv_stencil[root', conv_s0_z, conv_s0_y, conv_s0_x] : conv_s0_x > 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x - 12288root' - 4096conv_s0_z - 64conv_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_z', hw_output_s0_y_yi', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 12288root' - 4096hw_output_s0_z' - 64hw_output_s0_y_yi'; end_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 140 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 12288root' - 4096pad_root_to_hw_input_global_wrapper_s0_y - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x - 12288root' - 4096hw_output_s0_z - 64hw_output_s0_y_yi; end_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 140 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x - 12288root' - 4096pad_root_to_hw_input_global_wrapper_s0_y - 64hw_input_global_wrapper_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 140 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 12288root' - 4096pad_root_to_hw_input_global_wrapper_s0_y - 64hw_input_global_wrapper_s0_y; end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x - 12288root' - 4096hw_output_s0_z - 64hw_output_s0_y_yi; end_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x - 12288root' - 4096hw_output_s0_z - 64hw_output_s0_y_yi; end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_z, conv_s1_y, conv_s1_x] : conv_s1_x > 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x - 12288root' - 4096conv_s1_z - 64conv_s1_y; start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> end_op_hcompute_conv_stencil[root', conv_s0_z', conv_s0_y', conv_s0_x'] : conv_s0_x' > 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x - 12288root' - 4096conv_s0_z' - 64conv_s0_y'; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -138 + 12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 12288root' - 4096hw_output_s0_z - 64hw_output_s0_y_yi; end_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 140 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x - 12288root' - 4096pad_root_to_hw_input_global_wrapper_s0_y - 64hw_input_global_wrapper_s0_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -138 + 12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 12288root' - 4096hw_output_s0_z - 64hw_output_s0_y_yi; end_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_z, conv_s1_y, conv_s1_x] : conv_s1_x >= -137 + 12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 12288root' - 4096conv_s1_z - 64conv_s1_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_conv_stencil_1[root', conv_s1_z, conv_s1_y, conv_s1_x] : conv_s1_x > 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 12288root' - 4096conv_s1_z - 64conv_s1_y; end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> end_op_hcompute_conv_stencil[root', conv_s0_z', conv_s0_y', conv_s0_x'] : conv_s0_x' > 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x - 12288root' - 4096conv_s0_z' - 64conv_s0_y'; end_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', pad_root_to_hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_x'] : hw_input_global_wrapper_s0_x' > 12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 12288root' - 4096pad_root_to_hw_input_global_wrapper_s0_y' - 64hw_input_global_wrapper_s0_y'; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil[root', conv_s0_z, conv_s0_y, conv_s0_x] : conv_s0_x >= -137 + 12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 12288root' - 4096conv_s0_z - 64conv_s0_y; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 139 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x - 12288root' - 4096pad_root_to_hw_input_global_wrapper_s0_y - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x - 12288root' - 4096hw_output_s0_z - 64hw_output_s0_y_yi; end_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 140 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 12288root' - 4096pad_root_to_hw_input_global_wrapper_s0_y - 64hw_input_global_wrapper_s0_y; end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> start_op_hcompute_conv_stencil[root', conv_s0_z', conv_s0_y', conv_s0_x'] : conv_s0_x' > 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x - 12288root' - 4096conv_s0_z' - 64conv_s0_y'; start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 139 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x - 12288root' - 4096pad_root_to_hw_input_global_wrapper_s0_y - 64hw_input_global_wrapper_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_z', hw_output_s0_y_yi', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 12288root' - 4096hw_output_s0_z' - 64hw_output_s0_y_yi'; start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 140 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 12288root' - 4096pad_root_to_hw_input_global_wrapper_s0_y - 64hw_input_global_wrapper_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_z', hw_output_s0_y_yi', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 12288root' - 4096hw_output_s0_z' - 64hw_output_s0_y_yi'; start_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_conv_stencil_1[root', conv_s1_z, conv_s1_y, conv_s1_x] : conv_s1_x >= 2 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 12288root' - 4096conv_s1_z - 64conv_s1_y; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_z', conv_s1_y', conv_s1_x'] : conv_s1_x' >= 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x - 12288root' - 4096conv_s1_z' - 64conv_s1_y'; end_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil[root', conv_s0_z, conv_s0_y, conv_s0_x] : conv_s0_x >= -137 + 12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 12288root' - 4096conv_s0_z - 64conv_s0_y; end_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x - 12288root' - 4096hw_output_s0_z - 64hw_output_s0_y_yi; end_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_z', conv_s1_y', conv_s1_x'] : conv_s1_x' > 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x - 12288root' - 4096conv_s1_z' - 64conv_s1_y'; end_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> start_op_hcompute_conv_stencil[root', conv_s0_z, conv_s0_y, conv_s0_x] : conv_s0_x >= 2 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x - 12288root' - 4096conv_s0_z - 64conv_s0_y; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> end_op_hcompute_conv_stencil[root', conv_s0_z, conv_s0_y, conv_s0_x] : conv_s0_x > 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x - 12288root' - 4096conv_s0_z - 64conv_s0_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_z, conv_s1_y, conv_s1_x] : conv_s1_x >= -137 + 12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 12288root' - 4096conv_s1_z - 64conv_s1_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -138 + 12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 12288root' - 4096hw_output_s0_z - 64hw_output_s0_y_yi; end_op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_conv_stencil_1[root', conv_s1_z, conv_s1_y, conv_s1_x] : conv_s1_x >= 2 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 12288root' - 4096conv_s1_z - 64conv_s1_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv_stencil[root', conv_s0_z, conv_s0_y, conv_s0_x] : conv_s0_x >= -137 + 12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 12288root' - 4096conv_s0_z - 64conv_s0_y; end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x - 12288root' - 4096hw_output_s0_z - 64hw_output_s0_y_yi; end_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_z, conv_s1_y, conv_s1_x] : conv_s1_x >= 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x - 12288root' - 4096conv_s1_z - 64conv_s1_y; start_op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 139 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x - 12288root' - 4096pad_root_to_hw_input_global_wrapper_s0_y - 64hw_input_global_wrapper_s0_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_z, conv_s1_y, conv_s1_x] : conv_s1_x >= -138 + 12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 12288root' - 4096conv_s1_z - 64conv_s1_y; start_op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 139 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x - 12288root' - 4096pad_root_to_hw_input_global_wrapper_s0_y - 64hw_input_global_wrapper_s0_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -138 + 12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 12288root' - 4096hw_output_s0_z - 64hw_output_s0_y_yi }
  Violated deps: {  }
schedule for n: { op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedmap = { op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 12288root + 4096conv_s1_z + 64conv_s1_y + conv_s1_x]; op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [12288root + 4096pad_root_to_hw_input_global_wrapper_s0_y + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 12288root + 4096conv_s0_z + 64conv_s0_y + conv_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 12288root + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
result schedule: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Creating ports for op: hw_output_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_z+0,  hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] }
	Adding output port: hw_output_stencil_op_hcompute_hw_output_stencil_0
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
current out port name: 
	hw_output_stencil_op_hcompute_hw_output_stencil_0
Creating ports for op: conv_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_z+0,  hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] }
	Adding output port: conv_stencil_op_hcompute_hw_output_stencil_1
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Opt sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_hw_output_stencil
  other_dspace_id = op_hcompute_hw_output_stencil
  Schedule domain set: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
  Domain set from prg: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
  ITS: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
ITS      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
current out port name: 
	conv_stencil_op_hcompute_hw_output_stencil_1
Creating ports for op: hw_input_global_wrapper_stencil
cond = { op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
		Consumed: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Creating ports for op: hw_input_stencil
cond = { op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] }
	Adding output port: hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_3
		Consumed: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Opt sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_hw_input_global_wrapper_stencil
  other_dspace_id = op_hcompute_hw_input_global_wrapper_stencil
  Schedule domain set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  Domain set from prg: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  ITS: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
ITS      : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
current out port name: 
	hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_3
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_z+0,  conv_s1_y+0,  conv_s1_x+0] }
	Adding output port: conv_stencil_op_hcompute_conv_stencil_1_4
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	conv_stencil_op_hcompute_conv_stencil_1_4
Creating ports for op: conv_stencil_clkwrk_dsa0
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_z+0,  conv_s1_y+0,  conv_s1_x+0] }
	Adding output port: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 2)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 1)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 2)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  conv_s1_x+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 1)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 2)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil[root, conv_s0_z, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_z+0,  conv_s0_y+0,  conv_s0_x+0] }
	Adding output port: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
		Consumed: { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
current out port name: 
	conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
Latency of application is: { [12296] }
Global schedule: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
# in bundles: 1
Generating compute unit for op_hcompute_hw_input_global_wrapper_stencil
getting incoming buffers to op_hcompute_hw_input_global_wrapper_stencil
  consumed: hw_input_stencil
Found compute file for multi_channel_conv
getting incoming buffers to op_hcompute_hw_input_global_wrapper_stencil
  consumed: hw_input_stencil
Looking for connection for hw_input_stencil.op_hcompute_hw_input_global_wrapper_stencil_read
# of selects = 0
inner_compute() : global.hcompute_hw_input_global_wrapper_stencil
name = in0_hw_input_stencil
More than oune outgoing bundle
# of selects = 1
inner_compute() : global.hcompute_hw_input_global_wrapper_stencil
  name = in0_hw_input_stencil
  bundle.first = hw_input_global_wrapper_stencil
  after split  = hw_input_global_wrapper_stencil
  name = out_hw_input_global_wrapper_stencil
  bundle.first = hw_input_global_wrapper_stencil
  after split  = hw_input_global_wrapper_stencil
Generating compute unit for op_hcompute_conv_stencil
getting incoming buffers to op_hcompute_conv_stencil
Found compute file for multi_channel_conv
getting incoming buffers to op_hcompute_conv_stencil
More than oune outgoing bundle
# of selects = 0
inner_compute() : global.hcompute_conv_stencil
  name = out_conv_stencil
  bundle.first = conv_stencil_clkwrk_dsa0
  after split  = conv_stencil
Generating compute unit for op_hcompute_conv_stencil_1
getting incoming buffers to op_hcompute_conv_stencil_1
  consumed: conv_stencil_clkwrk_dsa0
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
Found compute file for multi_channel_conv
getting incoming buffers to op_hcompute_conv_stencil_1
  consumed: conv_stencil_clkwrk_dsa0
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
Looking for connection for conv_stencil_clkwrk_dsa0.op_hcompute_conv_stencil_1_read
# of selects = 1
inner_compute() : global.hcompute_conv_stencil_1
name = in0_conv_stencil
Looking for connection for hw_input_global_wrapper_stencil.op_hcompute_conv_stencil_1_read
# of selects = 2
inner_compute() : global.hcompute_conv_stencil_1
name = in0_conv_stencil
name = in1_hw_input_global_wrapper_stencil
More than oune outgoing bundle
# of selects = 3
inner_compute() : global.hcompute_conv_stencil_1
  name = in0_conv_stencil
  bundle.first = conv_stencil
  after split  = conv_stencil
  name = in1_hw_input_global_wrapper_stencil
  bundle.first = conv_stencil
  after split  = conv_stencil
  name = conv_s1_z
  bundle.first = conv_stencil
  after split  = conv_stencil
  name = out_conv_stencil
  bundle.first = conv_stencil
  after split  = conv_stencil
Generating compute unit for op_hcompute_hw_output_stencil
getting incoming buffers to op_hcompute_hw_output_stencil
  consumed: conv_stencil
Found compute file for multi_channel_conv
getting incoming buffers to op_hcompute_hw_output_stencil
  consumed: conv_stencil
Looking for connection for conv_stencil.op_hcompute_hw_output_stencil_read
# of selects = 0
inner_compute() : global.hcompute_hw_output_stencil
name = in0_conv_stencil
More than oune outgoing bundle
# of selects = 1
inner_compute() : global.hcompute_hw_output_stencil
  name = in0_conv_stencil
  bundle.first = hw_output_stencil
  after split  = hw_output_stencil
  name = out_hw_output_stencil
  bundle.first = hw_output_stencil
  after split  = hw_output_stencil
create shift register for --- conv_stencil
	---- 1 in ports
		conv_stencil_op_hcompute_conv_stencil_1_4
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { conv_stencil[0, 0, 0] }
			max location: { conv_stencil[2, 61, 61] }

	---- 1 out ports:
		conv_stencil_op_hcompute_hw_output_stencil_1
			dom : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
			acc : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
			sched: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
			min location: { conv_stencil[0, 0, 0] }
			max location: { conv_stencil[2, 61, 61] }

	---- Input Bundles
		op_hcompute_conv_stencil_1_write
		---- Ports...
			conv_stencil_op_hcompute_conv_stencil_1_4
	---- Output Bundles
		op_hcompute_hw_output_stencil_read
		---- Ports...
			conv_stencil_op_hcompute_hw_output_stencil_1

==== No reduce ops on this buffer
Writer name: op_hcompute_conv_stencil_1
read_op read: {conv_stencil}
read_op write: {hw_output_stencil, }
write_op write: {hw_output_stencil}
write_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
reads : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Time to write: { [i0] -> conv_stencil[o0, o1, -138 + i0 - 4096o0 - 64o1] : 0 <= o0 <= 2 and 0 <= o1 <= 61 and -199 + i0 - 4096o0 <= 64o1 <= -138 + i0 - 4096o0 }
Time to read : { [i0] -> conv_stencil[o0, o1, -139 + i0 - 4096o0 - 64o1] : 0 <= o0 <= 2 and 0 <= o1 <= 61 and -200 + i0 - 4096o0 <= 64o1 <= -139 + i0 - 4096o0 }
PC times     : { [i0] -> [1 + i0] : exists (e0, e1: 0 <= e0 <= 2 and 0 <= e1 <= 61 and -199 + i0 - 4096e0 <= 64e1 <= -138 + i0 - 4096e0) }
DDs          : { [1] }
DD           : 1
writer op    : op_hcompute_conv_stencil_1
DG: ...
# nodes: 2
# edges: 1
Group:     conv_stencil_op_hcompute_conv_stencil_1_4
        conv_stencil_op_hcompute_conv_stencil_1_4 -> (0) conv_stencil_op_hcompute_hw_output_stencil_1
Fanin Group:     conv_stencil_op_hcompute_conv_stencil_1_4
        conv_stencil_op_hcompute_hw_output_stencil_1 -> (-1) conv_stencil_op_hcompute_conv_stencil_1_4

Naive Shift registers...
# nodes: 2
# edges: 1
Group:     conv_stencil_op_hcompute_conv_stencil_1_4
        conv_stencil_op_hcompute_conv_stencil_1_4 -> (0) conv_stencil_op_hcompute_hw_output_stencil_1
Fanin Group:     conv_stencil_op_hcompute_conv_stencil_1_4
        conv_stencil_op_hcompute_hw_output_stencil_1 -> (-1) conv_stencil_op_hcompute_conv_stencil_1_4

inpt: conv_stencil_op_hcompute_conv_stencil_1_4
  conv_stencil_op_hcompute_hw_output_stencil_1 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     conv_stencil_op_hcompute_conv_stencil_1_4
        conv_stencil_op_hcompute_conv_stencil_1_4 -> (0) conv_stencil_op_hcompute_hw_output_stencil_1
Fanin Group:     conv_stencil_op_hcompute_conv_stencil_1_4
        conv_stencil_op_hcompute_hw_output_stencil_1 -> (-1) conv_stencil_op_hcompute_conv_stencil_1_4

edge: conv_stencil_op_hcompute_conv_stencil_1_4=>conv_stencil_op_hcompute_hw_output_stencil_1, w=0
after sort: outpt->conv_stencil_op_hcompute_hw_output_stencil_1, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     conv_stencil_op_hcompute_conv_stencil_1_4
        conv_stencil_op_hcompute_conv_stencil_1_4 -> (0) conv_stencil_op_hcompute_hw_output_stencil_1
Fanin Group:     conv_stencil_op_hcompute_conv_stencil_1_4
        conv_stencil_op_hcompute_hw_output_stencil_1 -> (-1) conv_stencil_op_hcompute_conv_stencil_1_4
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_op_hcompute_conv_stencil_1_4->conv_stencil_op_hcompute_hw_output_stencil_1, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_op_hcompute_conv_stencil_1_4->conv_stencil_op_hcompute_hw_output_stencil_1, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_op_hcompute_conv_stencil_1_4->conv_stencil_op_hcompute_hw_output_stencil_1, delay = 0
	register IO:: 

Done ports: {conv_stencil_op_hcompute_hw_output_stencil_1}
reduced buffer: --- conv_stencil
	---- 1 in ports
		conv_stencil_op_hcompute_conv_stencil_1_4
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { conv_stencil[0, 0, 0] }
			max location: { conv_stencil[2, 61, 61] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_conv_stencil_1_write
		---- Ports...
			conv_stencil_op_hcompute_conv_stencil_1_4
	---- Output Bundles

SR outputs: {conv_stencil_op_hcompute_hw_output_stencil_1}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_op_hcompute_conv_stencil_1_4->conv_stencil_op_hcompute_hw_output_stencil_1, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_op_hcompute_conv_stencil_1_4->conv_stencil_op_hcompute_hw_output_stencil_1, delay = 0
	register IO:: 

add input: conv_stencil_op_hcompute_conv_stencil_1_4 to pt2wire
add output: conv_stencil_op_hcompute_hw_output_stencil_1 to pt2wire
create shift register for --- conv_stencil_clkwrk_dsa0
	---- 1 in ports
		conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
			dom : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
			acc : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
			sched: { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
			min location: { conv_stencil_clkwrk_dsa0[0, 0, 0] }
			max location: { conv_stencil_clkwrk_dsa0[2, 61, 61] }

	---- 1 out ports:
		conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { conv_stencil_clkwrk_dsa0[0, 0, 0] }
			max location: { conv_stencil_clkwrk_dsa0[2, 61, 61] }

	---- Input Bundles
		op_hcompute_conv_stencil_write
		---- Ports...
			conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
	---- Output Bundles
		op_hcompute_conv_stencil_1_read
		---- Ports...
			conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5

==== No reduce ops on this buffer
Writer name: op_hcompute_conv_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: 
Calculate DDs for creating shift registers.
writes: { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
Time to write: { [i0] -> conv_stencil_clkwrk_dsa0[o0, o1, -138 + i0 - 4096o0 - 64o1] : 0 <= o0 <= 2 and 0 <= o1 <= 61 and -199 + i0 - 4096o0 <= 64o1 <= -138 + i0 - 4096o0 }
Time to read : { [i0] -> conv_stencil_clkwrk_dsa0[o0, o1, -138 + i0 - 4096o0 - 64o1] : 0 <= o0 <= 2 and 0 <= o1 <= 61 and -199 + i0 - 4096o0 <= 64o1 <= -138 + i0 - 4096o0 }
PC times     : { [i0] -> [i0] : exists (e0, e1: 0 <= e0 <= 2 and 0 <= e1 <= 61 and -199 + i0 - 4096e0 <= 64e1 <= -138 + i0 - 4096e0) }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_conv_stencil
DG: ...
# nodes: 2
# edges: 1
Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15 -> (0) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
Fanin Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5 -> (-1) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15

Naive Shift registers...
# nodes: 2
# edges: 1
Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15 -> (0) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
Fanin Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5 -> (-1) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15

inpt: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
  conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15 -> (0) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
Fanin Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5 -> (-1) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15

edge: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15=>conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5, w=0
after sort: outpt->conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15 -> (0) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
Fanin Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5 -> (-1) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15->conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15->conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15->conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5, delay = 0
	register IO:: 

Done ports: {conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5}
reduced buffer: --- conv_stencil_clkwrk_dsa0
	---- 1 in ports
		conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
			dom : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
			acc : { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_z, conv_s0_y, conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
			sched: { op_hcompute_conv_stencil[root = 0, conv_s0_z, conv_s0_y, conv_s0_x] -> [138 + 4096conv_s0_z + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_z <= 2 and 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
			min location: { conv_stencil_clkwrk_dsa0[0, 0, 0] }
			max location: { conv_stencil_clkwrk_dsa0[2, 61, 61] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_conv_stencil_write
		---- Ports...
			conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15
	---- Output Bundles

SR outputs: {conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15->conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15->conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5, delay = 0
	register IO:: 

add input: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_15 to pt2wire
add output: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5 to pt2wire
create shift register for --- hw_input_global_wrapper_stencil
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil[0, 0] }
			max location: { hw_input_global_wrapper_stencil[63, 63] }

	---- 9 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[1, 1] }
			max location: { hw_input_global_wrapper_stencil[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[1, 2] }
			max location: { hw_input_global_wrapper_stencil[62, 63] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[2, 0] }
			max location: { hw_input_global_wrapper_stencil[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[2, 1] }
			max location: { hw_input_global_wrapper_stencil[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[2, 2] }
			max location: { hw_input_global_wrapper_stencil[63, 63] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[0, 0] }
			max location: { hw_input_global_wrapper_stencil[61, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[0, 1] }
			max location: { hw_input_global_wrapper_stencil[61, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[0, 2] }
			max location: { hw_input_global_wrapper_stencil[61, 63] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[1, 0] }
			max location: { hw_input_global_wrapper_stencil[62, 61] }

	---- Input Bundles
		op_hcompute_hw_input_global_wrapper_stencil_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		op_hcompute_conv_stencil_1_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14

==== No reduce ops on this buffer
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, o1] : (73 - i0 + 64o0 + o1) mod 4096 = 0 and 0 < o0 <= 62 and o1 >= -8265 + i0 - 64o0 and 0 < o1 <= 62 and o1 <= -73 + i0 - 64o0 }
PC times     : { [i0] -> [o0] : (-73 - i0 + o0) mod 4096 = 0 and 63 <= i0 <= 4030 and 73 + i0 <= o0 <= 8265 + i0 and 64*floor((1 + i0)/64) < i0 }
DDs          : { [i0] : (-73 + i0) mod 4096 = 0 and 73 <= i0 <= 8265 }
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, o1] : (72 - i0 + 64o0 + o1) mod 4096 = 0 and 0 < o0 <= 62 and o1 >= -8264 + i0 - 64o0 and 2 <= o1 <= 63 and o1 <= -72 + i0 - 64o0 }
PC times     : { [i0] -> [o0] : (-72 - i0 + o0) mod 4096 = 0 and 64 <= i0 <= 4031 and 72 + i0 <= o0 <= 8264 + i0 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [i0] : (-72 + i0) mod 4096 = 0 and 72 <= i0 <= 8264 }
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, o1] : (10 - i0 + 64o0 + o1) mod 4096 = 0 and 2 <= o0 <= 63 and o1 >= -8202 + i0 - 64o0 and 0 <= o1 <= 61 and o1 <= -10 + i0 - 64o0 }
PC times     : { [i0] -> [o0] : (-10 - i0 + o0) mod 4096 = 0 and 126 <= i0 <= 4093 and 10 + i0 <= o0 <= 8202 + i0 and 64*floor((2 + i0)/64) <= i0 }
DDs          : { [i0] : (-10 + i0) mod 4096 = 0 and 10 <= i0 <= 8202 }
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, o1] : (9 - i0 + 64o0 + o1) mod 4096 = 0 and 2 <= o0 <= 63 and o1 >= -8201 + i0 - 64o0 and 0 < o1 <= 62 and o1 <= -9 + i0 - 64o0 }
PC times     : { [i0] -> [o0] : (-9 - i0 + o0) mod 4096 = 0 and 127 <= i0 <= 4094 and 9 + i0 <= o0 <= 8201 + i0 and 64*floor((1 + i0)/64) < i0 }
DDs          : { [i0] : (-9 + i0) mod 4096 = 0 and 9 <= i0 <= 8201 }
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, o1] : (8 - i0 + 64o0 + o1) mod 4096 = 0 and 2 <= o0 <= 63 and o1 >= -8200 + i0 - 64o0 and 2 <= o1 <= 63 and o1 <= -8 + i0 - 64o0 }
PC times     : { [i0] -> [o0] : (-8 - i0 + o0) mod 4096 = 0 and 128 <= i0 <= 4095 and 8 + i0 <= o0 <= 8200 + i0 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [i0] : (-8 + i0) mod 4096 = 0 and 8 <= i0 <= 8200 }
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, o1] : (138 - i0 + 64o0 + o1) mod 4096 = 0 and 0 <= o0 <= 61 and o1 >= -8330 + i0 - 64o0 and 0 <= o1 <= 61 and o1 <= -138 + i0 - 64o0 }
PC times     : { [i0] -> [o0] : (-138 - i0 + o0) mod 4096 = 0 and -2 <= i0 <= 3965 and 138 + i0 <= o0 <= 8330 + i0 and 64*floor((2 + i0)/64) <= i0 }
DDs          : { [i0] : (-138 + i0) mod 4096 = 0 and 138 <= i0 <= 8330 }
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, o1] : (137 - i0 + 64o0 + o1) mod 4096 = 0 and 0 <= o0 <= 61 and o1 >= -8329 + i0 - 64o0 and 0 < o1 <= 62 and o1 <= -137 + i0 - 64o0 }
PC times     : { [i0] -> [o0] : (-137 - i0 + o0) mod 4096 = 0 and -1 <= i0 <= 3966 and 137 + i0 <= o0 <= 8329 + i0 and 64*floor((1 + i0)/64) < i0 }
DDs          : { [i0] : (-137 + i0) mod 4096 = 0 and 137 <= i0 <= 8329 }
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, o1] : (136 - i0 + 64o0 + o1) mod 4096 = 0 and 0 <= o0 <= 61 and o1 >= -8328 + i0 - 64o0 and 2 <= o1 <= 63 and o1 <= -136 + i0 - 64o0 }
PC times     : { [i0] -> [o0] : (-136 - i0 + o0) mod 4096 = 0 and 0 <= i0 <= 3967 and 136 + i0 <= o0 <= 8328 + i0 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [i0] : (-136 + i0) mod 4096 = 0 and 136 <= i0 <= 8328 }
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, o1] : (74 - i0 + 64o0 + o1) mod 4096 = 0 and 0 < o0 <= 62 and o1 >= -8266 + i0 - 64o0 and 0 <= o1 <= 61 and o1 <= -74 + i0 - 64o0 }
PC times     : { [i0] -> [o0] : (-74 - i0 + o0) mod 4096 = 0 and 62 <= i0 <= 4029 and 74 + i0 <= o0 <= 8266 + i0 and 64*floor((2 + i0)/64) <= i0 }
DDs          : { [i0] : (-74 + i0) mod 4096 = 0 and 74 <= i0 <= 8266 }
DG: ...
# nodes: 0
# edges: 0

Naive Shift registers...
# nodes: 0
# edges: 0

Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

Out -> Out shift registers for hw_input_global_wrapper_stencil
out -> out srs: 0
out2out DG: ...
# nodes: 0
# edges: 0

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

Done ports: {}
reduced buffer: --- hw_input_global_wrapper_stencil
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil[0, 0] }
			max location: { hw_input_global_wrapper_stencil[63, 63] }

	---- 9 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[1, 1] }
			max location: { hw_input_global_wrapper_stencil[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[1, 2] }
			max location: { hw_input_global_wrapper_stencil[62, 63] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[2, 0] }
			max location: { hw_input_global_wrapper_stencil[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[2, 1] }
			max location: { hw_input_global_wrapper_stencil[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[2, 2] }
			max location: { hw_input_global_wrapper_stencil[63, 63] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[0, 0] }
			max location: { hw_input_global_wrapper_stencil[61, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[0, 1] }
			max location: { hw_input_global_wrapper_stencil[61, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[0, 2] }
			max location: { hw_input_global_wrapper_stencil[61, 63] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[1, 0] }
			max location: { hw_input_global_wrapper_stencil[62, 61] }

	---- Input Bundles
		op_hcompute_hw_input_global_wrapper_stencil_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		op_hcompute_conv_stencil_1_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14

SR outputs: {}
BUF outputs: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9}
overlapping input:{hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
overlapping output:{hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9}

Error: No viable banking strategy for hw_input_global_wrapper_stencil
  Cannot partition group: 
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	part size:1
	g size: 9
overlapping input:{hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
overlapping output:{hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9}

addr need tight: {}
addr dim fully unrolled: {}
Cyclic banking factors: {1, 1}
	part size:1
	g size: 9
Use exhaustive banking! 
generating banks for buffer: hw_input_global_wrapper_stencil
===== Unique ports
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
Generating banks for port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10 on buffer hw_input_global_wrapper_stencil
  access map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Buffer = hw_input_global_wrapper_stencil
	src map after its after: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = 1 + conv_s1_y, hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	src map final: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = 1 + conv_s1_y, hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  lexmax events: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = 1 + conv_s1_y, hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	inpt: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	overlap: { hw_input_global_wrapper_stencil[i0, i1] : 0 < i0 <= 62 and 0 < i1 <= 62 }
	overlap ops: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 62 }
Generating banks for port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11 on buffer hw_input_global_wrapper_stencil
  access map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Buffer = hw_input_global_wrapper_stencil
	src map after its after: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = 1 + conv_s1_y, hw_input_global_wrapper_s0_x = 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	src map final: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = 1 + conv_s1_y, hw_input_global_wrapper_s0_x = 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  lexmax events: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = 1 + conv_s1_y, hw_input_global_wrapper_s0_x = 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	inpt: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	overlap: { hw_input_global_wrapper_stencil[i0, i1] : 0 < i0 <= 62 and 2 <= i1 <= 63 }
	overlap ops: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 2 <= hw_input_global_wrapper_s0_x <= 63 }
Generating banks for port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12 on buffer hw_input_global_wrapper_stencil
  access map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Buffer = hw_input_global_wrapper_stencil
	src map after its after: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = 2 + conv_s1_y, hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	src map final: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = 2 + conv_s1_y, hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  lexmax events: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = 2 + conv_s1_y, hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	inpt: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	overlap: { hw_input_global_wrapper_stencil[i0, i1] : 2 <= i0 <= 63 and 0 <= i1 <= 61 }
	overlap ops: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 61 }
Generating banks for port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13 on buffer hw_input_global_wrapper_stencil
  access map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Buffer = hw_input_global_wrapper_stencil
	src map after its after: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = 2 + conv_s1_y, hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	src map final: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = 2 + conv_s1_y, hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  lexmax events: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = 2 + conv_s1_y, hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	inpt: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	overlap: { hw_input_global_wrapper_stencil[i0, i1] : 2 <= i0 <= 63 and 0 < i1 <= 62 }
	overlap ops: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 < hw_input_global_wrapper_s0_x <= 62 }
Generating banks for port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14 on buffer hw_input_global_wrapper_stencil
  access map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Buffer = hw_input_global_wrapper_stencil
	src map after its after: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = 2 + conv_s1_y, hw_input_global_wrapper_s0_x = 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	src map final: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = 2 + conv_s1_y, hw_input_global_wrapper_s0_x = 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  lexmax events: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = 2 + conv_s1_y, hw_input_global_wrapper_s0_x = 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	inpt: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	overlap: { hw_input_global_wrapper_stencil[i0, i1] : 2 <= i0 <= 63 and 2 <= i1 <= 63 }
	overlap ops: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 2 <= hw_input_global_wrapper_s0_x <= 63 }
Generating banks for port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6 on buffer hw_input_global_wrapper_stencil
  access map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Buffer = hw_input_global_wrapper_stencil
	src map after its after: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = conv_s1_y, hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	src map final: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = conv_s1_y, hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  lexmax events: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = conv_s1_y, hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	inpt: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	overlap: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
	overlap ops: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 <= hw_input_global_wrapper_s0_x <= 61 }
Generating banks for port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7 on buffer hw_input_global_wrapper_stencil
  access map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Buffer = hw_input_global_wrapper_stencil
	src map after its after: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = conv_s1_y, hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	src map final: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = conv_s1_y, hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  lexmax events: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = conv_s1_y, hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	inpt: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	overlap: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 61 and 0 < i1 <= 62 }
	overlap ops: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 < hw_input_global_wrapper_s0_x <= 62 }
Generating banks for port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8 on buffer hw_input_global_wrapper_stencil
  access map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Buffer = hw_input_global_wrapper_stencil
	src map after its after: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = conv_s1_y, hw_input_global_wrapper_s0_x = 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	src map final: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = conv_s1_y, hw_input_global_wrapper_s0_x = 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  lexmax events: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = conv_s1_y, hw_input_global_wrapper_s0_x = 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	inpt: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	overlap: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 61 and 2 <= i1 <= 63 }
	overlap ops: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 2 <= hw_input_global_wrapper_s0_x <= 63 }
Generating banks for port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9 on buffer hw_input_global_wrapper_stencil
  access map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Buffer = hw_input_global_wrapper_stencil
	src map after its after: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = 1 + conv_s1_y, hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	src map final: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = 1 + conv_s1_y, hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  lexmax events: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y = 1 + conv_s1_y, hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	inpt: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	overlap: { hw_input_global_wrapper_stencil[i0, i1] : 0 < i0 <= 62 and 0 <= i1 <= 61 }
	overlap ops: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 61 }
  after banking there are 9 banks
  Bank name: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_to_hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
	input: 
    hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	 output: 
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
  Bank name: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_to_hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
	input: 
    hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	 output: 
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
  Bank name: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_to_hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
	input: 
    hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	 output: 
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
  Bank name: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_to_hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
	input: 
    hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	 output: 
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
  Bank name: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_to_hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
	input: 
    hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	 output: 
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
  Bank name: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_to_hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
	input: 
    hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	 output: 
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
  Bank name: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_to_hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
	input: 
    hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	 output: 
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
  Bank name: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_to_hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
	input: 
    hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	 output: 
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
  Bank name: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_to_hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
	input: 
    hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	 output: 
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
{hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
Add bank: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_to_hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10between: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2} and {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
 with rddom:{ hw_input_global_wrapper_stencil[i0, i1] : 0 < i0 <= 62 and 0 < i1 <= 62 }
{hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11}
Add bank: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_to_hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11between: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2} and {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11}
 with rddom:{ hw_input_global_wrapper_stencil[i0, i1] : 0 < i0 <= 62 and 2 <= i1 <= 63 }
{hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12}
Add bank: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_to_hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12between: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2} and {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12}
 with rddom:{ hw_input_global_wrapper_stencil[i0, i1] : 2 <= i0 <= 63 and 0 <= i1 <= 61 }
{hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13}
Add bank: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_to_hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13between: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2} and {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13}
 with rddom:{ hw_input_global_wrapper_stencil[i0, i1] : 2 <= i0 <= 63 and 0 < i1 <= 62 }
{hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14}
Add bank: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_to_hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14between: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2} and {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14}
 with rddom:{ hw_input_global_wrapper_stencil[i0, i1] : 2 <= i0 <= 63 and 2 <= i1 <= 63 }
{hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6}
Add bank: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_to_hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6between: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2} and {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6}
 with rddom:{ hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
{hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7}
Add bank: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_to_hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7between: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2} and {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7}
 with rddom:{ hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 61 and 0 < i1 <= 62 }
{hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8}
Add bank: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_to_hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8between: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2} and {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8}
 with rddom:{ hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 61 and 2 <= i1 <= 63 }
{hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9}
Add bank: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_to_hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9between: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2} and {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9}
 with rddom:{ hw_input_global_wrapper_stencil[i0, i1] : 0 < i0 <= 62 and 0 <= i1 <= 61 }
After exhaustive banking:
 Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.2
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.3
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.4
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.5
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.6
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.7
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.8
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11}
	 bank NO.2
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12}
	 bank NO.3
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13}
	 bank NO.4
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14}
	 bank NO.5
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6}
	 bank NO.6
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7}
	 bank NO.7
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8}
	 bank NO.8
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

After banking optimization: Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.2
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.3
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.4
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.5
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.6
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.7
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.8
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11}
	 bank NO.2
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12}
	 bank NO.3
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13}
	 bank NO.4
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14}
	 bank NO.5
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6}
	 bank NO.6
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7}
	 bank NO.7
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8}
	 bank NO.8
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

After bank merging: Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.2
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.3
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.4
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.5
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.6
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.7
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.8
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11}
	 bank NO.2
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12}
	 bank NO.3
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13}
	 bank NO.4
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14}
	 bank NO.5
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6}
	 bank NO.6
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7}
	 bank NO.7
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8}
	 bank NO.8
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

CGPL level :0
impl inputs: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
impl outpts: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
rddom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
ls = { op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
v = 0
--- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_0[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[62, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10

after ubuffer regen: --- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_0[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[62, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10

addr need tight: {}
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_0[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_0[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

	UBuffer after address tighten--- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_0[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[62, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10

getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_0[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Vectorization buffer capacity: 4096

	UBuffer after cgpl optimization--- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_0[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[62, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10

find bd for op :op_hcompute_conv_stencil_1
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
find bd for op :op_hcompute_hw_input_global_wrapper_stencil
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
remove dimension: {1}
remove dimension: {1}
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_x)] }
	div dim: 0
getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_0[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
vectorization buffer capacity: 4096
vectorization buf name: hw_input_global_wrapper_stencil_BANK_0
	 original range input access map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	 dim id: 2
Ext by dim: {64, 64}
  buffer_vectorization Vectorizing: hw_input_global_wrapper_stencil_BANK_0
   On addr dim: 1, fetch_width: 4
--- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_0[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[62, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10

in bundle  = 1
out bundle = 1
Vectorize input port bundle: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
	vectorize input port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 64, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 64, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [64, 64, ]
	---- Stride: 
	---- Start Addr: [0, 0, ]
	---- Access Matrix: 
		[[0, 0, 1, 0, ]
		[0, 0, 0, 1, ]
		]

origin: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }, transform: { hw_input_global_wrapper_stencil_BANK_0[d0, d1] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[d0, d1] }
access map : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }need to find inner dim
dim id: 1
Relation map{0, 0, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] -> op_hcompute_hw_input_global_wrapper_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	sched after trans: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_0[i0, i1] -> hw_input_global_wrapper_stencil_BANK_0[i0, o1] : -3 + i1 <= 4o1 <= i1 }
trans max: 15 , origin max: 15
agg2sram sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
AGG : --- hw_input_global_wrapper_stencil_BANK_0_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

AGG Schedule: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Vectorize output port bundle: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
	Vectorize output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_0[i0, i1] -> hw_input_global_wrapper_stencil_BANK_0[i0, o1] : -3 + i1 <= 4o1 <= i1 }
Range slice: { hw_input_global_wrapper_stencil_BANK_0[i0, i1] -> hw_input_global_wrapper_stencil_BANK_0[i0, o1] : -3 + i1 <= 4o1 <= i1 }
after slice{ op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_y)] }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((1 + conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 3 denom: 4
	Trans str{op_hcompute_conv_stencil_1[d0, d1, d2, d3]->op_hcompute_conv_stencil_1[d0, d1, d2, floor(d3/4), d3%4]}
{ op_hcompute_conv_stencil_1[d0, d1, d2, d3] -> op_hcompute_conv_stencil_1[d0, d1, d2, o3, o4] : (-d3 + o4) mod 4 = 0 and -3 + d3 <= 4o3 <= d3 and 0 <= o4 <= 3 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_0[1 + i2, o1] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 and -2 + 4i3 + i4 <= 4o1 <= 1 + 4i3 + i4 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1, 1}
Preliminary vectorization dim: 4
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3 + floor((1 + i4)/4))] }
  { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(1 + i4)/4] }
after removal: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3)] }
new: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_0[1 + i2, o1] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 and -2 + 4i3 + i4 <= 4o1 <= 1 + 4i3 + i4 }
remove: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_0[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_0[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1, 0}
Vectorization dimension: 3
	aff : { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(1 + i2)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3 + floor((1 + i4)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(1 + i4)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
rem: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_0[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
new: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_0[1 + i2, o1] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 and -2 + 4i3 + i4 <= 4o1 <= 1 + 4i3 + i4 }
base_str : {op_hcompute_conv_stencil_1[i0=0, i1=0, i2=0, i3=0, i4]}
base_str : {op_hcompute_conv_stencil_1[i0=0, i1=0, i2=0, i3=0, i4]}
	new: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4] }
	rem: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4] }
origin max: 1
trans max: 0
ahead_step : 1
sched domain: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4 = 0] }
sched domain: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4 = 0] }
remove dimension: {4}
before:{ op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_0[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
after:{ op_hcompute_conv_stencil_1[0, i1, i2, i3, 0] -> hw_input_global_wrapper_stencil_BANK_0[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
remove dimension: {4}
sched before projection: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1}
vectorization dimension after irrelevant dimension removal: 3
sched before adjust: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
schedule adjust forward step: 1
	 output sched: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
vectorized dim: 3
	 temp sched: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
final schedule: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
final access: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 62, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i3, idx: 4, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 5
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
		 name: i3	 id: 4
	---- In range: [1, 3, 62, 62, ]
	---- Out range: [62, 62, ]
	---- Stride: 
	---- Start Addr: [0, 0, ]
	---- Access Matrix: 
		[[1, 0, 0, 1, 0, ]
		[1, 0, 0, 0, 1, ]
		]

Autogen slice:{ hw_input_global_wrapper_stencil_BANK_0[i0, i1] -> hw_input_global_wrapper_stencil_BANK_0[i0, o1] : -3 + i1 <= 4o1 <= i1 }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((1 + conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[1 + i2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 1, 4*i3]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[1 + i2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 1, 4*i3+1]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 1 + 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[1 + i2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 1, 4*i3+2]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 2 + 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[1 + i2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 1, 4*i3+3]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 3 + 4i3] }
	Add TB output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_0[i0, i1] -> hw_input_global_wrapper_stencil_BANK_0[i0, o1] : -3 + i1 <= 4o1 <= i1 }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((1 + conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 62, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i3, idx: 4, coef: 1, vec_stride_in_addr:1
access map expr:[i2, 1, i3+1]
domain: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
access map: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[i2, 1, 1 + i3] }
tb output access map: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[i2, 1, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
	Access map decouple reuse: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
After dim id set: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
TB  : --- hw_input_global_wrapper_stencil_BANK_0_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0, 1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[61, 1, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0, 1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[61, 1, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0, 1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[61, 1, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0, 1, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[61, 1, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0, 1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[61, 1, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out

TB Schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15; op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + i2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + i2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + i2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + i2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
SRAM: --- hw_input_global_wrapper_stencil_BANK_0_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[62, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[62, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[62, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3

SRAM Schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
after vectorization codegen: hw_input_global_wrapper_stencil_BANK_0_0_agg
--- hw_input_global_wrapper_stencil_BANK_0_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_0_0_tb
--- hw_input_global_wrapper_stencil_BANK_0_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0, 1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[61, 1, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0, 1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[61, 1, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0, 1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[61, 1, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0, 1, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[61, 1, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[i2, 1, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0, 1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[61, 1, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_0_sram
--- hw_input_global_wrapper_stencil_BANK_0_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[62, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[62, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[62, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3

CGPL level :0
impl inputs: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
impl outpts: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11}
rddom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
ls = { op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
v = 0
--- hw_input_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_1[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[62, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11

after ubuffer regen: --- hw_input_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_1[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[62, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11

addr need tight: {}
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_1[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_1[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

	UBuffer after address tighten--- hw_input_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_1[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[62, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11

getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_1[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Vectorization buffer capacity: 4096

	UBuffer after cgpl optimization--- hw_input_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_1[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[62, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11

find bd for op :op_hcompute_conv_stencil_1
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_read
find bd for op :op_hcompute_hw_input_global_wrapper_stencil
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
remove dimension: {1}
remove dimension: {1}
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_x)] }
	div dim: 0
getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_1[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
vectorization buffer capacity: 4096
vectorization buf name: hw_input_global_wrapper_stencil_BANK_1
	 original range input access map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	 dim id: 2
Ext by dim: {64, 64}
  buffer_vectorization Vectorizing: hw_input_global_wrapper_stencil_BANK_1
   On addr dim: 1, fetch_width: 4
--- hw_input_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_1[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[62, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11

in bundle  = 1
out bundle = 1
Vectorize input port bundle: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
	vectorize input port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 64, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 64, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [64, 64, ]
	---- Stride: 
	---- Start Addr: [0, 0, ]
	---- Access Matrix: 
		[[0, 0, 1, 0, ]
		[0, 0, 0, 1, ]
		]

origin: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }, transform: { hw_input_global_wrapper_stencil_BANK_1[d0, d1] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[d0, d1] }
access map : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }need to find inner dim
dim id: 1
Relation map{0, 0, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] -> op_hcompute_hw_input_global_wrapper_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	sched after trans: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_1[i0, i1] -> hw_input_global_wrapper_stencil_BANK_1[i0, o1] : -3 + i1 <= 4o1 <= i1 }
trans max: 15 , origin max: 15
agg2sram sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
AGG : --- hw_input_global_wrapper_stencil_BANK_1_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

AGG Schedule: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Vectorize output port bundle: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_read
	Vectorize output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_1[i0, i1] -> hw_input_global_wrapper_stencil_BANK_1[i0, o1] : -3 + i1 <= 4o1 <= i1 }
Range slice: { hw_input_global_wrapper_stencil_BANK_1[i0, i1] -> hw_input_global_wrapper_stencil_BANK_1[i0, o1] : -3 + i1 <= 4o1 <= i1 }
after slice{ op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_y)] }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((2 + conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 3 denom: 4
	Trans str{op_hcompute_conv_stencil_1[d0, d1, d2, d3]->op_hcompute_conv_stencil_1[d0, d1, d2, floor(d3/4), d3%4]}
{ op_hcompute_conv_stencil_1[d0, d1, d2, d3] -> op_hcompute_conv_stencil_1[d0, d1, d2, o3, o4] : (-d3 + o4) mod 4 = 0 and -3 + d3 <= 4o3 <= d3 and 0 <= o4 <= 3 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_1[1 + i2, o1] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 and -1 + 4i3 + i4 <= 4o1 <= 2 + 4i3 + i4 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1, 1}
Preliminary vectorization dim: 4
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3 + floor((2 + i4)/4))] }
  { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(2 + i4)/4] }
after removal: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3)] }
new: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_1[1 + i2, o1] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 and -1 + 4i3 + i4 <= 4o1 <= 2 + 4i3 + i4 }
remove: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_1[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_1[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1, 0}
Vectorization dimension: 3
	aff : { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(1 + i2)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3 + floor((2 + i4)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(2 + i4)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
rem: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_1[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
new: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_1[1 + i2, o1] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 and -1 + 4i3 + i4 <= 4o1 <= 2 + 4i3 + i4 }
base_str : {op_hcompute_conv_stencil_1[i0=0, i1=0, i2=0, i3=0, i4]}
base_str : {op_hcompute_conv_stencil_1[i0=0, i1=0, i2=0, i3=0, i4]}
	new: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4] }
	rem: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4] }
origin max: 1
trans max: 0
ahead_step : 1
sched domain: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4 = 0] }
sched domain: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4 = 0] }
remove dimension: {4}
before:{ op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_1[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
after:{ op_hcompute_conv_stencil_1[0, i1, i2, i3, 0] -> hw_input_global_wrapper_stencil_BANK_1[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
remove dimension: {4}
sched before projection: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1}
vectorization dimension after irrelevant dimension removal: 3
sched before adjust: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
schedule adjust forward step: 1
	 output sched: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
vectorized dim: 3
	 temp sched: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
final schedule: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
final access: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 62, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i3, idx: 4, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 5
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
		 name: i3	 id: 4
	---- In range: [1, 3, 62, 62, ]
	---- Out range: [62, 62, ]
	---- Stride: 
	---- Start Addr: [0, 0, ]
	---- Access Matrix: 
		[[1, 0, 0, 1, 0, ]
		[2, 0, 0, 0, 1, ]
		]

Autogen slice:{ hw_input_global_wrapper_stencil_BANK_1[i0, i1] -> hw_input_global_wrapper_stencil_BANK_1[i0, o1] : -3 + i1 <= 4o1 <= i1 }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((2 + conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[1 + i2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 1, 4*i3]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[1 + i2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 1, 4*i3+1]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 1 + 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[1 + i2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 1, 4*i3+2]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 2 + 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[1 + i2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 1, 4*i3+3]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 3 + 4i3] }
	Add TB output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_1[i0, i1] -> hw_input_global_wrapper_stencil_BANK_1[i0, o1] : -3 + i1 <= 4o1 <= i1 }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((2 + conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 62, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i3, idx: 4, coef: 1, vec_stride_in_addr:1
access map expr:[i2, 1, i3+2]
domain: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
access map: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[i2, 1, 2 + i3] }
tb output access map: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[i2, 1, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
	Access map decouple reuse: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
After dim id set: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
TB  : --- hw_input_global_wrapper_stencil_BANK_1_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[0, 1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[61, 1, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[0, 1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[61, 1, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[0, 1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[61, 1, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[0, 1, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[61, 1, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[0, 1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[61, 1, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out

TB Schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15; op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + i2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + i2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + i2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + i2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
SRAM: --- hw_input_global_wrapper_stencil_BANK_1_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[62, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[62, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[62, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_3

SRAM Schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
after vectorization codegen: hw_input_global_wrapper_stencil_BANK_1_0_agg
--- hw_input_global_wrapper_stencil_BANK_1_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_1_0_tb
--- hw_input_global_wrapper_stencil_BANK_1_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[0, 1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[61, 1, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[0, 1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[61, 1, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[0, 1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[61, 1, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[0, 1, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[61, 1, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[i2, 1, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[0, 1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[61, 1, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_1_sram
--- hw_input_global_wrapper_stencil_BANK_1_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[62, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[62, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[62, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_3

CGPL level :0
impl inputs: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
impl outpts: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12}
rddom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
ls = { op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
v = 0
--- hw_input_global_wrapper_stencil_BANK_2
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_2[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_2[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_2[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_2[2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2[63, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12

after ubuffer regen: --- hw_input_global_wrapper_stencil_BANK_2
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_2[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_2[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_2[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_2[2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2[63, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12

addr need tight: {}
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_2[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_2[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_2[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_2[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

	UBuffer after address tighten--- hw_input_global_wrapper_stencil_BANK_2
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_2[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_2[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_2[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_2[2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2[63, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12

getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_2[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Vectorization buffer capacity: 4096

	UBuffer after cgpl optimization--- hw_input_global_wrapper_stencil_BANK_2
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_2[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_2[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_2[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_2[2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2[63, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12

find bd for op :op_hcompute_conv_stencil_1
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_read
find bd for op :op_hcompute_hw_input_global_wrapper_stencil
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
remove dimension: {1}
remove dimension: {1}
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
	div dim: 0
getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_2[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
vectorization buffer capacity: 4096
vectorization buf name: hw_input_global_wrapper_stencil_BANK_2
	 original range input access map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_2[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	 dim id: 2
Ext by dim: {64, 64}
  buffer_vectorization Vectorizing: hw_input_global_wrapper_stencil_BANK_2
   On addr dim: 1, fetch_width: 4
--- hw_input_global_wrapper_stencil_BANK_2
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_2[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_2[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_2[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_2[2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2[63, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12

in bundle  = 1
out bundle = 1
Vectorize input port bundle: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
	vectorize input port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 64, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 64, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [64, 64, ]
	---- Stride: 
	---- Start Addr: [0, 0, ]
	---- Access Matrix: 
		[[0, 0, 1, 0, ]
		[0, 0, 0, 1, ]
		]

origin: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_2[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }, transform: { hw_input_global_wrapper_stencil_BANK_2[d0, d1] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[d0, d1] }
access map : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_2[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }need to find inner dim
dim id: 1
Relation map{0, 0, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] -> op_hcompute_hw_input_global_wrapper_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	sched after trans: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_2[i0, i1] -> hw_input_global_wrapper_stencil_BANK_2[i0, o1] : -3 + i1 <= 4o1 <= i1 }
trans max: 15 , origin max: 15
agg2sram sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
AGG : --- hw_input_global_wrapper_stencil_BANK_2_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

AGG Schedule: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Vectorize output port bundle: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_read
	Vectorize output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_2[i0, i1] -> hw_input_global_wrapper_stencil_BANK_2[i0, o1] : -3 + i1 <= 4o1 <= i1 }
Range slice: { hw_input_global_wrapper_stencil_BANK_2[i0, i1] -> hw_input_global_wrapper_stencil_BANK_2[i0, o1] : -3 + i1 <= 4o1 <= i1 }
after slice{ op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_y)] }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 3 denom: 4
	Trans str{op_hcompute_conv_stencil_1[d0, d1, d2, d3]->op_hcompute_conv_stencil_1[d0, d1, d2, floor(d3/4), d3%4]}
{ op_hcompute_conv_stencil_1[d0, d1, d2, d3] -> op_hcompute_conv_stencil_1[d0, d1, d2, o3, o4] : (-d3 + o4) mod 4 = 0 and -3 + d3 <= 4o3 <= d3 and 0 <= o4 <= 3 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_2[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1, 0}
Preliminary vectorization dim: 3
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3)] }
after removal: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3)] }
new: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_2[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
remove: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_2[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_2[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1, 0}
Vectorization dimension: 3
	aff : { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(2 + i2)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3)] }
	div dim: 0
rem: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_2[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
new: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_2[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
base_str : {op_hcompute_conv_stencil_1[i0=0, i1=0, i2=0, i3=0, i4]}
base_str : {op_hcompute_conv_stencil_1[i0=0, i1=0, i2=0, i3=0, i4]}
	new: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4] }
	rem: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4 = 0] }
sched domain: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4 = 0] }
remove dimension: {4}
before:{ op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_2[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
after:{ op_hcompute_conv_stencil_1[0, i1, i2, i3, 0] -> hw_input_global_wrapper_stencil_BANK_2[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
remove dimension: {4}
sched before projection: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1}
vectorization dimension after irrelevant dimension removal: 3
sched before adjust: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
vectorized dim: 3
	 temp sched: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [136 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
final schedule: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
final access: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 62, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i3, idx: 4, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 5
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
		 name: i3	 id: 4
	---- In range: [1, 3, 62, 62, ]
	---- Out range: [62, 62, ]
	---- Stride: 
	---- Start Addr: [0, 0, ]
	---- Access Matrix: 
		[[2, 0, 0, 1, 0, ]
		[0, 0, 0, 0, 1, ]
		]

Autogen slice:{ hw_input_global_wrapper_stencil_BANK_2[i0, i1] -> hw_input_global_wrapper_stencil_BANK_2[i0, o1] : -3 + i1 <= 4o1 <= i1 }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2[2 + i2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 2, 4*i3]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2[2 + i2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 2, 4*i3+1]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 1 + 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2[2 + i2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 2, 4*i3+2]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 2 + 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2[2 + i2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 2, 4*i3+3]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 3 + 4i3] }
	Add TB output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_2[i0, i1] -> hw_input_global_wrapper_stencil_BANK_2[i0, o1] : -3 + i1 <= 4o1 <= i1 }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 62, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i3, idx: 4, coef: 1, vec_stride_in_addr:1
access map expr:[i2, 2, i3]
domain: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
access map: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2[i2, 2, i3] }
tb output access map: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2[i2, 2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
	Access map decouple reuse: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
After dim id set: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
TB  : --- hw_input_global_wrapper_stencil_BANK_2_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[0, 2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[61, 2, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[0, 2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[61, 2, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[0, 2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[61, 2, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[0, 2, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[61, 2, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[0, 2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[61, 2, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out

TB Schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15; op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + i2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + i2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + i2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + i2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
SRAM: --- hw_input_global_wrapper_stencil_BANK_2_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[2, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_3

SRAM Schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
after vectorization codegen: hw_input_global_wrapper_stencil_BANK_2_0_agg
--- hw_input_global_wrapper_stencil_BANK_2_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_agg[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_2_0_tb
--- hw_input_global_wrapper_stencil_BANK_2_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[0, 2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[61, 2, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[0, 2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[61, 2, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[0, 2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[61, 2, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[0, 2, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[61, 2, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_2_0_tb[i2, 2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[0, 2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_0_tb[61, 2, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_2_sram
--- hw_input_global_wrapper_stencil_BANK_2_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[2, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_3

CGPL level :0
impl inputs: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
impl outpts: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13}
rddom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
ls = { op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
v = 0
--- hw_input_global_wrapper_stencil_BANK_3
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_3[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_3[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_3[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_3[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_3[2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_3[63, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13

after ubuffer regen: --- hw_input_global_wrapper_stencil_BANK_3
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_3[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_3[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_3[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_3[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_3[2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_3[63, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13

addr need tight: {}
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_3[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_3[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_3[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_3[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

	UBuffer after address tighten--- hw_input_global_wrapper_stencil_BANK_3
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_3[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_3[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_3[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_3[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_3[2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_3[63, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13

getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_3[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Vectorization buffer capacity: 4096

	UBuffer after cgpl optimization--- hw_input_global_wrapper_stencil_BANK_3
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_3[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_3[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_3[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_3[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_3[2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_3[63, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13

find bd for op :op_hcompute_conv_stencil_1
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
find bd for op :op_hcompute_hw_input_global_wrapper_stencil
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
remove dimension: {1}
remove dimension: {1}
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_x)] }
	div dim: 0
getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_3[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
vectorization buffer capacity: 4096
vectorization buf name: hw_input_global_wrapper_stencil_BANK_3
	 original range input access map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_3[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	 dim id: 2
Ext by dim: {64, 64}
  buffer_vectorization Vectorizing: hw_input_global_wrapper_stencil_BANK_3
   On addr dim: 1, fetch_width: 4
--- hw_input_global_wrapper_stencil_BANK_3
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_3[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_3[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_3[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_3[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_3[2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_3[63, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13

in bundle  = 1
out bundle = 1
Vectorize input port bundle: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
	vectorize input port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 64, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 64, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [64, 64, ]
	---- Stride: 
	---- Start Addr: [0, 0, ]
	---- Access Matrix: 
		[[0, 0, 1, 0, ]
		[0, 0, 0, 1, ]
		]

origin: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_3[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }, transform: { hw_input_global_wrapper_stencil_BANK_3[d0, d1] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[d0, d1] }
access map : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_3[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }need to find inner dim
dim id: 1
Relation map{0, 0, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] -> op_hcompute_hw_input_global_wrapper_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	sched after trans: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_3[i0, i1] -> hw_input_global_wrapper_stencil_BANK_3[i0, o1] : -3 + i1 <= 4o1 <= i1 }
trans max: 15 , origin max: 15
agg2sram sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
AGG : --- hw_input_global_wrapper_stencil_BANK_3_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

AGG Schedule: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Vectorize output port bundle: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
	Vectorize output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_3[i0, i1] -> hw_input_global_wrapper_stencil_BANK_3[i0, o1] : -3 + i1 <= 4o1 <= i1 }
Range slice: { hw_input_global_wrapper_stencil_BANK_3[i0, i1] -> hw_input_global_wrapper_stencil_BANK_3[i0, o1] : -3 + i1 <= 4o1 <= i1 }
after slice{ op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_y)] }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((1 + conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 3 denom: 4
	Trans str{op_hcompute_conv_stencil_1[d0, d1, d2, d3]->op_hcompute_conv_stencil_1[d0, d1, d2, floor(d3/4), d3%4]}
{ op_hcompute_conv_stencil_1[d0, d1, d2, d3] -> op_hcompute_conv_stencil_1[d0, d1, d2, o3, o4] : (-d3 + o4) mod 4 = 0 and -3 + d3 <= 4o3 <= d3 and 0 <= o4 <= 3 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_3[2 + i2, o1] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 and -2 + 4i3 + i4 <= 4o1 <= 1 + 4i3 + i4 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1, 1}
Preliminary vectorization dim: 4
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3 + floor((1 + i4)/4))] }
  { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(1 + i4)/4] }
after removal: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3)] }
new: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_3[2 + i2, o1] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 and -2 + 4i3 + i4 <= 4o1 <= 1 + 4i3 + i4 }
remove: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_3[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_3[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1, 0}
Vectorization dimension: 3
	aff : { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(2 + i2)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3 + floor((1 + i4)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(1 + i4)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
rem: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_3[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
new: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_3[2 + i2, o1] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 and -2 + 4i3 + i4 <= 4o1 <= 1 + 4i3 + i4 }
base_str : {op_hcompute_conv_stencil_1[i0=0, i1=0, i2=0, i3=0, i4]}
base_str : {op_hcompute_conv_stencil_1[i0=0, i1=0, i2=0, i3=0, i4]}
	new: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4] }
	rem: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4] }
origin max: 1
trans max: 0
ahead_step : 1
sched domain: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4 = 0] }
sched domain: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4 = 0] }
remove dimension: {4}
before:{ op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_3[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
after:{ op_hcompute_conv_stencil_1[0, i1, i2, i3, 0] -> hw_input_global_wrapper_stencil_BANK_3[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
remove dimension: {4}
sched before projection: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1}
vectorization dimension after irrelevant dimension removal: 3
sched before adjust: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
schedule adjust forward step: 1
	 output sched: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
vectorized dim: 3
	 temp sched: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
final schedule: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
final access: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 62, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i3, idx: 4, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 5
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
		 name: i3	 id: 4
	---- In range: [1, 3, 62, 62, ]
	---- Out range: [62, 62, ]
	---- Stride: 
	---- Start Addr: [0, 0, ]
	---- Access Matrix: 
		[[2, 0, 0, 1, 0, ]
		[1, 0, 0, 0, 1, ]
		]

Autogen slice:{ hw_input_global_wrapper_stencil_BANK_3[i0, i1] -> hw_input_global_wrapper_stencil_BANK_3[i0, o1] : -3 + i1 <= 4o1 <= i1 }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((1 + conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3[2 + i2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 2, 4*i3]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3[2 + i2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 2, 4*i3+1]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 1 + 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3[2 + i2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 2, 4*i3+2]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 2 + 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3[2 + i2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 2, 4*i3+3]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 3 + 4i3] }
	Add TB output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_3[i0, i1] -> hw_input_global_wrapper_stencil_BANK_3[i0, o1] : -3 + i1 <= 4o1 <= i1 }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((1 + conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 62, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i3, idx: 4, coef: 1, vec_stride_in_addr:1
access map expr:[i2, 2, i3+1]
domain: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
access map: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3[i2, 2, 1 + i3] }
tb output access map: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3[i2, 2, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
	Access map decouple reuse: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
After dim id set: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
TB  : --- hw_input_global_wrapper_stencil_BANK_3_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[0, 2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[61, 2, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[0, 2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[61, 2, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[0, 2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[61, 2, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[0, 2, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[61, 2, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[0, 2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[61, 2, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out

TB Schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15; op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + i2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + i2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + i2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + i2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
SRAM: --- hw_input_global_wrapper_stencil_BANK_3_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[2, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3

SRAM Schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
after vectorization codegen: hw_input_global_wrapper_stencil_BANK_3_0_agg
--- hw_input_global_wrapper_stencil_BANK_3_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_agg[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_3_0_tb
--- hw_input_global_wrapper_stencil_BANK_3_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[0, 2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[61, 2, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[0, 2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[61, 2, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[0, 2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[61, 2, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[0, 2, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[61, 2, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_3_0_tb[i2, 2, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[0, 2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_0_tb[61, 2, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_3_sram
--- hw_input_global_wrapper_stencil_BANK_3_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[2, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3

CGPL level :0
impl inputs: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
impl outpts: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14}
rddom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
ls = { op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
v = 0
--- hw_input_global_wrapper_stencil_BANK_4
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_4[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_4[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_4[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_4[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_4[2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_4[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14

after ubuffer regen: --- hw_input_global_wrapper_stencil_BANK_4
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_4[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_4[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_4[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_4[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_4[2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_4[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14

addr need tight: {}
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_4[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_4[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_4[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_4[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

	UBuffer after address tighten--- hw_input_global_wrapper_stencil_BANK_4
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_4[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_4[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_4[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_4[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_4[2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_4[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14

getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_4[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Vectorization buffer capacity: 4096

	UBuffer after cgpl optimization--- hw_input_global_wrapper_stencil_BANK_4
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_4[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_4[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_4[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_4[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_4[2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_4[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14

find bd for op :op_hcompute_conv_stencil_1
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_read
find bd for op :op_hcompute_hw_input_global_wrapper_stencil
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
remove dimension: {1}
remove dimension: {1}
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_x)] }
	div dim: 0
getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_4[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
vectorization buffer capacity: 4096
vectorization buf name: hw_input_global_wrapper_stencil_BANK_4
	 original range input access map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_4[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	 dim id: 2
Ext by dim: {64, 64}
  buffer_vectorization Vectorizing: hw_input_global_wrapper_stencil_BANK_4
   On addr dim: 1, fetch_width: 4
--- hw_input_global_wrapper_stencil_BANK_4
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_4[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_4[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_4[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_4[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_4[2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_4[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14

in bundle  = 1
out bundle = 1
Vectorize input port bundle: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
	vectorize input port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 64, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 64, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [64, 64, ]
	---- Stride: 
	---- Start Addr: [0, 0, ]
	---- Access Matrix: 
		[[0, 0, 1, 0, ]
		[0, 0, 0, 1, ]
		]

origin: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_4[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }, transform: { hw_input_global_wrapper_stencil_BANK_4[d0, d1] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[d0, d1] }
access map : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_4[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }need to find inner dim
dim id: 1
Relation map{0, 0, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] -> op_hcompute_hw_input_global_wrapper_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	sched after trans: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_4[i0, i1] -> hw_input_global_wrapper_stencil_BANK_4[i0, o1] : -3 + i1 <= 4o1 <= i1 }
trans max: 15 , origin max: 15
agg2sram sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
AGG : --- hw_input_global_wrapper_stencil_BANK_4_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

AGG Schedule: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Vectorize output port bundle: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_read
	Vectorize output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_4[i0, i1] -> hw_input_global_wrapper_stencil_BANK_4[i0, o1] : -3 + i1 <= 4o1 <= i1 }
Range slice: { hw_input_global_wrapper_stencil_BANK_4[i0, i1] -> hw_input_global_wrapper_stencil_BANK_4[i0, o1] : -3 + i1 <= 4o1 <= i1 }
after slice{ op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_y)] }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((2 + conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 3 denom: 4
	Trans str{op_hcompute_conv_stencil_1[d0, d1, d2, d3]->op_hcompute_conv_stencil_1[d0, d1, d2, floor(d3/4), d3%4]}
{ op_hcompute_conv_stencil_1[d0, d1, d2, d3] -> op_hcompute_conv_stencil_1[d0, d1, d2, o3, o4] : (-d3 + o4) mod 4 = 0 and -3 + d3 <= 4o3 <= d3 and 0 <= o4 <= 3 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_4[2 + i2, o1] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 and -1 + 4i3 + i4 <= 4o1 <= 2 + 4i3 + i4 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1, 1}
Preliminary vectorization dim: 4
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3 + floor((2 + i4)/4))] }
  { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(2 + i4)/4] }
after removal: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3)] }
new: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_4[2 + i2, o1] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 and -1 + 4i3 + i4 <= 4o1 <= 2 + 4i3 + i4 }
remove: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_4[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_4[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1, 0}
Vectorization dimension: 3
	aff : { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(2 + i2)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3 + floor((2 + i4)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(2 + i4)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
rem: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_4[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
new: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_4[2 + i2, o1] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 and -1 + 4i3 + i4 <= 4o1 <= 2 + 4i3 + i4 }
base_str : {op_hcompute_conv_stencil_1[i0=0, i1=0, i2=0, i3=0, i4]}
base_str : {op_hcompute_conv_stencil_1[i0=0, i1=0, i2=0, i3=0, i4]}
	new: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4] }
	rem: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4] }
origin max: 1
trans max: 0
ahead_step : 1
sched domain: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4 = 0] }
sched domain: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4 = 0] }
remove dimension: {4}
before:{ op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_4[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
after:{ op_hcompute_conv_stencil_1[0, i1, i2, i3, 0] -> hw_input_global_wrapper_stencil_BANK_4[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
remove dimension: {4}
sched before projection: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1}
vectorization dimension after irrelevant dimension removal: 3
sched before adjust: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
schedule adjust forward step: 1
	 output sched: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
vectorized dim: 3
	 temp sched: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
final schedule: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
final access: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4[2 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 62, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i3, idx: 4, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 5
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
		 name: i3	 id: 4
	---- In range: [1, 3, 62, 62, ]
	---- Out range: [62, 62, ]
	---- Stride: 
	---- Start Addr: [0, 0, ]
	---- Access Matrix: 
		[[2, 0, 0, 1, 0, ]
		[2, 0, 0, 0, 1, ]
		]

Autogen slice:{ hw_input_global_wrapper_stencil_BANK_4[i0, i1] -> hw_input_global_wrapper_stencil_BANK_4[i0, o1] : -3 + i1 <= 4o1 <= i1 }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((2 + conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4[2 + i2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 2, 4*i3]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4[2 + i2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 2, 4*i3+1]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 1 + 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4[2 + i2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 2, 4*i3+2]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 2 + 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4[2 + i2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 2, 4*i3+3]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 3 + 4i3] }
	Add TB output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_4[i0, i1] -> hw_input_global_wrapper_stencil_BANK_4[i0, o1] : -3 + i1 <= 4o1 <= i1 }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((2 + conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 62, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i3, idx: 4, coef: 1, vec_stride_in_addr:1
access map expr:[i2, 2, i3+2]
domain: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
access map: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4[i2, 2, 2 + i3] }
tb output access map: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4[i2, 2, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
	Access map decouple reuse: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
After dim id set: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
TB  : --- hw_input_global_wrapper_stencil_BANK_4_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[0, 2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[61, 2, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[0, 2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[61, 2, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[0, 2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[61, 2, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[0, 2, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[61, 2, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[0, 2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[61, 2, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out

TB Schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15; op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + i2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + i2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + i2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + i2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
SRAM: --- hw_input_global_wrapper_stencil_BANK_4_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[2, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_3

SRAM Schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
after vectorization codegen: hw_input_global_wrapper_stencil_BANK_4_0_agg
--- hw_input_global_wrapper_stencil_BANK_4_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_agg[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_4_0_tb
--- hw_input_global_wrapper_stencil_BANK_4_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[0, 2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[61, 2, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[0, 2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[61, 2, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[0, 2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[61, 2, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[0, 2, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[61, 2, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_4_0_tb[i2, 2, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[0, 2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_0_tb[61, 2, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_4_sram
--- hw_input_global_wrapper_stencil_BANK_4_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[2, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_3

CGPL level :0
impl inputs: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
impl outpts: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6}
rddom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
ls = { op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
v = 0
--- hw_input_global_wrapper_stencil_BANK_5
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_5[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_5[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_5[conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_5[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5[61, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6

after ubuffer regen: --- hw_input_global_wrapper_stencil_BANK_5
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_5[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_5[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_5[conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_5[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5[61, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6

addr need tight: {}
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_5[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_5[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_5[conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_5[conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

	UBuffer after address tighten--- hw_input_global_wrapper_stencil_BANK_5
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_5[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_5[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_5[conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_5[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5[61, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6

getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_5[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Vectorization buffer capacity: 4096

	UBuffer after cgpl optimization--- hw_input_global_wrapper_stencil_BANK_5
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_5[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_5[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_5[conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_5[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5[61, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6

find bd for op :op_hcompute_conv_stencil_1
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_read
find bd for op :op_hcompute_hw_input_global_wrapper_stencil
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
remove dimension: {1}
remove dimension: {1}
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
	div dim: 0
getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_5[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
vectorization buffer capacity: 4096
vectorization buf name: hw_input_global_wrapper_stencil_BANK_5
	 original range input access map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_5[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	 dim id: 2
Ext by dim: {64, 64}
  buffer_vectorization Vectorizing: hw_input_global_wrapper_stencil_BANK_5
   On addr dim: 1, fetch_width: 4
--- hw_input_global_wrapper_stencil_BANK_5
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_5[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_5[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_5[conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_5[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5[61, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6

in bundle  = 1
out bundle = 1
Vectorize input port bundle: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
	vectorize input port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 64, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 64, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [64, 64, ]
	---- Stride: 
	---- Start Addr: [0, 0, ]
	---- Access Matrix: 
		[[0, 0, 1, 0, ]
		[0, 0, 0, 1, ]
		]

origin: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_5[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }, transform: { hw_input_global_wrapper_stencil_BANK_5[d0, d1] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[d0, d1] }
access map : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_5[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }need to find inner dim
dim id: 1
Relation map{0, 0, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] -> op_hcompute_hw_input_global_wrapper_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	sched after trans: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_5[i0, i1] -> hw_input_global_wrapper_stencil_BANK_5[i0, o1] : -3 + i1 <= 4o1 <= i1 }
trans max: 15 , origin max: 15
agg2sram sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
AGG : --- hw_input_global_wrapper_stencil_BANK_5_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

AGG Schedule: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Vectorize output port bundle: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_read
	Vectorize output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_5[i0, i1] -> hw_input_global_wrapper_stencil_BANK_5[i0, o1] : -3 + i1 <= 4o1 <= i1 }
Range slice: { hw_input_global_wrapper_stencil_BANK_5[i0, i1] -> hw_input_global_wrapper_stencil_BANK_5[i0, o1] : -3 + i1 <= 4o1 <= i1 }
after slice{ op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 3 denom: 4
	Trans str{op_hcompute_conv_stencil_1[d0, d1, d2, d3]->op_hcompute_conv_stencil_1[d0, d1, d2, floor(d3/4), d3%4]}
{ op_hcompute_conv_stencil_1[d0, d1, d2, d3] -> op_hcompute_conv_stencil_1[d0, d1, d2, o3, o4] : (-d3 + o4) mod 4 = 0 and -3 + d3 <= 4o3 <= d3 and 0 <= o4 <= 3 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_5[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1, 0}
Preliminary vectorization dim: 3
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3)] }
after removal: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3)] }
new: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_5[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
remove: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_5[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_5[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1, 0}
Vectorization dimension: 3
	aff : { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i2)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3)] }
	div dim: 0
rem: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_5[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
new: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_5[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
base_str : {op_hcompute_conv_stencil_1[i0=0, i1=0, i2=0, i3=0, i4]}
base_str : {op_hcompute_conv_stencil_1[i0=0, i1=0, i2=0, i3=0, i4]}
	new: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4] }
	rem: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4 = 0] }
sched domain: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4 = 0] }
remove dimension: {4}
before:{ op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_5[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
after:{ op_hcompute_conv_stencil_1[0, i1, i2, i3, 0] -> hw_input_global_wrapper_stencil_BANK_5[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
remove dimension: {4}
sched before projection: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1}
vectorization dimension after irrelevant dimension removal: 3
sched before adjust: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
vectorized dim: 3
	 temp sched: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [136 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
final schedule: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
final access: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 62, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i3, idx: 4, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 5
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
		 name: i3	 id: 4
	---- In range: [1, 3, 62, 62, ]
	---- Out range: [62, 62, ]
	---- Stride: 
	---- Start Addr: [0, 0, ]
	---- Access Matrix: 
		[[0, 0, 0, 1, 0, ]
		[0, 0, 0, 0, 1, ]
		]

Autogen slice:{ hw_input_global_wrapper_stencil_BANK_5[i0, i1] -> hw_input_global_wrapper_stencil_BANK_5[i0, o1] : -3 + i1 <= 4o1 <= i1 }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5[i2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 0, 4*i3]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5[i2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 0, 4*i3+1]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 1 + 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5[i2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 0, 4*i3+2]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 2 + 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5[i2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 0, 4*i3+3]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 3 + 4i3] }
	Add TB output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_5[i0, i1] -> hw_input_global_wrapper_stencil_BANK_5[i0, o1] : -3 + i1 <= 4o1 <= i1 }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 62, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i3, idx: 4, coef: 1, vec_stride_in_addr:1
access map expr:[i2, 0, i3]
domain: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
access map: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5[i2, 0, i3] }
tb output access map: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5[i2, 0, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
	Access map decouple reuse: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
After dim id set: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
TB  : --- hw_input_global_wrapper_stencil_BANK_5_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[0, 0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[61, 0, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[0, 0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[61, 0, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[0, 0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[61, 0, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[0, 0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[61, 0, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[0, 0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[61, 0, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out

TB Schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15; op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_sram[i2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_5_sram[d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_sram[i2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_5_sram[d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_sram[i2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_5_sram[d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_sram[i2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_5_sram[d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
SRAM: --- hw_input_global_wrapper_stencil_BANK_5_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_5_sram[d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[61, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_5_sram[d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[61, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_5_sram[d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[61, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_5_sram[d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[61, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_3

SRAM Schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
after vectorization codegen: hw_input_global_wrapper_stencil_BANK_5_0_agg
--- hw_input_global_wrapper_stencil_BANK_5_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_agg[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_5_0_tb
--- hw_input_global_wrapper_stencil_BANK_5_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[0, 0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[61, 0, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[0, 0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[61, 0, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[0, 0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[61, 0, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[0, 0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[61, 0, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_5_0_tb[i2, 0, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[0, 0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_0_tb[61, 0, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_5_sram
--- hw_input_global_wrapper_stencil_BANK_5_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_5_sram[d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[61, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_5_sram[d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[61, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_5_sram[d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[61, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_5_sram[d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[61, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_3

CGPL level :0
impl inputs: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
impl outpts: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7}
rddom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
ls = { op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
v = 0
--- hw_input_global_wrapper_stencil_BANK_6
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_6[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_6[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_6[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_6[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_6[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_6[61, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7

after ubuffer regen: --- hw_input_global_wrapper_stencil_BANK_6
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_6[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_6[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_6[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_6[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_6[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_6[61, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7

addr need tight: {}
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_6[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_6[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_6[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_6[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

	UBuffer after address tighten--- hw_input_global_wrapper_stencil_BANK_6
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_6[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_6[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_6[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_6[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_6[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_6[61, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7

getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_6[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Vectorization buffer capacity: 4096

	UBuffer after cgpl optimization--- hw_input_global_wrapper_stencil_BANK_6
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_6[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_6[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_6[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_6[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_6[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_6[61, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7

find bd for op :op_hcompute_conv_stencil_1
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_read
find bd for op :op_hcompute_hw_input_global_wrapper_stencil
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
remove dimension: {1}
remove dimension: {1}
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_x)] }
	div dim: 0
getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_6[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
vectorization buffer capacity: 4096
vectorization buf name: hw_input_global_wrapper_stencil_BANK_6
	 original range input access map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_6[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	 dim id: 2
Ext by dim: {64, 64}
  buffer_vectorization Vectorizing: hw_input_global_wrapper_stencil_BANK_6
   On addr dim: 1, fetch_width: 4
--- hw_input_global_wrapper_stencil_BANK_6
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_6[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_6[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_6[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_6[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_6[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_6[61, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7

in bundle  = 1
out bundle = 1
Vectorize input port bundle: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
	vectorize input port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 64, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 64, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [64, 64, ]
	---- Stride: 
	---- Start Addr: [0, 0, ]
	---- Access Matrix: 
		[[0, 0, 1, 0, ]
		[0, 0, 0, 1, ]
		]

origin: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_6[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }, transform: { hw_input_global_wrapper_stencil_BANK_6[d0, d1] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[d0, d1] }
access map : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_6[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }need to find inner dim
dim id: 1
Relation map{0, 0, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] -> op_hcompute_hw_input_global_wrapper_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	sched after trans: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_6[i0, i1] -> hw_input_global_wrapper_stencil_BANK_6[i0, o1] : -3 + i1 <= 4o1 <= i1 }
trans max: 15 , origin max: 15
agg2sram sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
AGG : --- hw_input_global_wrapper_stencil_BANK_6_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

AGG Schedule: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Vectorize output port bundle: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_read
	Vectorize output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_6[i0, i1] -> hw_input_global_wrapper_stencil_BANK_6[i0, o1] : -3 + i1 <= 4o1 <= i1 }
Range slice: { hw_input_global_wrapper_stencil_BANK_6[i0, i1] -> hw_input_global_wrapper_stencil_BANK_6[i0, o1] : -3 + i1 <= 4o1 <= i1 }
after slice{ op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((1 + conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 3 denom: 4
	Trans str{op_hcompute_conv_stencil_1[d0, d1, d2, d3]->op_hcompute_conv_stencil_1[d0, d1, d2, floor(d3/4), d3%4]}
{ op_hcompute_conv_stencil_1[d0, d1, d2, d3] -> op_hcompute_conv_stencil_1[d0, d1, d2, o3, o4] : (-d3 + o4) mod 4 = 0 and -3 + d3 <= 4o3 <= d3 and 0 <= o4 <= 3 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_6[i2, o1] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 and -2 + 4i3 + i4 <= 4o1 <= 1 + 4i3 + i4 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1, 1}
Preliminary vectorization dim: 4
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3 + floor((1 + i4)/4))] }
  { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(1 + i4)/4] }
after removal: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3)] }
new: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_6[i2, o1] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 and -2 + 4i3 + i4 <= 4o1 <= 1 + 4i3 + i4 }
remove: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_6[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_6[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1, 0}
Vectorization dimension: 3
	aff : { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i2)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3 + floor((1 + i4)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(1 + i4)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
rem: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_6[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
new: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_6[i2, o1] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 and -2 + 4i3 + i4 <= 4o1 <= 1 + 4i3 + i4 }
base_str : {op_hcompute_conv_stencil_1[i0=0, i1=0, i2=0, i3=0, i4]}
base_str : {op_hcompute_conv_stencil_1[i0=0, i1=0, i2=0, i3=0, i4]}
	new: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4] }
	rem: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4] }
origin max: 1
trans max: 0
ahead_step : 1
sched domain: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4 = 0] }
sched domain: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4 = 0] }
remove dimension: {4}
before:{ op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_6[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
after:{ op_hcompute_conv_stencil_1[0, i1, i2, i3, 0] -> hw_input_global_wrapper_stencil_BANK_6[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
remove dimension: {4}
sched before projection: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1}
vectorization dimension after irrelevant dimension removal: 3
sched before adjust: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
schedule adjust forward step: 1
	 output sched: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
vectorized dim: 3
	 temp sched: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
final schedule: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
final access: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 62, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i3, idx: 4, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 5
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
		 name: i3	 id: 4
	---- In range: [1, 3, 62, 62, ]
	---- Out range: [62, 62, ]
	---- Stride: 
	---- Start Addr: [0, 0, ]
	---- Access Matrix: 
		[[0, 0, 0, 1, 0, ]
		[1, 0, 0, 0, 1, ]
		]

Autogen slice:{ hw_input_global_wrapper_stencil_BANK_6[i0, i1] -> hw_input_global_wrapper_stencil_BANK_6[i0, o1] : -3 + i1 <= 4o1 <= i1 }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((1 + conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6[i2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 0, 4*i3]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6[i2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 0, 4*i3+1]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 1 + 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6[i2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 0, 4*i3+2]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 2 + 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6[i2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 0, 4*i3+3]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 3 + 4i3] }
	Add TB output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_6[i0, i1] -> hw_input_global_wrapper_stencil_BANK_6[i0, o1] : -3 + i1 <= 4o1 <= i1 }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((1 + conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 62, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i3, idx: 4, coef: 1, vec_stride_in_addr:1
access map expr:[i2, 0, i3+1]
domain: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
access map: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6[i2, 0, 1 + i3] }
tb output access map: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6[i2, 0, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
	Access map decouple reuse: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
After dim id set: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
TB  : --- hw_input_global_wrapper_stencil_BANK_6_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[0, 0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[61, 0, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[0, 0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[61, 0, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[0, 0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[61, 0, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[0, 0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[61, 0, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[0, 0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[61, 0, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out

TB Schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15; op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_sram[i2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_6_sram[d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_sram[i2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_6_sram[d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_sram[i2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_6_sram[d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_sram[i2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_6_sram[d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
SRAM: --- hw_input_global_wrapper_stencil_BANK_6_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_6_sram[d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[61, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_6_sram[d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[61, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_6_sram[d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[61, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_6_sram[d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[61, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_3

SRAM Schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
after vectorization codegen: hw_input_global_wrapper_stencil_BANK_6_0_agg
--- hw_input_global_wrapper_stencil_BANK_6_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_agg[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_6_0_tb
--- hw_input_global_wrapper_stencil_BANK_6_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[0, 0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[61, 0, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[0, 0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[61, 0, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[0, 0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[61, 0, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[0, 0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[61, 0, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_6_0_tb[i2, 0, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[0, 0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_0_tb[61, 0, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_6_sram
--- hw_input_global_wrapper_stencil_BANK_6_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_6_sram[d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[61, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_6_sram[d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[61, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_6_sram[d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[61, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_6_sram[d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[61, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_3

CGPL level :0
impl inputs: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
impl outpts: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8}
rddom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
ls = { op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
v = 0
--- hw_input_global_wrapper_stencil_BANK_7
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_7[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_7[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_7[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_7[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_7[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_7[61, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8

after ubuffer regen: --- hw_input_global_wrapper_stencil_BANK_7
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_7[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_7[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_7[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_7[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_7[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_7[61, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8

addr need tight: {}
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_7[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_7[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_7[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_7[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

	UBuffer after address tighten--- hw_input_global_wrapper_stencil_BANK_7
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_7[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_7[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_7[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_7[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_7[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_7[61, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8

getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_7[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Vectorization buffer capacity: 4096

	UBuffer after cgpl optimization--- hw_input_global_wrapper_stencil_BANK_7
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_7[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_7[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_7[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_7[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_7[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_7[61, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8

find bd for op :op_hcompute_conv_stencil_1
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
find bd for op :op_hcompute_hw_input_global_wrapper_stencil
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
remove dimension: {1}
remove dimension: {1}
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_x)] }
	div dim: 0
getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_7[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
vectorization buffer capacity: 4096
vectorization buf name: hw_input_global_wrapper_stencil_BANK_7
	 original range input access map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_7[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	 dim id: 2
Ext by dim: {64, 64}
  buffer_vectorization Vectorizing: hw_input_global_wrapper_stencil_BANK_7
   On addr dim: 1, fetch_width: 4
--- hw_input_global_wrapper_stencil_BANK_7
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_7[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_7[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_7[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_7[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_7[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_7[61, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8

in bundle  = 1
out bundle = 1
Vectorize input port bundle: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
	vectorize input port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 64, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 64, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [64, 64, ]
	---- Stride: 
	---- Start Addr: [0, 0, ]
	---- Access Matrix: 
		[[0, 0, 1, 0, ]
		[0, 0, 0, 1, ]
		]

origin: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_7[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }, transform: { hw_input_global_wrapper_stencil_BANK_7[d0, d1] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[d0, d1] }
access map : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_7[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }need to find inner dim
dim id: 1
Relation map{0, 0, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] -> op_hcompute_hw_input_global_wrapper_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	sched after trans: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_7[i0, i1] -> hw_input_global_wrapper_stencil_BANK_7[i0, o1] : -3 + i1 <= 4o1 <= i1 }
trans max: 15 , origin max: 15
agg2sram sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
AGG : --- hw_input_global_wrapper_stencil_BANK_7_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

AGG Schedule: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Vectorize output port bundle: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
	Vectorize output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_7[i0, i1] -> hw_input_global_wrapper_stencil_BANK_7[i0, o1] : -3 + i1 <= 4o1 <= i1 }
Range slice: { hw_input_global_wrapper_stencil_BANK_7[i0, i1] -> hw_input_global_wrapper_stencil_BANK_7[i0, o1] : -3 + i1 <= 4o1 <= i1 }
after slice{ op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((2 + conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 3 denom: 4
	Trans str{op_hcompute_conv_stencil_1[d0, d1, d2, d3]->op_hcompute_conv_stencil_1[d0, d1, d2, floor(d3/4), d3%4]}
{ op_hcompute_conv_stencil_1[d0, d1, d2, d3] -> op_hcompute_conv_stencil_1[d0, d1, d2, o3, o4] : (-d3 + o4) mod 4 = 0 and -3 + d3 <= 4o3 <= d3 and 0 <= o4 <= 3 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_7[i2, o1] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 and -1 + 4i3 + i4 <= 4o1 <= 2 + 4i3 + i4 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1, 1}
Preliminary vectorization dim: 4
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3 + floor((2 + i4)/4))] }
  { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(2 + i4)/4] }
after removal: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3)] }
new: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_7[i2, o1] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 and -1 + 4i3 + i4 <= 4o1 <= 2 + 4i3 + i4 }
remove: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_7[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_7[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1, 0}
Vectorization dimension: 3
	aff : { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i2)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3 + floor((2 + i4)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(2 + i4)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
rem: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_7[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
new: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_7[i2, o1] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 and -1 + 4i3 + i4 <= 4o1 <= 2 + 4i3 + i4 }
base_str : {op_hcompute_conv_stencil_1[i0=0, i1=0, i2=0, i3=0, i4]}
base_str : {op_hcompute_conv_stencil_1[i0=0, i1=0, i2=0, i3=0, i4]}
	new: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4] }
	rem: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4] }
origin max: 1
trans max: 0
ahead_step : 1
sched domain: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4 = 0] }
sched domain: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4 = 0] }
remove dimension: {4}
before:{ op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_7[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
after:{ op_hcompute_conv_stencil_1[0, i1, i2, i3, 0] -> hw_input_global_wrapper_stencil_BANK_7[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
remove dimension: {4}
sched before projection: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1}
vectorization dimension after irrelevant dimension removal: 3
sched before adjust: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
schedule adjust forward step: 1
	 output sched: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
vectorized dim: 3
	 temp sched: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
final schedule: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
final access: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7[i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 62, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i3, idx: 4, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 5
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
		 name: i3	 id: 4
	---- In range: [1, 3, 62, 62, ]
	---- Out range: [62, 62, ]
	---- Stride: 
	---- Start Addr: [0, 0, ]
	---- Access Matrix: 
		[[0, 0, 0, 1, 0, ]
		[2, 0, 0, 0, 1, ]
		]

Autogen slice:{ hw_input_global_wrapper_stencil_BANK_7[i0, i1] -> hw_input_global_wrapper_stencil_BANK_7[i0, o1] : -3 + i1 <= 4o1 <= i1 }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((2 + conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7[i2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 0, 4*i3]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7[i2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 0, 4*i3+1]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 1 + 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7[i2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 0, 4*i3+2]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 2 + 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7[i2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 0, 4*i3+3]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 3 + 4i3] }
	Add TB output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_7[i0, i1] -> hw_input_global_wrapper_stencil_BANK_7[i0, o1] : -3 + i1 <= 4o1 <= i1 }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((2 + conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(2 + conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 62, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:1
	var_name: i3, idx: 4, coef: 1, vec_stride_in_addr:1
access map expr:[i2, 0, i3+2]
domain: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
access map: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7[i2, 0, 2 + i3] }
tb output access map: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7[i2, 0, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
	Access map decouple reuse: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
After dim id set: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
TB  : --- hw_input_global_wrapper_stencil_BANK_7_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[0, 0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[61, 0, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[0, 0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[61, 0, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[0, 0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[61, 0, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[0, 0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[61, 0, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[0, 0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[61, 0, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out

TB Schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15; op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_sram[i2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_7_sram[d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_sram[i2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_7_sram[d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_sram[i2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_7_sram[d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_sram[i2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_7_sram[d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
SRAM: --- hw_input_global_wrapper_stencil_BANK_7_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_7_sram[d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[61, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_7_sram[d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[61, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_7_sram[d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[61, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_7_sram[d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[61, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3

SRAM Schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
after vectorization codegen: hw_input_global_wrapper_stencil_BANK_7_0_agg
--- hw_input_global_wrapper_stencil_BANK_7_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_agg[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_7_0_tb
--- hw_input_global_wrapper_stencil_BANK_7_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[0, 0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[61, 0, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[0, 0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[61, 0, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[0, 0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[61, 0, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[0, 0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[61, 0, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_7_0_tb[i2, 0, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[0, 0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_0_tb[61, 0, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_7_sram
--- hw_input_global_wrapper_stencil_BANK_7_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_7_sram[d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[61, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_7_sram[d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[61, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_7_sram[d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[61, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_7_sram[d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[61, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3

CGPL level :0
impl inputs: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
impl outpts: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9}
rddom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
ls = { op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
v = 0
--- hw_input_global_wrapper_stencil_BANK_8
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_8[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_8[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_8[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_8[1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8[62, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9

after ubuffer regen: --- hw_input_global_wrapper_stencil_BANK_8
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_8[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_8[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_8[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_8[1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8[62, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9

addr need tight: {}
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_8[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_8[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_8[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_8[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

	UBuffer after address tighten--- hw_input_global_wrapper_stencil_BANK_8
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_8[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_8[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_8[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_8[1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8[62, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9

getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_8[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Vectorization buffer capacity: 4096

	UBuffer after cgpl optimization--- hw_input_global_wrapper_stencil_BANK_8
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_8[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_8[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_8[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_8[1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8[62, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9

find bd for op :op_hcompute_conv_stencil_1
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_read
find bd for op :op_hcompute_hw_input_global_wrapper_stencil
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
remove dimension: {1}
remove dimension: {1}
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
	div dim: 0
getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_8[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
vectorization buffer capacity: 4096
vectorization buf name: hw_input_global_wrapper_stencil_BANK_8
	 original range input access map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_8[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	 dim id: 2
Ext by dim: {64, 64}
  buffer_vectorization Vectorizing: hw_input_global_wrapper_stencil_BANK_8
   On addr dim: 1, fetch_width: 4
--- hw_input_global_wrapper_stencil_BANK_8
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_8[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_8[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_BANK_8[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_8[1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8[62, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9

in bundle  = 1
out bundle = 1
Vectorize input port bundle: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
	vectorize input port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 64, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 64, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [64, 64, ]
	---- Stride: 
	---- Start Addr: [0, 0, ]
	---- Access Matrix: 
		[[0, 0, 1, 0, ]
		[0, 0, 0, 1, ]
		]

origin: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_8[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }, transform: { hw_input_global_wrapper_stencil_BANK_8[d0, d1] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[d0, d1] }
access map : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_8[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }need to find inner dim
dim id: 1
Relation map{0, 0, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] -> op_hcompute_hw_input_global_wrapper_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	sched after trans: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_8[i0, i1] -> hw_input_global_wrapper_stencil_BANK_8[i0, o1] : -3 + i1 <= 4o1 <= i1 }
trans max: 15 , origin max: 15
agg2sram sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
AGG : --- hw_input_global_wrapper_stencil_BANK_8_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

AGG Schedule: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Vectorize output port bundle: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_read
	Vectorize output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_8[i0, i1] -> hw_input_global_wrapper_stencil_BANK_8[i0, o1] : -3 + i1 <= 4o1 <= i1 }
Range slice: { hw_input_global_wrapper_stencil_BANK_8[i0, i1] -> hw_input_global_wrapper_stencil_BANK_8[i0, o1] : -3 + i1 <= 4o1 <= i1 }
after slice{ op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_y)] }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 3 denom: 4
	Trans str{op_hcompute_conv_stencil_1[d0, d1, d2, d3]->op_hcompute_conv_stencil_1[d0, d1, d2, floor(d3/4), d3%4]}
{ op_hcompute_conv_stencil_1[d0, d1, d2, d3] -> op_hcompute_conv_stencil_1[d0, d1, d2, o3, o4] : (-d3 + o4) mod 4 = 0 and -3 + d3 <= 4o3 <= d3 and 0 <= o4 <= 3 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_8[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1, 0}
Preliminary vectorization dim: 3
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3)] }
after removal: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3)] }
new: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_8[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
remove: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_8[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_8[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1, 0}
Vectorization dimension: 3
	aff : { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(1 + i2)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4] -> [(i3)] }
	div dim: 0
rem: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_8[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
new: { op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_8[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
base_str : {op_hcompute_conv_stencil_1[i0=0, i1=0, i2=0, i3=0, i4]}
base_str : {op_hcompute_conv_stencil_1[i0=0, i1=0, i2=0, i3=0, i4]}
	new: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4] }
	rem: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4 = 0] }
sched domain: { op_hcompute_conv_stencil_1[i0, i1, i2, i3, i4 = 0] }
remove dimension: {4}
before:{ op_hcompute_conv_stencil_1[0, i1, i2, i3, i4] -> hw_input_global_wrapper_stencil_BANK_8[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and i4 >= 0 and -4i3 <= i4 <= 61 - 4i3 and i4 <= 3 }
after:{ op_hcompute_conv_stencil_1[0, i1, i2, i3, 0] -> hw_input_global_wrapper_stencil_BANK_8[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
remove dimension: {4}
sched before projection: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map : { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }need to find inner dim
dim id: 1
Relation map{0, 0, 0, 1}
vectorization dimension after irrelevant dimension removal: 3
sched before adjust: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
vectorized dim: 3
	 temp sched: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [136 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
final schedule: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
final access: { op_hcompute_conv_stencil_1[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8[1 + i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 62, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i3, idx: 4, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 5
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
		 name: i3	 id: 4
	---- In range: [1, 3, 62, 62, ]
	---- Out range: [62, 62, ]
	---- Stride: 
	---- Start Addr: [0, 0, ]
	---- Access Matrix: 
		[[1, 0, 0, 1, 0, ]
		[0, 0, 0, 0, 1, ]
		]

Autogen slice:{ hw_input_global_wrapper_stencil_BANK_8[i0, i1] -> hw_input_global_wrapper_stencil_BANK_8[i0, o1] : -3 + i1 <= 4o1 <= i1 }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8[1 + i2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 1, 4*i3]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8[1 + i2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 1, 4*i3+1]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 1 + 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8[1 + i2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 1, 4*i3+2]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 2 + 4i3] }
	 rewrite access map: { op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8[1 + i2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 15]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 4	Origin: 4
ADDR dim <1> range: 16, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i3, idx: 4, coef: 4, vec_stride_in_addr:4
access map expr:[i2, 1, 4*i3+3]
domain: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
access map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 3 + 4i3] }
	Add TB output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_8[i0, i1] -> hw_input_global_wrapper_stencil_BANK_8[i0, o1] : -3 + i1 <= 4o1 <= i1 }
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(1 + conv_s1_y)] }
	div dim: 0
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(floor((conv_s1_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(conv_s1_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 2]
Domain space on <i2> is: [0, 61]
Domain space on <i3> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 62, offset: 0
Stride : 1	Origin: 1
ADDR dim <1> range: 62, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
output_dim: 1
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i3, idx: 4, coef: 1, vec_stride_in_addr:1
access map expr:[i2, 1, i3]
domain: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
access map: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8[i2, 1, i3] }
tb output access map: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8[i2, 1, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
	Access map decouple reuse: { op_hcompute_conv_stencil_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
After dim id set: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
TB  : --- hw_input_global_wrapper_stencil_BANK_8_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[0, 1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[61, 1, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[0, 1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[61, 1, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[0, 1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[61, 1, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[0, 1, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[61, 1, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[0, 1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[61, 1, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out

TB Schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15; op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + i2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + i2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + i2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + i2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
before dim id set :{ op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
After dim id set: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
SRAM: --- hw_input_global_wrapper_stencil_BANK_8_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[62, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[62, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[1, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[62, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_3

SRAM Schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
after vectorization codegen: hw_input_global_wrapper_stencil_BANK_8_0_agg
--- hw_input_global_wrapper_stencil_BANK_8_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_0_agg[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_agg[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_8_0_tb
--- hw_input_global_wrapper_stencil_BANK_8_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[0, 1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[61, 1, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[0, 1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[61, 1, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[0, 1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[61, 1, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[0, 1, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[61, 1, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_8_0_tb[i2, 1, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[0, 1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_0_tb[61, 1, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_8_sram
--- hw_input_global_wrapper_stencil_BANK_8_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[62, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[62, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[1, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[62, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_3

bank id: 0
rd dom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
	rel map: {0, 1, 1, 1}
	rel dim: 3
	rel dim stride: 4
out_fetch_ii: 4
bank id: 1
rd dom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
	rel map: {0, 1, 1, 1}
	rel dim: 3
	rel dim stride: 4
out_fetch_ii: 4
bank id: 2
rd dom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
	rel map: {0, 1, 1, 1}
	rel dim: 3
	rel dim stride: 4
out_fetch_ii: 4
bank id: 3
rd dom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
	rel map: {0, 1, 1, 1}
	rel dim: 3
	rel dim stride: 4
out_fetch_ii: 4
bank id: 4
rd dom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
	rel map: {0, 1, 1, 1}
	rel dim: 3
	rel dim stride: 4
out_fetch_ii: 4
bank id: 5
rd dom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
	rel map: {0, 1, 1, 1}
	rel dim: 3
	rel dim stride: 4
out_fetch_ii: 4
bank id: 6
rd dom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
	rel map: {0, 1, 1, 1}
	rel dim: 3
	rel dim stride: 4
out_fetch_ii: 4
bank id: 7
rd dom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
	rel map: {0, 1, 1, 1}
	rel dim: 3
	rel dim stride: 4
out_fetch_ii: 4
bank id: 8
rd dom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
	rel map: {0, 1, 1, 1}
	rel dim: 3
	rel dim stride: 4
out_fetch_ii: 4
bank id: 0, to be merged: {0, 1, 2, 3, 4, 5, 6, 7, 8}
	Group: 0: {0, 1, 2, 3, 4, 5, 6, 7, 8}
	Perform bank merging!
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_8_0_agg
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_8_0_tb
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_8_sram
--- hw_input_global_wrapper_stencil_BANK_8_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_8_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[62, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[62, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_8_sram[1 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_8_sram[1, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_8_sram[62, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_3

	subcomponent keys:hw_input_global_wrapper_stencil_BANK_7_0_agg
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_7_0_tb
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_7_sram
--- hw_input_global_wrapper_stencil_BANK_7_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_7_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_7_sram[d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[61, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_7_sram[d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[61, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_7_sram[d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[61, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_7_sram[d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_7_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_7_sram[61, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3

new banks id: 9
get SRAM port schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
get SRAM port schedule: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
get SRAM port schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
{ op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
--- hw_input_global_wrapper_stencil_bank_9_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_9_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_9_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_9_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_9_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_9_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_9_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_9_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_9_sram[63, 63] }

	---- 8 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_9_sram[d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_9_sram[61, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_9_sram[d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_9_sram[61, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_9_sram[d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_9_sram[61, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_9_sram[d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_9_sram[61, 63] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_9_sram[1 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_sram[1, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_9_sram[62, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_9_sram[1 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_sram[1, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_9_sram[62, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_9_sram[1 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_sram[1, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_9_sram[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_9_sram[1 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_sram[1, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_9_sram[62, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_3

--- hw_input_global_wrapper_stencil_bank_9
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_9[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_bank_9[0, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_9[63, 63] }

	---- 2 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_bank_9[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_bank_9[0, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_9[61, 63] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_bank_9[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_bank_9[1, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_9[62, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9

sub component buf: agg
sub component buf: tb
sub component buf: sram
sub component buf: agg
sub component buf: tb
sub component buf: sram
micor buf: --- hw_input_global_wrapper_stencil_bank_9_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_9_0_tb[i2, 0, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_0_tb[0, 0, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_9_0_tb[61, 0, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_9_0_tb[i2, 0, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_0_tb[0, 0, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_9_0_tb[61, 0, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_9_0_tb[i2, 0, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_0_tb[0, 0, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_9_0_tb[61, 0, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_9_0_tb[i2, 0, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_0_tb[0, 0, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_9_0_tb[61, 0, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_9_0_tb[i2, 0, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_bank_9_0_tb[0, 0, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_9_0_tb[61, 0, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out

micor buf: --- hw_input_global_wrapper_stencil_bank_9_1_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_9_1_tb[i2, 1, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_1_tb[0, 1, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_9_1_tb[61, 1, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_9_1_tb[i2, 1, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_1_tb[0, 1, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_9_1_tb[61, 1, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_9_1_tb[i2, 1, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_1_tb[0, 1, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_9_1_tb[61, 1, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_9_1_tb[i2, 1, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_9_1_tb[0, 1, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_9_1_tb[61, 1, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out
			dom : { op_hcompute_conv_stencil_1_tb2out_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_9_1_tb[i2, 1, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_bank_9_1_tb[0, 1, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_9_1_tb[61, 1, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9_out

Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.2
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.3
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.4
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.5
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.6
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.9
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11}
	 bank NO.2
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12}
	 bank NO.3
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13}
	 bank NO.4
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14}
	 bank NO.5
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6}
	 bank NO.6
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7}
	 bank NO.9
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

	subcomponent keys:hw_input_global_wrapper_stencil_BANK_6_0_agg
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_6_0_tb
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_6_sram
--- hw_input_global_wrapper_stencil_BANK_6_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_6_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_6_sram[d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[61, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_6_sram[d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[61, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_6_sram[d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[61, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_6_sram[d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_6_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_6_sram[61, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_3

	subcomponent keys:hw_input_global_wrapper_stencil_BANK_5_0_agg
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_5_0_tb
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_5_sram
--- hw_input_global_wrapper_stencil_BANK_5_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_5_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_5_sram[d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[61, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_5_sram[d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[61, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_5_sram[d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[61, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_5_sram[d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_5_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_5_sram[61, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_3

new banks id: 10
get SRAM port schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
get SRAM port schedule: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
get SRAM port schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
{ op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
--- hw_input_global_wrapper_stencil_bank_10_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_10_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_10_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_10_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_10_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_10_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_10_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_10_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_10_sram[63, 63] }

	---- 8 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_10_sram[d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_10_sram[61, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_10_sram[d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_10_sram[61, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_10_sram[d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_10_sram[61, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_10_sram[d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_10_sram[61, 63] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_10_sram[d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_10_sram[61, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_10_sram[d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_10_sram[61, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_10_sram[d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_10_sram[61, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_10_sram[d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_10_sram[61, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_3
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_3

--- hw_input_global_wrapper_stencil_bank_10
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_10[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_bank_10[0, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_10[63, 63] }

	---- 2 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_bank_10[conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_bank_10[0, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_10[61, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_bank_10[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_bank_10[0, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_10[61, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7

sub component buf: agg
sub component buf: tb
sub component buf: sram
sub component buf: agg
sub component buf: tb
sub component buf: sram
micor buf: --- hw_input_global_wrapper_stencil_bank_10_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_10_0_tb[i2, 0, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_0_tb[0, 0, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_10_0_tb[61, 0, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_10_0_tb[i2, 0, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_0_tb[0, 0, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_10_0_tb[61, 0, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_10_0_tb[i2, 0, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_0_tb[0, 0, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_10_0_tb[61, 0, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_10_0_tb[i2, 0, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_0_tb[0, 0, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_10_0_tb[61, 0, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_10_0_tb[i2, 0, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_bank_10_0_tb[0, 0, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_10_0_tb[61, 0, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6_out

micor buf: --- hw_input_global_wrapper_stencil_bank_10_1_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_10_1_tb[i2, 0, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_1_tb[0, 0, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_10_1_tb[61, 0, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_10_1_tb[i2, 0, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_1_tb[0, 0, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_10_1_tb[61, 0, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_10_1_tb[i2, 0, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_1_tb[0, 0, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_10_1_tb[61, 0, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_10_1_tb[i2, 0, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_10_1_tb[0, 0, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_10_1_tb[61, 0, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out
			dom : { op_hcompute_conv_stencil_1_tb2out_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_10_1_tb[i2, 0, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_bank_10_1_tb[0, 0, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_10_1_tb[61, 0, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7_out

Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.2
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.3
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.4
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.9
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.10
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11}
	 bank NO.2
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12}
	 bank NO.3
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13}
	 bank NO.4
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14}
	 bank NO.9
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9}
	 bank NO.10
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

	subcomponent keys:hw_input_global_wrapper_stencil_BANK_4_0_agg
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_4_0_tb
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_4_sram
--- hw_input_global_wrapper_stencil_BANK_4_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_4_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_4_sram[2 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_4_sram[2, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_4_sram[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_3

	subcomponent keys:hw_input_global_wrapper_stencil_BANK_3_0_agg
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_3_0_tb
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_3_sram
--- hw_input_global_wrapper_stencil_BANK_3_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_3_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_3_sram[2 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_3_sram[2, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_3_sram[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3

new banks id: 11
get SRAM port schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
get SRAM port schedule: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
get SRAM port schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
{ op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
	 output sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
vectorized dim: 3
	 temp sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
	adjust temp sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [133 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
--- hw_input_global_wrapper_stencil_bank_11_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_11_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_11_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_11_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_11_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_11_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_11_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_11_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_11_sram[63, 63] }

	---- 8 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_11_sram[2 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [133 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_sram[2, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_11_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_11_sram[2 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [133 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_sram[2, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_11_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_11_sram[2 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [133 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_sram[2, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_11_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_11_sram[2 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [133 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_sram[2, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_11_sram[63, 63] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_11_sram[2 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_sram[2, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_11_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_11_sram[2 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_sram[2, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_11_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_11_sram[2 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_sram[2, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_11_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_11_sram[2 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_sram[2, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_11_sram[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_3

--- hw_input_global_wrapper_stencil_bank_11
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_11[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_bank_11[0, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_11[63, 63] }

	---- 2 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_bank_11[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_bank_11[2, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_11[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_bank_11[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_bank_11[2, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_11[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14

sub component buf: agg
sub component buf: tb
sub component buf: sram
sub component buf: agg
sub component buf: tb
sub component buf: sram
micor buf: --- hw_input_global_wrapper_stencil_bank_11_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_11_0_tb[i2, 2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [133 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_0_tb[0, 2, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_11_0_tb[61, 2, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_11_0_tb[i2, 2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [133 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_0_tb[0, 2, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_11_0_tb[61, 2, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_11_0_tb[i2, 2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [133 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_0_tb[0, 2, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_11_0_tb[61, 2, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_11_0_tb[i2, 2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [133 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_0_tb[0, 2, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_11_0_tb[61, 2, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_11_0_tb[i2, 2, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_bank_11_0_tb[0, 2, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_11_0_tb[61, 2, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out

micor buf: --- hw_input_global_wrapper_stencil_bank_11_1_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_11_1_tb[i2, 2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_1_tb[0, 2, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_11_1_tb[61, 2, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_11_1_tb[i2, 2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_1_tb[0, 2, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_11_1_tb[61, 2, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_11_1_tb[i2, 2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_1_tb[0, 2, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_11_1_tb[61, 2, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_11_1_tb[i2, 2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_11_1_tb[0, 2, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_11_1_tb[61, 2, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out
			dom : { op_hcompute_conv_stencil_1_tb2out_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_11_1_tb[i2, 2, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_bank_11_1_tb[0, 2, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_11_1_tb[61, 2, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14_out

Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.2
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.9
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.10
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.11
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11}
	 bank NO.2
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12}
	 bank NO.9
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9}
	 bank NO.10
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7}
	 bank NO.11
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

	subcomponent keys:hw_input_global_wrapper_stencil_BANK_2_0_agg
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_2_0_tb
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_2_sram
--- hw_input_global_wrapper_stencil_BANK_2_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_2_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[2, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[2, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[2, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_2_sram[2 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_2_sram[2, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_2_sram[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_3

	subcomponent keys:hw_input_global_wrapper_stencil_BANK_1_0_agg
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_1_0_tb
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_1_sram
--- hw_input_global_wrapper_stencil_BANK_1_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[62, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[62, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[62, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_3

new banks id: 12
get SRAM port schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
get SRAM port schedule: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
get SRAM port schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
{ op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
--- hw_input_global_wrapper_stencil_bank_12_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_12_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_12_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_12_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_12_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_12_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_12_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_12_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_12_sram[63, 63] }

	---- 8 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_12_sram[1 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_sram[1, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_12_sram[62, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_12_sram[1 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_sram[1, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_12_sram[62, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_12_sram[1 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_sram[1, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_12_sram[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_12_sram[1 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_sram[1, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_12_sram[62, 63] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_12_sram[2 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_sram[2, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_12_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_12_sram[2 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_sram[2, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_12_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_12_sram[2 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_sram[2, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_12_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_12_sram[2 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_sram[2, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_12_sram[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_3
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_3

--- hw_input_global_wrapper_stencil_bank_12
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_12[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_bank_12[0, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_12[63, 63] }

	---- 2 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_bank_12[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_bank_12[1, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_12[62, 63] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_bank_12[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_bank_12[2, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_12[63, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12

sub component buf: agg
sub component buf: tb
sub component buf: sram
sub component buf: agg
sub component buf: tb
sub component buf: sram
micor buf: --- hw_input_global_wrapper_stencil_bank_12_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_12_0_tb[i2, 1, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_0_tb[0, 1, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_12_0_tb[61, 1, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_12_0_tb[i2, 1, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_0_tb[0, 1, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_12_0_tb[61, 1, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_12_0_tb[i2, 1, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_0_tb[0, 1, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_12_0_tb[61, 1, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_12_0_tb[i2, 1, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_0_tb[0, 1, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_12_0_tb[61, 1, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_12_0_tb[i2, 1, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_bank_12_0_tb[0, 1, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_12_0_tb[61, 1, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11_out

micor buf: --- hw_input_global_wrapper_stencil_bank_12_1_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_12_1_tb[i2, 2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_1_tb[0, 2, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_12_1_tb[61, 2, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_12_1_tb[i2, 2, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_1_tb[0, 2, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_12_1_tb[61, 2, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_12_1_tb[i2, 2, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_1_tb[0, 2, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_12_1_tb[61, 2, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_12_1_tb[i2, 2, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_12_1_tb[0, 2, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_12_1_tb[61, 2, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out
			dom : { op_hcompute_conv_stencil_1_tb2out_1[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_12_1_tb[i2, 2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_bank_12_1_tb[0, 2, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_12_1_tb[61, 2, 61] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12_out

Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.9
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.10
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.11
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.12
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
	 bank NO.9
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9}
	 bank NO.10
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7}
	 bank NO.11
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14}
	 bank NO.12
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

	subcomponent keys:hw_input_global_wrapper_stencil_BANK_0_0_agg
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_0_0_tb
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_0_sram
--- hw_input_global_wrapper_stencil_BANK_0_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[62, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1, 1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[62, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1, 2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1, 3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[62, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3

new banks id: 13
get SRAM port schedule: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
get SRAM port schedule: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
--- hw_input_global_wrapper_stencil_bank_13_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_13_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_13_sram[0, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_13_sram[63, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_13_sram[i1, 1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_13_sram[0, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_13_sram[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_13_sram[i1, 2 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_13_sram[0, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_13_sram[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_13_sram[i1, 3 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_13_sram[0, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_13_sram[63, 63] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_13_sram[1 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_13_sram[1, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_13_sram[62, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_13_sram[1 + d2, 1 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_13_sram[1, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_13_sram[62, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_13_sram[1 + d2, 2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_13_sram[1, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_13_sram[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_13_sram[1 + d2, 3 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_13_sram[1, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_13_sram[62, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3

--- hw_input_global_wrapper_stencil_bank_13
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_13[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_bank_13[0, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_13[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil_bank_13[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_bank_13[1, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_13[62, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10

sub component buf: agg
sub component buf: tb
sub component buf: sram
micor buf: --- hw_input_global_wrapper_stencil_bank_13_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_13_0_tb[i2, 1, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_13_0_tb[0, 1, 0] }
			max location: { hw_input_global_wrapper_stencil_bank_13_0_tb[61, 1, 60] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_13_0_tb[i2, 1, 1 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_13_0_tb[0, 1, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_13_0_tb[61, 1, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_13_0_tb[i2, 1, 2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_13_0_tb[0, 1, 2] }
			max location: { hw_input_global_wrapper_stencil_bank_13_0_tb[61, 1, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
			dom : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			acc : { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_13_0_tb[i2, 1, 3 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_13_0_tb[0, 1, 3] }
			max location: { hw_input_global_wrapper_stencil_bank_13_0_tb[61, 1, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_13_0_tb[i2, 1, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil_bank_13_0_tb[0, 1, 1] }
			max location: { hw_input_global_wrapper_stencil_bank_13_0_tb[61, 1, 62] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out

Bank writers: 
	 bank NO.9
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.10
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.11
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.12
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.13
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.9
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9}
	 bank NO.10
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7}
	 bank NO.11
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14}
	 bank NO.12
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12}
	 bank NO.13
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

add input: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14 to pt2wire
agg2sram_opt debug start 
sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
write map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_9_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
{ hw_input_global_wrapper_stencil_bank_9_sram[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 and (((2 + i1) mod 4 = 0 and 0 < i0 <= 62 and 2 <= i1 <= 62) or ((2 + i1) mod 4 = 0 and i0 <= 61 and 2 <= i1 <= 62) or ((2 + i1) mod 4 = 0 and 2 <= i1 <= 62) or ((1 + i1) mod 4 = 0 and 0 < i0 <= 62 and i1 >= 3) or ((1 + i1) mod 4 = 0 and i0 <= 61 and i1 >= 3) or ((1 + i1) mod 4 = 0 and i1 >= 3) or ((i1) mod 4 = 0 and 0 < i0 <= 62 and i1 <= 60) or ((i1) mod 4 = 0 and i0 <= 61 and i1 <= 60) or ((i1) mod 4 = 0 and i1 <= 60) or ((-1 + i1) mod 4 = 0 and 0 < i0 <= 62 and 0 < i1 <= 61) or ((-1 + i1) mod 4 = 0 and i0 <= 61 and 0 < i1 <= 61) or ((-1 + i1) mod 4 = 0 and 0 < i1 <= 61)) }
read map: { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_9_sram[1 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
read map: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_9_sram[d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
op_name: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0, extent_0: 64, stride_0: 1
sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
write map: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_9_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
{ hw_input_global_wrapper_stencil_bank_9_0_agg[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
read map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_9_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_9_0_tb[i2, 0, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
{ hw_input_global_wrapper_stencil_bank_9_0_tb[i0, 0, i2] : 0 <= i0 <= 61 and 0 <= i2 <= 63 and (i2 >= 2 or ((2 + i2) mod 4 = 0 and 2 <= i2 <= 62) or ((1 + i2) mod 4 = 0 and i2 >= 3) or ((i2) mod 4 = 0 and i2 <= 60) or ((-1 + i2) mod 4 = 0 and 0 < i2 <= 61)) }
read map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_9_0_tb[i2, 0, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
sched: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
write map: { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_9_1_tb[i2, 1, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
{ hw_input_global_wrapper_stencil_bank_9_1_tb[i0, 1, i2] : 0 <= i0 <= 61 and 0 <= i2 <= 63 and (i2 <= 61 or ((2 + i2) mod 4 = 0 and 2 <= i2 <= 62) or ((1 + i2) mod 4 = 0 and i2 >= 3) or ((i2) mod 4 = 0 and i2 <= 60) or ((-1 + i2) mod 4 = 0 and 0 < i2 <= 61)) }
read map: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_9_1_tb[i2, 1, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
	op name: op_hcompute_conv_stencil_1_sram2tb_0
	Sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }

"dimensionality",4,0
"cycle_starting_addr",134,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_9_0_tb[64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_3",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_9_sram[64d2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_conv_stencil_1_sram2tb_1
	Sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }

"dimensionality",4,0
"cycle_starting_addr",135,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_9_1_tb[64 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
"write_data_starting_addr",16,0
"write_data_stride_3",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_9_sram[64 + 64d2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
"read_data_starting_addr",16,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_conv_stencil_1_tb2out_0
	Sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

"dimensionality",4,0
"cycle_starting_addr",138,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_9_0_tb[2 + 64i2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
"read_data_starting_addr",2,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_conv_stencil_1_tb2out_1
	Sched: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

"dimensionality",4,0
"cycle_starting_addr",138,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_9_1_tb[64 + 64i2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
"read_data_starting_addr",64,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0
	Sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",4,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
adding new agg2sram opt cfg for: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0: mode 0, agg_read_padding 0, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_9_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",16,0
"write_data_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_9_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencil_in2agg_0
	Sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }

"dimensionality",3,0
"cycle_starting_addr",0,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_9_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
{"agg2sram_0":{"agg_read_padding":[0],"cycle_starting_addr":[4],"cycle_stride":[4,64],"delay":[0],"dimensionality":2,"extent":[16,64],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[1,0],"write_data_starting_addr":[0],"write_data_stride":[1,16]},"in2agg_0":{"cycle_starting_addr":[0],"cycle_stride":[1,64],"dimensionality":2,"extent":[64,64],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_0":{"cycle_starting_addr":[134],"cycle_stride":[4,64,4096],"dimensionality":3,"extent":[16,62,3],"read_data_starting_addr":[0],"read_data_stride":[1,16,0],"write_data_starting_addr":[0],"write_data_stride":[1,0,0]},"sram2tb_1":{"cycle_starting_addr":[135],"cycle_stride":[4,64,4096],"dimensionality":3,"extent":[16,62,3],"read_data_starting_addr":[16],"read_data_stride":[1,16,0],"write_data_starting_addr":[16],"write_data_stride":[1,0,0]},"tb2out_0":{"cycle_starting_addr":[138],"cycle_stride":[1,64,4096],"dimensionality":3,"extent":[62,62,3],"read_data_starting_addr":[2],"read_data_stride":[1,0,0]},"tb2out_1":{"cycle_starting_addr":[138],"cycle_stride":[1,64,4096],"dimensionality":3,"extent":[62,62,3],"read_data_starting_addr":[64],"read_data_stride":[1,0,0]}}
Add lake node:ub_hw_input_global_wrapper_stencil_bank_9 with input_num = 1, output_num = 2
Config mode: lake
Generating Verilog Testing Collateral for: ub_hw_input_global_wrapper_stencil_bank_9
Module: cgralib.Mem_amber(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'data_out_1':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U0__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs2__use_prebuilt_memTrue__width16
agg2sram_opt debug start 
sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
write map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_10_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
{ hw_input_global_wrapper_stencil_bank_10_sram[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 and (((2 + i1) mod 4 = 0 and i0 <= 61 and 2 <= i1 <= 62) or ((2 + i1) mod 4 = 0 and 2 <= i1 <= 62) or ((1 + i1) mod 4 = 0 and i0 <= 61 and i1 >= 3) or ((1 + i1) mod 4 = 0 and i1 >= 3) or ((i1) mod 4 = 0 and i0 <= 61 and i1 <= 60) or ((i1) mod 4 = 0 and i1 <= 60) or ((-1 + i1) mod 4 = 0 and i0 <= 61 and 0 < i1 <= 61) or ((-1 + i1) mod 4 = 0 and 0 < i1 <= 61)) }
read map: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_10_sram[d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
read map: { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_10_sram[d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
op_name: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0, extent_0: 64, stride_0: 1
sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
write map: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_10_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
{ hw_input_global_wrapper_stencil_bank_10_0_agg[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
read map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_10_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_10_0_tb[i2, 0, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
{ hw_input_global_wrapper_stencil_bank_10_0_tb[i0, 0, i2] : 0 <= i0 <= 61 and 0 <= i2 <= 63 and (i2 <= 61 or ((2 + i2) mod 4 = 0 and 2 <= i2 <= 62) or ((1 + i2) mod 4 = 0 and i2 >= 3) or ((i2) mod 4 = 0 and i2 <= 60) or ((-1 + i2) mod 4 = 0 and 0 < i2 <= 61)) }
read map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_10_0_tb[i2, 0, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
sched: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
write map: { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_10_1_tb[i2, 0, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
{ hw_input_global_wrapper_stencil_bank_10_1_tb[i0, 0, i2] : 0 <= i0 <= 61 and 0 <= i2 <= 63 and ((0 < i2 <= 62) or ((2 + i2) mod 4 = 0 and 2 <= i2 <= 62) or ((1 + i2) mod 4 = 0 and i2 >= 3) or ((i2) mod 4 = 0 and i2 <= 60) or ((-1 + i2) mod 4 = 0 and 0 < i2 <= 61)) }
read map: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_10_1_tb[i2, 0, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
	op name: op_hcompute_conv_stencil_1_sram2tb_0
	Sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }

"dimensionality",4,0
"cycle_starting_addr",135,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_10_0_tb[64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_3",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_10_sram[64d2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_conv_stencil_1_sram2tb_1
	Sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }

"dimensionality",4,0
"cycle_starting_addr",134,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_10_1_tb[64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_3",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_10_sram[64d2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_conv_stencil_1_tb2out_0
	Sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

"dimensionality",4,0
"cycle_starting_addr",138,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_10_0_tb[64i2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
"read_data_starting_addr",0,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_conv_stencil_1_tb2out_1
	Sched: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

"dimensionality",4,0
"cycle_starting_addr",138,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_10_1_tb[1 + 64i2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
"read_data_starting_addr",1,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0
	Sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",4,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
adding new agg2sram opt cfg for: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0: mode 0, agg_read_padding 0, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_10_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",16,0
"write_data_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_10_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencil_in2agg_0
	Sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }

"dimensionality",3,0
"cycle_starting_addr",0,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_10_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
{"agg2sram_0":{"agg_read_padding":[0],"cycle_starting_addr":[4],"cycle_stride":[4,64],"delay":[0],"dimensionality":2,"extent":[16,64],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[1,0],"write_data_starting_addr":[0],"write_data_stride":[1,16]},"in2agg_0":{"cycle_starting_addr":[0],"cycle_stride":[1,64],"dimensionality":2,"extent":[64,64],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_0":{"cycle_starting_addr":[135],"cycle_stride":[4,64,4096],"dimensionality":3,"extent":[16,62,3],"read_data_starting_addr":[0],"read_data_stride":[1,16,0],"write_data_starting_addr":[0],"write_data_stride":[1,0,0]},"sram2tb_1":{"cycle_starting_addr":[134],"cycle_stride":[4,64,4096],"dimensionality":3,"extent":[16,62,3],"read_data_starting_addr":[0],"read_data_stride":[1,16,0],"write_data_starting_addr":[0],"write_data_stride":[1,0,0]},"tb2out_0":{"cycle_starting_addr":[138],"cycle_stride":[1,64,4096],"dimensionality":3,"extent":[62,62,3],"read_data_starting_addr":[0],"read_data_stride":[1,0,0]},"tb2out_1":{"cycle_starting_addr":[138],"cycle_stride":[1,64,4096],"dimensionality":3,"extent":[62,62,3],"read_data_starting_addr":[1],"read_data_stride":[1,0,0]}}
Add lake node:ub_hw_input_global_wrapper_stencil_bank_10 with input_num = 1, output_num = 2
Config mode: lake
Generating Verilog Testing Collateral for: ub_hw_input_global_wrapper_stencil_bank_10
Module: cgralib.Mem_amber(ID:_U1, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'data_out_1':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U1__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs2__use_prebuilt_memTrue__width16
agg2sram_opt debug start 
sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [133 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
write map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_11_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
{ hw_input_global_wrapper_stencil_bank_11_sram[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 and (((2 + i1) mod 4 = 0 and i0 >= 2 and 2 <= i1 <= 62) or ((2 + i1) mod 4 = 0 and 2 <= i1 <= 62) or ((1 + i1) mod 4 = 0 and i0 >= 2 and i1 >= 3) or ((1 + i1) mod 4 = 0 and i1 >= 3) or ((i1) mod 4 = 0 and i0 >= 2 and i1 <= 60) or ((i1) mod 4 = 0 and i1 <= 60) or ((-1 + i1) mod 4 = 0 and i0 >= 2 and 0 < i1 <= 61) or ((-1 + i1) mod 4 = 0 and 0 < i1 <= 61)) }
read map: { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_11_sram[2 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
read map: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_11_sram[2 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
op_name: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0, extent_0: 64, stride_0: 1
sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
write map: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_11_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
{ hw_input_global_wrapper_stencil_bank_11_0_agg[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
read map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_11_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [133 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_11_0_tb[i2, 2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
{ hw_input_global_wrapper_stencil_bank_11_0_tb[i0, 2, i2] : 0 <= i0 <= 61 and 0 <= i2 <= 63 and ((0 < i2 <= 62) or ((2 + i2) mod 4 = 0 and 2 <= i2 <= 62) or ((1 + i2) mod 4 = 0 and i2 >= 3) or ((i2) mod 4 = 0 and i2 <= 60) or ((-1 + i2) mod 4 = 0 and 0 < i2 <= 61)) }
read map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_11_0_tb[i2, 2, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
sched: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
write map: { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_11_1_tb[i2, 2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
{ hw_input_global_wrapper_stencil_bank_11_1_tb[i0, 2, i2] : 0 <= i0 <= 61 and 0 <= i2 <= 63 and (i2 >= 2 or ((2 + i2) mod 4 = 0 and 2 <= i2 <= 62) or ((1 + i2) mod 4 = 0 and i2 >= 3) or ((i2) mod 4 = 0 and i2 <= 60) or ((-1 + i2) mod 4 = 0 and 0 < i2 <= 61)) }
read map: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_11_1_tb[i2, 2, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
	op name: op_hcompute_conv_stencil_1_sram2tb_0
	Sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [133 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }

"dimensionality",4,0
"cycle_starting_addr",133,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_11_0_tb[128 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
"write_data_starting_addr",32,0
"write_data_stride_3",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_11_sram[128 + 64d2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
"read_data_starting_addr",32,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_conv_stencil_1_sram2tb_1
	Sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }

"dimensionality",4,0
"cycle_starting_addr",134,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_11_1_tb[128 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
"write_data_starting_addr",32,0
"write_data_stride_3",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_11_sram[128 + 64d2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
"read_data_starting_addr",32,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_conv_stencil_1_tb2out_0
	Sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

"dimensionality",4,0
"cycle_starting_addr",138,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_11_0_tb[129 + 64i2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
"read_data_starting_addr",129,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_conv_stencil_1_tb2out_1
	Sched: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

"dimensionality",4,0
"cycle_starting_addr",138,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_11_1_tb[130 + 64i2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
"read_data_starting_addr",130,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0
	Sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",4,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
adding new agg2sram opt cfg for: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0: mode 0, agg_read_padding 0, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_11_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",16,0
"write_data_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_11_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencil_in2agg_0
	Sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }

"dimensionality",3,0
"cycle_starting_addr",0,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_11_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
{"agg2sram_0":{"agg_read_padding":[0],"cycle_starting_addr":[4],"cycle_stride":[4,64],"delay":[0],"dimensionality":2,"extent":[16,64],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[1,0],"write_data_starting_addr":[0],"write_data_stride":[1,16]},"in2agg_0":{"cycle_starting_addr":[0],"cycle_stride":[1,64],"dimensionality":2,"extent":[64,64],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_0":{"cycle_starting_addr":[133],"cycle_stride":[4,64,4096],"dimensionality":3,"extent":[16,62,3],"read_data_starting_addr":[32],"read_data_stride":[1,16,0],"write_data_starting_addr":[32],"write_data_stride":[1,0,0]},"sram2tb_1":{"cycle_starting_addr":[134],"cycle_stride":[4,64,4096],"dimensionality":3,"extent":[16,62,3],"read_data_starting_addr":[32],"read_data_stride":[1,16,0],"write_data_starting_addr":[32],"write_data_stride":[1,0,0]},"tb2out_0":{"cycle_starting_addr":[138],"cycle_stride":[1,64,4096],"dimensionality":3,"extent":[62,62,3],"read_data_starting_addr":[129],"read_data_stride":[1,0,0]},"tb2out_1":{"cycle_starting_addr":[138],"cycle_stride":[1,64,4096],"dimensionality":3,"extent":[62,62,3],"read_data_starting_addr":[130],"read_data_stride":[1,0,0]}}
Add lake node:ub_hw_input_global_wrapper_stencil_bank_11 with input_num = 1, output_num = 2
Config mode: lake
Generating Verilog Testing Collateral for: ub_hw_input_global_wrapper_stencil_bank_11
Module: cgralib.Mem_amber(ID:_U2, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'data_out_1':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U2__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs2__use_prebuilt_memTrue__width16
agg2sram_opt debug start 
sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
write map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_12_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
{ hw_input_global_wrapper_stencil_bank_12_sram[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 and (((2 + i1) mod 4 = 0 and i0 >= 2 and 2 <= i1 <= 62) or ((2 + i1) mod 4 = 0 and 0 < i0 <= 62 and 2 <= i1 <= 62) or ((2 + i1) mod 4 = 0 and 2 <= i1 <= 62) or ((1 + i1) mod 4 = 0 and i0 >= 2 and i1 >= 3) or ((1 + i1) mod 4 = 0 and 0 < i0 <= 62 and i1 >= 3) or ((1 + i1) mod 4 = 0 and i1 >= 3) or ((i1) mod 4 = 0 and i0 >= 2 and i1 <= 60) or ((i1) mod 4 = 0 and 0 < i0 <= 62 and i1 <= 60) or ((i1) mod 4 = 0 and i1 <= 60) or ((-1 + i1) mod 4 = 0 and i0 >= 2 and 0 < i1 <= 61) or ((-1 + i1) mod 4 = 0 and 0 < i0 <= 62 and 0 < i1 <= 61) or ((-1 + i1) mod 4 = 0 and 0 < i1 <= 61)) }
read map: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_12_sram[1 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
read map: { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_12_sram[2 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
op_name: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0, extent_0: 64, stride_0: 1
sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
write map: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_12_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
{ hw_input_global_wrapper_stencil_bank_12_0_agg[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
read map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_12_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_12_0_tb[i2, 1, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
{ hw_input_global_wrapper_stencil_bank_12_0_tb[i0, 1, i2] : 0 <= i0 <= 61 and 0 <= i2 <= 63 and (i2 >= 2 or ((2 + i2) mod 4 = 0 and 2 <= i2 <= 62) or ((1 + i2) mod 4 = 0 and i2 >= 3) or ((i2) mod 4 = 0 and i2 <= 60) or ((-1 + i2) mod 4 = 0 and 0 < i2 <= 61)) }
read map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_12_0_tb[i2, 1, 2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
sched: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
write map: { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_12_1_tb[i2, 2, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
{ hw_input_global_wrapper_stencil_bank_12_1_tb[i0, 2, i2] : 0 <= i0 <= 61 and 0 <= i2 <= 63 and (i2 <= 61 or ((2 + i2) mod 4 = 0 and 2 <= i2 <= 62) or ((1 + i2) mod 4 = 0 and i2 >= 3) or ((i2) mod 4 = 0 and i2 <= 60) or ((-1 + i2) mod 4 = 0 and 0 < i2 <= 61)) }
read map: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_12_1_tb[i2, 2, i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
	op name: op_hcompute_conv_stencil_1_sram2tb_0
	Sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }

"dimensionality",4,0
"cycle_starting_addr",134,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_12_0_tb[64 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
"write_data_starting_addr",16,0
"write_data_stride_3",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_12_sram[64 + 64d2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
"read_data_starting_addr",16,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_conv_stencil_1_sram2tb_1
	Sched: { op_hcompute_conv_stencil_1_sram2tb_1[i0 = 0, i1, i2, i3] -> [135 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }

"dimensionality",4,0
"cycle_starting_addr",135,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_sram2tb_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_12_1_tb[128 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
"write_data_starting_addr",32,0
"write_data_stride_3",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_sram2tb_1[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_12_sram[128 + 64d2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
"read_data_starting_addr",32,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_conv_stencil_1_tb2out_0
	Sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

"dimensionality",4,0
"cycle_starting_addr",138,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_12_0_tb[66 + 64i2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
"read_data_starting_addr",66,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_conv_stencil_1_tb2out_1
	Sched: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

"dimensionality",4,0
"cycle_starting_addr",138,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_tb2out_1[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_12_1_tb[128 + 64i2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
"read_data_starting_addr",128,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0
	Sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",4,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
adding new agg2sram opt cfg for: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0: mode 0, agg_read_padding 0, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_12_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",16,0
"write_data_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_12_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencil_in2agg_0
	Sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }

"dimensionality",3,0
"cycle_starting_addr",0,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_12_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
{"agg2sram_0":{"agg_read_padding":[0],"cycle_starting_addr":[4],"cycle_stride":[4,64],"delay":[0],"dimensionality":2,"extent":[16,64],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[1,0],"write_data_starting_addr":[0],"write_data_stride":[1,16]},"in2agg_0":{"cycle_starting_addr":[0],"cycle_stride":[1,64],"dimensionality":2,"extent":[64,64],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_0":{"cycle_starting_addr":[134],"cycle_stride":[4,64,4096],"dimensionality":3,"extent":[16,62,3],"read_data_starting_addr":[16],"read_data_stride":[1,16,0],"write_data_starting_addr":[16],"write_data_stride":[1,0,0]},"sram2tb_1":{"cycle_starting_addr":[135],"cycle_stride":[4,64,4096],"dimensionality":3,"extent":[16,62,3],"read_data_starting_addr":[32],"read_data_stride":[1,16,0],"write_data_starting_addr":[32],"write_data_stride":[1,0,0]},"tb2out_0":{"cycle_starting_addr":[138],"cycle_stride":[1,64,4096],"dimensionality":3,"extent":[62,62,3],"read_data_starting_addr":[66],"read_data_stride":[1,0,0]},"tb2out_1":{"cycle_starting_addr":[138],"cycle_stride":[1,64,4096],"dimensionality":3,"extent":[62,62,3],"read_data_starting_addr":[128],"read_data_stride":[1,0,0]}}
Add lake node:ub_hw_input_global_wrapper_stencil_bank_12 with input_num = 1, output_num = 2
Config mode: lake
Generating Verilog Testing Collateral for: ub_hw_input_global_wrapper_stencil_bank_12
Module: cgralib.Mem_amber(ID:_U3, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'data_out_1':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U3__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs2__use_prebuilt_memTrue__width16
agg2sram_opt debug start 
sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
write map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_13_sram[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
{ hw_input_global_wrapper_stencil_bank_13_sram[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 and (((2 + i1) mod 4 = 0 and 0 < i0 <= 62 and 2 <= i1 <= 62) or ((2 + i1) mod 4 = 0 and 2 <= i1 <= 62) or ((1 + i1) mod 4 = 0 and 0 < i0 <= 62 and i1 >= 3) or ((1 + i1) mod 4 = 0 and i1 >= 3) or ((i1) mod 4 = 0 and 0 < i0 <= 62 and i1 <= 60) or ((i1) mod 4 = 0 and i1 <= 60) or ((-1 + i1) mod 4 = 0 and 0 < i0 <= 62 and 0 < i1 <= 61) or ((-1 + i1) mod 4 = 0 and 0 < i1 <= 61)) }
read map: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_13_sram[1 + d2, 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
op_name: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0, extent_0: 64, stride_0: 1
sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
write map: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_13_0_agg[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
{ hw_input_global_wrapper_stencil_bank_13_0_agg[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
read map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_13_0_agg[i1, 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_13_0_tb[i2, 1, 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
{ hw_input_global_wrapper_stencil_bank_13_0_tb[i0, 1, i2] : 0 <= i0 <= 61 and 0 <= i2 <= 63 and ((0 < i2 <= 62) or ((2 + i2) mod 4 = 0 and 2 <= i2 <= 62) or ((1 + i2) mod 4 = 0 and i2 >= 3) or ((i2) mod 4 = 0 and i2 <= 60) or ((-1 + i2) mod 4 = 0 and 0 < i2 <= 61)) }
read map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_13_0_tb[i2, 1, 1 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
	op name: op_hcompute_conv_stencil_1_sram2tb_0
	Sched: { op_hcompute_conv_stencil_1_sram2tb_0[i0 = 0, i1, i2, i3] -> [134 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }

"dimensionality",4,0
"cycle_starting_addr",134,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_sram2tb_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_13_0_tb[64 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
"write_data_starting_addr",16,0
"write_data_stride_3",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_sram2tb_0[d0 = 0, d1, d2, d3] -> hw_input_global_wrapper_stencil_bank_13_sram[64 + 64d2 + 4d3] : 0 <= d1 <= 2 and 0 <= d2 <= 61 and 0 <= d3 <= 15 }
"read_data_starting_addr",16,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_conv_stencil_1_tb2out_0
	Sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

"dimensionality",4,0
"cycle_starting_addr",138,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_bank_13_0_tb[65 + 64i2 + i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 61 }
"read_data_starting_addr",65,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0
	Sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",4,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
adding new agg2sram opt cfg for: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0: mode 0, agg_read_padding 0, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_13_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",16,0
"write_data_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_13_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencil_in2agg_0
	Sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }

"dimensionality",3,0
"cycle_starting_addr",0,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_13_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
{"agg2sram_0":{"agg_read_padding":[0],"cycle_starting_addr":[4],"cycle_stride":[4,64],"delay":[0],"dimensionality":2,"extent":[16,64],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[1,0],"write_data_starting_addr":[0],"write_data_stride":[1,16]},"in2agg_0":{"cycle_starting_addr":[0],"cycle_stride":[1,64],"dimensionality":2,"extent":[64,64],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_0":{"cycle_starting_addr":[134],"cycle_stride":[4,64,4096],"dimensionality":3,"extent":[16,62,3],"read_data_starting_addr":[16],"read_data_stride":[1,16,0],"write_data_starting_addr":[16],"write_data_stride":[1,0,0]},"tb2out_0":{"cycle_starting_addr":[138],"cycle_stride":[1,64,4096],"dimensionality":3,"extent":[62,62,3],"read_data_starting_addr":[65],"read_data_stride":[1,0,0]}}
Add lake node:ub_hw_input_global_wrapper_stencil_bank_13 with input_num = 1, output_num = 1
Config mode: lake
Generating Verilog Testing Collateral for: ub_hw_input_global_wrapper_stencil_bank_13
Module: cgralib.Mem_amber(ID:_U4, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U4__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
addr need tight: {}
Global range: { hw_input_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
remove dimension: {1}
remove dimension: {1}
Sorted ops: {op_hcompute_hw_input_global_wrapper_stencil}
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
    sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
    reduce_map: { hw_input_stencil[d0, d1] -> hw_input_stencil[64d0 + d1] }
  Dim: 2
    Schedule dom range: 64, current_level_stride : 1, up_level_stride : 64
    Address dom range: 64, current_level_stride : 1, up_level_stride : 64
span range: 64, up_level_stride : 64
span range: 64, up_level_stride : 64
	access map merge pair: {{0, 1} }
	schedule merge pair: {{0, 1} }
merge pair: {0, 1} , {0, 1} 
access map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  After Merge: 
    schedule: { op_hcompute_hw_input_global_wrapper_stencil[0, i1] -> [i1] : 0 <= i1 <= 4095 }
"dimensionality",2,0
"cycle_starting_addr",0,0
"extent_1",1,0
"cycle_stride_1",0,0
"extent_0",4096,0
"cycle_stride_0",1,0
"read_data_starting_addr",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	Read map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
{"glb2out_0":{"cycle_starting_addr":[0],"cycle_stride":[1],"dimensionality":1,"extent":[4096],"read_data_starting_addr":[0],"read_data_stride":[1]}}
addr need tight: {}
Global range: { hw_output_stencil[i0, i1, i2] : 0 <= i0 <= 2 and 0 <= i1 <= 61 and 0 <= i2 <= 61 }
Sorted ops: {op_hcompute_hw_output_stencil}
  Before Merge: 
    acc map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
    sched: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
    reduce_map: { hw_output_stencil[d0, d1, d2] -> hw_output_stencil[3844d0 + 62d1 + d2] }
    1d acc map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[3844hw_output_s0_z + 62hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
  Dim: 2
    Schedule dom range: 62, current_level_stride : 64, up_level_stride : 4096
    Address dom range: 62, current_level_stride : 62, up_level_stride : 3844
Find dim: 2 pad = 2
  Dim: 3
    Schedule dom range: 62, current_level_stride : 1, up_level_stride : 64
    Address dom range: 62, current_level_stride : 1, up_level_stride : 62
Find dim: 3 pad = 2
span range: 3844, up_level_stride : 3844
span range: 62, up_level_stride : 62
span range: 3968, up_level_stride : 4096
span range: 62, up_level_stride : 64
	access map merge pair: {{1, 2} , {0, 1} }
	schedule merge pair: {}
  After Merge: 
    schedule: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
"dimensionality",4,0
"cycle_starting_addr",139,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
"write_data_starting_addr",0,0
"write_data_stride_3",0,0
"write_data_stride_2",3844,0
"write_data_stride_1",62,0
"write_data_stride_0",1,0
	Write map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
{"in2glb_0":{"cycle_starting_addr":[139],"cycle_stride":[1,64,4096],"dimensionality":3,"extent":[62,62,3],"write_data_starting_addr":[0],"write_data_stride":[1,62,3844]}}
Visit op: op_hcompute_hw_output_stencil
Schedule to generate affine controller: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
pma: { op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi)] : root = 0 and 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
sched = { op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(139 + 4096hw_output_s0_z + 64hw_output_s0_y_yi + hw_output_s0_x_xi)] }
  dom = { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_z <= 2 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
ls = { op_hcompute_hw_output_stencil[root, hw_output_s0_z, hw_output_s0_y_yi, hw_output_s0_x_xi] }
v = 0
Add ub node to be aff ctrl
"dimensionality",4,0
"cycle_starting_addr",139,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
Generating Verilog Testing Collateral for: op_hcompute_hw_output_stencil_port_controller
Module: cgralib.Mem_amber(ID:_U5, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'stencil_valid':Bit, 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U5__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validTrue__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
Find compute
Done Finding compute , op Latency : 0, read Latency: 0
Delaying read
Returning delayed...
Delaying exe
Returning delayed...
Delaying writes
Returning delayed...
getting incoming buffers to op_hcompute_hw_output_stencil
  consumed: conv_stencil
Visit op: op_hcompute_conv_stencil_1
Schedule to generate affine controller: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> [138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
pma: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x)] : root = 0 and 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
sched = { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x)] }
  dom = { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
"dimensionality",4,0
"cycle_starting_addr",138,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
Index address: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_conv_stencil_1[conv_s1_z' = conv_s1_z] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
"dimensionality",4,0
"cycle_starting_addr",138,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
"read_data_starting_addr",0,0
"read_data_stride_3",0,0
"read_data_stride_2",1,0
"read_data_stride_1",0,0
"read_data_stride_0",0,0
Autogen trans:{ op_hcompute_conv_stencil_1[i0, i1, i2, i3] -> op_hcompute_conv_stencil_1[i0, 4i1, i2, i3] }
Vectorization Trans: { op_hcompute_conv_stencil_1[i0, i1, i2, i3] -> op_hcompute_conv_stencil_1[i0, 4i1, i2, i3] }
	reset: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2, i3] -> [138 + i3] : 0 <= i2 <= 61 and 0 <= i3 <= 61 }
	reset: { op_hcompute_conv_stencil_1[i0 = 0, i1 = 0, i2, i3] -> [138] : 0 <= i2 <= 61 and 0 <= i3 <= 61 }
	After trans: { [i0 = 0, i1 = 0] -> [138] }
	Vec index address: { [i0 = 0, i1 = 0] -> op_hcompute_conv_stencil_1[conv_s1_z = 0] }
"dimensionality",2,0
"cycle_starting_addr",135,0
"extent_1",1,0
"cycle_stride_1",0,0
"extent_0",1,0
"cycle_stride_0",0,0
"write_data_starting_addr",0,0
"write_data_stride_1",0,0
"write_data_stride_0",0,0
"read_data_starting_addr",0,0
"read_data_stride_1",0,0
"read_data_stride_0",0,0
Generating Verilog Testing Collateral for: op_hcompute_conv_stencil_1_port_controller_Counter_1
Module: cgralib.Mem_amber(ID:_U10, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:0, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_out_0':Bit[16], 'stencil_valid':Bit, 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U10__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validTrue__has_validFalse__is_romFalse__num_inputs0__num_outputs1__use_prebuilt_memTrue__width16
Index address: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_conv_stencil_1[conv_s1_y' = conv_s1_y] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
"dimensionality",4,0
"cycle_starting_addr",138,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
"read_data_starting_addr",0,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",1,0
"read_data_stride_0",0,0
Autogen trans:{ op_hcompute_conv_stencil_1[i0, i1, i2, i3] -> op_hcompute_conv_stencil_1[i0, i1, 4i2, i3] }
Vectorization Trans: { op_hcompute_conv_stencil_1[i0, i1, i2, i3] -> op_hcompute_conv_stencil_1[i0, i1, 4i2, i3] }
	reset: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [138 + 4096i1 + 256i2] : 0 <= i1 <= 2 and 0 <= i2 <= 15 and 0 <= i3 <= 61 }
	After trans: { [i0 = 0, i1, i2] -> [138 + 4096i1 + 256i2] : 0 <= i1 <= 2 and 0 <= i2 <= 15 }
	Vec index address: { [i0 = 0, i1, i2] -> op_hcompute_conv_stencil_1[conv_s1_y = 4i2] : 0 <= i1 <= 2 and 0 <= i2 <= 15 }
"dimensionality",3,0
"cycle_starting_addr",135,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",3,0
"cycle_stride_1",4096,0
"extent_0",16,0
"cycle_stride_0",256,0
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
Generating Verilog Testing Collateral for: op_hcompute_conv_stencil_1_port_controller_Counter_2
Module: cgralib.Mem_amber(ID:_U11, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:0, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_out_0':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U11__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs0__num_outputs1__use_prebuilt_memTrue__width16
Index address: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] -> op_hcompute_conv_stencil_1[conv_s1_x' = conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
"dimensionality",4,0
"cycle_starting_addr",138,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
"read_data_starting_addr",0,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
Autogen trans:{ op_hcompute_conv_stencil_1[i0, i1, i2, i3] -> op_hcompute_conv_stencil_1[i0, i1, i2, 4i3] }
Vectorization Trans: { op_hcompute_conv_stencil_1[i0, i1, i2, i3] -> op_hcompute_conv_stencil_1[i0, i1, i2, 4i3] }
	After trans: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> [138 + 4096i1 + 64i2 + 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
	Vec index address: { op_hcompute_conv_stencil_1[i0 = 0, i1, i2, i3] -> op_hcompute_conv_stencil_1[conv_s1_x = 4i3] : 0 <= i1 <= 2 and 0 <= i2 <= 61 and 0 <= i3 <= 15 }
"dimensionality",4,0
"cycle_starting_addr",135,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",3,0
"cycle_stride_2",4096,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
"write_data_starting_addr",0,0
"write_data_stride_3",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
"read_data_starting_addr",0,0
"read_data_stride_3",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
Generating Verilog Testing Collateral for: op_hcompute_conv_stencil_1_port_controller_Counter_3
Module: cgralib.Mem_amber(ID:_U12, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:0, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_out_0':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U12__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs0__num_outputs1__use_prebuilt_memTrue__width16
Use ub counter mode to be aff counter
	AFF: { op_hcompute_conv_stencil_1[root, conv_s1_z, conv_s1_y, conv_s1_x] -> [(138 + 4096conv_s1_z + 64conv_s1_y + conv_s1_x)] }
	Aff in dim: 4
		Aff get const: 138
		Aff get coeff: 0
		Aff get coeff: 4096
		Aff get coeff: 64
		Aff get coeff: 1
	Dom: { op_hcompute_conv_stencil_1[root = 0, conv_s1_z, conv_s1_y, conv_s1_x] : 0 <= conv_s1_z <= 2 and 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
		Dom range: 0
		Dom range: 2
		Dom range: 61
		Dom range: 61
Module: global.affine_controller__U9
  Type: {'clk':coreir.clkIn, 'valid':Bit, 'd':Bit[16][4], 'rst_n':BitIn}
  Def? Yes
Find compute
Done Finding compute , op Latency : 1, read Latency: 0
Delaying read
Returning delayed...
Returning delayed...
Delaying exe
Returning delayed...
Returning delayed...
Delaying writes
delaying 0, op_hcompute_conv_stencil_1_port_controller.valid
done with delay
Returning delayed...
delaying 0, op_hcompute_conv_stencil_1_port_controller.d
Casting to array...
Type of op_hcompute_conv_stencil_1_port_controller.d: Bit[16]
Getting array...
Width = 16
Len   = 4
Delaying array 
Starting delay with: op_hcompute_conv_stencil_1_port_controller.d
Done delaying
out = arr__U20.out
done with delay
Returning delayed...
getting incoming buffers to op_hcompute_conv_stencil_1
  consumed: conv_stencil_clkwrk_dsa0
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
Visit op: op_hcompute_conv_stencil
getting incoming buffers to op_hcompute_conv_stencil
Visit op: op_hcompute_hw_input_global_wrapper_stencil
getting incoming buffers to op_hcompute_hw_input_global_wrapper_stencil
  consumed: hw_input_stencil
Schedule to generate affine controller: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
pma: { op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x)] : root = 0 and pad_root_to_hw_input_global_wrapper_s0_y = 0 and 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
sched = { op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x)] }
  dom = { op_hcompute_hw_input_global_wrapper_stencil[root = 0, pad_root_to_hw_input_global_wrapper_s0_y = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
ls = { op_hcompute_hw_input_global_wrapper_stencil[root, pad_root_to_hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
v = 0
Add ub node to be aff ctrl
"dimensionality",4,0
"cycle_starting_addr",0,0
"extent_3",1,0
"cycle_stride_3",0,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
Generating Verilog Testing Collateral for: op_hcompute_hw_input_global_wrapper_stencil_port_controller
Module: cgralib.Mem_amber(ID:_U26, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'stencil_valid':Bit, 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U26__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validTrue__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
Find compute
Done Finding compute , op Latency : 0, read Latency: 0
Delaying read
Returning delayed...
Delaying exe
Returning delayed...
Delaying writes
Returning delayed...
Module: global.multi_channel_conv
  Type: {'clk':coreir.clkIn, 'reset':BitIn, 'hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read_en':Bit, 'hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read':BitIn[16][1], 'hw_output_stencil_op_hcompute_hw_output_stencil_write_valid':Bit, 'hw_output_stencil_op_hcompute_hw_output_stencil_write':Bit[16][1]}
  Def? Yes
  Def:
    Instances:
      _U30 : reg(has_clr:False, has_en:False, has_rst:False, width:16)
      arr__U20 : array_delay_U21
      conv_stencil : conv_stencil_ub
      conv_stencil_clkwrk_dsa0 : conv_stencil_clkwrk_dsa0_ub
      delay_reg__U18 : reg
      hw_input_global_wrapper_stencil : hw_input_global_wrapper_stencil_ub
      op_hcompute_conv_stencil : cu_op_hcompute_conv_stencil
      op_hcompute_conv_stencil_1 : cu_op_hcompute_conv_stencil_1
      op_hcompute_conv_stencil_1_exe_start : op_hcompute_conv_stencil_1_exe_start_pt__U15
      op_hcompute_conv_stencil_1_exe_start_control_vars : op_hcompute_conv_stencil_1_exe_start_control_vars_pt__U16
      op_hcompute_conv_stencil_1_port_controller : affine_controller__U9
      op_hcompute_conv_stencil_1_read_start : op_hcompute_conv_stencil_1_read_start_pt__U13
      op_hcompute_conv_stencil_1_read_start_control_vars : op_hcompute_conv_stencil_1_read_start_control_vars_pt__U14
      op_hcompute_conv_stencil_1_write_start : op_hcompute_conv_stencil_1_write_start_pt__U17
      op_hcompute_conv_stencil_1_write_start_control_vars : op_hcompute_conv_stencil_1_write_start_control_vars_pt__U19
      op_hcompute_hw_input_global_wrapper_stencil : cu_op_hcompute_hw_input_global_wrapper_stencil
      op_hcompute_hw_input_global_wrapper_stencil_exe_start : op_hcompute_hw_input_global_wrapper_stencil_exe_start_pt__U28
      op_hcompute_hw_input_global_wrapper_stencil_port_controller : Mem_amber(ID:_U26, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
      op_hcompute_hw_input_global_wrapper_stencil_port_controller_clk_en_const : const
      op_hcompute_hw_input_global_wrapper_stencil_read_start : op_hcompute_hw_input_global_wrapper_stencil_read_start_pt__U27
      op_hcompute_hw_input_global_wrapper_stencil_write_start : op_hcompute_hw_input_global_wrapper_stencil_write_start_pt__U29
      op_hcompute_hw_output_stencil : cu_op_hcompute_hw_output_stencil
      op_hcompute_hw_output_stencil_exe_start : op_hcompute_hw_output_stencil_exe_start_pt__U7
      op_hcompute_hw_output_stencil_port_controller : Mem_amber(ID:_U5, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
      op_hcompute_hw_output_stencil_port_controller_clk_en_const : const
      op_hcompute_hw_output_stencil_read_start : op_hcompute_hw_output_stencil_read_start_pt__U6
      op_hcompute_hw_output_stencil_write_start : op_hcompute_hw_output_stencil_write_start_pt__U8
    Connections:
      conv_stencil.reset <=> self.reset
      conv_stencil_clkwrk_dsa0.reset <=> self.reset
      hw_input_global_wrapper_stencil.reset <=> self.reset
      op_hcompute_hw_output_stencil_port_controller.flush <=> self.reset
      op_hcompute_conv_stencil_1_port_controller.rst_n <=> self.reset
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.flush <=> self.reset
      op_hcompute_hw_output_stencil.hw_output_stencil_op_hcompute_hw_output_stencil_write <=> self.hw_output_stencil_op_hcompute_hw_output_stencil_write
      op_hcompute_hw_output_stencil_port_controller.clk <=> self.clk
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.clk <=> self.clk
      op_hcompute_hw_output_stencil_port_controller.clk_en <=> op_hcompute_hw_output_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_output_stencil_port_controller.rst_n <=> op_hcompute_hw_output_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_output_stencil_port_controller.stencil_valid <=> op_hcompute_hw_output_stencil_read_start.in
      op_hcompute_hw_output_stencil_exe_start.in <=> op_hcompute_hw_output_stencil_port_controller.stencil_valid
      op_hcompute_hw_output_stencil_port_controller.stencil_valid <=> op_hcompute_hw_output_stencil_write_start.in
      op_hcompute_hw_output_stencil_write_start.out <=> self.hw_output_stencil_op_hcompute_hw_output_stencil_write_valid
      conv_stencil.op_hcompute_hw_output_stencil_read <=> op_hcompute_hw_output_stencil.conv_stencil_op_hcompute_hw_output_stencil_read
      op_hcompute_conv_stencil_1_port_controller.valid <=> op_hcompute_conv_stencil_1_read_start.in
      op_hcompute_conv_stencil_1_exe_start.in <=> op_hcompute_conv_stencil_1_port_controller.valid
      delay_reg__U18.in <=> op_hcompute_conv_stencil_1_port_controller.valid
      op_hcompute_conv_stencil_1_port_controller.d <=> op_hcompute_conv_stencil_1_read_start_control_vars.in
      op_hcompute_conv_stencil_1_exe_start_control_vars.in <=> op_hcompute_conv_stencil_1_port_controller.d
      arr__U20.in <=> op_hcompute_conv_stencil_1_port_controller.d
      delay_reg__U18.out <=> op_hcompute_conv_stencil_1_write_start.in
      arr__U20.out <=> op_hcompute_conv_stencil_1_write_start_control_vars.in
      op_hcompute_conv_stencil_1.conv_s1_z <=> op_hcompute_conv_stencil_1_exe_start_control_vars.out[1]
      conv_stencil.op_hcompute_conv_stencil_1_write <=> op_hcompute_conv_stencil_1.conv_stencil_op_hcompute_conv_stencil_1_write
      conv_stencil_clkwrk_dsa0.op_hcompute_conv_stencil_1_read <=> op_hcompute_conv_stencil_1.conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_read
      hw_input_global_wrapper_stencil.op_hcompute_conv_stencil_1_read <=> op_hcompute_conv_stencil_1.hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_read
      conv_stencil_clkwrk_dsa0.op_hcompute_conv_stencil_write <=> op_hcompute_conv_stencil.conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_write
      hw_input_global_wrapper_stencil.op_hcompute_hw_input_global_wrapper_stencil_write <=> op_hcompute_hw_input_global_wrapper_stencil.hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_write
      op_hcompute_hw_input_global_wrapper_stencil_exe_start.in <=> op_hcompute_hw_input_global_wrapper_stencil_port_controller.stencil_valid
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.clk_en <=> op_hcompute_hw_input_global_wrapper_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.rst_n <=> op_hcompute_hw_input_global_wrapper_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.stencil_valid <=> op_hcompute_hw_input_global_wrapper_stencil_read_start.in
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.stencil_valid <=> op_hcompute_hw_input_global_wrapper_stencil_write_start.in
      op_hcompute_hw_input_global_wrapper_stencil_read_start.out <=> self.hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read_en
      op_hcompute_hw_input_global_wrapper_stencil.hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read <=> self.hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read
      _U30.in <=> self.hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read[0]

Find top interface: clk
Find top interface: hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read
Find top interface: hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read_en
Find top interface: hw_output_stencil_op_hcompute_hw_output_stencil_write
Find top interface: hw_output_stencil_op_hcompute_hw_output_stencil_write_valid
Find top interface: reset
    Connect the read directly to write port of GLB!
    ub_hw_input_global_wrapper_stencil_bank_9(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    ub_hw_input_global_wrapper_stencil_bank_10(ID:_U1, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    ub_hw_input_global_wrapper_stencil_bank_11(ID:_U2, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    ub_hw_input_global_wrapper_stencil_bank_12(ID:_U3, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    ub_hw_input_global_wrapper_stencil_bank_13(ID:_U4, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    op_hcompute_hw_output_stencil_port_controller(ID:_U5, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
    Connect the read directly to write port of GLB!
    op_hcompute_conv_stencil_1_port_controller_Counter_1(ID:_U10, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:0, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
    Connect the read directly to write port of GLB!
    op_hcompute_conv_stencil_1_port_controller_Counter_2(ID:_U11, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:0, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    op_hcompute_conv_stencil_1_port_controller_Counter_3(ID:_U12, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:0, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    op_hcompute_hw_input_global_wrapper_stencil_port_controller(ID:_U26, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
inlining op_hcompute_hw_output_stencil_write_start
inlining op_hcompute_hw_output_stencil_read_start
inlining op_hcompute_hw_output_stencil_exe_start
inlining op_hcompute_hw_input_global_wrapper_stencil_write_start
inlining op_hcompute_hw_input_global_wrapper_stencil_read_start
inlining op_hcompute_hw_input_global_wrapper_stencil_exe_start
inlining op_hcompute_conv_stencil_1_write_start
inlining op_hcompute_conv_stencil_1_write_start_control_vars
inlining op_hcompute_conv_stencil_1_read_start
inlining op_hcompute_conv_stencil_1_read_start_control_vars
inlining op_hcompute_conv_stencil_1_exe_start
inlining op_hcompute_conv_stencil_1_exe_start_control_vars
inlining inner_compute$i2132_i2133_i131
inlining inner_compute$add_3951_401_i2148_i1110
inlining inner_compute$add_3952_407_i2154_i1110
inlining inner_compute$add_3953_413_i2162_i1110
inlining inner_compute$add_3954_419_i2168_i1110
inlining inner_compute$add_3955_425_i2175_i1110
inlining inner_compute$add_3956_431_i2181_i1110
inlining inner_compute$add_3957_437_i2190_i1110
inlining inner_compute$add_3958_443_i2196_i1110
inlining inner_compute$add_442_447_448_tree$_join_i2202_i1808
inlining inner_compute$add_442_447_448_tree$opN_0$_join_i2188_i364
inlining inner_compute$add_442_447_448_tree$opN_0$opN_0$opN_0$_join_i2146_i2127
inlining inner_compute$add_442_447_448_tree$opN_0$opN_0$opN_1$_join_i2159_i2127
inlining inner_compute$add_442_447_448_tree$opN_0$opN_1$_join_i2187_i1808
inlining inner_compute$add_442_447_448_tree$opN_0$opN_1$opN_0$_join_i2173_i2127
inlining inner_compute$add_442_447_448_tree$opN_0$opN_1$opN_1$_join_i2186_i2127
inlining inner_compute$add_442_447_448_tree$opN_1$_join_i2201_i2127
inlining inner_compute$i2205_i2206_i1653
inlining inner_compute$i2209_i2210_i1653
inlining inner_compute$i2213_i2214_i1653
inlining inner_compute$i2217_i2218_i1653
inlining inner_compute$i2221_i2222_i1653
inlining inner_compute$i2225_i2226_i1653
inlining inner_compute$i2229_i2230_i1653
inlining inner_compute$i2233_i2234_i1653
inlining inner_compute$i2237_i2238_i1653
inlining inner_compute$mul_402_403_404_i2152_i1461
inlining inner_compute$mul_414_415_416_i2166_i1461
inlining inner_compute$mul_426_427_428_i2179_i1461
inlining inner_compute$mul_438_439_440_i2194_i1461
inlining inner_compute$mul_conv_s1_z9_395_i2140_i1461
inlining i2132_i2133_i131
inlining add_3951_401_i2148_i1110
inlining add_3952_407_i2154_i1110
inlining add_3953_413_i2162_i1110
inlining add_3954_419_i2168_i1110
inlining add_3955_425_i2175_i1110
inlining add_3956_431_i2181_i1110
inlining add_3957_437_i2190_i1110
inlining add_3958_443_i2196_i1110
inlining add_442_447_448_tree$_join_i2202_i1808
inlining add_442_447_448_tree$opN_0$_join_i2188_i364
inlining add_442_447_448_tree$opN_0$opN_0$opN_0$_join_i2146_i2127
inlining add_442_447_448_tree$opN_0$opN_0$opN_1$_join_i2159_i2127
inlining add_442_447_448_tree$opN_0$opN_1$_join_i2187_i1808
inlining add_442_447_448_tree$opN_0$opN_1$opN_0$_join_i2173_i2127
inlining add_442_447_448_tree$opN_0$opN_1$opN_1$_join_i2186_i2127
inlining add_442_447_448_tree$opN_1$_join_i2201_i2127
inlining i2205_i2206_i1653
inlining i2209_i2210_i1653
inlining i2213_i2214_i1653
inlining i2217_i2218_i1653
inlining i2221_i2222_i1653
inlining i2225_i2226_i1653
inlining i2229_i2230_i1653
inlining i2233_i2234_i1653
inlining i2237_i2238_i1653
inlining mul_402_403_404_i2152_i1461
inlining mul_414_415_416_i2166_i1461
inlining mul_426_427_428_i2179_i1461
inlining mul_438_439_440_i2194_i1461
inlining mul_conv_s1_z9_395_i2140_i1461
inlining _U22
inlining _U23
inlining _U24
inlining _U25
inlining _U30
inlining op_hcompute_hw_output_stencil
inlining op_hcompute_hw_input_global_wrapper_stencil
inlining raddr_slice
inlining inner_compute$i2265
inlining inner_compute$i2266
inlining inner_compute$i2267
inlining inner_compute$i2268
inlining inner_compute$i2269
inlining inner_compute$i2270
inlining inner_compute$i2271
inlining inner_compute$i2272
inlining inner_compute$i2273
inlining inner_compute$i2274
inlining i2265
inlining i2266
inlining i2267
inlining i2268
inlining i2269
inlining i2270
inlining i2271
inlining i2272
inlining i2273
inlining i2274
inlining reg0
inlining enMux
inlining readreg
inlining mem
inlining inner_compute$c0
inlining inner_compute$c0
inlining inner_compute$c1
inlining inner_compute$c10
inlining inner_compute$c11
inlining inner_compute$c12
inlining inner_compute$c13
inlining inner_compute$c14
inlining inner_compute$c15
inlining inner_compute$c16
inlining inner_compute$c17
inlining inner_compute$c18
inlining inner_compute$c19
inlining inner_compute$c2
inlining inner_compute$c20
inlining inner_compute$c21
inlining inner_compute$c22
inlining inner_compute$c23
inlining inner_compute$c24
inlining inner_compute$c25
inlining inner_compute$c26
inlining inner_compute$c27
inlining inner_compute$c28
inlining inner_compute$c29
inlining inner_compute$c3
inlining inner_compute$c4
inlining inner_compute$c5
inlining inner_compute$c6
inlining inner_compute$c7
inlining inner_compute$c8
inlining inner_compute$c9
inlining c0
inlining c0
inlining c1
inlining c10
inlining c11
inlining c12
inlining c13
inlining c14
inlining c15
inlining c16
inlining c17
inlining c18
inlining c19
inlining c2
inlining c20
inlining c21
inlining c22
inlining c23
inlining c24
inlining c25
inlining c26
inlining c27
inlining c28
inlining c29
inlining c3
inlining c4
inlining c5
inlining c6
inlining c7
inlining c8
inlining c9
inlining op_hcompute_conv_stencil
inlining waddr0
inlining const_0
inlining wdata0
not inlining inner_compute$rom_kernela0 inner_compute$rom_kernela0
not inlining inner_compute$rom_kernela0$1 inner_compute$rom_kernela0$1
not inlining inner_compute$rom_kernela0$2 inner_compute$rom_kernela0$2
not inlining inner_compute$rom_kernela0$3 inner_compute$rom_kernela0$3
not inlining inner_compute$rom_kernela0$4 inner_compute$rom_kernela0$4
not inlining inner_compute$rom_kernela0$5 inner_compute$rom_kernela0$5
not inlining inner_compute$rom_kernela0$6 inner_compute$rom_kernela0$6
not inlining inner_compute$rom_kernela0$7 inner_compute$rom_kernela0$7
not inlining inner_compute$rom_kernela0$8 inner_compute$rom_kernela0$8
not inlining rom_kernela0 rom_kernela0
not inlining rom_kernela0$1 rom_kernela0$1
not inlining rom_kernela0$2 rom_kernela0$2
not inlining rom_kernela0$3 rom_kernela0$3
not inlining rom_kernela0$4 rom_kernela0$4
not inlining rom_kernela0$5 rom_kernela0$5
not inlining rom_kernela0$6 rom_kernela0$6
not inlining rom_kernela0$7 rom_kernela0$7
not inlining rom_kernela0$8 rom_kernela0$8
inlining op_hcompute_conv_stencil_1
inlining delay_reg__U18
inlining op_hcompute_conv_stencil_1_port_controller_clk_en_const
inlining ub_hw_input_global_wrapper_stencil_bank_10_clk_en_const
inlining ub_hw_input_global_wrapper_stencil_bank_11_clk_en_const
inlining ub_hw_input_global_wrapper_stencil_bank_12_clk_en_const
inlining ub_hw_input_global_wrapper_stencil_bank_13_clk_en_const
inlining ub_hw_input_global_wrapper_stencil_bank_9_clk_en_const
inlining op_hcompute_hw_input_global_wrapper_stencil_port_controller_clk_en_const
inlining op_hcompute_hw_output_stencil_port_controller_clk_en_const
inlining conv_stencil
inlining conv_stencil_clkwrk_dsa0
inlining op_hcompute_hw_output_stencil_port_controller
inlining ub_hw_input_global_wrapper_stencil_bank_13
inlining ub_hw_input_global_wrapper_stencil_bank_12
inlining ub_hw_input_global_wrapper_stencil_bank_11
inlining op_hcompute_hw_input_global_wrapper_stencil_port_controller
inlining ub_hw_input_global_wrapper_stencil_bank_10
inlining op_hcompute_conv_stencil_1_port_controller_Counter_3
inlining op_hcompute_conv_stencil_1_port_controller_Counter_2
inlining op_hcompute_conv_stencil_1_port_controller_Counter_1
inlining ub_hw_input_global_wrapper_stencil_bank_9
inlining hw_input_global_wrapper_stencil
inlining arr__U20
inlining op_hcompute_conv_stencil_1_port_controller
    new rom syntax transformation!
    rom_kernela0$1(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    rom_kernela0(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    rom_kernela0$4(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    rom_kernela0$2(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    rom_kernela0$3(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    rom_kernela0$6(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    rom_kernela0$5(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    rom_kernela0$7(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    rom_kernela0$8(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    inner_compute$rom_kernela0(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    inner_compute$rom_kernela0$1(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    inner_compute$rom_kernela0$2(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    inner_compute$rom_kernela0$3(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    inner_compute$rom_kernela0$4(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    inner_compute$rom_kernela0$5(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    inner_compute$rom_kernela0$6(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    inner_compute$rom_kernela0$7(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    inner_compute$rom_kernela0$8(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    op_hcompute_conv_stencil_1$inner_compute$rom_kernela0(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    op_hcompute_conv_stencil_1$inner_compute$rom_kernela0$1(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    op_hcompute_conv_stencil_1$inner_compute$rom_kernela0$2(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    op_hcompute_conv_stencil_1$inner_compute$rom_kernela0$3(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    op_hcompute_conv_stencil_1$inner_compute$rom_kernela0$4(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    op_hcompute_conv_stencil_1$inner_compute$rom_kernela0$5(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    op_hcompute_conv_stencil_1$inner_compute$rom_kernela0$6(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    op_hcompute_conv_stencil_1$inner_compute$rom_kernela0$7(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new rom syntax transformation!
    op_hcompute_conv_stencil_1$inner_compute$rom_kernela0$8(depth:28, width:16)(init:[11,14,17,12,0,18,13,16,19,21,24,27,22,2,28,23,26,29,31,34,37,32,3,38,33,36,39,153]) : memory.rom2
    Sel: clk
    Sel: raddr
    Sel: rdata
    Sel: ren
Wiring raddr
Wiring ren
Wiring rdata
    new memory syntax transformation!
    ub_hw_input_global_wrapper_stencil_bank_9(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    ub_hw_input_global_wrapper_stencil_bank_10(ID:_U1, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    ub_hw_input_global_wrapper_stencil_bank_11(ID:_U2, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    ub_hw_input_global_wrapper_stencil_bank_12(ID:_U3, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    ub_hw_input_global_wrapper_stencil_bank_13(ID:_U4, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    op_hcompute_hw_output_stencil_port_controller(ID:_U5, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: stencil_valid to O4
Connecting cnst_port: flush
    new memory syntax transformation!
    op_hcompute_conv_stencil_1_port_controller_Counter_1(ID:_U10, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:0, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: stencil_valid to O4
Connecting cnst_port: flush
    new memory syntax transformation!
    op_hcompute_conv_stencil_1_port_controller_Counter_2(ID:_U11, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:0, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    op_hcompute_conv_stencil_1_port_controller_Counter_3(ID:_U12, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:0, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    op_hcompute_hw_input_global_wrapper_stencil_port_controller(ID:_U26, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: stencil_valid to O4
Connecting cnst_port: flush
    new memory syntax transformation!
    hw_input_global_wrapper_stencil$ub_hw_input_global_wrapper_stencil_bank_10(ID:_U1, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    hw_input_global_wrapper_stencil$ub_hw_input_global_wrapper_stencil_bank_11(ID:_U2, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    hw_input_global_wrapper_stencil$ub_hw_input_global_wrapper_stencil_bank_12(ID:_U3, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    hw_input_global_wrapper_stencil$ub_hw_input_global_wrapper_stencil_bank_13(ID:_U4, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    hw_input_global_wrapper_stencil$ub_hw_input_global_wrapper_stencil_bank_9(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    op_hcompute_conv_stencil_1_port_controller$op_hcompute_conv_stencil_1_port_controller_Counter_1(ID:_U10, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:0, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: stencil_valid to O4
Connecting cnst_port: flush
    new memory syntax transformation!
    op_hcompute_conv_stencil_1_port_controller$op_hcompute_conv_stencil_1_port_controller_Counter_2(ID:_U11, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:0, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    op_hcompute_conv_stencil_1_port_controller$op_hcompute_conv_stencil_1_port_controller_Counter_3(ID:_U12, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:0, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
