program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = -3; padded16_global_wrapper_s0_y < 61; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = -3; padded16_global_wrapper_s0_x < 61; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[(padded16_global_wrapper_s0_y + 3), (padded16_global_wrapper_s0_x + 3)] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x])
    }
  }
  for (int grad_x_unclamp_s0_y = -2; grad_x_unclamp_s0_y < 60; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = -2; grad_x_unclamp_s0_x < 60; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil[(grad_x_unclamp_s0_y + 2), (grad_x_unclamp_s0_x + 2)] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = -2; grad_x_unclamp_s1_y < 60; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = -2; grad_x_unclamp_s1_x < 60; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 2)])
    }
  }
  for (int lxx_s0_y = -2; lxx_s0_y < 60; lxx_s0_y++) {
    for (int lxx_s0_x = -2; lxx_s0_x < 60; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)] = hcompute_lxx_stencil(grad_x_unclamp_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)])
    }
  }
  for (int lgxx_s0_y = -1; lgxx_s0_y < 59; lgxx_s0_y++) {
    for (int lgxx_s0_x = -1; lgxx_s0_x < 59; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil[(lgxx_s0_y + 1), (lgxx_s0_x + 1)] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = -1; lgxx_s1_y < 59; lgxx_s1_y++) {
    for (int lgxx_s1_x = -1; lgxx_s1_x < 59; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)] = hcompute_lgxx_stencil_1(lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 2)])
    }
  }
  for (int grad_y_unclamp_s0_y = -2; grad_y_unclamp_s0_y < 60; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = -2; grad_y_unclamp_s0_x < 60; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil[(grad_y_unclamp_s0_y + 2), (grad_y_unclamp_s0_x + 2)] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = -2; grad_y_unclamp_s1_y < 60; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = -2; grad_y_unclamp_s1_x < 60; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 3)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 3)])
    }
  }
  for (int lxy_s0_y = -2; lxy_s0_y < 60; lxy_s0_y++) {
    for (int lxy_s0_x = -2; lxy_s0_x < 60; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)] = hcompute_lxy_stencil(grad_x_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)], grad_y_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)])
    }
  }
  for (int lgxy_s0_y = -1; lgxy_s0_y < 59; lgxy_s0_y++) {
    for (int lgxy_s0_x = -1; lgxy_s0_x < 59; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil[(lgxy_s0_y + 1), (lgxy_s0_x + 1)] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = -1; lgxy_s1_y < 59; lgxy_s1_y++) {
    for (int lgxy_s1_x = -1; lgxy_s1_x < 59; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)] = hcompute_lgxy_stencil_1(lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 2)])
    }
  }
  for (int lyy_s0_y = -2; lyy_s0_y < 60; lyy_s0_y++) {
    for (int lyy_s0_x = -2; lyy_s0_x < 60; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)] = hcompute_lyy_stencil(grad_y_unclamp_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)])
    }
  }
  for (int lgyy_s0_y = -1; lgyy_s0_y < 59; lgyy_s0_y++) {
    for (int lgyy_s0_x = -1; lgyy_s0_x < 59; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil[(lgyy_s0_y + 1), (lgyy_s0_x + 1)] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = -1; lgyy_s1_y < 59; lgyy_s1_y++) {
    for (int lgyy_s1_x = -1; lgyy_s1_x < 59; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)] = hcompute_lgyy_stencil_1(lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 2)])
    }
  }
  for (int cim_s0_y = -1; cim_s0_y < 59; cim_s0_y++) {
    for (int cim_s0_x = -1; cim_s0_x < 59; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[(cim_s0_y + 1), (cim_s0_x + 1)] = hcompute_cim_stencil(lgxx_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgxy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgyy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y, cim_output_s0_x] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y, cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 1), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 2), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 1)], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 2)])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
Is rate matchable
reduced kernel : grad_x_unclamp_stencil
reduced kernel : lgxx_stencil
reduced kernel : grad_y_unclamp_stencil
reduced kernel : lgxy_stencil
reduced kernel : lgyy_stencil
insert kernel: cim_output_s0_y to producer buffer: cim_output_stencil
insert kernel: cim_s0_y to producer buffer: cim_stencil
insert kernel: grad_x_unclamp_s0_y to producer buffer: grad_x_unclamp_stencil
insert kernel: grad_x_unclamp_s1_y to producer buffer: grad_x_unclamp_stencil
insert kernel: grad_y_unclamp_s0_y to producer buffer: grad_y_unclamp_stencil
insert kernel: grad_y_unclamp_s1_y to producer buffer: grad_y_unclamp_stencil
insert kernel: hw_output_s0_y_yi to producer buffer: hw_output_stencil
insert kernel: lgxx_s0_y to producer buffer: lgxx_stencil
insert kernel: lgxx_s1_y to producer buffer: lgxx_stencil
insert kernel: lgxy_s0_y to producer buffer: lgxy_stencil
insert kernel: lgxy_s1_y to producer buffer: lgxy_stencil
insert kernel: lgyy_s0_y to producer buffer: lgyy_stencil
insert kernel: lgyy_s1_y to producer buffer: lgyy_stencil
insert kernel: lxx_s0_y to producer buffer: lxx_stencil
insert kernel: lxy_s0_y to producer buffer: lxy_stencil
insert kernel: lyy_s0_y to producer buffer: lyy_stencil
insert kernel: padded16_global_wrapper_s0_y to producer buffer: padded16_global_wrapper_stencil
Producer kernels...
  cim_output_stencil -> cim_output_s0_y 
  cim_stencil -> cim_s0_y 
  grad_x_unclamp_stencil -> grad_x_unclamp_s0_y grad_x_unclamp_s1_y 
    MULTIPLE PRODUCERS
  grad_y_unclamp_stencil -> grad_y_unclamp_s0_y grad_y_unclamp_s1_y 
    MULTIPLE PRODUCERS
  hw_output_stencil -> hw_output_s0_y_yi 
  lgxx_stencil -> lgxx_s0_y lgxx_s1_y 
    MULTIPLE PRODUCERS
  lgxy_stencil -> lgxy_s0_y lgxy_s1_y 
    MULTIPLE PRODUCERS
  lgyy_stencil -> lgyy_s0_y lgyy_s1_y 
    MULTIPLE PRODUCERS
  lxx_stencil -> lxx_s0_y 
  lxy_stencil -> lxy_s0_y 
  lyy_stencil -> lyy_s0_y 
  padded16_global_wrapper_stencil -> padded16_global_wrapper_s0_y 
grad_x_unclamp_stencil has 2 producers
  grad_x_unclamp_s0_y
  grad_x_unclamp_s1_y
program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = -3; padded16_global_wrapper_s0_y < 61; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = -3; padded16_global_wrapper_s0_x < 61; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[(padded16_global_wrapper_s0_y + 3), (padded16_global_wrapper_s0_x + 3)] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x])
    }
  }
  for (int grad_x_unclamp_s0_y = -2; grad_x_unclamp_s0_y < 60; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = -2; grad_x_unclamp_s0_x < 60; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil[(grad_x_unclamp_s0_y + 2), (grad_x_unclamp_s0_x + 2)] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = -2; grad_x_unclamp_s1_y < 60; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = -2; grad_x_unclamp_s1_x < 60; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 2)])
    }
  }
  for (int lxx_s0_y = -2; lxx_s0_y < 60; lxx_s0_y++) {
    for (int lxx_s0_x = -2; lxx_s0_x < 60; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)] = hcompute_lxx_stencil(grad_x_unclamp_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)])
    }
  }
  for (int lgxx_s0_y = -1; lgxx_s0_y < 59; lgxx_s0_y++) {
    for (int lgxx_s0_x = -1; lgxx_s0_x < 59; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil[(lgxx_s0_y + 1), (lgxx_s0_x + 1)] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = -1; lgxx_s1_y < 59; lgxx_s1_y++) {
    for (int lgxx_s1_x = -1; lgxx_s1_x < 59; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)] = hcompute_lgxx_stencil_1(lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 2)])
    }
  }
  for (int grad_y_unclamp_s0_y = -2; grad_y_unclamp_s0_y < 60; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = -2; grad_y_unclamp_s0_x < 60; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil[(grad_y_unclamp_s0_y + 2), (grad_y_unclamp_s0_x + 2)] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = -2; grad_y_unclamp_s1_y < 60; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = -2; grad_y_unclamp_s1_x < 60; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 3)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 3)])
    }
  }
  for (int lxy_s0_y = -2; lxy_s0_y < 60; lxy_s0_y++) {
    for (int lxy_s0_x = -2; lxy_s0_x < 60; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)] = hcompute_lxy_stencil(grad_x_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)], grad_y_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)])
    }
  }
  for (int lgxy_s0_y = -1; lgxy_s0_y < 59; lgxy_s0_y++) {
    for (int lgxy_s0_x = -1; lgxy_s0_x < 59; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil[(lgxy_s0_y + 1), (lgxy_s0_x + 1)] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = -1; lgxy_s1_y < 59; lgxy_s1_y++) {
    for (int lgxy_s1_x = -1; lgxy_s1_x < 59; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)] = hcompute_lgxy_stencil_1(lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 2)])
    }
  }
  for (int lyy_s0_y = -2; lyy_s0_y < 60; lyy_s0_y++) {
    for (int lyy_s0_x = -2; lyy_s0_x < 60; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)] = hcompute_lyy_stencil(grad_y_unclamp_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)])
    }
  }
  for (int lgyy_s0_y = -1; lgyy_s0_y < 59; lgyy_s0_y++) {
    for (int lgyy_s0_x = -1; lgyy_s0_x < 59; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil[(lgyy_s0_y + 1), (lgyy_s0_x + 1)] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = -1; lgyy_s1_y < 59; lgyy_s1_y++) {
    for (int lgyy_s1_x = -1; lgyy_s1_x < 59; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)] = hcompute_lgyy_stencil_1(lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 2)])
    }
  }
  for (int cim_s0_y = -1; cim_s0_y < 59; cim_s0_y++) {
    for (int cim_s0_x = -1; cim_s0_x < 59; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[(cim_s0_y + 1), (cim_s0_x + 1)] = hcompute_cim_stencil(lgxx_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgxy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgyy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y, cim_output_s0_x] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y, cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 1), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 2), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 1)], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 2)])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
grad_x_unclamp_stencil has 2 producers
  grad_x_unclamp_s0_y
  grad_x_unclamp_s1_y
program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = -3; padded16_global_wrapper_s0_y < 61; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = -3; padded16_global_wrapper_s0_x < 61; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[(padded16_global_wrapper_s0_y + 3), (padded16_global_wrapper_s0_x + 3)] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x])
    }
  }
  for (int grad_x_unclamp_s0_y = -2; grad_x_unclamp_s0_y < 60; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = -2; grad_x_unclamp_s0_x < 60; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil[(grad_x_unclamp_s0_y + 2), (grad_x_unclamp_s0_x + 2)] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = -2; grad_x_unclamp_s1_y < 60; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = -2; grad_x_unclamp_s1_x < 60; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 2)])
    }
  }
  for (int lxx_s0_y = -2; lxx_s0_y < 60; lxx_s0_y++) {
    for (int lxx_s0_x = -2; lxx_s0_x < 60; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)] = hcompute_lxx_stencil(grad_x_unclamp_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)])
    }
  }
  for (int lgxx_s0_y = -1; lgxx_s0_y < 59; lgxx_s0_y++) {
    for (int lgxx_s0_x = -1; lgxx_s0_x < 59; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil[(lgxx_s0_y + 1), (lgxx_s0_x + 1)] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = -1; lgxx_s1_y < 59; lgxx_s1_y++) {
    for (int lgxx_s1_x = -1; lgxx_s1_x < 59; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)] = hcompute_lgxx_stencil_1(lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 2)])
    }
  }
  for (int grad_y_unclamp_s0_y = -2; grad_y_unclamp_s0_y < 60; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = -2; grad_y_unclamp_s0_x < 60; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil[(grad_y_unclamp_s0_y + 2), (grad_y_unclamp_s0_x + 2)] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = -2; grad_y_unclamp_s1_y < 60; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = -2; grad_y_unclamp_s1_x < 60; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 3)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 3)])
    }
  }
  for (int lxy_s0_y = -2; lxy_s0_y < 60; lxy_s0_y++) {
    for (int lxy_s0_x = -2; lxy_s0_x < 60; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)] = hcompute_lxy_stencil(grad_x_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)], grad_y_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)])
    }
  }
  for (int lgxy_s0_y = -1; lgxy_s0_y < 59; lgxy_s0_y++) {
    for (int lgxy_s0_x = -1; lgxy_s0_x < 59; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil[(lgxy_s0_y + 1), (lgxy_s0_x + 1)] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = -1; lgxy_s1_y < 59; lgxy_s1_y++) {
    for (int lgxy_s1_x = -1; lgxy_s1_x < 59; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)] = hcompute_lgxy_stencil_1(lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 2)])
    }
  }
  for (int lyy_s0_y = -2; lyy_s0_y < 60; lyy_s0_y++) {
    for (int lyy_s0_x = -2; lyy_s0_x < 60; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)] = hcompute_lyy_stencil(grad_y_unclamp_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)])
    }
  }
  for (int lgyy_s0_y = -1; lgyy_s0_y < 59; lgyy_s0_y++) {
    for (int lgyy_s0_x = -1; lgyy_s0_x < 59; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil[(lgyy_s0_y + 1), (lgyy_s0_x + 1)] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = -1; lgyy_s1_y < 59; lgyy_s1_y++) {
    for (int lgyy_s1_x = -1; lgyy_s1_x < 59; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)] = hcompute_lgyy_stencil_1(lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 2)])
    }
  }
  for (int cim_s0_y = -1; cim_s0_y < 59; cim_s0_y++) {
    for (int cim_s0_x = -1; cim_s0_x < 59; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[(cim_s0_y + 1), (cim_s0_x + 1)] = hcompute_cim_stencil(lgxx_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgxy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgyy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y, cim_output_s0_x] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y, cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 1), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 2), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 1)], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 2)])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
grad_y_unclamp_stencil has 2 producers
  grad_y_unclamp_s0_y
  grad_y_unclamp_s1_y
program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = -3; padded16_global_wrapper_s0_y < 61; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = -3; padded16_global_wrapper_s0_x < 61; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[(padded16_global_wrapper_s0_y + 3), (padded16_global_wrapper_s0_x + 3)] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x])
    }
  }
  for (int grad_x_unclamp_s0_y = -2; grad_x_unclamp_s0_y < 60; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = -2; grad_x_unclamp_s0_x < 60; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil[(grad_x_unclamp_s0_y + 2), (grad_x_unclamp_s0_x + 2)] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = -2; grad_x_unclamp_s1_y < 60; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = -2; grad_x_unclamp_s1_x < 60; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 2)])
    }
  }
  for (int lxx_s0_y = -2; lxx_s0_y < 60; lxx_s0_y++) {
    for (int lxx_s0_x = -2; lxx_s0_x < 60; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)] = hcompute_lxx_stencil(grad_x_unclamp_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)])
    }
  }
  for (int lgxx_s0_y = -1; lgxx_s0_y < 59; lgxx_s0_y++) {
    for (int lgxx_s0_x = -1; lgxx_s0_x < 59; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil[(lgxx_s0_y + 1), (lgxx_s0_x + 1)] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = -1; lgxx_s1_y < 59; lgxx_s1_y++) {
    for (int lgxx_s1_x = -1; lgxx_s1_x < 59; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)] = hcompute_lgxx_stencil_1(lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 2)])
    }
  }
  for (int grad_y_unclamp_s0_y = -2; grad_y_unclamp_s0_y < 60; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = -2; grad_y_unclamp_s0_x < 60; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil[(grad_y_unclamp_s0_y + 2), (grad_y_unclamp_s0_x + 2)] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = -2; grad_y_unclamp_s1_y < 60; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = -2; grad_y_unclamp_s1_x < 60; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 3)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 3)])
    }
  }
  for (int lxy_s0_y = -2; lxy_s0_y < 60; lxy_s0_y++) {
    for (int lxy_s0_x = -2; lxy_s0_x < 60; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)] = hcompute_lxy_stencil(grad_x_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)], grad_y_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)])
    }
  }
  for (int lgxy_s0_y = -1; lgxy_s0_y < 59; lgxy_s0_y++) {
    for (int lgxy_s0_x = -1; lgxy_s0_x < 59; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil[(lgxy_s0_y + 1), (lgxy_s0_x + 1)] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = -1; lgxy_s1_y < 59; lgxy_s1_y++) {
    for (int lgxy_s1_x = -1; lgxy_s1_x < 59; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)] = hcompute_lgxy_stencil_1(lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 2)])
    }
  }
  for (int lyy_s0_y = -2; lyy_s0_y < 60; lyy_s0_y++) {
    for (int lyy_s0_x = -2; lyy_s0_x < 60; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)] = hcompute_lyy_stencil(grad_y_unclamp_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)])
    }
  }
  for (int lgyy_s0_y = -1; lgyy_s0_y < 59; lgyy_s0_y++) {
    for (int lgyy_s0_x = -1; lgyy_s0_x < 59; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil[(lgyy_s0_y + 1), (lgyy_s0_x + 1)] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = -1; lgyy_s1_y < 59; lgyy_s1_y++) {
    for (int lgyy_s1_x = -1; lgyy_s1_x < 59; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)] = hcompute_lgyy_stencil_1(lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 2)])
    }
  }
  for (int cim_s0_y = -1; cim_s0_y < 59; cim_s0_y++) {
    for (int cim_s0_x = -1; cim_s0_x < 59; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[(cim_s0_y + 1), (cim_s0_x + 1)] = hcompute_cim_stencil(lgxx_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgxy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgyy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y, cim_output_s0_x] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y, cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 1), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 2), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 1)], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 2)])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
grad_y_unclamp_stencil has 2 producers
  grad_y_unclamp_s0_y
  grad_y_unclamp_s1_y
program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = -3; padded16_global_wrapper_s0_y < 61; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = -3; padded16_global_wrapper_s0_x < 61; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[(padded16_global_wrapper_s0_y + 3), (padded16_global_wrapper_s0_x + 3)] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x])
    }
  }
  for (int grad_x_unclamp_s0_y = -2; grad_x_unclamp_s0_y < 60; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = -2; grad_x_unclamp_s0_x < 60; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil[(grad_x_unclamp_s0_y + 2), (grad_x_unclamp_s0_x + 2)] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = -2; grad_x_unclamp_s1_y < 60; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = -2; grad_x_unclamp_s1_x < 60; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 2)])
    }
  }
  for (int lxx_s0_y = -2; lxx_s0_y < 60; lxx_s0_y++) {
    for (int lxx_s0_x = -2; lxx_s0_x < 60; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)] = hcompute_lxx_stencil(grad_x_unclamp_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)])
    }
  }
  for (int lgxx_s0_y = -1; lgxx_s0_y < 59; lgxx_s0_y++) {
    for (int lgxx_s0_x = -1; lgxx_s0_x < 59; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil[(lgxx_s0_y + 1), (lgxx_s0_x + 1)] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = -1; lgxx_s1_y < 59; lgxx_s1_y++) {
    for (int lgxx_s1_x = -1; lgxx_s1_x < 59; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)] = hcompute_lgxx_stencil_1(lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 2)])
    }
  }
  for (int grad_y_unclamp_s0_y = -2; grad_y_unclamp_s0_y < 60; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = -2; grad_y_unclamp_s0_x < 60; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil[(grad_y_unclamp_s0_y + 2), (grad_y_unclamp_s0_x + 2)] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = -2; grad_y_unclamp_s1_y < 60; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = -2; grad_y_unclamp_s1_x < 60; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 3)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 3)])
    }
  }
  for (int lxy_s0_y = -2; lxy_s0_y < 60; lxy_s0_y++) {
    for (int lxy_s0_x = -2; lxy_s0_x < 60; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)] = hcompute_lxy_stencil(grad_x_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)], grad_y_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)])
    }
  }
  for (int lgxy_s0_y = -1; lgxy_s0_y < 59; lgxy_s0_y++) {
    for (int lgxy_s0_x = -1; lgxy_s0_x < 59; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil[(lgxy_s0_y + 1), (lgxy_s0_x + 1)] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = -1; lgxy_s1_y < 59; lgxy_s1_y++) {
    for (int lgxy_s1_x = -1; lgxy_s1_x < 59; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)] = hcompute_lgxy_stencil_1(lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 2)])
    }
  }
  for (int lyy_s0_y = -2; lyy_s0_y < 60; lyy_s0_y++) {
    for (int lyy_s0_x = -2; lyy_s0_x < 60; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)] = hcompute_lyy_stencil(grad_y_unclamp_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)])
    }
  }
  for (int lgyy_s0_y = -1; lgyy_s0_y < 59; lgyy_s0_y++) {
    for (int lgyy_s0_x = -1; lgyy_s0_x < 59; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil[(lgyy_s0_y + 1), (lgyy_s0_x + 1)] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = -1; lgyy_s1_y < 59; lgyy_s1_y++) {
    for (int lgyy_s1_x = -1; lgyy_s1_x < 59; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)] = hcompute_lgyy_stencil_1(lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 2)])
    }
  }
  for (int cim_s0_y = -1; cim_s0_y < 59; cim_s0_y++) {
    for (int cim_s0_x = -1; cim_s0_x < 59; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[(cim_s0_y + 1), (cim_s0_x + 1)] = hcompute_cim_stencil(lgxx_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgxy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgyy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y, cim_output_s0_x] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y, cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 1), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 2), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 1)], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 2)])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
lgxx_stencil has 2 producers
  lgxx_s0_y
  lgxx_s1_y
program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = -3; padded16_global_wrapper_s0_y < 61; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = -3; padded16_global_wrapper_s0_x < 61; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[(padded16_global_wrapper_s0_y + 3), (padded16_global_wrapper_s0_x + 3)] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x])
    }
  }
  for (int grad_x_unclamp_s0_y = -2; grad_x_unclamp_s0_y < 60; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = -2; grad_x_unclamp_s0_x < 60; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil[(grad_x_unclamp_s0_y + 2), (grad_x_unclamp_s0_x + 2)] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = -2; grad_x_unclamp_s1_y < 60; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = -2; grad_x_unclamp_s1_x < 60; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 2)])
    }
  }
  for (int lxx_s0_y = -2; lxx_s0_y < 60; lxx_s0_y++) {
    for (int lxx_s0_x = -2; lxx_s0_x < 60; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)] = hcompute_lxx_stencil(grad_x_unclamp_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)])
    }
  }
  for (int lgxx_s0_y = -1; lgxx_s0_y < 59; lgxx_s0_y++) {
    for (int lgxx_s0_x = -1; lgxx_s0_x < 59; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil[(lgxx_s0_y + 1), (lgxx_s0_x + 1)] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = -1; lgxx_s1_y < 59; lgxx_s1_y++) {
    for (int lgxx_s1_x = -1; lgxx_s1_x < 59; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)] = hcompute_lgxx_stencil_1(lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 2)])
    }
  }
  for (int grad_y_unclamp_s0_y = -2; grad_y_unclamp_s0_y < 60; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = -2; grad_y_unclamp_s0_x < 60; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil[(grad_y_unclamp_s0_y + 2), (grad_y_unclamp_s0_x + 2)] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = -2; grad_y_unclamp_s1_y < 60; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = -2; grad_y_unclamp_s1_x < 60; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 3)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 3)])
    }
  }
  for (int lxy_s0_y = -2; lxy_s0_y < 60; lxy_s0_y++) {
    for (int lxy_s0_x = -2; lxy_s0_x < 60; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)] = hcompute_lxy_stencil(grad_x_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)], grad_y_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)])
    }
  }
  for (int lgxy_s0_y = -1; lgxy_s0_y < 59; lgxy_s0_y++) {
    for (int lgxy_s0_x = -1; lgxy_s0_x < 59; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil[(lgxy_s0_y + 1), (lgxy_s0_x + 1)] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = -1; lgxy_s1_y < 59; lgxy_s1_y++) {
    for (int lgxy_s1_x = -1; lgxy_s1_x < 59; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)] = hcompute_lgxy_stencil_1(lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 2)])
    }
  }
  for (int lyy_s0_y = -2; lyy_s0_y < 60; lyy_s0_y++) {
    for (int lyy_s0_x = -2; lyy_s0_x < 60; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)] = hcompute_lyy_stencil(grad_y_unclamp_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)])
    }
  }
  for (int lgyy_s0_y = -1; lgyy_s0_y < 59; lgyy_s0_y++) {
    for (int lgyy_s0_x = -1; lgyy_s0_x < 59; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil[(lgyy_s0_y + 1), (lgyy_s0_x + 1)] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = -1; lgyy_s1_y < 59; lgyy_s1_y++) {
    for (int lgyy_s1_x = -1; lgyy_s1_x < 59; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)] = hcompute_lgyy_stencil_1(lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 2)])
    }
  }
  for (int cim_s0_y = -1; cim_s0_y < 59; cim_s0_y++) {
    for (int cim_s0_x = -1; cim_s0_x < 59; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[(cim_s0_y + 1), (cim_s0_x + 1)] = hcompute_cim_stencil(lgxx_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgxy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgyy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y, cim_output_s0_x] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y, cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 1), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 2), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 1)], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 2)])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
lgxx_stencil has 2 producers
  lgxx_s0_y
  lgxx_s1_y
program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = -3; padded16_global_wrapper_s0_y < 61; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = -3; padded16_global_wrapper_s0_x < 61; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[(padded16_global_wrapper_s0_y + 3), (padded16_global_wrapper_s0_x + 3)] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x])
    }
  }
  for (int grad_x_unclamp_s0_y = -2; grad_x_unclamp_s0_y < 60; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = -2; grad_x_unclamp_s0_x < 60; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil[(grad_x_unclamp_s0_y + 2), (grad_x_unclamp_s0_x + 2)] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = -2; grad_x_unclamp_s1_y < 60; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = -2; grad_x_unclamp_s1_x < 60; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 2)])
    }
  }
  for (int lxx_s0_y = -2; lxx_s0_y < 60; lxx_s0_y++) {
    for (int lxx_s0_x = -2; lxx_s0_x < 60; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)] = hcompute_lxx_stencil(grad_x_unclamp_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)])
    }
  }
  for (int lgxx_s0_y = -1; lgxx_s0_y < 59; lgxx_s0_y++) {
    for (int lgxx_s0_x = -1; lgxx_s0_x < 59; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil[(lgxx_s0_y + 1), (lgxx_s0_x + 1)] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = -1; lgxx_s1_y < 59; lgxx_s1_y++) {
    for (int lgxx_s1_x = -1; lgxx_s1_x < 59; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)] = hcompute_lgxx_stencil_1(lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 2)])
    }
  }
  for (int grad_y_unclamp_s0_y = -2; grad_y_unclamp_s0_y < 60; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = -2; grad_y_unclamp_s0_x < 60; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil[(grad_y_unclamp_s0_y + 2), (grad_y_unclamp_s0_x + 2)] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = -2; grad_y_unclamp_s1_y < 60; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = -2; grad_y_unclamp_s1_x < 60; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 3)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 3)])
    }
  }
  for (int lxy_s0_y = -2; lxy_s0_y < 60; lxy_s0_y++) {
    for (int lxy_s0_x = -2; lxy_s0_x < 60; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)] = hcompute_lxy_stencil(grad_x_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)], grad_y_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)])
    }
  }
  for (int lgxy_s0_y = -1; lgxy_s0_y < 59; lgxy_s0_y++) {
    for (int lgxy_s0_x = -1; lgxy_s0_x < 59; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil[(lgxy_s0_y + 1), (lgxy_s0_x + 1)] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = -1; lgxy_s1_y < 59; lgxy_s1_y++) {
    for (int lgxy_s1_x = -1; lgxy_s1_x < 59; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)] = hcompute_lgxy_stencil_1(lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 2)])
    }
  }
  for (int lyy_s0_y = -2; lyy_s0_y < 60; lyy_s0_y++) {
    for (int lyy_s0_x = -2; lyy_s0_x < 60; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)] = hcompute_lyy_stencil(grad_y_unclamp_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)])
    }
  }
  for (int lgyy_s0_y = -1; lgyy_s0_y < 59; lgyy_s0_y++) {
    for (int lgyy_s0_x = -1; lgyy_s0_x < 59; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil[(lgyy_s0_y + 1), (lgyy_s0_x + 1)] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = -1; lgyy_s1_y < 59; lgyy_s1_y++) {
    for (int lgyy_s1_x = -1; lgyy_s1_x < 59; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)] = hcompute_lgyy_stencil_1(lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 2)])
    }
  }
  for (int cim_s0_y = -1; cim_s0_y < 59; cim_s0_y++) {
    for (int cim_s0_x = -1; cim_s0_x < 59; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[(cim_s0_y + 1), (cim_s0_x + 1)] = hcompute_cim_stencil(lgxx_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgxy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgyy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y, cim_output_s0_x] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y, cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 1), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 2), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 1)], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 2)])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
lgxy_stencil has 2 producers
  lgxy_s0_y
  lgxy_s1_y
program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = -3; padded16_global_wrapper_s0_y < 61; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = -3; padded16_global_wrapper_s0_x < 61; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[(padded16_global_wrapper_s0_y + 3), (padded16_global_wrapper_s0_x + 3)] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x])
    }
  }
  for (int grad_x_unclamp_s0_y = -2; grad_x_unclamp_s0_y < 60; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = -2; grad_x_unclamp_s0_x < 60; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil[(grad_x_unclamp_s0_y + 2), (grad_x_unclamp_s0_x + 2)] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = -2; grad_x_unclamp_s1_y < 60; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = -2; grad_x_unclamp_s1_x < 60; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 2)])
    }
  }
  for (int lxx_s0_y = -2; lxx_s0_y < 60; lxx_s0_y++) {
    for (int lxx_s0_x = -2; lxx_s0_x < 60; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)] = hcompute_lxx_stencil(grad_x_unclamp_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)])
    }
  }
  for (int lgxx_s0_y = -1; lgxx_s0_y < 59; lgxx_s0_y++) {
    for (int lgxx_s0_x = -1; lgxx_s0_x < 59; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil[(lgxx_s0_y + 1), (lgxx_s0_x + 1)] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = -1; lgxx_s1_y < 59; lgxx_s1_y++) {
    for (int lgxx_s1_x = -1; lgxx_s1_x < 59; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)] = hcompute_lgxx_stencil_1(lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 2)])
    }
  }
  for (int grad_y_unclamp_s0_y = -2; grad_y_unclamp_s0_y < 60; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = -2; grad_y_unclamp_s0_x < 60; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil[(grad_y_unclamp_s0_y + 2), (grad_y_unclamp_s0_x + 2)] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = -2; grad_y_unclamp_s1_y < 60; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = -2; grad_y_unclamp_s1_x < 60; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 3)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 3)])
    }
  }
  for (int lxy_s0_y = -2; lxy_s0_y < 60; lxy_s0_y++) {
    for (int lxy_s0_x = -2; lxy_s0_x < 60; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)] = hcompute_lxy_stencil(grad_x_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)], grad_y_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)])
    }
  }
  for (int lgxy_s0_y = -1; lgxy_s0_y < 59; lgxy_s0_y++) {
    for (int lgxy_s0_x = -1; lgxy_s0_x < 59; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil[(lgxy_s0_y + 1), (lgxy_s0_x + 1)] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = -1; lgxy_s1_y < 59; lgxy_s1_y++) {
    for (int lgxy_s1_x = -1; lgxy_s1_x < 59; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)] = hcompute_lgxy_stencil_1(lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 2)])
    }
  }
  for (int lyy_s0_y = -2; lyy_s0_y < 60; lyy_s0_y++) {
    for (int lyy_s0_x = -2; lyy_s0_x < 60; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)] = hcompute_lyy_stencil(grad_y_unclamp_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)])
    }
  }
  for (int lgyy_s0_y = -1; lgyy_s0_y < 59; lgyy_s0_y++) {
    for (int lgyy_s0_x = -1; lgyy_s0_x < 59; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil[(lgyy_s0_y + 1), (lgyy_s0_x + 1)] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = -1; lgyy_s1_y < 59; lgyy_s1_y++) {
    for (int lgyy_s1_x = -1; lgyy_s1_x < 59; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)] = hcompute_lgyy_stencil_1(lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 2)])
    }
  }
  for (int cim_s0_y = -1; cim_s0_y < 59; cim_s0_y++) {
    for (int cim_s0_x = -1; cim_s0_x < 59; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[(cim_s0_y + 1), (cim_s0_x + 1)] = hcompute_cim_stencil(lgxx_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgxy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgyy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y, cim_output_s0_x] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y, cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 1), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 2), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 1)], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 2)])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
lgxy_stencil has 2 producers
  lgxy_s0_y
  lgxy_s1_y
program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = -3; padded16_global_wrapper_s0_y < 61; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = -3; padded16_global_wrapper_s0_x < 61; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[(padded16_global_wrapper_s0_y + 3), (padded16_global_wrapper_s0_x + 3)] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x])
    }
  }
  for (int grad_x_unclamp_s0_y = -2; grad_x_unclamp_s0_y < 60; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = -2; grad_x_unclamp_s0_x < 60; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil[(grad_x_unclamp_s0_y + 2), (grad_x_unclamp_s0_x + 2)] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = -2; grad_x_unclamp_s1_y < 60; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = -2; grad_x_unclamp_s1_x < 60; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 2)])
    }
  }
  for (int lxx_s0_y = -2; lxx_s0_y < 60; lxx_s0_y++) {
    for (int lxx_s0_x = -2; lxx_s0_x < 60; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)] = hcompute_lxx_stencil(grad_x_unclamp_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)])
    }
  }
  for (int lgxx_s0_y = -1; lgxx_s0_y < 59; lgxx_s0_y++) {
    for (int lgxx_s0_x = -1; lgxx_s0_x < 59; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil[(lgxx_s0_y + 1), (lgxx_s0_x + 1)] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = -1; lgxx_s1_y < 59; lgxx_s1_y++) {
    for (int lgxx_s1_x = -1; lgxx_s1_x < 59; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)] = hcompute_lgxx_stencil_1(lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 2)])
    }
  }
  for (int grad_y_unclamp_s0_y = -2; grad_y_unclamp_s0_y < 60; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = -2; grad_y_unclamp_s0_x < 60; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil[(grad_y_unclamp_s0_y + 2), (grad_y_unclamp_s0_x + 2)] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = -2; grad_y_unclamp_s1_y < 60; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = -2; grad_y_unclamp_s1_x < 60; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 3)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 3)])
    }
  }
  for (int lxy_s0_y = -2; lxy_s0_y < 60; lxy_s0_y++) {
    for (int lxy_s0_x = -2; lxy_s0_x < 60; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)] = hcompute_lxy_stencil(grad_x_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)], grad_y_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)])
    }
  }
  for (int lgxy_s0_y = -1; lgxy_s0_y < 59; lgxy_s0_y++) {
    for (int lgxy_s0_x = -1; lgxy_s0_x < 59; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil[(lgxy_s0_y + 1), (lgxy_s0_x + 1)] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = -1; lgxy_s1_y < 59; lgxy_s1_y++) {
    for (int lgxy_s1_x = -1; lgxy_s1_x < 59; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)] = hcompute_lgxy_stencil_1(lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 2)])
    }
  }
  for (int lyy_s0_y = -2; lyy_s0_y < 60; lyy_s0_y++) {
    for (int lyy_s0_x = -2; lyy_s0_x < 60; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)] = hcompute_lyy_stencil(grad_y_unclamp_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)])
    }
  }
  for (int lgyy_s0_y = -1; lgyy_s0_y < 59; lgyy_s0_y++) {
    for (int lgyy_s0_x = -1; lgyy_s0_x < 59; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil[(lgyy_s0_y + 1), (lgyy_s0_x + 1)] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = -1; lgyy_s1_y < 59; lgyy_s1_y++) {
    for (int lgyy_s1_x = -1; lgyy_s1_x < 59; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)] = hcompute_lgyy_stencil_1(lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 2)])
    }
  }
  for (int cim_s0_y = -1; cim_s0_y < 59; cim_s0_y++) {
    for (int cim_s0_x = -1; cim_s0_x < 59; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[(cim_s0_y + 1), (cim_s0_x + 1)] = hcompute_cim_stencil(lgxx_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgxy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgyy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y, cim_output_s0_x] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y, cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 1), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 2), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 1)], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 2)])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
lgyy_stencil has 2 producers
  lgyy_s0_y
  lgyy_s1_y
program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = -3; padded16_global_wrapper_s0_y < 61; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = -3; padded16_global_wrapper_s0_x < 61; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[(padded16_global_wrapper_s0_y + 3), (padded16_global_wrapper_s0_x + 3)] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x])
    }
  }
  for (int grad_x_unclamp_s0_y = -2; grad_x_unclamp_s0_y < 60; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = -2; grad_x_unclamp_s0_x < 60; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil[(grad_x_unclamp_s0_y + 2), (grad_x_unclamp_s0_x + 2)] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = -2; grad_x_unclamp_s1_y < 60; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = -2; grad_x_unclamp_s1_x < 60; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 2)])
    }
  }
  for (int lxx_s0_y = -2; lxx_s0_y < 60; lxx_s0_y++) {
    for (int lxx_s0_x = -2; lxx_s0_x < 60; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)] = hcompute_lxx_stencil(grad_x_unclamp_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)])
    }
  }
  for (int lgxx_s0_y = -1; lgxx_s0_y < 59; lgxx_s0_y++) {
    for (int lgxx_s0_x = -1; lgxx_s0_x < 59; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil[(lgxx_s0_y + 1), (lgxx_s0_x + 1)] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = -1; lgxx_s1_y < 59; lgxx_s1_y++) {
    for (int lgxx_s1_x = -1; lgxx_s1_x < 59; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)] = hcompute_lgxx_stencil_1(lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 2)])
    }
  }
  for (int grad_y_unclamp_s0_y = -2; grad_y_unclamp_s0_y < 60; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = -2; grad_y_unclamp_s0_x < 60; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil[(grad_y_unclamp_s0_y + 2), (grad_y_unclamp_s0_x + 2)] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = -2; grad_y_unclamp_s1_y < 60; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = -2; grad_y_unclamp_s1_x < 60; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 3)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 3)])
    }
  }
  for (int lxy_s0_y = -2; lxy_s0_y < 60; lxy_s0_y++) {
    for (int lxy_s0_x = -2; lxy_s0_x < 60; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)] = hcompute_lxy_stencil(grad_x_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)], grad_y_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)])
    }
  }
  for (int lgxy_s0_y = -1; lgxy_s0_y < 59; lgxy_s0_y++) {
    for (int lgxy_s0_x = -1; lgxy_s0_x < 59; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil[(lgxy_s0_y + 1), (lgxy_s0_x + 1)] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = -1; lgxy_s1_y < 59; lgxy_s1_y++) {
    for (int lgxy_s1_x = -1; lgxy_s1_x < 59; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)] = hcompute_lgxy_stencil_1(lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 2)])
    }
  }
  for (int lyy_s0_y = -2; lyy_s0_y < 60; lyy_s0_y++) {
    for (int lyy_s0_x = -2; lyy_s0_x < 60; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)] = hcompute_lyy_stencil(grad_y_unclamp_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)])
    }
  }
  for (int lgyy_s0_y = -1; lgyy_s0_y < 59; lgyy_s0_y++) {
    for (int lgyy_s0_x = -1; lgyy_s0_x < 59; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil[(lgyy_s0_y + 1), (lgyy_s0_x + 1)] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = -1; lgyy_s1_y < 59; lgyy_s1_y++) {
    for (int lgyy_s1_x = -1; lgyy_s1_x < 59; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)] = hcompute_lgyy_stencil_1(lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 2)])
    }
  }
  for (int cim_s0_y = -1; cim_s0_y < 59; cim_s0_y++) {
    for (int cim_s0_x = -1; cim_s0_x < 59; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[(cim_s0_y + 1), (cim_s0_x + 1)] = hcompute_cim_stencil(lgxx_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgxy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgyy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y, cim_output_s0_x] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y, cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 1), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 2), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 1)], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 2)])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
lgyy_stencil has 2 producers
  lgyy_s0_y
  lgyy_s1_y
program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = -3; padded16_global_wrapper_s0_y < 61; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = -3; padded16_global_wrapper_s0_x < 61; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[(padded16_global_wrapper_s0_y + 3), (padded16_global_wrapper_s0_x + 3)] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x])
    }
  }
  for (int grad_x_unclamp_s0_y = -2; grad_x_unclamp_s0_y < 60; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = -2; grad_x_unclamp_s0_x < 60; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil[(grad_x_unclamp_s0_y + 2), (grad_x_unclamp_s0_x + 2)] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = -2; grad_x_unclamp_s1_y < 60; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = -2; grad_x_unclamp_s1_x < 60; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 2)])
    }
  }
  for (int lxx_s0_y = -2; lxx_s0_y < 60; lxx_s0_y++) {
    for (int lxx_s0_x = -2; lxx_s0_x < 60; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)] = hcompute_lxx_stencil(grad_x_unclamp_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)])
    }
  }
  for (int lgxx_s0_y = -1; lgxx_s0_y < 59; lgxx_s0_y++) {
    for (int lgxx_s0_x = -1; lgxx_s0_x < 59; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil[(lgxx_s0_y + 1), (lgxx_s0_x + 1)] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = -1; lgxx_s1_y < 59; lgxx_s1_y++) {
    for (int lgxx_s1_x = -1; lgxx_s1_x < 59; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)] = hcompute_lgxx_stencil_1(lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 2)])
    }
  }
  for (int grad_y_unclamp_s0_y = -2; grad_y_unclamp_s0_y < 60; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = -2; grad_y_unclamp_s0_x < 60; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil[(grad_y_unclamp_s0_y + 2), (grad_y_unclamp_s0_x + 2)] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = -2; grad_y_unclamp_s1_y < 60; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = -2; grad_y_unclamp_s1_x < 60; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 3)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 3)])
    }
  }
  for (int lxy_s0_y = -2; lxy_s0_y < 60; lxy_s0_y++) {
    for (int lxy_s0_x = -2; lxy_s0_x < 60; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)] = hcompute_lxy_stencil(grad_x_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)], grad_y_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)])
    }
  }
  for (int lgxy_s0_y = -1; lgxy_s0_y < 59; lgxy_s0_y++) {
    for (int lgxy_s0_x = -1; lgxy_s0_x < 59; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil[(lgxy_s0_y + 1), (lgxy_s0_x + 1)] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = -1; lgxy_s1_y < 59; lgxy_s1_y++) {
    for (int lgxy_s1_x = -1; lgxy_s1_x < 59; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)] = hcompute_lgxy_stencil_1(lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 2)])
    }
  }
  for (int lyy_s0_y = -2; lyy_s0_y < 60; lyy_s0_y++) {
    for (int lyy_s0_x = -2; lyy_s0_x < 60; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)] = hcompute_lyy_stencil(grad_y_unclamp_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)])
    }
  }
  for (int lgyy_s0_y = -1; lgyy_s0_y < 59; lgyy_s0_y++) {
    for (int lgyy_s0_x = -1; lgyy_s0_x < 59; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil[(lgyy_s0_y + 1), (lgyy_s0_x + 1)] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = -1; lgyy_s1_y < 59; lgyy_s1_y++) {
    for (int lgyy_s1_x = -1; lgyy_s1_x < 59; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)] = hcompute_lgyy_stencil_1(lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 2)])
    }
  }
  for (int cim_s0_y = -1; cim_s0_y < 59; cim_s0_y++) {
    for (int cim_s0_x = -1; cim_s0_x < 59; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[(cim_s0_y + 1), (cim_s0_x + 1)] = hcompute_cim_stencil(lgxx_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgxy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgyy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y, cim_output_s0_x] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y, cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 1), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 2), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 1)], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 2)])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
Multi-write buffers
  grad_x_unclamp_stencil
  grad_y_unclamp_stencil
  lgxx_stencil
  lgxy_stencil
  lgyy_stencil
Built initializer / update maps
  # multi_write buffers = 5
program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = -3; padded16_global_wrapper_s0_y < 61; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = -3; padded16_global_wrapper_s0_x < 61; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[(padded16_global_wrapper_s0_y + 3), (padded16_global_wrapper_s0_x + 3)] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x])
    }
  }
  for (int grad_x_unclamp_s0_y = -2; grad_x_unclamp_s0_y < 60; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = -2; grad_x_unclamp_s0_x < 60; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil_clkwrk_dsa0[(grad_x_unclamp_s0_y + 2), (grad_x_unclamp_s0_x + 2)] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = -2; grad_x_unclamp_s1_y < 60; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = -2; grad_x_unclamp_s1_x < 60; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil_clkwrk_dsa0[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 2)])
    }
  }
  for (int lxx_s0_y = -2; lxx_s0_y < 60; lxx_s0_y++) {
    for (int lxx_s0_x = -2; lxx_s0_x < 60; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)] = hcompute_lxx_stencil(grad_x_unclamp_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)])
    }
  }
  for (int lgxx_s0_y = -1; lgxx_s0_y < 59; lgxx_s0_y++) {
    for (int lgxx_s0_x = -1; lgxx_s0_x < 59; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil_clkwrk_dsa2[(lgxx_s0_y + 1), (lgxx_s0_x + 1)] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = -1; lgxx_s1_y < 59; lgxx_s1_y++) {
    for (int lgxx_s1_x = -1; lgxx_s1_x < 59; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)] = hcompute_lgxx_stencil_1(lgxx_stencil_clkwrk_dsa2[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 2)], lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 1)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 3)], lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 2)])
    }
  }
  for (int grad_y_unclamp_s0_y = -2; grad_y_unclamp_s0_y < 60; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = -2; grad_y_unclamp_s0_x < 60; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil_clkwrk_dsa1[(grad_y_unclamp_s0_y + 2), (grad_y_unclamp_s0_x + 2)] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = -2; grad_y_unclamp_s1_y < 60; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = -2; grad_y_unclamp_s1_x < 60; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil_clkwrk_dsa1[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 3)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 2)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 4)], padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 3)])
    }
  }
  for (int lxy_s0_y = -2; lxy_s0_y < 60; lxy_s0_y++) {
    for (int lxy_s0_x = -2; lxy_s0_x < 60; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)] = hcompute_lxy_stencil(grad_x_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)], grad_y_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)])
    }
  }
  for (int lgxy_s0_y = -1; lgxy_s0_y < 59; lgxy_s0_y++) {
    for (int lgxy_s0_x = -1; lgxy_s0_x < 59; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil_clkwrk_dsa3[(lgxy_s0_y + 1), (lgxy_s0_x + 1)] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = -1; lgxy_s1_y < 59; lgxy_s1_y++) {
    for (int lgxy_s1_x = -1; lgxy_s1_x < 59; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)] = hcompute_lgxy_stencil_1(lgxy_stencil_clkwrk_dsa3[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 2)], lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 1)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 3)], lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 2)])
    }
  }
  for (int lyy_s0_y = -2; lyy_s0_y < 60; lyy_s0_y++) {
    for (int lyy_s0_x = -2; lyy_s0_x < 60; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)] = hcompute_lyy_stencil(grad_y_unclamp_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)])
    }
  }
  for (int lgyy_s0_y = -1; lgyy_s0_y < 59; lgyy_s0_y++) {
    for (int lgyy_s0_x = -1; lgyy_s0_x < 59; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil_clkwrk_dsa4[(lgyy_s0_y + 1), (lgyy_s0_x + 1)] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = -1; lgyy_s1_y < 59; lgyy_s1_y++) {
    for (int lgyy_s1_x = -1; lgyy_s1_x < 59; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)] = hcompute_lgyy_stencil_1(lgyy_stencil_clkwrk_dsa4[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 2)], lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 1)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 3)], lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 2)])
    }
  }
  for (int cim_s0_y = -1; cim_s0_y < 59; cim_s0_y++) {
    for (int cim_s0_x = -1; cim_s0_x < 59; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[(cim_s0_y + 1), (cim_s0_x + 1)] = hcompute_cim_stencil(lgxx_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgxy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)], lgyy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y, cim_output_s0_x] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y, cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 1), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 2), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 1)], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 2)])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
Unoptimized schedule...
  : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
{
  for (int c3 = -3; c3 <= 60; c3 += 1)
    for (int c5 = -3; c5 <= 60; c5 += 1)
      op_hcompute_padded16_global_wrapper_stencil(0, c3, c5);
  for (int c3 = -2; c3 <= 59; c3 += 1)
    for (int c5 = -2; c5 <= 59; c5 += 1)
      op_hcompute_grad_x_unclamp_stencil(0, c3, c5);
  for (int c3 = -2; c3 <= 59; c3 += 1)
    for (int c5 = -2; c5 <= 59; c5 += 1)
      op_hcompute_grad_x_unclamp_stencil_1(0, c3, c5);
  for (int c3 = -2; c3 <= 59; c3 += 1)
    for (int c5 = -2; c5 <= 59; c5 += 1)
      op_hcompute_lxx_stencil(0, c3, c5);
  for (int c3 = -1; c3 <= 58; c3 += 1)
    for (int c5 = -1; c5 <= 58; c5 += 1)
      op_hcompute_lgxx_stencil(0, c3, c5);
  for (int c3 = -1; c3 <= 58; c3 += 1)
    for (int c5 = -1; c5 <= 58; c5 += 1)
      op_hcompute_lgxx_stencil_1(0, c3, c5);
  for (int c3 = -2; c3 <= 59; c3 += 1)
    for (int c5 = -2; c5 <= 59; c5 += 1)
      op_hcompute_grad_y_unclamp_stencil(0, c3, c5);
  for (int c3 = -2; c3 <= 59; c3 += 1)
    for (int c5 = -2; c5 <= 59; c5 += 1)
      op_hcompute_grad_y_unclamp_stencil_1(0, c3, c5);
  for (int c3 = -2; c3 <= 59; c3 += 1)
    for (int c5 = -2; c5 <= 59; c5 += 1)
      op_hcompute_lxy_stencil(0, c3, c5);
  for (int c3 = -1; c3 <= 58; c3 += 1)
    for (int c5 = -1; c5 <= 58; c5 += 1)
      op_hcompute_lgxy_stencil(0, c3, c5);
  for (int c3 = -1; c3 <= 58; c3 += 1)
    for (int c5 = -1; c5 <= 58; c5 += 1)
      op_hcompute_lgxy_stencil_1(0, c3, c5);
  for (int c3 = -2; c3 <= 59; c3 += 1)
    for (int c5 = -2; c5 <= 59; c5 += 1)
      op_hcompute_lyy_stencil(0, c3, c5);
  for (int c3 = -1; c3 <= 58; c3 += 1)
    for (int c5 = -1; c5 <= 58; c5 += 1)
      op_hcompute_lgyy_stencil(0, c3, c5);
  for (int c3 = -1; c3 <= 58; c3 += 1)
    for (int c5 = -1; c5 <= 58; c5 += 1)
      op_hcompute_lgyy_stencil_1(0, c3, c5);
  for (int c3 = -1; c3 <= 58; c3 += 1)
    for (int c5 = -1; c5 <= 58; c5 += 1)
      op_hcompute_cim_stencil(0, c3, c5);
  for (int c3 = 0; c3 <= 57; c3 += 1)
    for (int c5 = 0; c5 <= 57; c5 += 1)
      op_hcompute_cim_output_stencil(0, c3, c5);
  for (int c3 = 0; c3 <= 57; c3 += 1)
    for (int c5 = 0; c5 <= 57; c5 += 1)
      op_hcompute_hw_output_stencil(0, c3, c5);
}
Creating ports for op: padded16_global_wrapper_stencil
cond = { op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[(padded16_global_wrapper_s0_y + 3), (padded16_global_wrapper_s0_x + 3)] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
		Consumed: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[3 + padded16_global_wrapper_s0_y, 3 + padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
Creating ports for op: padded16_stencil
cond = { op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] }
	Adding output port: padded16_stencil_op_hcompute_padded16_global_wrapper_stencil_1
		Consumed: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_padded16_global_wrapper_stencil
  other_dspace_id = op_hcompute_padded16_global_wrapper_stencil
  Schedule domain set: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60 }
  Domain set from prg: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60 }
  ITS: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60 }
ITS      : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60 }
current out port name: 
	padded16_stencil_op_hcompute_padded16_global_wrapper_stencil_1
Creating ports for op: lyy_stencil
cond = { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> lyy_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)] }
	Adding output port: lyy_stencil_op_hcompute_lyy_stencil_2
		Consumed: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil[2 + lyy_s0_y, 2 + lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59 }
current out port name: 
	lyy_stencil_op_hcompute_lyy_stencil_2
Creating ports for op: grad_y_unclamp_stencil
cond = { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> grad_y_unclamp_stencil[(lyy_s0_y + 2), (lyy_s0_x + 2)] }
	Adding output port: grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3
		Consumed: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> grad_y_unclamp_stencil[2 + lyy_s0_y, 2 + lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lyy_stencil
  other_dspace_id = op_hcompute_lyy_stencil
  Schedule domain set: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59 }
  Domain set from prg: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59 }
  ITS: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59 }
ITS      : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59 }
current out port name: 
	grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3
Creating ports for op: lxy_stencil
cond = { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> lxy_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)] }
	Adding output port: lxy_stencil_op_hcompute_lxy_stencil_4
		Consumed: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil[2 + lxy_s0_y, 2 + lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59 }
current out port name: 
	lxy_stencil_op_hcompute_lxy_stencil_4
Creating ports for op: grad_x_unclamp_stencil
cond = { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> grad_x_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)] }
	Adding output port: grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5
		Consumed: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> grad_x_unclamp_stencil[2 + lxy_s0_y, 2 + lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lxy_stencil
  other_dspace_id = op_hcompute_lxy_stencil
  Schedule domain set: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59 }
  Domain set from prg: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59 }
  ITS: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59 }
ITS      : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59 }
current out port name: 
	grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5
cond = { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> grad_y_unclamp_stencil[(lxy_s0_y + 2), (lxy_s0_x + 2)] }
	Adding output port: grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6
		Consumed: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> grad_y_unclamp_stencil[2 + lxy_s0_y, 2 + lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lxy_stencil
  other_dspace_id = op_hcompute_lxy_stencil
  Schedule domain set: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59 }
  Domain set from prg: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59 }
  ITS: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59 }
ITS      : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59 }
current out port name: 
	grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6	grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3
Creating ports for op: lxx_stencil
cond = { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> lxx_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)] }
	Adding output port: lxx_stencil_op_hcompute_lxx_stencil_7
		Consumed: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil[2 + lxx_s0_y, 2 + lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59 }
current out port name: 
	lxx_stencil_op_hcompute_lxx_stencil_7
cond = { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> grad_x_unclamp_stencil[(lxx_s0_y + 2), (lxx_s0_x + 2)] }
	Adding output port: grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8
		Consumed: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> grad_x_unclamp_stencil[2 + lxx_s0_y, 2 + lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lxx_stencil
  other_dspace_id = op_hcompute_lxx_stencil
  Schedule domain set: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59 }
  Domain set from prg: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59 }
  ITS: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59 }
ITS      : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59 }
current out port name: 
	grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8	grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5
Creating ports for op: lgyy_stencil
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)] }
	Adding output port: lgyy_stencil_op_hcompute_lgyy_stencil_1_9
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil[1 + lgyy_s1_y, 1 + lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
current out port name: 
	lgyy_stencil_op_hcompute_lgyy_stencil_1_9
Creating ports for op: lgyy_stencil_clkwrk_dsa4
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil_clkwrk_dsa4[(lgyy_s1_y + 1), (lgyy_s1_x + 1)] }
	Adding output port: lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil_clkwrk_dsa4[1 + lgyy_s1_y, 1 + lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
current out port name: 
	lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 1)] }
	Adding output port: lyy_stencil_op_hcompute_lgyy_stencil_1_11
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, 1 + lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
current out port name: 
	lyy_stencil_op_hcompute_lgyy_stencil_1_11
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 2)] }
	Adding output port: lyy_stencil_op_hcompute_lgyy_stencil_1_12
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, 2 + lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
current out port name: 
	lyy_stencil_op_hcompute_lgyy_stencil_1_11	lyy_stencil_op_hcompute_lgyy_stencil_1_12
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[(lgyy_s1_y + 1), (lgyy_s1_x + 3)] }
	Adding output port: lyy_stencil_op_hcompute_lgyy_stencil_1_13
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, 3 + lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
current out port name: 
	lyy_stencil_op_hcompute_lgyy_stencil_1_11	lyy_stencil_op_hcompute_lgyy_stencil_1_12	lyy_stencil_op_hcompute_lgyy_stencil_1_13
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 1)] }
	Adding output port: lyy_stencil_op_hcompute_lgyy_stencil_1_14
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, 1 + lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
current out port name: 
	lyy_stencil_op_hcompute_lgyy_stencil_1_11	lyy_stencil_op_hcompute_lgyy_stencil_1_12	lyy_stencil_op_hcompute_lgyy_stencil_1_13	lyy_stencil_op_hcompute_lgyy_stencil_1_14
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 2)] }
	Adding output port: lyy_stencil_op_hcompute_lgyy_stencil_1_15
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, 2 + lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
current out port name: 
	lyy_stencil_op_hcompute_lgyy_stencil_1_11	lyy_stencil_op_hcompute_lgyy_stencil_1_12	lyy_stencil_op_hcompute_lgyy_stencil_1_13	lyy_stencil_op_hcompute_lgyy_stencil_1_14	lyy_stencil_op_hcompute_lgyy_stencil_1_15
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[(lgyy_s1_y + 2), (lgyy_s1_x + 3)] }
	Adding output port: lyy_stencil_op_hcompute_lgyy_stencil_1_16
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, 3 + lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
current out port name: 
	lyy_stencil_op_hcompute_lgyy_stencil_1_11	lyy_stencil_op_hcompute_lgyy_stencil_1_12	lyy_stencil_op_hcompute_lgyy_stencil_1_13	lyy_stencil_op_hcompute_lgyy_stencil_1_14	lyy_stencil_op_hcompute_lgyy_stencil_1_15	lyy_stencil_op_hcompute_lgyy_stencil_1_16
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 1)] }
	Adding output port: lyy_stencil_op_hcompute_lgyy_stencil_1_17
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[3 + lgyy_s1_y, 1 + lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
current out port name: 
	lyy_stencil_op_hcompute_lgyy_stencil_1_11	lyy_stencil_op_hcompute_lgyy_stencil_1_12	lyy_stencil_op_hcompute_lgyy_stencil_1_13	lyy_stencil_op_hcompute_lgyy_stencil_1_14	lyy_stencil_op_hcompute_lgyy_stencil_1_15	lyy_stencil_op_hcompute_lgyy_stencil_1_16	lyy_stencil_op_hcompute_lgyy_stencil_1_17
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 3)] }
	Adding output port: lyy_stencil_op_hcompute_lgyy_stencil_1_18
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[3 + lgyy_s1_y, 3 + lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
current out port name: 
	lyy_stencil_op_hcompute_lgyy_stencil_1_11	lyy_stencil_op_hcompute_lgyy_stencil_1_12	lyy_stencil_op_hcompute_lgyy_stencil_1_13	lyy_stencil_op_hcompute_lgyy_stencil_1_14	lyy_stencil_op_hcompute_lgyy_stencil_1_15	lyy_stencil_op_hcompute_lgyy_stencil_1_16	lyy_stencil_op_hcompute_lgyy_stencil_1_17	lyy_stencil_op_hcompute_lgyy_stencil_1_18
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[(lgyy_s1_y + 3), (lgyy_s1_x + 2)] }
	Adding output port: lyy_stencil_op_hcompute_lgyy_stencil_1_19
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[3 + lgyy_s1_y, 2 + lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58 }
current out port name: 
	lyy_stencil_op_hcompute_lgyy_stencil_1_11	lyy_stencil_op_hcompute_lgyy_stencil_1_12	lyy_stencil_op_hcompute_lgyy_stencil_1_13	lyy_stencil_op_hcompute_lgyy_stencil_1_14	lyy_stencil_op_hcompute_lgyy_stencil_1_15	lyy_stencil_op_hcompute_lgyy_stencil_1_16	lyy_stencil_op_hcompute_lgyy_stencil_1_17	lyy_stencil_op_hcompute_lgyy_stencil_1_18	lyy_stencil_op_hcompute_lgyy_stencil_1_19
cond = { op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> lgyy_stencil_clkwrk_dsa4[(lgyy_s0_y + 1), (lgyy_s0_x + 1)] }
	Adding output port: lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
		Consumed: { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> lgyy_stencil_clkwrk_dsa4[1 + lgyy_s0_y, 1 + lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58 }
current out port name: 
	lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
Creating ports for op: lgxy_stencil
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)] }
	Adding output port: lgxy_stencil_op_hcompute_lgxy_stencil_1_21
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil[1 + lgxy_s1_y, 1 + lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
current out port name: 
	lgxy_stencil_op_hcompute_lgxy_stencil_1_21
Creating ports for op: lgxy_stencil_clkwrk_dsa3
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil_clkwrk_dsa3[(lgxy_s1_y + 1), (lgxy_s1_x + 1)] }
	Adding output port: lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil_clkwrk_dsa3[1 + lgxy_s1_y, 1 + lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
current out port name: 
	lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 1)] }
	Adding output port: lxy_stencil_op_hcompute_lgxy_stencil_1_23
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, 1 + lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
current out port name: 
	lxy_stencil_op_hcompute_lgxy_stencil_1_23
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 2)] }
	Adding output port: lxy_stencil_op_hcompute_lgxy_stencil_1_24
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, 2 + lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
current out port name: 
	lxy_stencil_op_hcompute_lgxy_stencil_1_23	lxy_stencil_op_hcompute_lgxy_stencil_1_24
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[(lgxy_s1_y + 1), (lgxy_s1_x + 3)] }
	Adding output port: lxy_stencil_op_hcompute_lgxy_stencil_1_25
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, 3 + lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
current out port name: 
	lxy_stencil_op_hcompute_lgxy_stencil_1_23	lxy_stencil_op_hcompute_lgxy_stencil_1_24	lxy_stencil_op_hcompute_lgxy_stencil_1_25
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 1)] }
	Adding output port: lxy_stencil_op_hcompute_lgxy_stencil_1_26
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, 1 + lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
current out port name: 
	lxy_stencil_op_hcompute_lgxy_stencil_1_23	lxy_stencil_op_hcompute_lgxy_stencil_1_24	lxy_stencil_op_hcompute_lgxy_stencil_1_25	lxy_stencil_op_hcompute_lgxy_stencil_1_26
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 2)] }
	Adding output port: lxy_stencil_op_hcompute_lgxy_stencil_1_27
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, 2 + lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
current out port name: 
	lxy_stencil_op_hcompute_lgxy_stencil_1_23	lxy_stencil_op_hcompute_lgxy_stencil_1_24	lxy_stencil_op_hcompute_lgxy_stencil_1_25	lxy_stencil_op_hcompute_lgxy_stencil_1_26	lxy_stencil_op_hcompute_lgxy_stencil_1_27
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[(lgxy_s1_y + 2), (lgxy_s1_x + 3)] }
	Adding output port: lxy_stencil_op_hcompute_lgxy_stencil_1_28
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, 3 + lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
current out port name: 
	lxy_stencil_op_hcompute_lgxy_stencil_1_23	lxy_stencil_op_hcompute_lgxy_stencil_1_24	lxy_stencil_op_hcompute_lgxy_stencil_1_25	lxy_stencil_op_hcompute_lgxy_stencil_1_26	lxy_stencil_op_hcompute_lgxy_stencil_1_27	lxy_stencil_op_hcompute_lgxy_stencil_1_28
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 1)] }
	Adding output port: lxy_stencil_op_hcompute_lgxy_stencil_1_29
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[3 + lgxy_s1_y, 1 + lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
current out port name: 
	lxy_stencil_op_hcompute_lgxy_stencil_1_23	lxy_stencil_op_hcompute_lgxy_stencil_1_24	lxy_stencil_op_hcompute_lgxy_stencil_1_25	lxy_stencil_op_hcompute_lgxy_stencil_1_26	lxy_stencil_op_hcompute_lgxy_stencil_1_27	lxy_stencil_op_hcompute_lgxy_stencil_1_28	lxy_stencil_op_hcompute_lgxy_stencil_1_29
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 3)] }
	Adding output port: lxy_stencil_op_hcompute_lgxy_stencil_1_30
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[3 + lgxy_s1_y, 3 + lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
current out port name: 
	lxy_stencil_op_hcompute_lgxy_stencil_1_23	lxy_stencil_op_hcompute_lgxy_stencil_1_24	lxy_stencil_op_hcompute_lgxy_stencil_1_25	lxy_stencil_op_hcompute_lgxy_stencil_1_26	lxy_stencil_op_hcompute_lgxy_stencil_1_27	lxy_stencil_op_hcompute_lgxy_stencil_1_28	lxy_stencil_op_hcompute_lgxy_stencil_1_29	lxy_stencil_op_hcompute_lgxy_stencil_1_30
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[(lgxy_s1_y + 3), (lgxy_s1_x + 2)] }
	Adding output port: lxy_stencil_op_hcompute_lgxy_stencil_1_31
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[3 + lgxy_s1_y, 2 + lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58 }
current out port name: 
	lxy_stencil_op_hcompute_lgxy_stencil_1_23	lxy_stencil_op_hcompute_lgxy_stencil_1_24	lxy_stencil_op_hcompute_lgxy_stencil_1_25	lxy_stencil_op_hcompute_lgxy_stencil_1_26	lxy_stencil_op_hcompute_lgxy_stencil_1_27	lxy_stencil_op_hcompute_lgxy_stencil_1_28	lxy_stencil_op_hcompute_lgxy_stencil_1_29	lxy_stencil_op_hcompute_lgxy_stencil_1_30	lxy_stencil_op_hcompute_lgxy_stencil_1_31
cond = { op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> lgxy_stencil_clkwrk_dsa3[(lgxy_s0_y + 1), (lgxy_s0_x + 1)] }
	Adding output port: lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
		Consumed: { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> lgxy_stencil_clkwrk_dsa3[1 + lgxy_s0_y, 1 + lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58 }
current out port name: 
	lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
Creating ports for op: lgxx_stencil
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)] }
	Adding output port: lgxx_stencil_op_hcompute_lgxx_stencil_1_33
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil[1 + lgxx_s1_y, 1 + lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
current out port name: 
	lgxx_stencil_op_hcompute_lgxx_stencil_1_33
Creating ports for op: lgxx_stencil_clkwrk_dsa2
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil_clkwrk_dsa2[(lgxx_s1_y + 1), (lgxx_s1_x + 1)] }
	Adding output port: lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil_clkwrk_dsa2[1 + lgxx_s1_y, 1 + lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
current out port name: 
	lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 1)] }
	Adding output port: lxx_stencil_op_hcompute_lgxx_stencil_1_35
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, 1 + lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
current out port name: 
	lxx_stencil_op_hcompute_lgxx_stencil_1_35
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 2)] }
	Adding output port: lxx_stencil_op_hcompute_lgxx_stencil_1_36
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, 2 + lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
current out port name: 
	lxx_stencil_op_hcompute_lgxx_stencil_1_35	lxx_stencil_op_hcompute_lgxx_stencil_1_36
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[(lgxx_s1_y + 1), (lgxx_s1_x + 3)] }
	Adding output port: lxx_stencil_op_hcompute_lgxx_stencil_1_37
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, 3 + lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
current out port name: 
	lxx_stencil_op_hcompute_lgxx_stencil_1_35	lxx_stencil_op_hcompute_lgxx_stencil_1_36	lxx_stencil_op_hcompute_lgxx_stencil_1_37
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 1)] }
	Adding output port: lxx_stencil_op_hcompute_lgxx_stencil_1_38
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, 1 + lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
current out port name: 
	lxx_stencil_op_hcompute_lgxx_stencil_1_35	lxx_stencil_op_hcompute_lgxx_stencil_1_36	lxx_stencil_op_hcompute_lgxx_stencil_1_37	lxx_stencil_op_hcompute_lgxx_stencil_1_38
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 2)] }
	Adding output port: lxx_stencil_op_hcompute_lgxx_stencil_1_39
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, 2 + lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
current out port name: 
	lxx_stencil_op_hcompute_lgxx_stencil_1_35	lxx_stencil_op_hcompute_lgxx_stencil_1_36	lxx_stencil_op_hcompute_lgxx_stencil_1_37	lxx_stencil_op_hcompute_lgxx_stencil_1_38	lxx_stencil_op_hcompute_lgxx_stencil_1_39
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[(lgxx_s1_y + 2), (lgxx_s1_x + 3)] }
	Adding output port: lxx_stencil_op_hcompute_lgxx_stencil_1_40
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, 3 + lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
current out port name: 
	lxx_stencil_op_hcompute_lgxx_stencil_1_35	lxx_stencil_op_hcompute_lgxx_stencil_1_36	lxx_stencil_op_hcompute_lgxx_stencil_1_37	lxx_stencil_op_hcompute_lgxx_stencil_1_38	lxx_stencil_op_hcompute_lgxx_stencil_1_39	lxx_stencil_op_hcompute_lgxx_stencil_1_40
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 1)] }
	Adding output port: lxx_stencil_op_hcompute_lgxx_stencil_1_41
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[3 + lgxx_s1_y, 1 + lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
current out port name: 
	lxx_stencil_op_hcompute_lgxx_stencil_1_35	lxx_stencil_op_hcompute_lgxx_stencil_1_36	lxx_stencil_op_hcompute_lgxx_stencil_1_37	lxx_stencil_op_hcompute_lgxx_stencil_1_38	lxx_stencil_op_hcompute_lgxx_stencil_1_39	lxx_stencil_op_hcompute_lgxx_stencil_1_40	lxx_stencil_op_hcompute_lgxx_stencil_1_41
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 3)] }
	Adding output port: lxx_stencil_op_hcompute_lgxx_stencil_1_42
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[3 + lgxx_s1_y, 3 + lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
current out port name: 
	lxx_stencil_op_hcompute_lgxx_stencil_1_35	lxx_stencil_op_hcompute_lgxx_stencil_1_36	lxx_stencil_op_hcompute_lgxx_stencil_1_37	lxx_stencil_op_hcompute_lgxx_stencil_1_38	lxx_stencil_op_hcompute_lgxx_stencil_1_39	lxx_stencil_op_hcompute_lgxx_stencil_1_40	lxx_stencil_op_hcompute_lgxx_stencil_1_41	lxx_stencil_op_hcompute_lgxx_stencil_1_42
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[(lgxx_s1_y + 3), (lgxx_s1_x + 2)] }
	Adding output port: lxx_stencil_op_hcompute_lgxx_stencil_1_43
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[3 + lgxx_s1_y, 2 + lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58 }
current out port name: 
	lxx_stencil_op_hcompute_lgxx_stencil_1_35	lxx_stencil_op_hcompute_lgxx_stencil_1_36	lxx_stencil_op_hcompute_lgxx_stencil_1_37	lxx_stencil_op_hcompute_lgxx_stencil_1_38	lxx_stencil_op_hcompute_lgxx_stencil_1_39	lxx_stencil_op_hcompute_lgxx_stencil_1_40	lxx_stencil_op_hcompute_lgxx_stencil_1_41	lxx_stencil_op_hcompute_lgxx_stencil_1_42	lxx_stencil_op_hcompute_lgxx_stencil_1_43
cond = { op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> lgxx_stencil_clkwrk_dsa2[(lgxx_s0_y + 1), (lgxx_s0_x + 1)] }
	Adding output port: lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
		Consumed: { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> lgxx_stencil_clkwrk_dsa2[1 + lgxx_s0_y, 1 + lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58 }
current out port name: 
	lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
Creating ports for op: hw_output_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] }
	Adding output port: hw_output_stencil_op_hcompute_hw_output_stencil_45
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
current out port name: 
	hw_output_stencil_op_hcompute_hw_output_stencil_45
Creating ports for op: cim_output_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] }
	Adding output port: cim_output_stencil_op_hcompute_hw_output_stencil_46
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_hw_output_stencil
  other_dspace_id = op_hcompute_hw_output_stencil
  Schedule domain set: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  Domain set from prg: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  ITS: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
ITS      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
current out port name: 
	cim_output_stencil_op_hcompute_hw_output_stencil_46
cond = { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)] }
	Adding output port: grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
		Consumed: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil[2 + grad_y_unclamp_s1_y, 2 + grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
current out port name: 
	grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
Creating ports for op: grad_y_unclamp_stencil_clkwrk_dsa1
cond = { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)] }
	Adding output port: grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48
		Consumed: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[2 + grad_y_unclamp_s1_y, 2 + grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_y_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_y_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
  Domain set from prg: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
  ITS: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
ITS      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
current out port name: 
	grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48
cond = { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49
		Consumed: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, 2 + grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_y_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_y_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
  Domain set from prg: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
  ITS: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
ITS      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49
cond = { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 3)] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50
		Consumed: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, 3 + grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_y_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_y_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
  Domain set from prg: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
  ITS: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
ITS      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50
cond = { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 4)] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51
		Consumed: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, 4 + grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_y_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_y_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
  Domain set from prg: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
  ITS: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
ITS      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51
cond = { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 2)] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52
		Consumed: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[4 + grad_y_unclamp_s1_y, 2 + grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_y_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_y_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
  Domain set from prg: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
  ITS: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
ITS      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52
cond = { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 4)] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53
		Consumed: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[4 + grad_y_unclamp_s1_y, 4 + grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_y_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_y_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
  Domain set from prg: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
  ITS: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
ITS      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53
cond = { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[(grad_y_unclamp_s1_y + 4), (grad_y_unclamp_s1_x + 3)] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
		Consumed: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[4 + grad_y_unclamp_s1_y, 3 + grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_y_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_y_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
  Domain set from prg: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
  ITS: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
ITS      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
cond = { op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[(grad_y_unclamp_s0_y + 2), (grad_y_unclamp_s0_x + 2)] }
	Adding output port: grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
		Consumed: { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[2 + grad_y_unclamp_s0_y, 2 + grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59 }
current out port name: 
	grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
cond = { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)] }
	Adding output port: grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
		Consumed: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil[2 + grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
current out port name: 
	grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
Creating ports for op: grad_x_unclamp_stencil_clkwrk_dsa0
cond = { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)] }
	Adding output port: grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57
		Consumed: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[2 + grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_x_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_x_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
  Domain set from prg: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
  ITS: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
ITS      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
current out port name: 
	grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57
cond = { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 4)] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
		Consumed: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_x_unclamp_s1_y, 4 + grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_x_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_x_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
  Domain set from prg: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
  ITS: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
ITS      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
cond = { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 4)] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59
		Consumed: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[4 + grad_x_unclamp_s1_y, 4 + grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_x_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_x_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
  Domain set from prg: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
  ITS: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
ITS      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
cond = { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 4)] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
		Consumed: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[3 + grad_x_unclamp_s1_y, 4 + grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_x_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_x_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
  Domain set from prg: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
  ITS: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
ITS      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
cond = { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61
		Consumed: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_x_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_x_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
  Domain set from prg: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
  ITS: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
ITS      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
cond = { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 3), (grad_x_unclamp_s1_x + 2)] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62
		Consumed: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[3 + grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_x_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_x_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
  Domain set from prg: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
  ITS: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
ITS      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
cond = { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[(grad_x_unclamp_s1_y + 4), (grad_x_unclamp_s1_x + 2)] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63
		Consumed: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[4 + grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_x_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_x_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
  Domain set from prg: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
  ITS: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
ITS      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
cond = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[(grad_x_unclamp_s0_y + 2), (grad_x_unclamp_s0_x + 2)] }
	Adding output port: grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
		Consumed: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[2 + grad_x_unclamp_s0_y, 2 + grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59 }
current out port name: 
	grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
Creating ports for op: cim_stencil
cond = { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> cim_stencil[(cim_s0_y + 1), (cim_s0_x + 1)] }
	Adding output port: cim_stencil_op_hcompute_cim_stencil_65
		Consumed: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil[1 + cim_s0_y, 1 + cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
current out port name: 
	cim_stencil_op_hcompute_cim_stencil_65
cond = { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> lgxx_stencil[(cim_s0_y + 1), (cim_s0_x + 1)] }
	Adding output port: lgxx_stencil_op_hcompute_cim_stencil_66
		Consumed: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgxx_stencil[1 + cim_s0_y, 1 + cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_stencil
  other_dspace_id = op_hcompute_cim_stencil
  Schedule domain set: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
  Domain set from prg: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
  ITS: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
ITS      : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
current out port name: 
	lgxx_stencil_op_hcompute_cim_stencil_66
cond = { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> lgxy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)] }
	Adding output port: lgxy_stencil_op_hcompute_cim_stencil_67
		Consumed: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgxy_stencil[1 + cim_s0_y, 1 + cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_stencil
  other_dspace_id = op_hcompute_cim_stencil
  Schedule domain set: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
  Domain set from prg: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
  ITS: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
ITS      : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
current out port name: 
	lgxy_stencil_op_hcompute_cim_stencil_67
cond = { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> lgyy_stencil[(cim_s0_y + 1), (cim_s0_x + 1)] }
	Adding output port: lgyy_stencil_op_hcompute_cim_stencil_68
		Consumed: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgyy_stencil[1 + cim_s0_y, 1 + cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_stencil
  other_dspace_id = op_hcompute_cim_stencil
  Schedule domain set: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
  Domain set from prg: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
  ITS: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
ITS      : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
current out port name: 
	lgyy_stencil_op_hcompute_cim_stencil_68
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_output_stencil[cim_output_s0_y, cim_output_s0_x] }
	Adding output port: cim_output_stencil_op_hcompute_cim_output_stencil_69
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_output_stencil[cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_output_stencil_op_hcompute_cim_output_stencil_69
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, cim_output_s0_x] }
	Adding output port: cim_stencil_op_hcompute_cim_output_stencil_70
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_output_stencil
  other_dspace_id = op_hcompute_cim_output_stencil
  Schedule domain set: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Domain set from prg: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  ITS: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
ITS      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_stencil_op_hcompute_cim_output_stencil_70
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 1)] }
	Adding output port: cim_stencil_op_hcompute_cim_output_stencil_71
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[1 + cim_output_s0_y, 1 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_output_stencil
  other_dspace_id = op_hcompute_cim_output_stencil
  Schedule domain set: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Domain set from prg: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  ITS: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
ITS      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_stencil_op_hcompute_cim_output_stencil_70	cim_stencil_op_hcompute_cim_output_stencil_71
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, (cim_output_s0_x + 1)] }
	Adding output port: cim_stencil_op_hcompute_cim_output_stencil_72
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, 1 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_output_stencil
  other_dspace_id = op_hcompute_cim_output_stencil
  Schedule domain set: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Domain set from prg: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  ITS: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
ITS      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_stencil_op_hcompute_cim_output_stencil_70	cim_stencil_op_hcompute_cim_output_stencil_71	cim_stencil_op_hcompute_cim_output_stencil_72
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, (cim_output_s0_x + 2)] }
	Adding output port: cim_stencil_op_hcompute_cim_output_stencil_73
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, 2 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_output_stencil
  other_dspace_id = op_hcompute_cim_output_stencil
  Schedule domain set: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Domain set from prg: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  ITS: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
ITS      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_stencil_op_hcompute_cim_output_stencil_70	cim_stencil_op_hcompute_cim_output_stencil_71	cim_stencil_op_hcompute_cim_output_stencil_72	cim_stencil_op_hcompute_cim_output_stencil_73
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[(cim_output_s0_y + 1), cim_output_s0_x] }
	Adding output port: cim_stencil_op_hcompute_cim_output_stencil_74
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[1 + cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_output_stencil
  other_dspace_id = op_hcompute_cim_output_stencil
  Schedule domain set: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Domain set from prg: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  ITS: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
ITS      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_stencil_op_hcompute_cim_output_stencil_70	cim_stencil_op_hcompute_cim_output_stencil_71	cim_stencil_op_hcompute_cim_output_stencil_72	cim_stencil_op_hcompute_cim_output_stencil_73	cim_stencil_op_hcompute_cim_output_stencil_74
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 2)] }
	Adding output port: cim_stencil_op_hcompute_cim_output_stencil_75
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[1 + cim_output_s0_y, 2 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_output_stencil
  other_dspace_id = op_hcompute_cim_output_stencil
  Schedule domain set: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Domain set from prg: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  ITS: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
ITS      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_stencil_op_hcompute_cim_output_stencil_70	cim_stencil_op_hcompute_cim_output_stencil_71	cim_stencil_op_hcompute_cim_output_stencil_72	cim_stencil_op_hcompute_cim_output_stencil_73	cim_stencil_op_hcompute_cim_output_stencil_74	cim_stencil_op_hcompute_cim_output_stencil_75
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[(cim_output_s0_y + 2), cim_output_s0_x] }
	Adding output port: cim_stencil_op_hcompute_cim_output_stencil_76
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[2 + cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_output_stencil
  other_dspace_id = op_hcompute_cim_output_stencil
  Schedule domain set: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Domain set from prg: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  ITS: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
ITS      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_stencil_op_hcompute_cim_output_stencil_70	cim_stencil_op_hcompute_cim_output_stencil_71	cim_stencil_op_hcompute_cim_output_stencil_72	cim_stencil_op_hcompute_cim_output_stencil_73	cim_stencil_op_hcompute_cim_output_stencil_74	cim_stencil_op_hcompute_cim_output_stencil_75	cim_stencil_op_hcompute_cim_output_stencil_76
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 1)] }
	Adding output port: cim_stencil_op_hcompute_cim_output_stencil_77
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[2 + cim_output_s0_y, 1 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_output_stencil
  other_dspace_id = op_hcompute_cim_output_stencil
  Schedule domain set: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Domain set from prg: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  ITS: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
ITS      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_stencil_op_hcompute_cim_output_stencil_70	cim_stencil_op_hcompute_cim_output_stencil_71	cim_stencil_op_hcompute_cim_output_stencil_72	cim_stencil_op_hcompute_cim_output_stencil_73	cim_stencil_op_hcompute_cim_output_stencil_74	cim_stencil_op_hcompute_cim_output_stencil_75	cim_stencil_op_hcompute_cim_output_stencil_76	cim_stencil_op_hcompute_cim_output_stencil_77
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 2)] }
	Adding output port: cim_stencil_op_hcompute_cim_output_stencil_78
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[2 + cim_output_s0_y, 2 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Opt sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [0, 0, 7, grad_y_unclamp_s1_y, 0, grad_y_unclamp_s1_x, 0] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 16, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [0, 0, 2, grad_x_unclamp_s1_y, 0, grad_x_unclamp_s1_x, 0] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [0, 0, 0, padded16_global_wrapper_s0_y, 0, padded16_global_wrapper_s0_x, 0] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [0, 0, 1, grad_x_unclamp_s0_y, 0, grad_x_unclamp_s0_x, 0] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [0, 0, 10, lgxy_s1_y, 0, lgxy_s1_x, 0] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [0, 0, 6, grad_y_unclamp_s0_y, 0, grad_y_unclamp_s0_x, 0] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [0, 0, 3, lxx_s0_y, 0, lxx_s0_x, 0] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [0, 0, 5, lgxx_s1_y, 0, lgxx_s1_x, 0] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [0, 0, 12, lgyy_s0_y, 0, lgyy_s0_x, 0] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [0, 0, 4, lgxx_s0_y, 0, lgxx_s0_x, 0] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [0, 0, 13, lgyy_s1_y, 0, lgyy_s1_x, 0] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [0, 0, 9, lgxy_s0_y, 0, lgxy_s0_x, 0] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [0, 0, 8, lxy_s0_y, 0, lxy_s0_x, 0] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [0, 0, 11, lyy_s0_y, 0, lyy_s0_x, 0] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [0, 0, 14, cim_s0_y, 0, cim_s0_x, 0] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58 }
Dom      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : -1 <= lgyy_s1_y <= 58 and -1 <= lgyy_s1_x <= 58; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : -1 <= lgxy_s0_y <= 58 and -1 <= lgxy_s0_x <= 58; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : -3 <= padded16_global_wrapper_s0_y <= 60 and -3 <= padded16_global_wrapper_s0_x <= 60; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : -1 <= lgxx_s0_y <= 58 and -1 <= lgxx_s0_x <= 58; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : -2 <= lyy_s0_y <= 59 and -2 <= lyy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : -2 <= grad_y_unclamp_s1_y <= 59 and -2 <= grad_y_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : -2 <= grad_x_unclamp_s1_y <= 59 and -2 <= grad_x_unclamp_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : -2 <= grad_x_unclamp_s0_y <= 59 and -2 <= grad_x_unclamp_s0_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : -1 <= lgxy_s1_y <= 58 and -1 <= lgxy_s1_x <= 58; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : -1 <= lgyy_s0_y <= 58 and -1 <= lgyy_s0_x <= 58; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : -2 <= lxy_s0_y <= 59 and -2 <= lxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : -2 <= lxx_s0_y <= 59 and -2 <= lxx_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : -2 <= grad_y_unclamp_s0_y <= 59 and -2 <= grad_y_unclamp_s0_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : -1 <= lgxx_s1_y <= 58 and -1 <= lgxx_s1_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : -1 <= cim_s0_y <= 58 and -1 <= cim_s0_x <= 58; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_output_stencil
  other_dspace_id = op_hcompute_cim_output_stencil
  Schedule domain set: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Domain set from prg: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  ITS: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
ITS      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [0, 0, 15, cim_output_s0_y, 0, cim_output_s0_x, 0] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_stencil_op_hcompute_cim_output_stencil_70	cim_stencil_op_hcompute_cim_output_stencil_71	cim_stencil_op_hcompute_cim_output_stencil_72	cim_stencil_op_hcompute_cim_output_stencil_73	cim_stencil_op_hcompute_cim_output_stencil_74	cim_stencil_op_hcompute_cim_output_stencil_75	cim_stencil_op_hcompute_cim_output_stencil_76	cim_stencil_op_hcompute_cim_output_stencil_77	cim_stencil_op_hcompute_cim_output_stencil_78
generating banks for buffer: cim_output_stencil
getting rddom
rddom = { cim_output_stencil[i0, i1] : 0 <= i0 <= 57 and 0 <= i1 <= 57 }
Adding bank between cim_output_stencil_op_hcompute_cim_output_stencil_69 and cim_output_stencil_op_hcompute_hw_output_stencil_46
Done generating register-file style banks for cim_output_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: cim_output_stencil_all_inputs_to_all_outputs
	input: 
    cim_output_stencil_op_hcompute_cim_output_stencil_69
	 output: 
    cim_output_stencil_op_hcompute_hw_output_stencil_46
extracting box from { cim_output_stencil[i0, i1] : 0 <= i0 <= 57 and 0 <= i1 <= 57 }
extracting box from { cim_output_stencil[i0, i1] : 0 <= i0 <= 57 and 0 <= i1 <= 57 }
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_y)] }
cg = (((1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_y)] }
cg = (((57 + -1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_x)] }
cg = (((1*cim_output_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_x)] }
cg = (((57 + -1*cim_output_s0_x)) >= 0)
Input port:cim_output_stencil_op_hcompute_cim_output_stencil_69, Get ram string: (((1*cim_output_s0_y)) - 0) * 1 + (((1*cim_output_s0_x)) - 0) * 58
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(hw_output_s0_y_yi)] }
cg = (((1*hw_output_s0_y_yi)) >= 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(57 - hw_output_s0_y_yi)] }
cg = (((57 + -1*hw_output_s0_y_yi)) >= 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
cg = (((1*hw_output_s0_x_xi)) >= 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(57 - hw_output_s0_x_xi)] }
cg = (((57 + -1*hw_output_s0_x_xi)) >= 0)
generating banks for buffer: cim_stencil
getting rddom
rddom = { cim_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Adding bank between cim_stencil_op_hcompute_cim_stencil_65 and cim_stencil_op_hcompute_cim_output_stencil_70
Adding bank between cim_stencil_op_hcompute_cim_stencil_65 and cim_stencil_op_hcompute_cim_output_stencil_71
Adding bank between cim_stencil_op_hcompute_cim_stencil_65 and cim_stencil_op_hcompute_cim_output_stencil_72
Adding bank between cim_stencil_op_hcompute_cim_stencil_65 and cim_stencil_op_hcompute_cim_output_stencil_73
Adding bank between cim_stencil_op_hcompute_cim_stencil_65 and cim_stencil_op_hcompute_cim_output_stencil_74
Adding bank between cim_stencil_op_hcompute_cim_stencil_65 and cim_stencil_op_hcompute_cim_output_stencil_75
Adding bank between cim_stencil_op_hcompute_cim_stencil_65 and cim_stencil_op_hcompute_cim_output_stencil_76
Adding bank between cim_stencil_op_hcompute_cim_stencil_65 and cim_stencil_op_hcompute_cim_output_stencil_77
Adding bank between cim_stencil_op_hcompute_cim_stencil_65 and cim_stencil_op_hcompute_cim_output_stencil_78
Done generating register-file style banks for cim_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: cim_stencil_all_inputs_to_all_outputs
	input: 
    cim_stencil_op_hcompute_cim_stencil_65
	 output: 
    cim_stencil_op_hcompute_cim_output_stencil_70
    cim_stencil_op_hcompute_cim_output_stencil_71
    cim_stencil_op_hcompute_cim_output_stencil_72
    cim_stencil_op_hcompute_cim_output_stencil_73
    cim_stencil_op_hcompute_cim_output_stencil_74
    cim_stencil_op_hcompute_cim_output_stencil_75
    cim_stencil_op_hcompute_cim_output_stencil_76
    cim_stencil_op_hcompute_cim_output_stencil_77
    cim_stencil_op_hcompute_cim_output_stencil_78
extracting box from { cim_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
extracting box from { cim_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(1 + cim_s0_y)] }
cg = (((1 + 1*cim_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(58 - cim_s0_y)] }
cg = (((58 + -1*cim_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(1 + cim_s0_x)] }
cg = (((1 + 1*cim_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(58 - cim_s0_x)] }
cg = (((58 + -1*cim_s0_x)) >= 0)
Input port:cim_stencil_op_hcompute_cim_stencil_65, Get ram string: (((1 + 1*cim_s0_y)) - 0) * 1 + (((1 + 1*cim_s0_x)) - 0) * 60
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_y)] }
cg = (((1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_y)] }
cg = (((57 + -1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_x)] }
cg = (((1*cim_output_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_x)] }
cg = (((57 + -1*cim_output_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_y)] }
cg = (((1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_y)] }
cg = (((57 + -1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_x)] }
cg = (((1*cim_output_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_x)] }
cg = (((57 + -1*cim_output_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_y)] }
cg = (((1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_y)] }
cg = (((57 + -1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_x)] }
cg = (((1*cim_output_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_x)] }
cg = (((57 + -1*cim_output_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_y)] }
cg = (((1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_y)] }
cg = (((57 + -1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_x)] }
cg = (((1*cim_output_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_x)] }
cg = (((57 + -1*cim_output_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_y)] }
cg = (((1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_y)] }
cg = (((57 + -1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_x)] }
cg = (((1*cim_output_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_x)] }
cg = (((57 + -1*cim_output_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_y)] }
cg = (((1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_y)] }
cg = (((57 + -1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_x)] }
cg = (((1*cim_output_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_x)] }
cg = (((57 + -1*cim_output_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_y)] }
cg = (((1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_y)] }
cg = (((57 + -1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_x)] }
cg = (((1*cim_output_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_x)] }
cg = (((57 + -1*cim_output_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_y)] }
cg = (((1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_y)] }
cg = (((57 + -1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_x)] }
cg = (((1*cim_output_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_x)] }
cg = (((57 + -1*cim_output_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_y)] }
cg = (((1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_y)] }
cg = (((57 + -1*cim_output_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(cim_output_s0_x)] }
cg = (((1*cim_output_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [(57 - cim_output_s0_x)] }
cg = (((57 + -1*cim_output_s0_x)) >= 0)
generating banks for buffer: grad_x_unclamp_stencil
getting rddom
rddom = { grad_x_unclamp_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Adding bank between grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56 and grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8
Adding bank between grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56 and grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5
Done generating register-file style banks for grad_x_unclamp_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: grad_x_unclamp_stencil_all_inputs_to_all_outputs
	input: 
    grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
	 output: 
    grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8
    grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5
extracting box from { grad_x_unclamp_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
extracting box from { grad_x_unclamp_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_y)] }
cg = (((2 + 1*grad_x_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(59 - grad_x_unclamp_s1_y)] }
cg = (((59 + -1*grad_x_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_x)] }
cg = (((2 + 1*grad_x_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(59 - grad_x_unclamp_s1_x)] }
cg = (((59 + -1*grad_x_unclamp_s1_x)) >= 0)
Input port:grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56, Get ram string: (((2 + 1*grad_x_unclamp_s1_y)) - 0) * 1 + (((2 + 1*grad_x_unclamp_s1_x)) - 0) * 62
Constraint aff with div: { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [(2 + lxx_s0_y)] }
cg = (((2 + 1*lxx_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [(59 - lxx_s0_y)] }
cg = (((59 + -1*lxx_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [(2 + lxx_s0_x)] }
cg = (((2 + 1*lxx_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [(59 - lxx_s0_x)] }
cg = (((59 + -1*lxx_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [(2 + lxy_s0_y)] }
cg = (((2 + 1*lxy_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [(59 - lxy_s0_y)] }
cg = (((59 + -1*lxy_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [(2 + lxy_s0_x)] }
cg = (((2 + 1*lxy_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [(59 - lxy_s0_x)] }
cg = (((59 + -1*lxy_s0_x)) >= 0)
generating banks for buffer: grad_x_unclamp_stencil_clkwrk_dsa0
getting rddom
rddom = { grad_x_unclamp_stencil_clkwrk_dsa0[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Adding bank between grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64 and grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57
Done generating register-file style banks for grad_x_unclamp_stencil_clkwrk_dsa0, bank list size = 1
  after banking there are 1 banks
  Bank name: grad_x_unclamp_stencil_clkwrk_dsa0_all_inputs_to_all_outputs
	input: 
    grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
	 output: 
    grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57
extracting box from { grad_x_unclamp_stencil_clkwrk_dsa0[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
extracting box from { grad_x_unclamp_stencil_clkwrk_dsa0[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [(2 + grad_x_unclamp_s0_y)] }
cg = (((2 + 1*grad_x_unclamp_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [(59 - grad_x_unclamp_s0_y)] }
cg = (((59 + -1*grad_x_unclamp_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [(2 + grad_x_unclamp_s0_x)] }
cg = (((2 + 1*grad_x_unclamp_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [(59 - grad_x_unclamp_s0_x)] }
cg = (((59 + -1*grad_x_unclamp_s0_x)) >= 0)
Input port:grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64, Get ram string: (((2 + 1*grad_x_unclamp_s0_y)) - 0) * 1 + (((2 + 1*grad_x_unclamp_s0_x)) - 0) * 62
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_y)] }
cg = (((2 + 1*grad_x_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(59 - grad_x_unclamp_s1_y)] }
cg = (((59 + -1*grad_x_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_x)] }
cg = (((2 + 1*grad_x_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(59 - grad_x_unclamp_s1_x)] }
cg = (((59 + -1*grad_x_unclamp_s1_x)) >= 0)
generating banks for buffer: grad_y_unclamp_stencil
getting rddom
rddom = { grad_y_unclamp_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Adding bank between grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47 and grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6
Adding bank between grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47 and grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3
Done generating register-file style banks for grad_y_unclamp_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: grad_y_unclamp_stencil_all_inputs_to_all_outputs
	input: 
    grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
	 output: 
    grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6
    grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3
extracting box from { grad_y_unclamp_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
extracting box from { grad_y_unclamp_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_y)] }
cg = (((2 + 1*grad_y_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(59 - grad_y_unclamp_s1_y)] }
cg = (((59 + -1*grad_y_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_x)] }
cg = (((2 + 1*grad_y_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(59 - grad_y_unclamp_s1_x)] }
cg = (((59 + -1*grad_y_unclamp_s1_x)) >= 0)
Input port:grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47, Get ram string: (((2 + 1*grad_y_unclamp_s1_y)) - 0) * 1 + (((2 + 1*grad_y_unclamp_s1_x)) - 0) * 62
Constraint aff with div: { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [(2 + lxy_s0_y)] }
cg = (((2 + 1*lxy_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [(59 - lxy_s0_y)] }
cg = (((59 + -1*lxy_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [(2 + lxy_s0_x)] }
cg = (((2 + 1*lxy_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [(59 - lxy_s0_x)] }
cg = (((59 + -1*lxy_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [(2 + lyy_s0_y)] }
cg = (((2 + 1*lyy_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [(59 - lyy_s0_y)] }
cg = (((59 + -1*lyy_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [(2 + lyy_s0_x)] }
cg = (((2 + 1*lyy_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [(59 - lyy_s0_x)] }
cg = (((59 + -1*lyy_s0_x)) >= 0)
generating banks for buffer: grad_y_unclamp_stencil_clkwrk_dsa1
getting rddom
rddom = { grad_y_unclamp_stencil_clkwrk_dsa1[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Adding bank between grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55 and grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48
Done generating register-file style banks for grad_y_unclamp_stencil_clkwrk_dsa1, bank list size = 1
  after banking there are 1 banks
  Bank name: grad_y_unclamp_stencil_clkwrk_dsa1_all_inputs_to_all_outputs
	input: 
    grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
	 output: 
    grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48
extracting box from { grad_y_unclamp_stencil_clkwrk_dsa1[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
extracting box from { grad_y_unclamp_stencil_clkwrk_dsa1[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [(2 + grad_y_unclamp_s0_y)] }
cg = (((2 + 1*grad_y_unclamp_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [(59 - grad_y_unclamp_s0_y)] }
cg = (((59 + -1*grad_y_unclamp_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [(2 + grad_y_unclamp_s0_x)] }
cg = (((2 + 1*grad_y_unclamp_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [(59 - grad_y_unclamp_s0_x)] }
cg = (((59 + -1*grad_y_unclamp_s0_x)) >= 0)
Input port:grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55, Get ram string: (((2 + 1*grad_y_unclamp_s0_y)) - 0) * 1 + (((2 + 1*grad_y_unclamp_s0_x)) - 0) * 62
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_y)] }
cg = (((2 + 1*grad_y_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(59 - grad_y_unclamp_s1_y)] }
cg = (((59 + -1*grad_y_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_x)] }
cg = (((2 + 1*grad_y_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(59 - grad_y_unclamp_s1_x)] }
cg = (((59 + -1*grad_y_unclamp_s1_x)) >= 0)
generating banks for buffer: lgxx_stencil
getting rddom
rddom = { lgxx_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Adding bank between lgxx_stencil_op_hcompute_lgxx_stencil_1_33 and lgxx_stencil_op_hcompute_cim_stencil_66
Done generating register-file style banks for lgxx_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: lgxx_stencil_all_inputs_to_all_outputs
	input: 
    lgxx_stencil_op_hcompute_lgxx_stencil_1_33
	 output: 
    lgxx_stencil_op_hcompute_cim_stencil_66
extracting box from { lgxx_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
extracting box from { lgxx_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_y)] }
cg = (((1 + 1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_y)] }
cg = (((58 + -1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_x)] }
cg = (((1 + 1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_x)] }
cg = (((58 + -1*lgxx_s1_x)) >= 0)
Input port:lgxx_stencil_op_hcompute_lgxx_stencil_1_33, Get ram string: (((1 + 1*lgxx_s1_y)) - 0) * 1 + (((1 + 1*lgxx_s1_x)) - 0) * 60
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(1 + cim_s0_y)] }
cg = (((1 + 1*cim_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(58 - cim_s0_y)] }
cg = (((58 + -1*cim_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(1 + cim_s0_x)] }
cg = (((1 + 1*cim_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(58 - cim_s0_x)] }
cg = (((58 + -1*cim_s0_x)) >= 0)
generating banks for buffer: lgxx_stencil_clkwrk_dsa2
getting rddom
rddom = { lgxx_stencil_clkwrk_dsa2[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Adding bank between lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44 and lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34
Done generating register-file style banks for lgxx_stencil_clkwrk_dsa2, bank list size = 1
  after banking there are 1 banks
  Bank name: lgxx_stencil_clkwrk_dsa2_all_inputs_to_all_outputs
	input: 
    lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
	 output: 
    lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34
extracting box from { lgxx_stencil_clkwrk_dsa2[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
extracting box from { lgxx_stencil_clkwrk_dsa2[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Constraint aff with div: { op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [(1 + lgxx_s0_y)] }
cg = (((1 + 1*lgxx_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [(58 - lgxx_s0_y)] }
cg = (((58 + -1*lgxx_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [(1 + lgxx_s0_x)] }
cg = (((1 + 1*lgxx_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [(58 - lgxx_s0_x)] }
cg = (((58 + -1*lgxx_s0_x)) >= 0)
Input port:lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44, Get ram string: (((1 + 1*lgxx_s0_y)) - 0) * 1 + (((1 + 1*lgxx_s0_x)) - 0) * 60
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_y)] }
cg = (((1 + 1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_y)] }
cg = (((58 + -1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_x)] }
cg = (((1 + 1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_x)] }
cg = (((58 + -1*lgxx_s1_x)) >= 0)
generating banks for buffer: lgxy_stencil
getting rddom
rddom = { lgxy_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Adding bank between lgxy_stencil_op_hcompute_lgxy_stencil_1_21 and lgxy_stencil_op_hcompute_cim_stencil_67
Done generating register-file style banks for lgxy_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: lgxy_stencil_all_inputs_to_all_outputs
	input: 
    lgxy_stencil_op_hcompute_lgxy_stencil_1_21
	 output: 
    lgxy_stencil_op_hcompute_cim_stencil_67
extracting box from { lgxy_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
extracting box from { lgxy_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_y)] }
cg = (((1 + 1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_y)] }
cg = (((58 + -1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_x)] }
cg = (((1 + 1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_x)] }
cg = (((58 + -1*lgxy_s1_x)) >= 0)
Input port:lgxy_stencil_op_hcompute_lgxy_stencil_1_21, Get ram string: (((1 + 1*lgxy_s1_y)) - 0) * 1 + (((1 + 1*lgxy_s1_x)) - 0) * 60
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(1 + cim_s0_y)] }
cg = (((1 + 1*cim_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(58 - cim_s0_y)] }
cg = (((58 + -1*cim_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(1 + cim_s0_x)] }
cg = (((1 + 1*cim_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(58 - cim_s0_x)] }
cg = (((58 + -1*cim_s0_x)) >= 0)
generating banks for buffer: lgxy_stencil_clkwrk_dsa3
getting rddom
rddom = { lgxy_stencil_clkwrk_dsa3[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Adding bank between lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32 and lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22
Done generating register-file style banks for lgxy_stencil_clkwrk_dsa3, bank list size = 1
  after banking there are 1 banks
  Bank name: lgxy_stencil_clkwrk_dsa3_all_inputs_to_all_outputs
	input: 
    lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
	 output: 
    lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22
extracting box from { lgxy_stencil_clkwrk_dsa3[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
extracting box from { lgxy_stencil_clkwrk_dsa3[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Constraint aff with div: { op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [(1 + lgxy_s0_y)] }
cg = (((1 + 1*lgxy_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [(58 - lgxy_s0_y)] }
cg = (((58 + -1*lgxy_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [(1 + lgxy_s0_x)] }
cg = (((1 + 1*lgxy_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [(58 - lgxy_s0_x)] }
cg = (((58 + -1*lgxy_s0_x)) >= 0)
Input port:lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32, Get ram string: (((1 + 1*lgxy_s0_y)) - 0) * 1 + (((1 + 1*lgxy_s0_x)) - 0) * 60
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_y)] }
cg = (((1 + 1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_y)] }
cg = (((58 + -1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_x)] }
cg = (((1 + 1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_x)] }
cg = (((58 + -1*lgxy_s1_x)) >= 0)
generating banks for buffer: lgyy_stencil
getting rddom
rddom = { lgyy_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Adding bank between lgyy_stencil_op_hcompute_lgyy_stencil_1_9 and lgyy_stencil_op_hcompute_cim_stencil_68
Done generating register-file style banks for lgyy_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: lgyy_stencil_all_inputs_to_all_outputs
	input: 
    lgyy_stencil_op_hcompute_lgyy_stencil_1_9
	 output: 
    lgyy_stencil_op_hcompute_cim_stencil_68
extracting box from { lgyy_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
extracting box from { lgyy_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_y)] }
cg = (((1 + 1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_y)] }
cg = (((58 + -1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_x)] }
cg = (((1 + 1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_x)] }
cg = (((58 + -1*lgyy_s1_x)) >= 0)
Input port:lgyy_stencil_op_hcompute_lgyy_stencil_1_9, Get ram string: (((1 + 1*lgyy_s1_y)) - 0) * 1 + (((1 + 1*lgyy_s1_x)) - 0) * 60
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(1 + cim_s0_y)] }
cg = (((1 + 1*cim_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(58 - cim_s0_y)] }
cg = (((58 + -1*cim_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(1 + cim_s0_x)] }
cg = (((1 + 1*cim_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [(58 - cim_s0_x)] }
cg = (((58 + -1*cim_s0_x)) >= 0)
generating banks for buffer: lgyy_stencil_clkwrk_dsa4
getting rddom
rddom = { lgyy_stencil_clkwrk_dsa4[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Adding bank between lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20 and lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10
Done generating register-file style banks for lgyy_stencil_clkwrk_dsa4, bank list size = 1
  after banking there are 1 banks
  Bank name: lgyy_stencil_clkwrk_dsa4_all_inputs_to_all_outputs
	input: 
    lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
	 output: 
    lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10
extracting box from { lgyy_stencil_clkwrk_dsa4[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
extracting box from { lgyy_stencil_clkwrk_dsa4[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Constraint aff with div: { op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [(1 + lgyy_s0_y)] }
cg = (((1 + 1*lgyy_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [(58 - lgyy_s0_y)] }
cg = (((58 + -1*lgyy_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [(1 + lgyy_s0_x)] }
cg = (((1 + 1*lgyy_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [(58 - lgyy_s0_x)] }
cg = (((58 + -1*lgyy_s0_x)) >= 0)
Input port:lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20, Get ram string: (((1 + 1*lgyy_s0_y)) - 0) * 1 + (((1 + 1*lgyy_s0_x)) - 0) * 60
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_y)] }
cg = (((1 + 1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_y)] }
cg = (((58 + -1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_x)] }
cg = (((1 + 1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_x)] }
cg = (((58 + -1*lgyy_s1_x)) >= 0)
generating banks for buffer: lxx_stencil
getting rddom
rddom = { lxx_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Adding bank between lxx_stencil_op_hcompute_lxx_stencil_7 and lxx_stencil_op_hcompute_lgxx_stencil_1_35
Adding bank between lxx_stencil_op_hcompute_lxx_stencil_7 and lxx_stencil_op_hcompute_lgxx_stencil_1_36
Adding bank between lxx_stencil_op_hcompute_lxx_stencil_7 and lxx_stencil_op_hcompute_lgxx_stencil_1_37
Adding bank between lxx_stencil_op_hcompute_lxx_stencil_7 and lxx_stencil_op_hcompute_lgxx_stencil_1_38
Adding bank between lxx_stencil_op_hcompute_lxx_stencil_7 and lxx_stencil_op_hcompute_lgxx_stencil_1_39
Adding bank between lxx_stencil_op_hcompute_lxx_stencil_7 and lxx_stencil_op_hcompute_lgxx_stencil_1_40
Adding bank between lxx_stencil_op_hcompute_lxx_stencil_7 and lxx_stencil_op_hcompute_lgxx_stencil_1_41
Adding bank between lxx_stencil_op_hcompute_lxx_stencil_7 and lxx_stencil_op_hcompute_lgxx_stencil_1_42
Adding bank between lxx_stencil_op_hcompute_lxx_stencil_7 and lxx_stencil_op_hcompute_lgxx_stencil_1_43
Done generating register-file style banks for lxx_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: lxx_stencil_all_inputs_to_all_outputs
	input: 
    lxx_stencil_op_hcompute_lxx_stencil_7
	 output: 
    lxx_stencil_op_hcompute_lgxx_stencil_1_35
    lxx_stencil_op_hcompute_lgxx_stencil_1_36
    lxx_stencil_op_hcompute_lgxx_stencil_1_37
    lxx_stencil_op_hcompute_lgxx_stencil_1_38
    lxx_stencil_op_hcompute_lgxx_stencil_1_39
    lxx_stencil_op_hcompute_lgxx_stencil_1_40
    lxx_stencil_op_hcompute_lgxx_stencil_1_41
    lxx_stencil_op_hcompute_lgxx_stencil_1_42
    lxx_stencil_op_hcompute_lgxx_stencil_1_43
extracting box from { lxx_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
extracting box from { lxx_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Constraint aff with div: { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [(2 + lxx_s0_y)] }
cg = (((2 + 1*lxx_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [(59 - lxx_s0_y)] }
cg = (((59 + -1*lxx_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [(2 + lxx_s0_x)] }
cg = (((2 + 1*lxx_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [(59 - lxx_s0_x)] }
cg = (((59 + -1*lxx_s0_x)) >= 0)
Input port:lxx_stencil_op_hcompute_lxx_stencil_7, Get ram string: (((2 + 1*lxx_s0_y)) - 0) * 1 + (((2 + 1*lxx_s0_x)) - 0) * 62
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_y)] }
cg = (((1 + 1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_y)] }
cg = (((58 + -1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_x)] }
cg = (((1 + 1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_x)] }
cg = (((58 + -1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_y)] }
cg = (((1 + 1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_y)] }
cg = (((58 + -1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_x)] }
cg = (((1 + 1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_x)] }
cg = (((58 + -1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_y)] }
cg = (((1 + 1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_y)] }
cg = (((58 + -1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_x)] }
cg = (((1 + 1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_x)] }
cg = (((58 + -1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_y)] }
cg = (((1 + 1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_y)] }
cg = (((58 + -1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_x)] }
cg = (((1 + 1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_x)] }
cg = (((58 + -1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_y)] }
cg = (((1 + 1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_y)] }
cg = (((58 + -1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_x)] }
cg = (((1 + 1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_x)] }
cg = (((58 + -1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_y)] }
cg = (((1 + 1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_y)] }
cg = (((58 + -1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_x)] }
cg = (((1 + 1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_x)] }
cg = (((58 + -1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_y)] }
cg = (((1 + 1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_y)] }
cg = (((58 + -1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_x)] }
cg = (((1 + 1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_x)] }
cg = (((58 + -1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_y)] }
cg = (((1 + 1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_y)] }
cg = (((58 + -1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_x)] }
cg = (((1 + 1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_x)] }
cg = (((58 + -1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_y)] }
cg = (((1 + 1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_y)] }
cg = (((58 + -1*lgxx_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(1 + lgxx_s1_x)] }
cg = (((1 + 1*lgxx_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [(58 - lgxx_s1_x)] }
cg = (((58 + -1*lgxx_s1_x)) >= 0)
generating banks for buffer: lxy_stencil
getting rddom
rddom = { lxy_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Adding bank between lxy_stencil_op_hcompute_lxy_stencil_4 and lxy_stencil_op_hcompute_lgxy_stencil_1_23
Adding bank between lxy_stencil_op_hcompute_lxy_stencil_4 and lxy_stencil_op_hcompute_lgxy_stencil_1_24
Adding bank between lxy_stencil_op_hcompute_lxy_stencil_4 and lxy_stencil_op_hcompute_lgxy_stencil_1_25
Adding bank between lxy_stencil_op_hcompute_lxy_stencil_4 and lxy_stencil_op_hcompute_lgxy_stencil_1_26
Adding bank between lxy_stencil_op_hcompute_lxy_stencil_4 and lxy_stencil_op_hcompute_lgxy_stencil_1_27
Adding bank between lxy_stencil_op_hcompute_lxy_stencil_4 and lxy_stencil_op_hcompute_lgxy_stencil_1_28
Adding bank between lxy_stencil_op_hcompute_lxy_stencil_4 and lxy_stencil_op_hcompute_lgxy_stencil_1_29
Adding bank between lxy_stencil_op_hcompute_lxy_stencil_4 and lxy_stencil_op_hcompute_lgxy_stencil_1_30
Adding bank between lxy_stencil_op_hcompute_lxy_stencil_4 and lxy_stencil_op_hcompute_lgxy_stencil_1_31
Done generating register-file style banks for lxy_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: lxy_stencil_all_inputs_to_all_outputs
	input: 
    lxy_stencil_op_hcompute_lxy_stencil_4
	 output: 
    lxy_stencil_op_hcompute_lgxy_stencil_1_23
    lxy_stencil_op_hcompute_lgxy_stencil_1_24
    lxy_stencil_op_hcompute_lgxy_stencil_1_25
    lxy_stencil_op_hcompute_lgxy_stencil_1_26
    lxy_stencil_op_hcompute_lgxy_stencil_1_27
    lxy_stencil_op_hcompute_lgxy_stencil_1_28
    lxy_stencil_op_hcompute_lgxy_stencil_1_29
    lxy_stencil_op_hcompute_lgxy_stencil_1_30
    lxy_stencil_op_hcompute_lgxy_stencil_1_31
extracting box from { lxy_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
extracting box from { lxy_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Constraint aff with div: { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [(2 + lxy_s0_y)] }
cg = (((2 + 1*lxy_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [(59 - lxy_s0_y)] }
cg = (((59 + -1*lxy_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [(2 + lxy_s0_x)] }
cg = (((2 + 1*lxy_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [(59 - lxy_s0_x)] }
cg = (((59 + -1*lxy_s0_x)) >= 0)
Input port:lxy_stencil_op_hcompute_lxy_stencil_4, Get ram string: (((2 + 1*lxy_s0_y)) - 0) * 1 + (((2 + 1*lxy_s0_x)) - 0) * 62
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_y)] }
cg = (((1 + 1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_y)] }
cg = (((58 + -1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_x)] }
cg = (((1 + 1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_x)] }
cg = (((58 + -1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_y)] }
cg = (((1 + 1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_y)] }
cg = (((58 + -1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_x)] }
cg = (((1 + 1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_x)] }
cg = (((58 + -1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_y)] }
cg = (((1 + 1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_y)] }
cg = (((58 + -1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_x)] }
cg = (((1 + 1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_x)] }
cg = (((58 + -1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_y)] }
cg = (((1 + 1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_y)] }
cg = (((58 + -1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_x)] }
cg = (((1 + 1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_x)] }
cg = (((58 + -1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_y)] }
cg = (((1 + 1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_y)] }
cg = (((58 + -1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_x)] }
cg = (((1 + 1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_x)] }
cg = (((58 + -1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_y)] }
cg = (((1 + 1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_y)] }
cg = (((58 + -1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_x)] }
cg = (((1 + 1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_x)] }
cg = (((58 + -1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_y)] }
cg = (((1 + 1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_y)] }
cg = (((58 + -1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_x)] }
cg = (((1 + 1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_x)] }
cg = (((58 + -1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_y)] }
cg = (((1 + 1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_y)] }
cg = (((58 + -1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_x)] }
cg = (((1 + 1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_x)] }
cg = (((58 + -1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_y)] }
cg = (((1 + 1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_y)] }
cg = (((58 + -1*lgxy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(1 + lgxy_s1_x)] }
cg = (((1 + 1*lgxy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [(58 - lgxy_s1_x)] }
cg = (((58 + -1*lgxy_s1_x)) >= 0)
generating banks for buffer: lyy_stencil
getting rddom
rddom = { lyy_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Adding bank between lyy_stencil_op_hcompute_lyy_stencil_2 and lyy_stencil_op_hcompute_lgyy_stencil_1_11
Adding bank between lyy_stencil_op_hcompute_lyy_stencil_2 and lyy_stencil_op_hcompute_lgyy_stencil_1_12
Adding bank between lyy_stencil_op_hcompute_lyy_stencil_2 and lyy_stencil_op_hcompute_lgyy_stencil_1_13
Adding bank between lyy_stencil_op_hcompute_lyy_stencil_2 and lyy_stencil_op_hcompute_lgyy_stencil_1_14
Adding bank between lyy_stencil_op_hcompute_lyy_stencil_2 and lyy_stencil_op_hcompute_lgyy_stencil_1_15
Adding bank between lyy_stencil_op_hcompute_lyy_stencil_2 and lyy_stencil_op_hcompute_lgyy_stencil_1_16
Adding bank between lyy_stencil_op_hcompute_lyy_stencil_2 and lyy_stencil_op_hcompute_lgyy_stencil_1_17
Adding bank between lyy_stencil_op_hcompute_lyy_stencil_2 and lyy_stencil_op_hcompute_lgyy_stencil_1_18
Adding bank between lyy_stencil_op_hcompute_lyy_stencil_2 and lyy_stencil_op_hcompute_lgyy_stencil_1_19
Done generating register-file style banks for lyy_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: lyy_stencil_all_inputs_to_all_outputs
	input: 
    lyy_stencil_op_hcompute_lyy_stencil_2
	 output: 
    lyy_stencil_op_hcompute_lgyy_stencil_1_11
    lyy_stencil_op_hcompute_lgyy_stencil_1_12
    lyy_stencil_op_hcompute_lgyy_stencil_1_13
    lyy_stencil_op_hcompute_lgyy_stencil_1_14
    lyy_stencil_op_hcompute_lgyy_stencil_1_15
    lyy_stencil_op_hcompute_lgyy_stencil_1_16
    lyy_stencil_op_hcompute_lgyy_stencil_1_17
    lyy_stencil_op_hcompute_lgyy_stencil_1_18
    lyy_stencil_op_hcompute_lgyy_stencil_1_19
extracting box from { lyy_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
extracting box from { lyy_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Constraint aff with div: { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [(2 + lyy_s0_y)] }
cg = (((2 + 1*lyy_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [(59 - lyy_s0_y)] }
cg = (((59 + -1*lyy_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [(2 + lyy_s0_x)] }
cg = (((2 + 1*lyy_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [(59 - lyy_s0_x)] }
cg = (((59 + -1*lyy_s0_x)) >= 0)
Input port:lyy_stencil_op_hcompute_lyy_stencil_2, Get ram string: (((2 + 1*lyy_s0_y)) - 0) * 1 + (((2 + 1*lyy_s0_x)) - 0) * 62
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_y)] }
cg = (((1 + 1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_y)] }
cg = (((58 + -1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_x)] }
cg = (((1 + 1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_x)] }
cg = (((58 + -1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_y)] }
cg = (((1 + 1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_y)] }
cg = (((58 + -1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_x)] }
cg = (((1 + 1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_x)] }
cg = (((58 + -1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_y)] }
cg = (((1 + 1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_y)] }
cg = (((58 + -1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_x)] }
cg = (((1 + 1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_x)] }
cg = (((58 + -1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_y)] }
cg = (((1 + 1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_y)] }
cg = (((58 + -1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_x)] }
cg = (((1 + 1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_x)] }
cg = (((58 + -1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_y)] }
cg = (((1 + 1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_y)] }
cg = (((58 + -1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_x)] }
cg = (((1 + 1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_x)] }
cg = (((58 + -1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_y)] }
cg = (((1 + 1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_y)] }
cg = (((58 + -1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_x)] }
cg = (((1 + 1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_x)] }
cg = (((58 + -1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_y)] }
cg = (((1 + 1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_y)] }
cg = (((58 + -1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_x)] }
cg = (((1 + 1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_x)] }
cg = (((58 + -1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_y)] }
cg = (((1 + 1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_y)] }
cg = (((58 + -1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_x)] }
cg = (((1 + 1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_x)] }
cg = (((58 + -1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_y)] }
cg = (((1 + 1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_y)] }
cg = (((58 + -1*lgyy_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(1 + lgyy_s1_x)] }
cg = (((1 + 1*lgyy_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [(58 - lgyy_s1_x)] }
cg = (((58 + -1*lgyy_s1_x)) >= 0)
generating banks for buffer: padded16_global_wrapper_stencil
getting rddom
rddom = { padded16_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Adding bank between padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 and padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
Adding bank between padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 and padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59
Adding bank between padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 and padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
Adding bank between padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 and padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61
Adding bank between padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 and padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62
Adding bank between padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 and padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63
Adding bank between padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 and padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49
Adding bank between padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 and padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50
Adding bank between padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 and padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51
Adding bank between padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 and padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52
Adding bank between padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 and padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53
Adding bank between padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 and padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
Done generating register-file style banks for padded16_global_wrapper_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: padded16_global_wrapper_stencil_all_inputs_to_all_outputs
	input: 
    padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
	 output: 
    padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
    padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59
    padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
    padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61
    padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62
    padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63
    padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49
    padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50
    padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51
    padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52
    padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53
    padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
extracting box from { padded16_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
extracting box from { padded16_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Constraint aff with div: { op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(3 + padded16_global_wrapper_s0_y)] }
cg = (((3 + 1*padded16_global_wrapper_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(60 - padded16_global_wrapper_s0_y)] }
cg = (((60 + -1*padded16_global_wrapper_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(3 + padded16_global_wrapper_s0_x)] }
cg = (((3 + 1*padded16_global_wrapper_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(60 - padded16_global_wrapper_s0_x)] }
cg = (((60 + -1*padded16_global_wrapper_s0_x)) >= 0)
Input port:padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0, Get ram string: (((3 + 1*padded16_global_wrapper_s0_y)) - 0) * 1 + (((3 + 1*padded16_global_wrapper_s0_x)) - 0) * 64
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_y)] }
cg = (((2 + 1*grad_x_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(59 - grad_x_unclamp_s1_y)] }
cg = (((59 + -1*grad_x_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_x)] }
cg = (((2 + 1*grad_x_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(59 - grad_x_unclamp_s1_x)] }
cg = (((59 + -1*grad_x_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_y)] }
cg = (((2 + 1*grad_x_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(59 - grad_x_unclamp_s1_y)] }
cg = (((59 + -1*grad_x_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_x)] }
cg = (((2 + 1*grad_x_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(59 - grad_x_unclamp_s1_x)] }
cg = (((59 + -1*grad_x_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_y)] }
cg = (((2 + 1*grad_x_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(59 - grad_x_unclamp_s1_y)] }
cg = (((59 + -1*grad_x_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_x)] }
cg = (((2 + 1*grad_x_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(59 - grad_x_unclamp_s1_x)] }
cg = (((59 + -1*grad_x_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_y)] }
cg = (((2 + 1*grad_x_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(59 - grad_x_unclamp_s1_y)] }
cg = (((59 + -1*grad_x_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_x)] }
cg = (((2 + 1*grad_x_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(59 - grad_x_unclamp_s1_x)] }
cg = (((59 + -1*grad_x_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_y)] }
cg = (((2 + 1*grad_x_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(59 - grad_x_unclamp_s1_y)] }
cg = (((59 + -1*grad_x_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_x)] }
cg = (((2 + 1*grad_x_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(59 - grad_x_unclamp_s1_x)] }
cg = (((59 + -1*grad_x_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_y)] }
cg = (((2 + 1*grad_x_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(59 - grad_x_unclamp_s1_y)] }
cg = (((59 + -1*grad_x_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_x)] }
cg = (((2 + 1*grad_x_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [(59 - grad_x_unclamp_s1_x)] }
cg = (((59 + -1*grad_x_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_y)] }
cg = (((2 + 1*grad_y_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(59 - grad_y_unclamp_s1_y)] }
cg = (((59 + -1*grad_y_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_x)] }
cg = (((2 + 1*grad_y_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(59 - grad_y_unclamp_s1_x)] }
cg = (((59 + -1*grad_y_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_y)] }
cg = (((2 + 1*grad_y_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(59 - grad_y_unclamp_s1_y)] }
cg = (((59 + -1*grad_y_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_x)] }
cg = (((2 + 1*grad_y_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(59 - grad_y_unclamp_s1_x)] }
cg = (((59 + -1*grad_y_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_y)] }
cg = (((2 + 1*grad_y_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(59 - grad_y_unclamp_s1_y)] }
cg = (((59 + -1*grad_y_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_x)] }
cg = (((2 + 1*grad_y_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(59 - grad_y_unclamp_s1_x)] }
cg = (((59 + -1*grad_y_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_y)] }
cg = (((2 + 1*grad_y_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(59 - grad_y_unclamp_s1_y)] }
cg = (((59 + -1*grad_y_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_x)] }
cg = (((2 + 1*grad_y_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(59 - grad_y_unclamp_s1_x)] }
cg = (((59 + -1*grad_y_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_y)] }
cg = (((2 + 1*grad_y_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(59 - grad_y_unclamp_s1_y)] }
cg = (((59 + -1*grad_y_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_x)] }
cg = (((2 + 1*grad_y_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(59 - grad_y_unclamp_s1_x)] }
cg = (((59 + -1*grad_y_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_y)] }
cg = (((2 + 1*grad_y_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(59 - grad_y_unclamp_s1_y)] }
cg = (((59 + -1*grad_y_unclamp_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_x)] }
cg = (((2 + 1*grad_y_unclamp_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [(59 - grad_y_unclamp_s1_x)] }
cg = (((59 + -1*grad_y_unclamp_s1_x)) >= 0)
Prog: unoptimized_harris
Generating compute for: op_hcompute_padded16_global_wrapper_stencil
Got srcs
Got iteration variables
got in_buffers
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_grad_x_unclamp_stencil
Got srcs
Got iteration variables
got in_buffers
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_grad_x_unclamp_stencil_1
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_grad_x_unclamp_stencil_1
op = op_hcompute_grad_x_unclamp_stencil_1
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_lxx_stencil
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_lxx_stencil
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_lgxx_stencil
Got srcs
Got iteration variables
got in_buffers
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_lgxx_stencil_1
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_lgxx_stencil_1
op = op_hcompute_lgxx_stencil_1
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_grad_y_unclamp_stencil
Got srcs
Got iteration variables
got in_buffers
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_grad_y_unclamp_stencil_1
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_grad_y_unclamp_stencil_1
op = op_hcompute_grad_y_unclamp_stencil_1
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_lxy_stencil
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_lxy_stencil
op = op_hcompute_lxy_stencil
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_lgxy_stencil
Got srcs
Got iteration variables
got in_buffers
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_lgxy_stencil_1
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_lgxy_stencil_1
op = op_hcompute_lgxy_stencil_1
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_lyy_stencil
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_lyy_stencil
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_lgyy_stencil
Got srcs
Got iteration variables
got in_buffers
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_lgyy_stencil_1
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_lgyy_stencil_1
op = op_hcompute_lgyy_stencil_1
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_cim_stencil
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_cim_stencil
op = op_hcompute_cim_stencil
op = op_hcompute_cim_stencil
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_cim_output_stencil
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_cim_output_stencil
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_hw_output_stencil
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_hw_output_stencil
created res
finding out buffers
Checking if program is a boundary
Trying to find padded16_stencil in buffers
Trying bundle: op_hcompute_padded16_global_wrapper_stencil_read
done trying bundles
No bundle for input: padded16_stencil
No bundle for input: padded16_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-7 + i2)] }
cg = (((-7 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(2 + i3)] }
cg = (((2 + 1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i3)] }
cg = (((59 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(2 + i5)] }
cg = (((2 + 1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i5)] }
cg = (((59 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-16 + i2)] }
cg = (((-16 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(57 - i3)] }
cg = (((57 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(57 - i5)] }
cg = (((57 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-2 + i2)] }
cg = (((-2 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(2 + i3)] }
cg = (((2 + 1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i3)] }
cg = (((59 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(2 + i5)] }
cg = (((2 + 1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i5)] }
cg = (((59 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i2)] }
cg = (((1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(3 + i3)] }
cg = (((3 + 1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(60 - i3)] }
cg = (((60 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(3 + i5)] }
cg = (((3 + 1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(60 - i5)] }
cg = (((60 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-1 + i2)] }
cg = (((-1 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(2 + i3)] }
cg = (((2 + 1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i3)] }
cg = (((59 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(2 + i5)] }
cg = (((2 + 1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i5)] }
cg = (((59 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-10 + i2)] }
cg = (((-10 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(1 + i3)] }
cg = (((1 + 1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(58 - i3)] }
cg = (((58 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(1 + i5)] }
cg = (((1 + 1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(58 - i5)] }
cg = (((58 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-6 + i2)] }
cg = (((-6 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(2 + i3)] }
cg = (((2 + 1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i3)] }
cg = (((59 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(2 + i5)] }
cg = (((2 + 1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i5)] }
cg = (((59 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-3 + i2)] }
cg = (((-3 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(2 + i3)] }
cg = (((2 + 1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i3)] }
cg = (((59 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(2 + i5)] }
cg = (((2 + 1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i5)] }
cg = (((59 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-5 + i2)] }
cg = (((-5 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(1 + i3)] }
cg = (((1 + 1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(58 - i3)] }
cg = (((58 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(1 + i5)] }
cg = (((1 + 1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(58 - i5)] }
cg = (((58 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-12 + i2)] }
cg = (((-12 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(1 + i3)] }
cg = (((1 + 1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(58 - i3)] }
cg = (((58 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(1 + i5)] }
cg = (((1 + 1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(58 - i5)] }
cg = (((58 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-4 + i2)] }
cg = (((-4 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(1 + i3)] }
cg = (((1 + 1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(58 - i3)] }
cg = (((58 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(1 + i5)] }
cg = (((1 + 1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(58 - i5)] }
cg = (((58 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-13 + i2)] }
cg = (((-13 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(1 + i3)] }
cg = (((1 + 1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(58 - i3)] }
cg = (((58 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(1 + i5)] }
cg = (((1 + 1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(58 - i5)] }
cg = (((58 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-9 + i2)] }
cg = (((-9 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(1 + i3)] }
cg = (((1 + 1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(58 - i3)] }
cg = (((58 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(1 + i5)] }
cg = (((1 + 1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(58 - i5)] }
cg = (((58 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-8 + i2)] }
cg = (((-8 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(2 + i3)] }
cg = (((2 + 1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i3)] }
cg = (((59 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(2 + i5)] }
cg = (((2 + 1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i5)] }
cg = (((59 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-15 + i2)] }
cg = (((-15 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(57 - i3)] }
cg = (((57 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(57 - i5)] }
cg = (((57 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-11 + i2)] }
cg = (((-11 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(2 + i3)] }
cg = (((2 + 1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i3)] }
cg = (((59 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(2 + i5)] }
cg = (((2 + 1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i5)] }
cg = (((59 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-14 + i2)] }
cg = (((-14 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(1 + i3)] }
cg = (((1 + 1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(58 - i3)] }
cg = (((58 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(1 + i5)] }
cg = (((1 + 1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(58 - i5)] }
cg = (((58 + -1*i5)) >= 0)
Trying to find padded16_stencil in buffers
Trying bundle: op_hcompute_padded16_global_wrapper_stencil_read
done trying bundles
No bundle for input: padded16_stencil
No bundle for input: padded16_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
Trying to find padded16_stencil in buffers
Trying bundle: op_hcompute_padded16_global_wrapper_stencil_read
done trying bundles
No bundle for input: padded16_stencil
No bundle for input: padded16_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
Generating accel wrapper
# in bundles: 1
Generating arg list
Generating driver function
buf = padded16_stencil
Generated accel wrapper
Generating accel wrapper
Generating arg list
Generating driver function
Generating bmp harness
Generated channels
Generating inputs
in dim = 0
Trying to find padded16_stencil in buffers
Trying bundle: op_hcompute_padded16_global_wrapper_stencil_read
done trying bundles
No bundle for input: padded16_stencil
No bundle for input: padded16_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
Built unoptimized code
cmd: echo $CLKWRK_PATH
/home/dai-dirk/MetaMapper/MetaMapper/clockwork
cmd: g++ -fstack-protector-all -std=c++11 -I $CLKWRK_PATH regression_tb_unoptimized_harris.cpp unoptimized_harris.cpp
Running CGRA flow on harris
replacing padded16_global_wrapper_s0_y with (padded16_global_wrapper_s0_y + -3) in (padded16_global_wrapper_s0_y + 3), (padded16_global_wrapper_s0_x + 3)
  (padded16_global_wrapper_s0_y + 3)
Simplifying: ((padded16_global_wrapper_s0_y + -3) + 3)
   (padded16_global_wrapper_s0_x + 3)
Simplifying:  (padded16_global_wrapper_s0_x + 3)
  padded16_global_wrapper_s0_y
Simplifying: (padded16_global_wrapper_s0_y + -3)
   padded16_global_wrapper_s0_x
Simplifying:  padded16_global_wrapper_s0_x
replacing padded16_global_wrapper_s0_x with (padded16_global_wrapper_s0_x + -3) in ((padded16_global_wrapper_s0_y + -3) + 3),  (padded16_global_wrapper_s0_x + 3)
  ((padded16_global_wrapper_s0_y + -3) + 3)
Simplifying: ((padded16_global_wrapper_s0_y + -3) + 3)
    (padded16_global_wrapper_s0_x + 3)
Simplifying:   ((padded16_global_wrapper_s0_x + -3) + 3)
  (padded16_global_wrapper_s0_y + -3)
Simplifying: (padded16_global_wrapper_s0_y + -3)
    padded16_global_wrapper_s0_x
Simplifying:   (padded16_global_wrapper_s0_x + -3)
replacing grad_x_unclamp_s0_y with (grad_x_unclamp_s0_y + -2) in (grad_x_unclamp_s0_y + 2), (grad_x_unclamp_s0_x + 2)
  (grad_x_unclamp_s0_y + 2)
Simplifying: ((grad_x_unclamp_s0_y + -2) + 2)
   (grad_x_unclamp_s0_x + 2)
Simplifying:  (grad_x_unclamp_s0_x + 2)
replacing grad_x_unclamp_s0_x with (grad_x_unclamp_s0_x + -2) in ((grad_x_unclamp_s0_y + -2) + 2),  (grad_x_unclamp_s0_x + 2)
  ((grad_x_unclamp_s0_y + -2) + 2)
Simplifying: ((grad_x_unclamp_s0_y + -2) + 2)
    (grad_x_unclamp_s0_x + 2)
Simplifying:   ((grad_x_unclamp_s0_x + -2) + 2)
replacing grad_x_unclamp_s1_y with (grad_x_unclamp_s1_y + -2) in (grad_x_unclamp_s1_y + 2), (grad_x_unclamp_s1_x + 2)
  (grad_x_unclamp_s1_y + 2)
Simplifying: ((grad_x_unclamp_s1_y + -2) + 2)
   (grad_x_unclamp_s1_x + 2)
Simplifying:  (grad_x_unclamp_s1_x + 2)
  (grad_x_unclamp_s1_y + 2)
Simplifying: ((grad_x_unclamp_s1_y + -2) + 2)
   (grad_x_unclamp_s1_x + 2)
Simplifying:  (grad_x_unclamp_s1_x + 2)
  (grad_x_unclamp_s1_y + 2)
Simplifying: ((grad_x_unclamp_s1_y + -2) + 2)
   (grad_x_unclamp_s1_x + 4)
Simplifying:  (grad_x_unclamp_s1_x + 4)
  (grad_x_unclamp_s1_y + 4)
Simplifying: ((grad_x_unclamp_s1_y + -2) + 4)
   (grad_x_unclamp_s1_x + 4)
Simplifying:  (grad_x_unclamp_s1_x + 4)
  (grad_x_unclamp_s1_y + 3)
Simplifying: ((grad_x_unclamp_s1_y + -2) + 3)
   (grad_x_unclamp_s1_x + 4)
Simplifying:  (grad_x_unclamp_s1_x + 4)
  (grad_x_unclamp_s1_y + 2)
Simplifying: ((grad_x_unclamp_s1_y + -2) + 2)
   (grad_x_unclamp_s1_x + 2)
Simplifying:  (grad_x_unclamp_s1_x + 2)
  (grad_x_unclamp_s1_y + 3)
Simplifying: ((grad_x_unclamp_s1_y + -2) + 3)
   (grad_x_unclamp_s1_x + 2)
Simplifying:  (grad_x_unclamp_s1_x + 2)
  (grad_x_unclamp_s1_y + 4)
Simplifying: ((grad_x_unclamp_s1_y + -2) + 4)
   (grad_x_unclamp_s1_x + 2)
Simplifying:  (grad_x_unclamp_s1_x + 2)
replacing grad_x_unclamp_s1_x with (grad_x_unclamp_s1_x + -2) in ((grad_x_unclamp_s1_y + -2) + 2),  (grad_x_unclamp_s1_x + 2)
  ((grad_x_unclamp_s1_y + -2) + 2)
Simplifying: ((grad_x_unclamp_s1_y + -2) + 2)
    (grad_x_unclamp_s1_x + 2)
Simplifying:   ((grad_x_unclamp_s1_x + -2) + 2)
  ((grad_x_unclamp_s1_y + -2) + 2)
Simplifying: ((grad_x_unclamp_s1_y + -2) + 2)
    (grad_x_unclamp_s1_x + 2)
Simplifying:   ((grad_x_unclamp_s1_x + -2) + 2)
  ((grad_x_unclamp_s1_y + -2) + 2)
Simplifying: ((grad_x_unclamp_s1_y + -2) + 2)
    (grad_x_unclamp_s1_x + 4)
Simplifying:   ((grad_x_unclamp_s1_x + -2) + 4)
  ((grad_x_unclamp_s1_y + -2) + 4)
Simplifying: ((grad_x_unclamp_s1_y + -2) + 4)
    (grad_x_unclamp_s1_x + 4)
Simplifying:   ((grad_x_unclamp_s1_x + -2) + 4)
  ((grad_x_unclamp_s1_y + -2) + 3)
Simplifying: ((grad_x_unclamp_s1_y + -2) + 3)
    (grad_x_unclamp_s1_x + 4)
Simplifying:   ((grad_x_unclamp_s1_x + -2) + 4)
  ((grad_x_unclamp_s1_y + -2) + 2)
Simplifying: ((grad_x_unclamp_s1_y + -2) + 2)
    (grad_x_unclamp_s1_x + 2)
Simplifying:   ((grad_x_unclamp_s1_x + -2) + 2)
  ((grad_x_unclamp_s1_y + -2) + 3)
Simplifying: ((grad_x_unclamp_s1_y + -2) + 3)
    (grad_x_unclamp_s1_x + 2)
Simplifying:   ((grad_x_unclamp_s1_x + -2) + 2)
  ((grad_x_unclamp_s1_y + -2) + 4)
Simplifying: ((grad_x_unclamp_s1_y + -2) + 4)
    (grad_x_unclamp_s1_x + 2)
Simplifying:   ((grad_x_unclamp_s1_x + -2) + 2)
replacing lxx_s0_y with (lxx_s0_y + -2) in (lxx_s0_y + 2), (lxx_s0_x + 2)
  (lxx_s0_y + 2)
Simplifying: ((lxx_s0_y + -2) + 2)
   (lxx_s0_x + 2)
Simplifying:  (lxx_s0_x + 2)
  (lxx_s0_y + 2)
Simplifying: ((lxx_s0_y + -2) + 2)
   (lxx_s0_x + 2)
Simplifying:  (lxx_s0_x + 2)
replacing lxx_s0_x with (lxx_s0_x + -2) in ((lxx_s0_y + -2) + 2),  (lxx_s0_x + 2)
  ((lxx_s0_y + -2) + 2)
Simplifying: ((lxx_s0_y + -2) + 2)
    (lxx_s0_x + 2)
Simplifying:   ((lxx_s0_x + -2) + 2)
  ((lxx_s0_y + -2) + 2)
Simplifying: ((lxx_s0_y + -2) + 2)
    (lxx_s0_x + 2)
Simplifying:   ((lxx_s0_x + -2) + 2)
replacing lgxx_s0_y with (lgxx_s0_y + -1) in (lgxx_s0_y + 1), (lgxx_s0_x + 1)
  (lgxx_s0_y + 1)
Simplifying: ((lgxx_s0_y + -1) + 1)
   (lgxx_s0_x + 1)
Simplifying:  (lgxx_s0_x + 1)
replacing lgxx_s0_x with (lgxx_s0_x + -1) in ((lgxx_s0_y + -1) + 1),  (lgxx_s0_x + 1)
  ((lgxx_s0_y + -1) + 1)
Simplifying: ((lgxx_s0_y + -1) + 1)
    (lgxx_s0_x + 1)
Simplifying:   ((lgxx_s0_x + -1) + 1)
replacing lgxx_s1_y with (lgxx_s1_y + -1) in (lgxx_s1_y + 1), (lgxx_s1_x + 1)
  (lgxx_s1_y + 1)
Simplifying: ((lgxx_s1_y + -1) + 1)
   (lgxx_s1_x + 1)
Simplifying:  (lgxx_s1_x + 1)
  (lgxx_s1_y + 1)
Simplifying: ((lgxx_s1_y + -1) + 1)
   (lgxx_s1_x + 1)
Simplifying:  (lgxx_s1_x + 1)
  (lgxx_s1_y + 1)
Simplifying: ((lgxx_s1_y + -1) + 1)
   (lgxx_s1_x + 1)
Simplifying:  (lgxx_s1_x + 1)
  (lgxx_s1_y + 1)
Simplifying: ((lgxx_s1_y + -1) + 1)
   (lgxx_s1_x + 2)
Simplifying:  (lgxx_s1_x + 2)
  (lgxx_s1_y + 1)
Simplifying: ((lgxx_s1_y + -1) + 1)
   (lgxx_s1_x + 3)
Simplifying:  (lgxx_s1_x + 3)
  (lgxx_s1_y + 2)
Simplifying: ((lgxx_s1_y + -1) + 2)
   (lgxx_s1_x + 1)
Simplifying:  (lgxx_s1_x + 1)
  (lgxx_s1_y + 2)
Simplifying: ((lgxx_s1_y + -1) + 2)
   (lgxx_s1_x + 2)
Simplifying:  (lgxx_s1_x + 2)
  (lgxx_s1_y + 2)
Simplifying: ((lgxx_s1_y + -1) + 2)
   (lgxx_s1_x + 3)
Simplifying:  (lgxx_s1_x + 3)
  (lgxx_s1_y + 3)
Simplifying: ((lgxx_s1_y + -1) + 3)
   (lgxx_s1_x + 1)
Simplifying:  (lgxx_s1_x + 1)
  (lgxx_s1_y + 3)
Simplifying: ((lgxx_s1_y + -1) + 3)
   (lgxx_s1_x + 3)
Simplifying:  (lgxx_s1_x + 3)
  (lgxx_s1_y + 3)
Simplifying: ((lgxx_s1_y + -1) + 3)
   (lgxx_s1_x + 2)
Simplifying:  (lgxx_s1_x + 2)
replacing lgxx_s1_x with (lgxx_s1_x + -1) in ((lgxx_s1_y + -1) + 1),  (lgxx_s1_x + 1)
  ((lgxx_s1_y + -1) + 1)
Simplifying: ((lgxx_s1_y + -1) + 1)
    (lgxx_s1_x + 1)
Simplifying:   ((lgxx_s1_x + -1) + 1)
  ((lgxx_s1_y + -1) + 1)
Simplifying: ((lgxx_s1_y + -1) + 1)
    (lgxx_s1_x + 1)
Simplifying:   ((lgxx_s1_x + -1) + 1)
  ((lgxx_s1_y + -1) + 1)
Simplifying: ((lgxx_s1_y + -1) + 1)
    (lgxx_s1_x + 1)
Simplifying:   ((lgxx_s1_x + -1) + 1)
  ((lgxx_s1_y + -1) + 1)
Simplifying: ((lgxx_s1_y + -1) + 1)
    (lgxx_s1_x + 2)
Simplifying:   ((lgxx_s1_x + -1) + 2)
  ((lgxx_s1_y + -1) + 1)
Simplifying: ((lgxx_s1_y + -1) + 1)
    (lgxx_s1_x + 3)
Simplifying:   ((lgxx_s1_x + -1) + 3)
  ((lgxx_s1_y + -1) + 2)
Simplifying: ((lgxx_s1_y + -1) + 2)
    (lgxx_s1_x + 1)
Simplifying:   ((lgxx_s1_x + -1) + 1)
  ((lgxx_s1_y + -1) + 2)
Simplifying: ((lgxx_s1_y + -1) + 2)
    (lgxx_s1_x + 2)
Simplifying:   ((lgxx_s1_x + -1) + 2)
  ((lgxx_s1_y + -1) + 2)
Simplifying: ((lgxx_s1_y + -1) + 2)
    (lgxx_s1_x + 3)
Simplifying:   ((lgxx_s1_x + -1) + 3)
  ((lgxx_s1_y + -1) + 3)
Simplifying: ((lgxx_s1_y + -1) + 3)
    (lgxx_s1_x + 1)
Simplifying:   ((lgxx_s1_x + -1) + 1)
  ((lgxx_s1_y + -1) + 3)
Simplifying: ((lgxx_s1_y + -1) + 3)
    (lgxx_s1_x + 3)
Simplifying:   ((lgxx_s1_x + -1) + 3)
  ((lgxx_s1_y + -1) + 3)
Simplifying: ((lgxx_s1_y + -1) + 3)
    (lgxx_s1_x + 2)
Simplifying:   ((lgxx_s1_x + -1) + 2)
replacing grad_y_unclamp_s0_y with (grad_y_unclamp_s0_y + -2) in (grad_y_unclamp_s0_y + 2), (grad_y_unclamp_s0_x + 2)
  (grad_y_unclamp_s0_y + 2)
Simplifying: ((grad_y_unclamp_s0_y + -2) + 2)
   (grad_y_unclamp_s0_x + 2)
Simplifying:  (grad_y_unclamp_s0_x + 2)
replacing grad_y_unclamp_s0_x with (grad_y_unclamp_s0_x + -2) in ((grad_y_unclamp_s0_y + -2) + 2),  (grad_y_unclamp_s0_x + 2)
  ((grad_y_unclamp_s0_y + -2) + 2)
Simplifying: ((grad_y_unclamp_s0_y + -2) + 2)
    (grad_y_unclamp_s0_x + 2)
Simplifying:   ((grad_y_unclamp_s0_x + -2) + 2)
replacing grad_y_unclamp_s1_y with (grad_y_unclamp_s1_y + -2) in (grad_y_unclamp_s1_y + 2), (grad_y_unclamp_s1_x + 2)
  (grad_y_unclamp_s1_y + 2)
Simplifying: ((grad_y_unclamp_s1_y + -2) + 2)
   (grad_y_unclamp_s1_x + 2)
Simplifying:  (grad_y_unclamp_s1_x + 2)
  (grad_y_unclamp_s1_y + 2)
Simplifying: ((grad_y_unclamp_s1_y + -2) + 2)
   (grad_y_unclamp_s1_x + 2)
Simplifying:  (grad_y_unclamp_s1_x + 2)
  (grad_y_unclamp_s1_y + 2)
Simplifying: ((grad_y_unclamp_s1_y + -2) + 2)
   (grad_y_unclamp_s1_x + 2)
Simplifying:  (grad_y_unclamp_s1_x + 2)
  (grad_y_unclamp_s1_y + 2)
Simplifying: ((grad_y_unclamp_s1_y + -2) + 2)
   (grad_y_unclamp_s1_x + 3)
Simplifying:  (grad_y_unclamp_s1_x + 3)
  (grad_y_unclamp_s1_y + 2)
Simplifying: ((grad_y_unclamp_s1_y + -2) + 2)
   (grad_y_unclamp_s1_x + 4)
Simplifying:  (grad_y_unclamp_s1_x + 4)
  (grad_y_unclamp_s1_y + 4)
Simplifying: ((grad_y_unclamp_s1_y + -2) + 4)
   (grad_y_unclamp_s1_x + 2)
Simplifying:  (grad_y_unclamp_s1_x + 2)
  (grad_y_unclamp_s1_y + 4)
Simplifying: ((grad_y_unclamp_s1_y + -2) + 4)
   (grad_y_unclamp_s1_x + 4)
Simplifying:  (grad_y_unclamp_s1_x + 4)
  (grad_y_unclamp_s1_y + 4)
Simplifying: ((grad_y_unclamp_s1_y + -2) + 4)
   (grad_y_unclamp_s1_x + 3)
Simplifying:  (grad_y_unclamp_s1_x + 3)
replacing grad_y_unclamp_s1_x with (grad_y_unclamp_s1_x + -2) in ((grad_y_unclamp_s1_y + -2) + 2),  (grad_y_unclamp_s1_x + 2)
  ((grad_y_unclamp_s1_y + -2) + 2)
Simplifying: ((grad_y_unclamp_s1_y + -2) + 2)
    (grad_y_unclamp_s1_x + 2)
Simplifying:   ((grad_y_unclamp_s1_x + -2) + 2)
  ((grad_y_unclamp_s1_y + -2) + 2)
Simplifying: ((grad_y_unclamp_s1_y + -2) + 2)
    (grad_y_unclamp_s1_x + 2)
Simplifying:   ((grad_y_unclamp_s1_x + -2) + 2)
  ((grad_y_unclamp_s1_y + -2) + 2)
Simplifying: ((grad_y_unclamp_s1_y + -2) + 2)
    (grad_y_unclamp_s1_x + 2)
Simplifying:   ((grad_y_unclamp_s1_x + -2) + 2)
  ((grad_y_unclamp_s1_y + -2) + 2)
Simplifying: ((grad_y_unclamp_s1_y + -2) + 2)
    (grad_y_unclamp_s1_x + 3)
Simplifying:   ((grad_y_unclamp_s1_x + -2) + 3)
  ((grad_y_unclamp_s1_y + -2) + 2)
Simplifying: ((grad_y_unclamp_s1_y + -2) + 2)
    (grad_y_unclamp_s1_x + 4)
Simplifying:   ((grad_y_unclamp_s1_x + -2) + 4)
  ((grad_y_unclamp_s1_y + -2) + 4)
Simplifying: ((grad_y_unclamp_s1_y + -2) + 4)
    (grad_y_unclamp_s1_x + 2)
Simplifying:   ((grad_y_unclamp_s1_x + -2) + 2)
  ((grad_y_unclamp_s1_y + -2) + 4)
Simplifying: ((grad_y_unclamp_s1_y + -2) + 4)
    (grad_y_unclamp_s1_x + 4)
Simplifying:   ((grad_y_unclamp_s1_x + -2) + 4)
  ((grad_y_unclamp_s1_y + -2) + 4)
Simplifying: ((grad_y_unclamp_s1_y + -2) + 4)
    (grad_y_unclamp_s1_x + 3)
Simplifying:   ((grad_y_unclamp_s1_x + -2) + 3)
replacing lxy_s0_y with (lxy_s0_y + -2) in (lxy_s0_y + 2), (lxy_s0_x + 2)
  (lxy_s0_y + 2)
Simplifying: ((lxy_s0_y + -2) + 2)
   (lxy_s0_x + 2)
Simplifying:  (lxy_s0_x + 2)
  (lxy_s0_y + 2)
Simplifying: ((lxy_s0_y + -2) + 2)
   (lxy_s0_x + 2)
Simplifying:  (lxy_s0_x + 2)
  (lxy_s0_y + 2)
Simplifying: ((lxy_s0_y + -2) + 2)
   (lxy_s0_x + 2)
Simplifying:  (lxy_s0_x + 2)
replacing lxy_s0_x with (lxy_s0_x + -2) in ((lxy_s0_y + -2) + 2),  (lxy_s0_x + 2)
  ((lxy_s0_y + -2) + 2)
Simplifying: ((lxy_s0_y + -2) + 2)
    (lxy_s0_x + 2)
Simplifying:   ((lxy_s0_x + -2) + 2)
  ((lxy_s0_y + -2) + 2)
Simplifying: ((lxy_s0_y + -2) + 2)
    (lxy_s0_x + 2)
Simplifying:   ((lxy_s0_x + -2) + 2)
  ((lxy_s0_y + -2) + 2)
Simplifying: ((lxy_s0_y + -2) + 2)
    (lxy_s0_x + 2)
Simplifying:   ((lxy_s0_x + -2) + 2)
replacing lgxy_s0_y with (lgxy_s0_y + -1) in (lgxy_s0_y + 1), (lgxy_s0_x + 1)
  (lgxy_s0_y + 1)
Simplifying: ((lgxy_s0_y + -1) + 1)
   (lgxy_s0_x + 1)
Simplifying:  (lgxy_s0_x + 1)
replacing lgxy_s0_x with (lgxy_s0_x + -1) in ((lgxy_s0_y + -1) + 1),  (lgxy_s0_x + 1)
  ((lgxy_s0_y + -1) + 1)
Simplifying: ((lgxy_s0_y + -1) + 1)
    (lgxy_s0_x + 1)
Simplifying:   ((lgxy_s0_x + -1) + 1)
replacing lgxy_s1_y with (lgxy_s1_y + -1) in (lgxy_s1_y + 1), (lgxy_s1_x + 1)
  (lgxy_s1_y + 1)
Simplifying: ((lgxy_s1_y + -1) + 1)
   (lgxy_s1_x + 1)
Simplifying:  (lgxy_s1_x + 1)
  (lgxy_s1_y + 1)
Simplifying: ((lgxy_s1_y + -1) + 1)
   (lgxy_s1_x + 1)
Simplifying:  (lgxy_s1_x + 1)
  (lgxy_s1_y + 1)
Simplifying: ((lgxy_s1_y + -1) + 1)
   (lgxy_s1_x + 1)
Simplifying:  (lgxy_s1_x + 1)
  (lgxy_s1_y + 1)
Simplifying: ((lgxy_s1_y + -1) + 1)
   (lgxy_s1_x + 2)
Simplifying:  (lgxy_s1_x + 2)
  (lgxy_s1_y + 1)
Simplifying: ((lgxy_s1_y + -1) + 1)
   (lgxy_s1_x + 3)
Simplifying:  (lgxy_s1_x + 3)
  (lgxy_s1_y + 2)
Simplifying: ((lgxy_s1_y + -1) + 2)
   (lgxy_s1_x + 1)
Simplifying:  (lgxy_s1_x + 1)
  (lgxy_s1_y + 2)
Simplifying: ((lgxy_s1_y + -1) + 2)
   (lgxy_s1_x + 2)
Simplifying:  (lgxy_s1_x + 2)
  (lgxy_s1_y + 2)
Simplifying: ((lgxy_s1_y + -1) + 2)
   (lgxy_s1_x + 3)
Simplifying:  (lgxy_s1_x + 3)
  (lgxy_s1_y + 3)
Simplifying: ((lgxy_s1_y + -1) + 3)
   (lgxy_s1_x + 1)
Simplifying:  (lgxy_s1_x + 1)
  (lgxy_s1_y + 3)
Simplifying: ((lgxy_s1_y + -1) + 3)
   (lgxy_s1_x + 3)
Simplifying:  (lgxy_s1_x + 3)
  (lgxy_s1_y + 3)
Simplifying: ((lgxy_s1_y + -1) + 3)
   (lgxy_s1_x + 2)
Simplifying:  (lgxy_s1_x + 2)
replacing lgxy_s1_x with (lgxy_s1_x + -1) in ((lgxy_s1_y + -1) + 1),  (lgxy_s1_x + 1)
  ((lgxy_s1_y + -1) + 1)
Simplifying: ((lgxy_s1_y + -1) + 1)
    (lgxy_s1_x + 1)
Simplifying:   ((lgxy_s1_x + -1) + 1)
  ((lgxy_s1_y + -1) + 1)
Simplifying: ((lgxy_s1_y + -1) + 1)
    (lgxy_s1_x + 1)
Simplifying:   ((lgxy_s1_x + -1) + 1)
  ((lgxy_s1_y + -1) + 1)
Simplifying: ((lgxy_s1_y + -1) + 1)
    (lgxy_s1_x + 1)
Simplifying:   ((lgxy_s1_x + -1) + 1)
  ((lgxy_s1_y + -1) + 1)
Simplifying: ((lgxy_s1_y + -1) + 1)
    (lgxy_s1_x + 2)
Simplifying:   ((lgxy_s1_x + -1) + 2)
  ((lgxy_s1_y + -1) + 1)
Simplifying: ((lgxy_s1_y + -1) + 1)
    (lgxy_s1_x + 3)
Simplifying:   ((lgxy_s1_x + -1) + 3)
  ((lgxy_s1_y + -1) + 2)
Simplifying: ((lgxy_s1_y + -1) + 2)
    (lgxy_s1_x + 1)
Simplifying:   ((lgxy_s1_x + -1) + 1)
  ((lgxy_s1_y + -1) + 2)
Simplifying: ((lgxy_s1_y + -1) + 2)
    (lgxy_s1_x + 2)
Simplifying:   ((lgxy_s1_x + -1) + 2)
  ((lgxy_s1_y + -1) + 2)
Simplifying: ((lgxy_s1_y + -1) + 2)
    (lgxy_s1_x + 3)
Simplifying:   ((lgxy_s1_x + -1) + 3)
  ((lgxy_s1_y + -1) + 3)
Simplifying: ((lgxy_s1_y + -1) + 3)
    (lgxy_s1_x + 1)
Simplifying:   ((lgxy_s1_x + -1) + 1)
  ((lgxy_s1_y + -1) + 3)
Simplifying: ((lgxy_s1_y + -1) + 3)
    (lgxy_s1_x + 3)
Simplifying:   ((lgxy_s1_x + -1) + 3)
  ((lgxy_s1_y + -1) + 3)
Simplifying: ((lgxy_s1_y + -1) + 3)
    (lgxy_s1_x + 2)
Simplifying:   ((lgxy_s1_x + -1) + 2)
replacing lyy_s0_y with (lyy_s0_y + -2) in (lyy_s0_y + 2), (lyy_s0_x + 2)
  (lyy_s0_y + 2)
Simplifying: ((lyy_s0_y + -2) + 2)
   (lyy_s0_x + 2)
Simplifying:  (lyy_s0_x + 2)
  (lyy_s0_y + 2)
Simplifying: ((lyy_s0_y + -2) + 2)
   (lyy_s0_x + 2)
Simplifying:  (lyy_s0_x + 2)
replacing lyy_s0_x with (lyy_s0_x + -2) in ((lyy_s0_y + -2) + 2),  (lyy_s0_x + 2)
  ((lyy_s0_y + -2) + 2)
Simplifying: ((lyy_s0_y + -2) + 2)
    (lyy_s0_x + 2)
Simplifying:   ((lyy_s0_x + -2) + 2)
  ((lyy_s0_y + -2) + 2)
Simplifying: ((lyy_s0_y + -2) + 2)
    (lyy_s0_x + 2)
Simplifying:   ((lyy_s0_x + -2) + 2)
replacing lgyy_s0_y with (lgyy_s0_y + -1) in (lgyy_s0_y + 1), (lgyy_s0_x + 1)
  (lgyy_s0_y + 1)
Simplifying: ((lgyy_s0_y + -1) + 1)
   (lgyy_s0_x + 1)
Simplifying:  (lgyy_s0_x + 1)
replacing lgyy_s0_x with (lgyy_s0_x + -1) in ((lgyy_s0_y + -1) + 1),  (lgyy_s0_x + 1)
  ((lgyy_s0_y + -1) + 1)
Simplifying: ((lgyy_s0_y + -1) + 1)
    (lgyy_s0_x + 1)
Simplifying:   ((lgyy_s0_x + -1) + 1)
replacing lgyy_s1_y with (lgyy_s1_y + -1) in (lgyy_s1_y + 1), (lgyy_s1_x + 1)
  (lgyy_s1_y + 1)
Simplifying: ((lgyy_s1_y + -1) + 1)
   (lgyy_s1_x + 1)
Simplifying:  (lgyy_s1_x + 1)
  (lgyy_s1_y + 1)
Simplifying: ((lgyy_s1_y + -1) + 1)
   (lgyy_s1_x + 1)
Simplifying:  (lgyy_s1_x + 1)
  (lgyy_s1_y + 1)
Simplifying: ((lgyy_s1_y + -1) + 1)
   (lgyy_s1_x + 1)
Simplifying:  (lgyy_s1_x + 1)
  (lgyy_s1_y + 1)
Simplifying: ((lgyy_s1_y + -1) + 1)
   (lgyy_s1_x + 2)
Simplifying:  (lgyy_s1_x + 2)
  (lgyy_s1_y + 1)
Simplifying: ((lgyy_s1_y + -1) + 1)
   (lgyy_s1_x + 3)
Simplifying:  (lgyy_s1_x + 3)
  (lgyy_s1_y + 2)
Simplifying: ((lgyy_s1_y + -1) + 2)
   (lgyy_s1_x + 1)
Simplifying:  (lgyy_s1_x + 1)
  (lgyy_s1_y + 2)
Simplifying: ((lgyy_s1_y + -1) + 2)
   (lgyy_s1_x + 2)
Simplifying:  (lgyy_s1_x + 2)
  (lgyy_s1_y + 2)
Simplifying: ((lgyy_s1_y + -1) + 2)
   (lgyy_s1_x + 3)
Simplifying:  (lgyy_s1_x + 3)
  (lgyy_s1_y + 3)
Simplifying: ((lgyy_s1_y + -1) + 3)
   (lgyy_s1_x + 1)
Simplifying:  (lgyy_s1_x + 1)
  (lgyy_s1_y + 3)
Simplifying: ((lgyy_s1_y + -1) + 3)
   (lgyy_s1_x + 3)
Simplifying:  (lgyy_s1_x + 3)
  (lgyy_s1_y + 3)
Simplifying: ((lgyy_s1_y + -1) + 3)
   (lgyy_s1_x + 2)
Simplifying:  (lgyy_s1_x + 2)
replacing lgyy_s1_x with (lgyy_s1_x + -1) in ((lgyy_s1_y + -1) + 1),  (lgyy_s1_x + 1)
  ((lgyy_s1_y + -1) + 1)
Simplifying: ((lgyy_s1_y + -1) + 1)
    (lgyy_s1_x + 1)
Simplifying:   ((lgyy_s1_x + -1) + 1)
  ((lgyy_s1_y + -1) + 1)
Simplifying: ((lgyy_s1_y + -1) + 1)
    (lgyy_s1_x + 1)
Simplifying:   ((lgyy_s1_x + -1) + 1)
  ((lgyy_s1_y + -1) + 1)
Simplifying: ((lgyy_s1_y + -1) + 1)
    (lgyy_s1_x + 1)
Simplifying:   ((lgyy_s1_x + -1) + 1)
  ((lgyy_s1_y + -1) + 1)
Simplifying: ((lgyy_s1_y + -1) + 1)
    (lgyy_s1_x + 2)
Simplifying:   ((lgyy_s1_x + -1) + 2)
  ((lgyy_s1_y + -1) + 1)
Simplifying: ((lgyy_s1_y + -1) + 1)
    (lgyy_s1_x + 3)
Simplifying:   ((lgyy_s1_x + -1) + 3)
  ((lgyy_s1_y + -1) + 2)
Simplifying: ((lgyy_s1_y + -1) + 2)
    (lgyy_s1_x + 1)
Simplifying:   ((lgyy_s1_x + -1) + 1)
  ((lgyy_s1_y + -1) + 2)
Simplifying: ((lgyy_s1_y + -1) + 2)
    (lgyy_s1_x + 2)
Simplifying:   ((lgyy_s1_x + -1) + 2)
  ((lgyy_s1_y + -1) + 2)
Simplifying: ((lgyy_s1_y + -1) + 2)
    (lgyy_s1_x + 3)
Simplifying:   ((lgyy_s1_x + -1) + 3)
  ((lgyy_s1_y + -1) + 3)
Simplifying: ((lgyy_s1_y + -1) + 3)
    (lgyy_s1_x + 1)
Simplifying:   ((lgyy_s1_x + -1) + 1)
  ((lgyy_s1_y + -1) + 3)
Simplifying: ((lgyy_s1_y + -1) + 3)
    (lgyy_s1_x + 3)
Simplifying:   ((lgyy_s1_x + -1) + 3)
  ((lgyy_s1_y + -1) + 3)
Simplifying: ((lgyy_s1_y + -1) + 3)
    (lgyy_s1_x + 2)
Simplifying:   ((lgyy_s1_x + -1) + 2)
replacing cim_s0_y with (cim_s0_y + -1) in (cim_s0_y + 1), (cim_s0_x + 1)
  (cim_s0_y + 1)
Simplifying: ((cim_s0_y + -1) + 1)
   (cim_s0_x + 1)
Simplifying:  (cim_s0_x + 1)
  (cim_s0_y + 1)
Simplifying: ((cim_s0_y + -1) + 1)
   (cim_s0_x + 1)
Simplifying:  (cim_s0_x + 1)
  (cim_s0_y + 1)
Simplifying: ((cim_s0_y + -1) + 1)
   (cim_s0_x + 1)
Simplifying:  (cim_s0_x + 1)
  (cim_s0_y + 1)
Simplifying: ((cim_s0_y + -1) + 1)
   (cim_s0_x + 1)
Simplifying:  (cim_s0_x + 1)
replacing cim_s0_x with (cim_s0_x + -1) in ((cim_s0_y + -1) + 1),  (cim_s0_x + 1)
  ((cim_s0_y + -1) + 1)
Simplifying: ((cim_s0_y + -1) + 1)
    (cim_s0_x + 1)
Simplifying:   ((cim_s0_x + -1) + 1)
  ((cim_s0_y + -1) + 1)
Simplifying: ((cim_s0_y + -1) + 1)
    (cim_s0_x + 1)
Simplifying:   ((cim_s0_x + -1) + 1)
  ((cim_s0_y + -1) + 1)
Simplifying: ((cim_s0_y + -1) + 1)
    (cim_s0_x + 1)
Simplifying:   ((cim_s0_x + -1) + 1)
  ((cim_s0_y + -1) + 1)
Simplifying: ((cim_s0_y + -1) + 1)
    (cim_s0_x + 1)
Simplifying:   ((cim_s0_x + -1) + 1)
program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
  padded16_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = 0; padded16_global_wrapper_s0_y < 64; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = 0; padded16_global_wrapper_s0_x < 64; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[((padded16_global_wrapper_s0_y + -3) + 3),   ((padded16_global_wrapper_s0_x + -3) + 3)] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[(padded16_global_wrapper_s0_y + -3),   (padded16_global_wrapper_s0_x + -3)])
    }
  }
  for (int grad_x_unclamp_s0_y = 0; grad_x_unclamp_s0_y < 62; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = 0; grad_x_unclamp_s0_x < 62; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil_clkwrk_dsa0[((grad_x_unclamp_s0_y + -2) + 2),   ((grad_x_unclamp_s0_x + -2) + 2)] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = 0; grad_x_unclamp_s1_y < 62; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = 0; grad_x_unclamp_s1_x < 62; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[((grad_x_unclamp_s1_y + -2) + 2),   ((grad_x_unclamp_s1_x + -2) + 2)] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil_clkwrk_dsa0[((grad_x_unclamp_s1_y + -2) + 2),   ((grad_x_unclamp_s1_x + -2) + 2)], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 2),   ((grad_x_unclamp_s1_x + -2) + 4)], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 4),   ((grad_x_unclamp_s1_x + -2) + 4)], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 3),   ((grad_x_unclamp_s1_x + -2) + 4)], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 2),   ((grad_x_unclamp_s1_x + -2) + 2)], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 3),   ((grad_x_unclamp_s1_x + -2) + 2)], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 4),   ((grad_x_unclamp_s1_x + -2) + 2)])
    }
  }
  for (int lxx_s0_y = 0; lxx_s0_y < 62; lxx_s0_y++) {
    for (int lxx_s0_x = 0; lxx_s0_x < 62; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[((lxx_s0_y + -2) + 2),   ((lxx_s0_x + -2) + 2)] = hcompute_lxx_stencil(grad_x_unclamp_stencil[((lxx_s0_y + -2) + 2),   ((lxx_s0_x + -2) + 2)])
    }
  }
  for (int lgxx_s0_y = 0; lgxx_s0_y < 60; lgxx_s0_y++) {
    for (int lgxx_s0_x = 0; lgxx_s0_x < 60; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil_clkwrk_dsa2[((lgxx_s0_y + -1) + 1),   ((lgxx_s0_x + -1) + 1)] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = 0; lgxx_s1_y < 60; lgxx_s1_y++) {
    for (int lgxx_s1_x = 0; lgxx_s1_x < 60; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[((lgxx_s1_y + -1) + 1),   ((lgxx_s1_x + -1) + 1)] = hcompute_lgxx_stencil_1(lgxx_stencil_clkwrk_dsa2[((lgxx_s1_y + -1) + 1),   ((lgxx_s1_x + -1) + 1)], lxx_stencil[((lgxx_s1_y + -1) + 1),   ((lgxx_s1_x + -1) + 1)], lxx_stencil[((lgxx_s1_y + -1) + 1),   ((lgxx_s1_x + -1) + 2)], lxx_stencil[((lgxx_s1_y + -1) + 1),   ((lgxx_s1_x + -1) + 3)], lxx_stencil[((lgxx_s1_y + -1) + 2),   ((lgxx_s1_x + -1) + 1)], lxx_stencil[((lgxx_s1_y + -1) + 2),   ((lgxx_s1_x + -1) + 2)], lxx_stencil[((lgxx_s1_y + -1) + 2),   ((lgxx_s1_x + -1) + 3)], lxx_stencil[((lgxx_s1_y + -1) + 3),   ((lgxx_s1_x + -1) + 1)], lxx_stencil[((lgxx_s1_y + -1) + 3),   ((lgxx_s1_x + -1) + 3)], lxx_stencil[((lgxx_s1_y + -1) + 3),   ((lgxx_s1_x + -1) + 2)])
    }
  }
  for (int grad_y_unclamp_s0_y = 0; grad_y_unclamp_s0_y < 62; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = 0; grad_y_unclamp_s0_x < 62; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil_clkwrk_dsa1[((grad_y_unclamp_s0_y + -2) + 2),   ((grad_y_unclamp_s0_x + -2) + 2)] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = 0; grad_y_unclamp_s1_y < 62; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = 0; grad_y_unclamp_s1_x < 62; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[((grad_y_unclamp_s1_y + -2) + 2),   ((grad_y_unclamp_s1_x + -2) + 2)] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil_clkwrk_dsa1[((grad_y_unclamp_s1_y + -2) + 2),   ((grad_y_unclamp_s1_x + -2) + 2)], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2),   ((grad_y_unclamp_s1_x + -2) + 2)], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2),   ((grad_y_unclamp_s1_x + -2) + 3)], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2),   ((grad_y_unclamp_s1_x + -2) + 4)], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4),   ((grad_y_unclamp_s1_x + -2) + 2)], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4),   ((grad_y_unclamp_s1_x + -2) + 4)], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4),   ((grad_y_unclamp_s1_x + -2) + 3)])
    }
  }
  for (int lxy_s0_y = 0; lxy_s0_y < 62; lxy_s0_y++) {
    for (int lxy_s0_x = 0; lxy_s0_x < 62; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[((lxy_s0_y + -2) + 2),   ((lxy_s0_x + -2) + 2)] = hcompute_lxy_stencil(grad_x_unclamp_stencil[((lxy_s0_y + -2) + 2),   ((lxy_s0_x + -2) + 2)], grad_y_unclamp_stencil[((lxy_s0_y + -2) + 2),   ((lxy_s0_x + -2) + 2)])
    }
  }
  for (int lgxy_s0_y = 0; lgxy_s0_y < 60; lgxy_s0_y++) {
    for (int lgxy_s0_x = 0; lgxy_s0_x < 60; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil_clkwrk_dsa3[((lgxy_s0_y + -1) + 1),   ((lgxy_s0_x + -1) + 1)] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = 0; lgxy_s1_y < 60; lgxy_s1_y++) {
    for (int lgxy_s1_x = 0; lgxy_s1_x < 60; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[((lgxy_s1_y + -1) + 1),   ((lgxy_s1_x + -1) + 1)] = hcompute_lgxy_stencil_1(lgxy_stencil_clkwrk_dsa3[((lgxy_s1_y + -1) + 1),   ((lgxy_s1_x + -1) + 1)], lxy_stencil[((lgxy_s1_y + -1) + 1),   ((lgxy_s1_x + -1) + 1)], lxy_stencil[((lgxy_s1_y + -1) + 1),   ((lgxy_s1_x + -1) + 2)], lxy_stencil[((lgxy_s1_y + -1) + 1),   ((lgxy_s1_x + -1) + 3)], lxy_stencil[((lgxy_s1_y + -1) + 2),   ((lgxy_s1_x + -1) + 1)], lxy_stencil[((lgxy_s1_y + -1) + 2),   ((lgxy_s1_x + -1) + 2)], lxy_stencil[((lgxy_s1_y + -1) + 2),   ((lgxy_s1_x + -1) + 3)], lxy_stencil[((lgxy_s1_y + -1) + 3),   ((lgxy_s1_x + -1) + 1)], lxy_stencil[((lgxy_s1_y + -1) + 3),   ((lgxy_s1_x + -1) + 3)], lxy_stencil[((lgxy_s1_y + -1) + 3),   ((lgxy_s1_x + -1) + 2)])
    }
  }
  for (int lyy_s0_y = 0; lyy_s0_y < 62; lyy_s0_y++) {
    for (int lyy_s0_x = 0; lyy_s0_x < 62; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[((lyy_s0_y + -2) + 2),   ((lyy_s0_x + -2) + 2)] = hcompute_lyy_stencil(grad_y_unclamp_stencil[((lyy_s0_y + -2) + 2),   ((lyy_s0_x + -2) + 2)])
    }
  }
  for (int lgyy_s0_y = 0; lgyy_s0_y < 60; lgyy_s0_y++) {
    for (int lgyy_s0_x = 0; lgyy_s0_x < 60; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil_clkwrk_dsa4[((lgyy_s0_y + -1) + 1),   ((lgyy_s0_x + -1) + 1)] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = 0; lgyy_s1_y < 60; lgyy_s1_y++) {
    for (int lgyy_s1_x = 0; lgyy_s1_x < 60; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[((lgyy_s1_y + -1) + 1),   ((lgyy_s1_x + -1) + 1)] = hcompute_lgyy_stencil_1(lgyy_stencil_clkwrk_dsa4[((lgyy_s1_y + -1) + 1),   ((lgyy_s1_x + -1) + 1)], lyy_stencil[((lgyy_s1_y + -1) + 1),   ((lgyy_s1_x + -1) + 1)], lyy_stencil[((lgyy_s1_y + -1) + 1),   ((lgyy_s1_x + -1) + 2)], lyy_stencil[((lgyy_s1_y + -1) + 1),   ((lgyy_s1_x + -1) + 3)], lyy_stencil[((lgyy_s1_y + -1) + 2),   ((lgyy_s1_x + -1) + 1)], lyy_stencil[((lgyy_s1_y + -1) + 2),   ((lgyy_s1_x + -1) + 2)], lyy_stencil[((lgyy_s1_y + -1) + 2),   ((lgyy_s1_x + -1) + 3)], lyy_stencil[((lgyy_s1_y + -1) + 3),   ((lgyy_s1_x + -1) + 1)], lyy_stencil[((lgyy_s1_y + -1) + 3),   ((lgyy_s1_x + -1) + 3)], lyy_stencil[((lgyy_s1_y + -1) + 3),   ((lgyy_s1_x + -1) + 2)])
    }
  }
  for (int cim_s0_y = 0; cim_s0_y < 60; cim_s0_y++) {
    for (int cim_s0_x = 0; cim_s0_x < 60; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[((cim_s0_y + -1) + 1),   ((cim_s0_x + -1) + 1)] = hcompute_cim_stencil(lgxx_stencil[((cim_s0_y + -1) + 1),   ((cim_s0_x + -1) + 1)], lgxy_stencil[((cim_s0_y + -1) + 1),   ((cim_s0_x + -1) + 1)], lgyy_stencil[((cim_s0_y + -1) + 1),   ((cim_s0_x + -1) + 1)])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y, cim_output_s0_x] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y, cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 1)], cim_stencil[cim_output_s0_y, (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 1), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 1), (cim_output_s0_x + 2)], cim_stencil[(cim_output_s0_y + 2), cim_output_s0_x], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 1)], cim_stencil[(cim_output_s0_y + 2), (cim_output_s0_x + 2)])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
Buffer: cim_output_stencil
  Producers...
Got consumers
Writes: { cim_output_stencil[i0, i1] : 0 <= i0 <= 57 and 0 <= i1 <= 57 }
    Min offset (counting only writers): 0, 0
Visit produce locations: cim_output_stencil: addr =  [cim_output_s0_y, cim_output_s0_x]
New produce locations: cim_output_stencil: addr =  [cim_output_s0_y+0,  cim_output_s0_x+0]
Visit consume locations: cim_output_stencil: addr =  [hw_output_s0_y_yi, hw_output_s0_x_xi]
New consume locations: cim_output_stencil: addr =  [hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0]
Buffer: cim_stencil
  Producers...
Got consumers
Writes: { cim_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 and ((0 < i0 <= 58 and i1 >= 2) or (i0 >= 2 and i1 >= 2) or (i0 >= 2 and 0 < i1 <= 58) or (i0 >= 2 and i1 <= 57) or (0 < i0 <= 58 and 0 < i1 <= 58) or (0 < i0 <= 58 and i1 <= 57) or (i0 <= 57 and i1 >= 2) or (i0 <= 57 and 0 < i1 <= 58) or (i0 <= 57 and i1 <= 57)) }
    Min offset (counting only writers): 0, 0
Visit produce locations: cim_stencil: addr =  [((cim_s0_y + -1) + 1),   ((cim_s0_x + -1) + 1)]
New produce locations: cim_stencil: addr =  [((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0]
Visit consume locations: cim_stencil: addr =  [cim_output_s0_y, cim_output_s0_x]
New consume locations: cim_stencil: addr =  [cim_output_s0_y+0,  cim_output_s0_x+0]
Visit consume locations: cim_stencil: addr =  [(cim_output_s0_y + 1), (cim_output_s0_x + 1)]
New consume locations: cim_stencil: addr =  [(cim_output_s0_y + 1)+0,  (cim_output_s0_x + 1)+0]
Visit consume locations: cim_stencil: addr =  [cim_output_s0_y, (cim_output_s0_x + 1)]
New consume locations: cim_stencil: addr =  [cim_output_s0_y+0,  (cim_output_s0_x + 1)+0]
Visit consume locations: cim_stencil: addr =  [cim_output_s0_y, (cim_output_s0_x + 2)]
New consume locations: cim_stencil: addr =  [cim_output_s0_y+0,  (cim_output_s0_x + 2)+0]
Visit consume locations: cim_stencil: addr =  [(cim_output_s0_y + 1), cim_output_s0_x]
New consume locations: cim_stencil: addr =  [(cim_output_s0_y + 1)+0,  cim_output_s0_x+0]
Visit consume locations: cim_stencil: addr =  [(cim_output_s0_y + 1), (cim_output_s0_x + 2)]
New consume locations: cim_stencil: addr =  [(cim_output_s0_y + 1)+0,  (cim_output_s0_x + 2)+0]
Visit consume locations: cim_stencil: addr =  [(cim_output_s0_y + 2), cim_output_s0_x]
New consume locations: cim_stencil: addr =  [(cim_output_s0_y + 2)+0,  cim_output_s0_x+0]
Visit consume locations: cim_stencil: addr =  [(cim_output_s0_y + 2), (cim_output_s0_x + 1)]
New consume locations: cim_stencil: addr =  [(cim_output_s0_y + 2)+0,  (cim_output_s0_x + 1)+0]
Visit consume locations: cim_stencil: addr =  [(cim_output_s0_y + 2), (cim_output_s0_x + 2)]
New consume locations: cim_stencil: addr =  [(cim_output_s0_y + 2)+0,  (cim_output_s0_x + 2)+0]
Buffer: grad_x_unclamp_stencil
  Producers...
Got consumers
Writes: { grad_x_unclamp_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Writes: { grad_x_unclamp_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
    Min offset (counting only writers): 0, 0
Visit produce locations: grad_x_unclamp_stencil: addr =  [((grad_x_unclamp_s1_y + -2) + 2),   ((grad_x_unclamp_s1_x + -2) + 2)]
New produce locations: grad_x_unclamp_stencil: addr =  [((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0]
Visit consume locations: grad_x_unclamp_stencil: addr =  [((lxx_s0_y + -2) + 2),   ((lxx_s0_x + -2) + 2)]
New consume locations: grad_x_unclamp_stencil: addr =  [((lxx_s0_y + -2) + 2)+0,    ((lxx_s0_x + -2) + 2)+0]
Visit consume locations: grad_x_unclamp_stencil: addr =  [((lxy_s0_y + -2) + 2),   ((lxy_s0_x + -2) + 2)]
New consume locations: grad_x_unclamp_stencil: addr =  [((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0]
Buffer: grad_x_unclamp_stencil_clkwrk_dsa0
  Producers...
Got consumers
Writes: { grad_x_unclamp_stencil_clkwrk_dsa0[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
    Min offset (counting only writers): 0, 0
Visit produce locations: grad_x_unclamp_stencil_clkwrk_dsa0: addr =  [((grad_x_unclamp_s0_y + -2) + 2),   ((grad_x_unclamp_s0_x + -2) + 2)]
New produce locations: grad_x_unclamp_stencil_clkwrk_dsa0: addr =  [((grad_x_unclamp_s0_y + -2) + 2)+0,    ((grad_x_unclamp_s0_x + -2) + 2)+0]
Visit consume locations: grad_x_unclamp_stencil_clkwrk_dsa0: addr =  [((grad_x_unclamp_s1_y + -2) + 2),   ((grad_x_unclamp_s1_x + -2) + 2)]
New consume locations: grad_x_unclamp_stencil_clkwrk_dsa0: addr =  [((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0]
Buffer: grad_y_unclamp_stencil
  Producers...
Got consumers
Writes: { grad_y_unclamp_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Writes: { grad_y_unclamp_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
    Min offset (counting only writers): 0, 0
Visit produce locations: grad_y_unclamp_stencil: addr =  [((grad_y_unclamp_s1_y + -2) + 2),   ((grad_y_unclamp_s1_x + -2) + 2)]
New produce locations: grad_y_unclamp_stencil: addr =  [((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0]
Visit consume locations: grad_y_unclamp_stencil: addr =  [((lxy_s0_y + -2) + 2),   ((lxy_s0_x + -2) + 2)]
New consume locations: grad_y_unclamp_stencil: addr =  [((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0]
Visit consume locations: grad_y_unclamp_stencil: addr =  [((lyy_s0_y + -2) + 2),   ((lyy_s0_x + -2) + 2)]
New consume locations: grad_y_unclamp_stencil: addr =  [((lyy_s0_y + -2) + 2)+0,    ((lyy_s0_x + -2) + 2)+0]
Buffer: grad_y_unclamp_stencil_clkwrk_dsa1
  Producers...
Got consumers
Writes: { grad_y_unclamp_stencil_clkwrk_dsa1[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
    Min offset (counting only writers): 0, 0
Visit produce locations: grad_y_unclamp_stencil_clkwrk_dsa1: addr =  [((grad_y_unclamp_s0_y + -2) + 2),   ((grad_y_unclamp_s0_x + -2) + 2)]
New produce locations: grad_y_unclamp_stencil_clkwrk_dsa1: addr =  [((grad_y_unclamp_s0_y + -2) + 2)+0,    ((grad_y_unclamp_s0_x + -2) + 2)+0]
Visit consume locations: grad_y_unclamp_stencil_clkwrk_dsa1: addr =  [((grad_y_unclamp_s1_y + -2) + 2),   ((grad_y_unclamp_s1_x + -2) + 2)]
New consume locations: grad_y_unclamp_stencil_clkwrk_dsa1: addr =  [((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0]
Buffer: hw_output_stencil
  Producers...
Got consumers
    Min offset (counting only writers): 0, 0
Visit produce locations: hw_output_stencil: addr =  [hw_output_s0_y_yi, hw_output_s0_x_xi]
New produce locations: hw_output_stencil: addr =  [hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0]
Buffer: lgxx_stencil
  Producers...
Got consumers
Writes: { lgxx_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
    Min offset (counting only writers): 0, 0
Visit produce locations: lgxx_stencil: addr =  [((lgxx_s1_y + -1) + 1),   ((lgxx_s1_x + -1) + 1)]
New produce locations: lgxx_stencil: addr =  [((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0]
Visit consume locations: lgxx_stencil: addr =  [((cim_s0_y + -1) + 1),   ((cim_s0_x + -1) + 1)]
New consume locations: lgxx_stencil: addr =  [((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0]
Buffer: lgxx_stencil_clkwrk_dsa2
  Producers...
Got consumers
Writes: { lgxx_stencil_clkwrk_dsa2[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
    Min offset (counting only writers): 0, 0
Visit produce locations: lgxx_stencil_clkwrk_dsa2: addr =  [((lgxx_s0_y + -1) + 1),   ((lgxx_s0_x + -1) + 1)]
New produce locations: lgxx_stencil_clkwrk_dsa2: addr =  [((lgxx_s0_y + -1) + 1)+0,    ((lgxx_s0_x + -1) + 1)+0]
Visit consume locations: lgxx_stencil_clkwrk_dsa2: addr =  [((lgxx_s1_y + -1) + 1),   ((lgxx_s1_x + -1) + 1)]
New consume locations: lgxx_stencil_clkwrk_dsa2: addr =  [((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0]
Buffer: lgxy_stencil
  Producers...
Got consumers
Writes: { lgxy_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
    Min offset (counting only writers): 0, 0
Visit produce locations: lgxy_stencil: addr =  [((lgxy_s1_y + -1) + 1),   ((lgxy_s1_x + -1) + 1)]
New produce locations: lgxy_stencil: addr =  [((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0]
Visit consume locations: lgxy_stencil: addr =  [((cim_s0_y + -1) + 1),   ((cim_s0_x + -1) + 1)]
New consume locations: lgxy_stencil: addr =  [((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0]
Buffer: lgxy_stencil_clkwrk_dsa3
  Producers...
Got consumers
Writes: { lgxy_stencil_clkwrk_dsa3[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
    Min offset (counting only writers): 0, 0
Visit produce locations: lgxy_stencil_clkwrk_dsa3: addr =  [((lgxy_s0_y + -1) + 1),   ((lgxy_s0_x + -1) + 1)]
New produce locations: lgxy_stencil_clkwrk_dsa3: addr =  [((lgxy_s0_y + -1) + 1)+0,    ((lgxy_s0_x + -1) + 1)+0]
Visit consume locations: lgxy_stencil_clkwrk_dsa3: addr =  [((lgxy_s1_y + -1) + 1),   ((lgxy_s1_x + -1) + 1)]
New consume locations: lgxy_stencil_clkwrk_dsa3: addr =  [((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0]
Buffer: lgyy_stencil
  Producers...
Got consumers
Writes: { lgyy_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
    Min offset (counting only writers): 0, 0
Visit produce locations: lgyy_stencil: addr =  [((lgyy_s1_y + -1) + 1),   ((lgyy_s1_x + -1) + 1)]
New produce locations: lgyy_stencil: addr =  [((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0]
Visit consume locations: lgyy_stencil: addr =  [((cim_s0_y + -1) + 1),   ((cim_s0_x + -1) + 1)]
New consume locations: lgyy_stencil: addr =  [((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0]
Buffer: lgyy_stencil_clkwrk_dsa4
  Producers...
Got consumers
Writes: { lgyy_stencil_clkwrk_dsa4[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
    Min offset (counting only writers): 0, 0
Visit produce locations: lgyy_stencil_clkwrk_dsa4: addr =  [((lgyy_s0_y + -1) + 1),   ((lgyy_s0_x + -1) + 1)]
New produce locations: lgyy_stencil_clkwrk_dsa4: addr =  [((lgyy_s0_y + -1) + 1)+0,    ((lgyy_s0_x + -1) + 1)+0]
Visit consume locations: lgyy_stencil_clkwrk_dsa4: addr =  [((lgyy_s1_y + -1) + 1),   ((lgyy_s1_x + -1) + 1)]
New consume locations: lgyy_stencil_clkwrk_dsa4: addr =  [((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0]
Buffer: lxx_stencil
  Producers...
Got consumers
Writes: { lxx_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 and ((i0 >= 2 and i1 >= 2) or (i0 >= 2 and 0 < i1 <= 60) or (i0 >= 2 and i1 <= 59) or (0 < i0 <= 60 and i1 >= 2) or (0 < i0 <= 60 and 0 < i1 <= 60) or (0 < i0 <= 60 and i1 <= 59) or (i0 <= 59 and i1 >= 2) or (i0 <= 59 and 0 < i1 <= 60) or (i0 <= 59 and i1 <= 59)) }
    Min offset (counting only writers): 0, 0
Visit produce locations: lxx_stencil: addr =  [((lxx_s0_y + -2) + 2),   ((lxx_s0_x + -2) + 2)]
New produce locations: lxx_stencil: addr =  [((lxx_s0_y + -2) + 2)+0,    ((lxx_s0_x + -2) + 2)+0]
Visit consume locations: lxx_stencil: addr =  [((lgxx_s1_y + -1) + 1),   ((lgxx_s1_x + -1) + 1)]
New consume locations: lxx_stencil: addr =  [((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0]
Visit consume locations: lxx_stencil: addr =  [((lgxx_s1_y + -1) + 1),   ((lgxx_s1_x + -1) + 2)]
New consume locations: lxx_stencil: addr =  [((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 2)+0]
Visit consume locations: lxx_stencil: addr =  [((lgxx_s1_y + -1) + 1),   ((lgxx_s1_x + -1) + 3)]
New consume locations: lxx_stencil: addr =  [((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 3)+0]
Visit consume locations: lxx_stencil: addr =  [((lgxx_s1_y + -1) + 2),   ((lgxx_s1_x + -1) + 1)]
New consume locations: lxx_stencil: addr =  [((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 1)+0]
Visit consume locations: lxx_stencil: addr =  [((lgxx_s1_y + -1) + 2),   ((lgxx_s1_x + -1) + 2)]
New consume locations: lxx_stencil: addr =  [((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 2)+0]
Visit consume locations: lxx_stencil: addr =  [((lgxx_s1_y + -1) + 2),   ((lgxx_s1_x + -1) + 3)]
New consume locations: lxx_stencil: addr =  [((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 3)+0]
Visit consume locations: lxx_stencil: addr =  [((lgxx_s1_y + -1) + 3),   ((lgxx_s1_x + -1) + 1)]
New consume locations: lxx_stencil: addr =  [((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 1)+0]
Visit consume locations: lxx_stencil: addr =  [((lgxx_s1_y + -1) + 3),   ((lgxx_s1_x + -1) + 3)]
New consume locations: lxx_stencil: addr =  [((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 3)+0]
Visit consume locations: lxx_stencil: addr =  [((lgxx_s1_y + -1) + 3),   ((lgxx_s1_x + -1) + 2)]
New consume locations: lxx_stencil: addr =  [((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 2)+0]
Buffer: lxy_stencil
  Producers...
Got consumers
Writes: { lxy_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 and ((i0 >= 2 and i1 >= 2) or (i0 >= 2 and 0 < i1 <= 60) or (i0 >= 2 and i1 <= 59) or (0 < i0 <= 60 and i1 >= 2) or (0 < i0 <= 60 and 0 < i1 <= 60) or (0 < i0 <= 60 and i1 <= 59) or (i0 <= 59 and i1 >= 2) or (i0 <= 59 and 0 < i1 <= 60) or (i0 <= 59 and i1 <= 59)) }
    Min offset (counting only writers): 0, 0
Visit produce locations: lxy_stencil: addr =  [((lxy_s0_y + -2) + 2),   ((lxy_s0_x + -2) + 2)]
New produce locations: lxy_stencil: addr =  [((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0]
Visit consume locations: lxy_stencil: addr =  [((lgxy_s1_y + -1) + 1),   ((lgxy_s1_x + -1) + 1)]
New consume locations: lxy_stencil: addr =  [((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0]
Visit consume locations: lxy_stencil: addr =  [((lgxy_s1_y + -1) + 1),   ((lgxy_s1_x + -1) + 2)]
New consume locations: lxy_stencil: addr =  [((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 2)+0]
Visit consume locations: lxy_stencil: addr =  [((lgxy_s1_y + -1) + 1),   ((lgxy_s1_x + -1) + 3)]
New consume locations: lxy_stencil: addr =  [((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 3)+0]
Visit consume locations: lxy_stencil: addr =  [((lgxy_s1_y + -1) + 2),   ((lgxy_s1_x + -1) + 1)]
New consume locations: lxy_stencil: addr =  [((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 1)+0]
Visit consume locations: lxy_stencil: addr =  [((lgxy_s1_y + -1) + 2),   ((lgxy_s1_x + -1) + 2)]
New consume locations: lxy_stencil: addr =  [((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 2)+0]
Visit consume locations: lxy_stencil: addr =  [((lgxy_s1_y + -1) + 2),   ((lgxy_s1_x + -1) + 3)]
New consume locations: lxy_stencil: addr =  [((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 3)+0]
Visit consume locations: lxy_stencil: addr =  [((lgxy_s1_y + -1) + 3),   ((lgxy_s1_x + -1) + 1)]
New consume locations: lxy_stencil: addr =  [((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 1)+0]
Visit consume locations: lxy_stencil: addr =  [((lgxy_s1_y + -1) + 3),   ((lgxy_s1_x + -1) + 3)]
New consume locations: lxy_stencil: addr =  [((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 3)+0]
Visit consume locations: lxy_stencil: addr =  [((lgxy_s1_y + -1) + 3),   ((lgxy_s1_x + -1) + 2)]
New consume locations: lxy_stencil: addr =  [((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 2)+0]
Buffer: lyy_stencil
  Producers...
Got consumers
Writes: { lyy_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 and ((i0 >= 2 and i1 >= 2) or (i0 >= 2 and 0 < i1 <= 60) or (i0 >= 2 and i1 <= 59) or (0 < i0 <= 60 and i1 >= 2) or (0 < i0 <= 60 and 0 < i1 <= 60) or (0 < i0 <= 60 and i1 <= 59) or (i0 <= 59 and i1 >= 2) or (i0 <= 59 and 0 < i1 <= 60) or (i0 <= 59 and i1 <= 59)) }
    Min offset (counting only writers): 0, 0
Visit produce locations: lyy_stencil: addr =  [((lyy_s0_y + -2) + 2),   ((lyy_s0_x + -2) + 2)]
New produce locations: lyy_stencil: addr =  [((lyy_s0_y + -2) + 2)+0,    ((lyy_s0_x + -2) + 2)+0]
Visit consume locations: lyy_stencil: addr =  [((lgyy_s1_y + -1) + 1),   ((lgyy_s1_x + -1) + 1)]
New consume locations: lyy_stencil: addr =  [((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0]
Visit consume locations: lyy_stencil: addr =  [((lgyy_s1_y + -1) + 1),   ((lgyy_s1_x + -1) + 2)]
New consume locations: lyy_stencil: addr =  [((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 2)+0]
Visit consume locations: lyy_stencil: addr =  [((lgyy_s1_y + -1) + 1),   ((lgyy_s1_x + -1) + 3)]
New consume locations: lyy_stencil: addr =  [((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 3)+0]
Visit consume locations: lyy_stencil: addr =  [((lgyy_s1_y + -1) + 2),   ((lgyy_s1_x + -1) + 1)]
New consume locations: lyy_stencil: addr =  [((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 1)+0]
Visit consume locations: lyy_stencil: addr =  [((lgyy_s1_y + -1) + 2),   ((lgyy_s1_x + -1) + 2)]
New consume locations: lyy_stencil: addr =  [((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 2)+0]
Visit consume locations: lyy_stencil: addr =  [((lgyy_s1_y + -1) + 2),   ((lgyy_s1_x + -1) + 3)]
New consume locations: lyy_stencil: addr =  [((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 3)+0]
Visit consume locations: lyy_stencil: addr =  [((lgyy_s1_y + -1) + 3),   ((lgyy_s1_x + -1) + 1)]
New consume locations: lyy_stencil: addr =  [((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 1)+0]
Visit consume locations: lyy_stencil: addr =  [((lgyy_s1_y + -1) + 3),   ((lgyy_s1_x + -1) + 3)]
New consume locations: lyy_stencil: addr =  [((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 3)+0]
Visit consume locations: lyy_stencil: addr =  [((lgyy_s1_y + -1) + 3),   ((lgyy_s1_x + -1) + 2)]
New consume locations: lyy_stencil: addr =  [((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 2)+0]
Buffer: padded16_global_wrapper_stencil
  Producers...
Got consumers
Writes: { padded16_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 and ((i0 >= 2 and i1 >= 2) or (i0 >= 2 and i1 <= 61) or (0 < i0 <= 62 and i1 >= 2) or (0 < i0 <= 62 and i1 <= 61) or (i0 <= 61 and i1 >= 2) or (i0 <= 61 and i1 <= 61)) }
Writes: { padded16_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 and ((i0 >= 2 and i1 >= 2) or (i0 >= 2 and 0 < i1 <= 62) or (i0 >= 2 and i1 <= 61) or (i0 <= 61 and i1 >= 2) or (i0 <= 61 and 0 < i1 <= 62) or (i0 <= 61 and i1 <= 61)) }
    Min offset (counting only writers): 0, 0
Visit produce locations: padded16_global_wrapper_stencil: addr =  [((padded16_global_wrapper_s0_y + -3) + 3),   ((padded16_global_wrapper_s0_x + -3) + 3)]
New produce locations: padded16_global_wrapper_stencil: addr =  [((padded16_global_wrapper_s0_y + -3) + 3)+0,    ((padded16_global_wrapper_s0_x + -3) + 3)+0]
Visit consume locations: padded16_global_wrapper_stencil: addr =  [((grad_x_unclamp_s1_y + -2) + 2),   ((grad_x_unclamp_s1_x + -2) + 4)]
New consume locations: padded16_global_wrapper_stencil: addr =  [((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0]
Visit consume locations: padded16_global_wrapper_stencil: addr =  [((grad_x_unclamp_s1_y + -2) + 4),   ((grad_x_unclamp_s1_x + -2) + 4)]
New consume locations: padded16_global_wrapper_stencil: addr =  [((grad_x_unclamp_s1_y + -2) + 4)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0]
Visit consume locations: padded16_global_wrapper_stencil: addr =  [((grad_x_unclamp_s1_y + -2) + 3),   ((grad_x_unclamp_s1_x + -2) + 4)]
New consume locations: padded16_global_wrapper_stencil: addr =  [((grad_x_unclamp_s1_y + -2) + 3)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0]
Visit consume locations: padded16_global_wrapper_stencil: addr =  [((grad_x_unclamp_s1_y + -2) + 2),   ((grad_x_unclamp_s1_x + -2) + 2)]
New consume locations: padded16_global_wrapper_stencil: addr =  [((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0]
Visit consume locations: padded16_global_wrapper_stencil: addr =  [((grad_x_unclamp_s1_y + -2) + 3),   ((grad_x_unclamp_s1_x + -2) + 2)]
New consume locations: padded16_global_wrapper_stencil: addr =  [((grad_x_unclamp_s1_y + -2) + 3)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0]
Visit consume locations: padded16_global_wrapper_stencil: addr =  [((grad_x_unclamp_s1_y + -2) + 4),   ((grad_x_unclamp_s1_x + -2) + 2)]
New consume locations: padded16_global_wrapper_stencil: addr =  [((grad_x_unclamp_s1_y + -2) + 4)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0]
Visit consume locations: padded16_global_wrapper_stencil: addr =  [((grad_y_unclamp_s1_y + -2) + 2),   ((grad_y_unclamp_s1_x + -2) + 2)]
New consume locations: padded16_global_wrapper_stencil: addr =  [((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0]
Visit consume locations: padded16_global_wrapper_stencil: addr =  [((grad_y_unclamp_s1_y + -2) + 2),   ((grad_y_unclamp_s1_x + -2) + 3)]
New consume locations: padded16_global_wrapper_stencil: addr =  [((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 3)+0]
Visit consume locations: padded16_global_wrapper_stencil: addr =  [((grad_y_unclamp_s1_y + -2) + 2),   ((grad_y_unclamp_s1_x + -2) + 4)]
New consume locations: padded16_global_wrapper_stencil: addr =  [((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 4)+0]
Visit consume locations: padded16_global_wrapper_stencil: addr =  [((grad_y_unclamp_s1_y + -2) + 4),   ((grad_y_unclamp_s1_x + -2) + 2)]
New consume locations: padded16_global_wrapper_stencil: addr =  [((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0]
Visit consume locations: padded16_global_wrapper_stencil: addr =  [((grad_y_unclamp_s1_y + -2) + 4),   ((grad_y_unclamp_s1_x + -2) + 4)]
New consume locations: padded16_global_wrapper_stencil: addr =  [((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 4)+0]
Visit consume locations: padded16_global_wrapper_stencil: addr =  [((grad_y_unclamp_s1_y + -2) + 4),   ((grad_y_unclamp_s1_x + -2) + 3)]
New consume locations: padded16_global_wrapper_stencil: addr =  [((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 3)+0]
Buffer: padded16_stencil
  Producers...
17
Got consumers
Writes: { padded16_stencil[i0, i1] : -3 <= i0 <= 60 and -3 <= i1 <= 60 }
    Min offset (counting only writers): -3, -3
Visit consume locations: padded16_stencil: addr =  [(padded16_global_wrapper_s0_y + -3),   (padded16_global_wrapper_s0_x + -3)]
New consume locations: padded16_stencil: addr =  [(padded16_global_wrapper_s0_y + -3)+3,    (padded16_global_wrapper_s0_x + -3)+3]
program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
  padded16_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = 0; padded16_global_wrapper_s0_y < 64; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = 0; padded16_global_wrapper_s0_x < 64; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[((padded16_global_wrapper_s0_y + -3) + 3)+0,    ((padded16_global_wrapper_s0_x + -3) + 3)+0] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[(padded16_global_wrapper_s0_y + -3)+3,    (padded16_global_wrapper_s0_x + -3)+3])
    }
  }
  for (int grad_x_unclamp_s0_y = 0; grad_x_unclamp_s0_y < 62; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = 0; grad_x_unclamp_s0_x < 62; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil_clkwrk_dsa0[((grad_x_unclamp_s0_y + -2) + 2)+0,    ((grad_x_unclamp_s0_x + -2) + 2)+0] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = 0; grad_x_unclamp_s1_y < 62; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = 0; grad_x_unclamp_s1_x < 62; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil_clkwrk_dsa0[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 4)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 3)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 3)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 4)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0])
    }
  }
  for (int lxx_s0_y = 0; lxx_s0_y < 62; lxx_s0_y++) {
    for (int lxx_s0_x = 0; lxx_s0_x < 62; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[((lxx_s0_y + -2) + 2)+0,    ((lxx_s0_x + -2) + 2)+0] = hcompute_lxx_stencil(grad_x_unclamp_stencil[((lxx_s0_y + -2) + 2)+0,    ((lxx_s0_x + -2) + 2)+0])
    }
  }
  for (int lgxx_s0_y = 0; lgxx_s0_y < 60; lgxx_s0_y++) {
    for (int lgxx_s0_x = 0; lgxx_s0_x < 60; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil_clkwrk_dsa2[((lgxx_s0_y + -1) + 1)+0,    ((lgxx_s0_x + -1) + 1)+0] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = 0; lgxx_s1_y < 60; lgxx_s1_y++) {
    for (int lgxx_s1_x = 0; lgxx_s1_x < 60; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0] = hcompute_lgxx_stencil_1(lgxx_stencil_clkwrk_dsa2[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 2)+0], lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 3)+0], lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 2)+0], lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 3)+0], lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 3)+0], lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 2)+0])
    }
  }
  for (int grad_y_unclamp_s0_y = 0; grad_y_unclamp_s0_y < 62; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = 0; grad_y_unclamp_s0_x < 62; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil_clkwrk_dsa1[((grad_y_unclamp_s0_y + -2) + 2)+0,    ((grad_y_unclamp_s0_x + -2) + 2)+0] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = 0; grad_y_unclamp_s1_y < 62; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = 0; grad_y_unclamp_s1_x < 62; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil_clkwrk_dsa1[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 3)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 3)+0])
    }
  }
  for (int lxy_s0_y = 0; lxy_s0_y < 62; lxy_s0_y++) {
    for (int lxy_s0_x = 0; lxy_s0_x < 62; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0] = hcompute_lxy_stencil(grad_x_unclamp_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0], grad_y_unclamp_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0])
    }
  }
  for (int lgxy_s0_y = 0; lgxy_s0_y < 60; lgxy_s0_y++) {
    for (int lgxy_s0_x = 0; lgxy_s0_x < 60; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil_clkwrk_dsa3[((lgxy_s0_y + -1) + 1)+0,    ((lgxy_s0_x + -1) + 1)+0] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = 0; lgxy_s1_y < 60; lgxy_s1_y++) {
    for (int lgxy_s1_x = 0; lgxy_s1_x < 60; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0] = hcompute_lgxy_stencil_1(lgxy_stencil_clkwrk_dsa3[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 2)+0], lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 3)+0], lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 2)+0], lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 3)+0], lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 3)+0], lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 2)+0])
    }
  }
  for (int lyy_s0_y = 0; lyy_s0_y < 62; lyy_s0_y++) {
    for (int lyy_s0_x = 0; lyy_s0_x < 62; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[((lyy_s0_y + -2) + 2)+0,    ((lyy_s0_x + -2) + 2)+0] = hcompute_lyy_stencil(grad_y_unclamp_stencil[((lyy_s0_y + -2) + 2)+0,    ((lyy_s0_x + -2) + 2)+0])
    }
  }
  for (int lgyy_s0_y = 0; lgyy_s0_y < 60; lgyy_s0_y++) {
    for (int lgyy_s0_x = 0; lgyy_s0_x < 60; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil_clkwrk_dsa4[((lgyy_s0_y + -1) + 1)+0,    ((lgyy_s0_x + -1) + 1)+0] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = 0; lgyy_s1_y < 60; lgyy_s1_y++) {
    for (int lgyy_s1_x = 0; lgyy_s1_x < 60; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0] = hcompute_lgyy_stencil_1(lgyy_stencil_clkwrk_dsa4[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 2)+0], lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 3)+0], lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 2)+0], lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 3)+0], lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 3)+0], lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 2)+0])
    }
  }
  for (int cim_s0_y = 0; cim_s0_y < 60; cim_s0_y++) {
    for (int cim_s0_x = 0; cim_s0_x < 60; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0] = hcompute_cim_stencil(lgxx_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0], lgxy_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0], lgyy_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y+0,  cim_output_s0_x+0] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y+0,  cim_output_s0_x+0], cim_stencil[(cim_output_s0_y + 1)+0,  (cim_output_s0_x + 1)+0], cim_stencil[cim_output_s0_y+0,  (cim_output_s0_x + 1)+0], cim_stencil[cim_output_s0_y+0,  (cim_output_s0_x + 2)+0], cim_stencil[(cim_output_s0_y + 1)+0,  cim_output_s0_x+0], cim_stencil[(cim_output_s0_y + 1)+0,  (cim_output_s0_x + 2)+0], cim_stencil[(cim_output_s0_y + 2)+0,  cim_output_s0_x+0], cim_stencil[(cim_output_s0_y + 2)+0,  (cim_output_s0_x + 1)+0], cim_stencil[(cim_output_s0_y + 2)+0,  (cim_output_s0_x + 2)+0])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
    }
  }
}
cmd: mkdir -p ./map_result/harris
After Loop Perfection
program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
  padded16_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = 0; padded16_global_wrapper_s0_y < 64; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = 0; padded16_global_wrapper_s0_x < 64; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[((padded16_global_wrapper_s0_y + -3) + 3)+0,    ((padded16_global_wrapper_s0_x + -3) + 3)+0] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[(padded16_global_wrapper_s0_y + -3)+3,    (padded16_global_wrapper_s0_x + -3)+3])
    }
  }
  for (int grad_x_unclamp_s0_y = 0; grad_x_unclamp_s0_y < 62; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = 0; grad_x_unclamp_s0_x < 62; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil_clkwrk_dsa0[((grad_x_unclamp_s0_y + -2) + 2)+0,    ((grad_x_unclamp_s0_x + -2) + 2)+0] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = 0; grad_x_unclamp_s1_y < 62; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = 0; grad_x_unclamp_s1_x < 62; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil_clkwrk_dsa0[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 4)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 3)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 3)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 4)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0])
    }
  }
  for (int lxx_s0_y = 0; lxx_s0_y < 62; lxx_s0_y++) {
    for (int lxx_s0_x = 0; lxx_s0_x < 62; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[((lxx_s0_y + -2) + 2)+0,    ((lxx_s0_x + -2) + 2)+0] = hcompute_lxx_stencil(grad_x_unclamp_stencil[((lxx_s0_y + -2) + 2)+0,    ((lxx_s0_x + -2) + 2)+0])
    }
  }
  for (int lgxx_s0_y = 0; lgxx_s0_y < 60; lgxx_s0_y++) {
    for (int lgxx_s0_x = 0; lgxx_s0_x < 60; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil_clkwrk_dsa2[((lgxx_s0_y + -1) + 1)+0,    ((lgxx_s0_x + -1) + 1)+0] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = 0; lgxx_s1_y < 60; lgxx_s1_y++) {
    for (int lgxx_s1_x = 0; lgxx_s1_x < 60; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0] = hcompute_lgxx_stencil_1(lgxx_stencil_clkwrk_dsa2[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 2)+0], lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 3)+0], lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 2)+0], lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 3)+0], lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 3)+0], lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 2)+0])
    }
  }
  for (int grad_y_unclamp_s0_y = 0; grad_y_unclamp_s0_y < 62; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = 0; grad_y_unclamp_s0_x < 62; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil_clkwrk_dsa1[((grad_y_unclamp_s0_y + -2) + 2)+0,    ((grad_y_unclamp_s0_x + -2) + 2)+0] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = 0; grad_y_unclamp_s1_y < 62; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = 0; grad_y_unclamp_s1_x < 62; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil_clkwrk_dsa1[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 3)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 3)+0])
    }
  }
  for (int lxy_s0_y = 0; lxy_s0_y < 62; lxy_s0_y++) {
    for (int lxy_s0_x = 0; lxy_s0_x < 62; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0] = hcompute_lxy_stencil(grad_x_unclamp_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0], grad_y_unclamp_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0])
    }
  }
  for (int lgxy_s0_y = 0; lgxy_s0_y < 60; lgxy_s0_y++) {
    for (int lgxy_s0_x = 0; lgxy_s0_x < 60; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil_clkwrk_dsa3[((lgxy_s0_y + -1) + 1)+0,    ((lgxy_s0_x + -1) + 1)+0] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = 0; lgxy_s1_y < 60; lgxy_s1_y++) {
    for (int lgxy_s1_x = 0; lgxy_s1_x < 60; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0] = hcompute_lgxy_stencil_1(lgxy_stencil_clkwrk_dsa3[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 2)+0], lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 3)+0], lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 2)+0], lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 3)+0], lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 3)+0], lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 2)+0])
    }
  }
  for (int lyy_s0_y = 0; lyy_s0_y < 62; lyy_s0_y++) {
    for (int lyy_s0_x = 0; lyy_s0_x < 62; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[((lyy_s0_y + -2) + 2)+0,    ((lyy_s0_x + -2) + 2)+0] = hcompute_lyy_stencil(grad_y_unclamp_stencil[((lyy_s0_y + -2) + 2)+0,    ((lyy_s0_x + -2) + 2)+0])
    }
  }
  for (int lgyy_s0_y = 0; lgyy_s0_y < 60; lgyy_s0_y++) {
    for (int lgyy_s0_x = 0; lgyy_s0_x < 60; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil_clkwrk_dsa4[((lgyy_s0_y + -1) + 1)+0,    ((lgyy_s0_x + -1) + 1)+0] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = 0; lgyy_s1_y < 60; lgyy_s1_y++) {
    for (int lgyy_s1_x = 0; lgyy_s1_x < 60; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0] = hcompute_lgyy_stencil_1(lgyy_stencil_clkwrk_dsa4[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 2)+0], lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 3)+0], lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 2)+0], lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 3)+0], lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 3)+0], lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 2)+0])
    }
  }
  for (int cim_s0_y = 0; cim_s0_y < 60; cim_s0_y++) {
    for (int cim_s0_x = 0; cim_s0_x < 60; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0] = hcompute_cim_stencil(lgxx_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0], lgxy_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0], lgyy_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y+0,  cim_output_s0_x+0] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y+0,  cim_output_s0_x+0], cim_stencil[(cim_output_s0_y + 1)+0,  (cim_output_s0_x + 1)+0], cim_stencil[cim_output_s0_y+0,  (cim_output_s0_x + 1)+0], cim_stencil[cim_output_s0_y+0,  (cim_output_s0_x + 2)+0], cim_stencil[(cim_output_s0_y + 1)+0,  cim_output_s0_x+0], cim_stencil[(cim_output_s0_y + 1)+0,  (cim_output_s0_x + 2)+0], cim_stencil[(cim_output_s0_y + 2)+0,  cim_output_s0_x+0], cim_stencil[(cim_output_s0_y + 2)+0,  (cim_output_s0_x + 1)+0], cim_stencil[(cim_output_s0_y + 2)+0,  (cim_output_s0_x + 2)+0])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
    }
  }
}
hcompute_padded16_global_wrapper_stencil
	Buffer <padded16_global_wrapper_stencil> 
	producer map: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
	capacity: 4096
	hierarchy level: glb
	Buffer <padded16_stencil> 
	producer map: {  }
	capacity: 4096
	hierarchy level: glb
hcompute_grad_x_unclamp_stencil
	Buffer <grad_x_unclamp_stencil_clkwrk_dsa0> 
	producer map: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
	capacity: 3844
	hierarchy level: glb
hcompute_grad_x_unclamp_stencil_1
	Buffer <grad_x_unclamp_stencil> 
	producer map: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
	capacity: 3844
	hierarchy level: glb
	Buffer <grad_x_unclamp_stencil_clkwrk_dsa0> 
	producer map: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
	capacity: 3844
	hierarchy level: glb
	Buffer <padded16_global_wrapper_stencil> 
	producer map: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
	capacity: 4096
	hierarchy level: glb
hcompute_lxx_stencil
	Buffer <grad_x_unclamp_stencil> 
	producer map: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
	capacity: 3844
	hierarchy level: glb
	Buffer <lxx_stencil> 
	producer map: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
	capacity: 3844
	hierarchy level: glb
hcompute_lgxx_stencil
	Buffer <lgxx_stencil_clkwrk_dsa2> 
	producer map: { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> lgxx_stencil_clkwrk_dsa2[lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
	capacity: 3600
	hierarchy level: glb
hcompute_lgxx_stencil_1
	Buffer <lgxx_stencil> 
	producer map: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
	capacity: 3600
	hierarchy level: glb
	Buffer <lgxx_stencil_clkwrk_dsa2> 
	producer map: { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> lgxx_stencil_clkwrk_dsa2[lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
	capacity: 3600
	hierarchy level: glb
	Buffer <lxx_stencil> 
	producer map: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
	capacity: 3844
	hierarchy level: glb
hcompute_grad_y_unclamp_stencil
	Buffer <grad_y_unclamp_stencil_clkwrk_dsa1> 
	producer map: { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
	capacity: 3844
	hierarchy level: glb
hcompute_grad_y_unclamp_stencil_1
	Buffer <grad_y_unclamp_stencil> 
	producer map: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
	capacity: 3844
	hierarchy level: glb
	Buffer <grad_y_unclamp_stencil_clkwrk_dsa1> 
	producer map: { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
	capacity: 3844
	hierarchy level: glb
	Buffer <padded16_global_wrapper_stencil> 
	producer map: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
	capacity: 4096
	hierarchy level: glb
hcompute_lxy_stencil
	Buffer <grad_x_unclamp_stencil> 
	producer map: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
	capacity: 3844
	hierarchy level: glb
	Buffer <grad_y_unclamp_stencil> 
	producer map: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
	capacity: 3844
	hierarchy level: glb
	Buffer <lxy_stencil> 
	producer map: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
	capacity: 3844
	hierarchy level: glb
hcompute_lgxy_stencil
	Buffer <lgxy_stencil_clkwrk_dsa3> 
	producer map: { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> lgxy_stencil_clkwrk_dsa3[lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
	capacity: 3600
	hierarchy level: glb
hcompute_lgxy_stencil_1
	Buffer <lgxy_stencil> 
	producer map: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
	capacity: 3600
	hierarchy level: glb
	Buffer <lgxy_stencil_clkwrk_dsa3> 
	producer map: { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> lgxy_stencil_clkwrk_dsa3[lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
	capacity: 3600
	hierarchy level: glb
	Buffer <lxy_stencil> 
	producer map: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
	capacity: 3844
	hierarchy level: glb
hcompute_lyy_stencil
	Buffer <grad_y_unclamp_stencil> 
	producer map: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
	capacity: 3844
	hierarchy level: glb
	Buffer <lyy_stencil> 
	producer map: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
	capacity: 3844
	hierarchy level: glb
hcompute_lgyy_stencil
	Buffer <lgyy_stencil_clkwrk_dsa4> 
	producer map: { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> lgyy_stencil_clkwrk_dsa4[lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
	capacity: 3600
	hierarchy level: glb
hcompute_lgyy_stencil_1
	Buffer <lgyy_stencil> 
	producer map: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
	capacity: 3600
	hierarchy level: glb
	Buffer <lgyy_stencil_clkwrk_dsa4> 
	producer map: { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> lgyy_stencil_clkwrk_dsa4[lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
	capacity: 3600
	hierarchy level: glb
	Buffer <lyy_stencil> 
	producer map: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
	capacity: 3844
	hierarchy level: glb
hcompute_cim_stencil
	Buffer <cim_stencil> 
	producer map: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
	capacity: 3600
	hierarchy level: glb
	Buffer <lgxx_stencil> 
	producer map: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
	capacity: 3600
	hierarchy level: glb
	Buffer <lgxy_stencil> 
	producer map: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
	capacity: 3600
	hierarchy level: glb
	Buffer <lgyy_stencil> 
	producer map: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
	capacity: 3600
	hierarchy level: glb
hcompute_cim_output_stencil
	Buffer <cim_output_stencil> 
	producer map: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_output_stencil[cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
	capacity: 3364
	hierarchy level: glb
	Buffer <cim_stencil> 
	producer map: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
	capacity: 3600
	hierarchy level: glb
hcompute_hw_output_stencil
	Buffer <cim_output_stencil> 
	producer map: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_output_stencil[cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
	capacity: 3364
	hierarchy level: glb
	Buffer <hw_output_stencil> 
	producer map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
	capacity: 3364
	hierarchy level: glb
hcompute_cim_output_stencil: 0 
hcompute_cim_stencil: 0 
hcompute_grad_x_unclamp_stencil: 0 
hcompute_grad_x_unclamp_stencil_1: 0 
hcompute_grad_y_unclamp_stencil: 0 
hcompute_grad_y_unclamp_stencil_1: 0 
hcompute_hw_output_stencil: 0 
hcompute_lgxx_stencil: 0 
hcompute_lgxx_stencil_1: 0 
hcompute_lgxy_stencil: 0 
hcompute_lgxy_stencil_1: 0 
hcompute_lgyy_stencil: 0 
hcompute_lgyy_stencil_1: 0 
hcompute_lxx_stencil: 0 
hcompute_lxy_stencil: 0 
hcompute_lyy_stencil: 0 
hcompute_padded16_global_wrapper_stencil: 0 

hcompute_cim_output_stencil: 0 
hcompute_cim_stencil: 0 
hcompute_grad_x_unclamp_stencil: 0 
hcompute_grad_x_unclamp_stencil_1: 0 
hcompute_grad_y_unclamp_stencil: 0 
hcompute_grad_y_unclamp_stencil_1: 0 
hcompute_hw_output_stencil: 0 
hcompute_lgxx_stencil: 0 
hcompute_lgxx_stencil_1: 0 
hcompute_lgxy_stencil: 0 
hcompute_lgxy_stencil_1: 0 
hcompute_lgyy_stencil: 0 
hcompute_lgyy_stencil_1: 0 
hcompute_lxx_stencil: 0 
hcompute_lxy_stencil: 0 
hcompute_lyy_stencil: 0 
hcompute_padded16_global_wrapper_stencil: 0 

Compute file dse found
No compute unit file: 
program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
  padded16_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = 0; padded16_global_wrapper_s0_y < 64; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = 0; padded16_global_wrapper_s0_x < 64; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[((padded16_global_wrapper_s0_y + -3) + 3)+0,    ((padded16_global_wrapper_s0_x + -3) + 3)+0] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[(padded16_global_wrapper_s0_y + -3)+3,    (padded16_global_wrapper_s0_x + -3)+3])
    }
  }
  for (int grad_x_unclamp_s0_y = 0; grad_x_unclamp_s0_y < 62; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = 0; grad_x_unclamp_s0_x < 62; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil_clkwrk_dsa0[((grad_x_unclamp_s0_y + -2) + 2)+0,    ((grad_x_unclamp_s0_x + -2) + 2)+0] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = 0; grad_x_unclamp_s1_y < 62; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = 0; grad_x_unclamp_s1_x < 62; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil_clkwrk_dsa0[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 4)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 3)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 3)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 4)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0])
    }
  }
  for (int lxx_s0_y = 0; lxx_s0_y < 62; lxx_s0_y++) {
    for (int lxx_s0_x = 0; lxx_s0_x < 62; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[((lxx_s0_y + -2) + 2)+0,    ((lxx_s0_x + -2) + 2)+0] = hcompute_lxx_stencil(grad_x_unclamp_stencil[((lxx_s0_y + -2) + 2)+0,    ((lxx_s0_x + -2) + 2)+0])
    }
  }
  for (int lgxx_s0_y = 0; lgxx_s0_y < 60; lgxx_s0_y++) {
    for (int lgxx_s0_x = 0; lgxx_s0_x < 60; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil_clkwrk_dsa2[((lgxx_s0_y + -1) + 1)+0,    ((lgxx_s0_x + -1) + 1)+0] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = 0; lgxx_s1_y < 60; lgxx_s1_y++) {
    for (int lgxx_s1_x = 0; lgxx_s1_x < 60; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0] = hcompute_lgxx_stencil_1(lgxx_stencil_clkwrk_dsa2[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 2)+0], lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 3)+0], lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 2)+0], lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 3)+0], lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 3)+0], lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 2)+0])
    }
  }
  for (int grad_y_unclamp_s0_y = 0; grad_y_unclamp_s0_y < 62; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = 0; grad_y_unclamp_s0_x < 62; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil_clkwrk_dsa1[((grad_y_unclamp_s0_y + -2) + 2)+0,    ((grad_y_unclamp_s0_x + -2) + 2)+0] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = 0; grad_y_unclamp_s1_y < 62; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = 0; grad_y_unclamp_s1_x < 62; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil_clkwrk_dsa1[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 3)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 3)+0])
    }
  }
  for (int lxy_s0_y = 0; lxy_s0_y < 62; lxy_s0_y++) {
    for (int lxy_s0_x = 0; lxy_s0_x < 62; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0] = hcompute_lxy_stencil(grad_x_unclamp_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0], grad_y_unclamp_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0])
    }
  }
  for (int lgxy_s0_y = 0; lgxy_s0_y < 60; lgxy_s0_y++) {
    for (int lgxy_s0_x = 0; lgxy_s0_x < 60; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil_clkwrk_dsa3[((lgxy_s0_y + -1) + 1)+0,    ((lgxy_s0_x + -1) + 1)+0] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = 0; lgxy_s1_y < 60; lgxy_s1_y++) {
    for (int lgxy_s1_x = 0; lgxy_s1_x < 60; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0] = hcompute_lgxy_stencil_1(lgxy_stencil_clkwrk_dsa3[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 2)+0], lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 3)+0], lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 2)+0], lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 3)+0], lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 3)+0], lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 2)+0])
    }
  }
  for (int lyy_s0_y = 0; lyy_s0_y < 62; lyy_s0_y++) {
    for (int lyy_s0_x = 0; lyy_s0_x < 62; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[((lyy_s0_y + -2) + 2)+0,    ((lyy_s0_x + -2) + 2)+0] = hcompute_lyy_stencil(grad_y_unclamp_stencil[((lyy_s0_y + -2) + 2)+0,    ((lyy_s0_x + -2) + 2)+0])
    }
  }
  for (int lgyy_s0_y = 0; lgyy_s0_y < 60; lgyy_s0_y++) {
    for (int lgyy_s0_x = 0; lgyy_s0_x < 60; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil_clkwrk_dsa4[((lgyy_s0_y + -1) + 1)+0,    ((lgyy_s0_x + -1) + 1)+0] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = 0; lgyy_s1_y < 60; lgyy_s1_y++) {
    for (int lgyy_s1_x = 0; lgyy_s1_x < 60; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0] = hcompute_lgyy_stencil_1(lgyy_stencil_clkwrk_dsa4[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 2)+0], lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 3)+0], lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 2)+0], lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 3)+0], lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 3)+0], lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 2)+0])
    }
  }
  for (int cim_s0_y = 0; cim_s0_y < 60; cim_s0_y++) {
    for (int cim_s0_x = 0; cim_s0_x < 60; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0] = hcompute_cim_stencil(lgxx_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0], lgxy_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0], lgyy_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y+0,  cim_output_s0_x+0] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y+0,  cim_output_s0_x+0], cim_stencil[(cim_output_s0_y + 1)+0,  (cim_output_s0_x + 1)+0], cim_stencil[cim_output_s0_y+0,  (cim_output_s0_x + 1)+0], cim_stencil[cim_output_s0_y+0,  (cim_output_s0_x + 2)+0], cim_stencil[(cim_output_s0_y + 1)+0,  cim_output_s0_x+0], cim_stencil[(cim_output_s0_y + 1)+0,  (cim_output_s0_x + 2)+0], cim_stencil[(cim_output_s0_y + 2)+0,  cim_output_s0_x+0], cim_stencil[(cim_output_s0_y + 2)+0,  (cim_output_s0_x + 1)+0], cim_stencil[(cim_output_s0_y + 2)+0,  (cim_output_s0_x + 2)+0])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
    }
  }
}
program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
  padded16_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = 0; padded16_global_wrapper_s0_y < 64; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = 0; padded16_global_wrapper_s0_x < 64; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[((padded16_global_wrapper_s0_y + -3) + 3)+0,    ((padded16_global_wrapper_s0_x + -3) + 3)+0] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[(padded16_global_wrapper_s0_y + -3)+3,    (padded16_global_wrapper_s0_x + -3)+3])
    }
  }
  for (int grad_x_unclamp_s0_y = 0; grad_x_unclamp_s0_y < 62; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = 0; grad_x_unclamp_s0_x < 62; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil_clkwrk_dsa0[((grad_x_unclamp_s0_y + -2) + 2)+0,    ((grad_x_unclamp_s0_x + -2) + 2)+0] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = 0; grad_x_unclamp_s1_y < 62; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = 0; grad_x_unclamp_s1_x < 62; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil_clkwrk_dsa0[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 4)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 3)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 3)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 4)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0])
    }
  }
  for (int lxx_s0_y = 0; lxx_s0_y < 62; lxx_s0_y++) {
    for (int lxx_s0_x = 0; lxx_s0_x < 62; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[((lxx_s0_y + -2) + 2)+0,    ((lxx_s0_x + -2) + 2)+0] = hcompute_lxx_stencil(grad_x_unclamp_stencil[((lxx_s0_y + -2) + 2)+0,    ((lxx_s0_x + -2) + 2)+0])
    }
  }
  for (int lgxx_s0_y = 0; lgxx_s0_y < 60; lgxx_s0_y++) {
    for (int lgxx_s0_x = 0; lgxx_s0_x < 60; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil_clkwrk_dsa2[((lgxx_s0_y + -1) + 1)+0,    ((lgxx_s0_x + -1) + 1)+0] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = 0; lgxx_s1_y < 60; lgxx_s1_y++) {
    for (int lgxx_s1_x = 0; lgxx_s1_x < 60; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0] = hcompute_lgxx_stencil_1(lgxx_stencil_clkwrk_dsa2[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 2)+0], lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 3)+0], lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 2)+0], lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 3)+0], lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 3)+0], lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 2)+0])
    }
  }
  for (int grad_y_unclamp_s0_y = 0; grad_y_unclamp_s0_y < 62; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = 0; grad_y_unclamp_s0_x < 62; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil_clkwrk_dsa1[((grad_y_unclamp_s0_y + -2) + 2)+0,    ((grad_y_unclamp_s0_x + -2) + 2)+0] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = 0; grad_y_unclamp_s1_y < 62; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = 0; grad_y_unclamp_s1_x < 62; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil_clkwrk_dsa1[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 3)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 3)+0])
    }
  }
  for (int lxy_s0_y = 0; lxy_s0_y < 62; lxy_s0_y++) {
    for (int lxy_s0_x = 0; lxy_s0_x < 62; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0] = hcompute_lxy_stencil(grad_x_unclamp_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0], grad_y_unclamp_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0])
    }
  }
  for (int lgxy_s0_y = 0; lgxy_s0_y < 60; lgxy_s0_y++) {
    for (int lgxy_s0_x = 0; lgxy_s0_x < 60; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil_clkwrk_dsa3[((lgxy_s0_y + -1) + 1)+0,    ((lgxy_s0_x + -1) + 1)+0] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = 0; lgxy_s1_y < 60; lgxy_s1_y++) {
    for (int lgxy_s1_x = 0; lgxy_s1_x < 60; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0] = hcompute_lgxy_stencil_1(lgxy_stencil_clkwrk_dsa3[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 2)+0], lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 3)+0], lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 2)+0], lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 3)+0], lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 3)+0], lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 2)+0])
    }
  }
  for (int lyy_s0_y = 0; lyy_s0_y < 62; lyy_s0_y++) {
    for (int lyy_s0_x = 0; lyy_s0_x < 62; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[((lyy_s0_y + -2) + 2)+0,    ((lyy_s0_x + -2) + 2)+0] = hcompute_lyy_stencil(grad_y_unclamp_stencil[((lyy_s0_y + -2) + 2)+0,    ((lyy_s0_x + -2) + 2)+0])
    }
  }
  for (int lgyy_s0_y = 0; lgyy_s0_y < 60; lgyy_s0_y++) {
    for (int lgyy_s0_x = 0; lgyy_s0_x < 60; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil_clkwrk_dsa4[((lgyy_s0_y + -1) + 1)+0,    ((lgyy_s0_x + -1) + 1)+0] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = 0; lgyy_s1_y < 60; lgyy_s1_y++) {
    for (int lgyy_s1_x = 0; lgyy_s1_x < 60; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0] = hcompute_lgyy_stencil_1(lgyy_stencil_clkwrk_dsa4[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 2)+0], lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 3)+0], lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 2)+0], lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 3)+0], lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 3)+0], lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 2)+0])
    }
  }
  for (int cim_s0_y = 0; cim_s0_y < 60; cim_s0_y++) {
    for (int cim_s0_x = 0; cim_s0_x < 60; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0] = hcompute_cim_stencil(lgxx_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0], lgxy_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0], lgyy_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y+0,  cim_output_s0_x+0] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y+0,  cim_output_s0_x+0], cim_stencil[(cim_output_s0_y + 1)+0,  (cim_output_s0_x + 1)+0], cim_stencil[cim_output_s0_y+0,  (cim_output_s0_x + 1)+0], cim_stencil[cim_output_s0_y+0,  (cim_output_s0_x + 2)+0], cim_stencil[(cim_output_s0_y + 1)+0,  cim_output_s0_x+0], cim_stencil[(cim_output_s0_y + 1)+0,  (cim_output_s0_x + 2)+0], cim_stencil[(cim_output_s0_y + 2)+0,  cim_output_s0_x+0], cim_stencil[(cim_output_s0_y + 2)+0,  (cim_output_s0_x + 1)+0], cim_stencil[(cim_output_s0_y + 2)+0,  (cim_output_s0_x + 2)+0])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
    }
  }
}
program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
  padded16_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = 0; padded16_global_wrapper_s0_y < 64; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = 0; padded16_global_wrapper_s0_x < 64; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[((padded16_global_wrapper_s0_y + -3) + 3)+0,    ((padded16_global_wrapper_s0_x + -3) + 3)+0] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[(padded16_global_wrapper_s0_y + -3)+3,    (padded16_global_wrapper_s0_x + -3)+3])
    }
  }
  for (int grad_x_unclamp_s0_y = 0; grad_x_unclamp_s0_y < 62; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = 0; grad_x_unclamp_s0_x < 62; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil_clkwrk_dsa0[((grad_x_unclamp_s0_y + -2) + 2)+0,    ((grad_x_unclamp_s0_x + -2) + 2)+0] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = 0; grad_x_unclamp_s1_y < 62; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = 0; grad_x_unclamp_s1_x < 62; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil_clkwrk_dsa0[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 4)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 3)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 3)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 4)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0])
    }
  }
  for (int lxx_s0_y = 0; lxx_s0_y < 62; lxx_s0_y++) {
    for (int lxx_s0_x = 0; lxx_s0_x < 62; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[((lxx_s0_y + -2) + 2)+0,    ((lxx_s0_x + -2) + 2)+0] = hcompute_lxx_stencil(grad_x_unclamp_stencil[((lxx_s0_y + -2) + 2)+0,    ((lxx_s0_x + -2) + 2)+0])
    }
  }
  for (int lgxx_s0_y = 0; lgxx_s0_y < 60; lgxx_s0_y++) {
    for (int lgxx_s0_x = 0; lgxx_s0_x < 60; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil_clkwrk_dsa2[((lgxx_s0_y + -1) + 1)+0,    ((lgxx_s0_x + -1) + 1)+0] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = 0; lgxx_s1_y < 60; lgxx_s1_y++) {
    for (int lgxx_s1_x = 0; lgxx_s1_x < 60; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0] = hcompute_lgxx_stencil_1(lgxx_stencil_clkwrk_dsa2[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 2)+0], lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 3)+0], lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 2)+0], lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 3)+0], lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 3)+0], lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 2)+0])
    }
  }
  for (int grad_y_unclamp_s0_y = 0; grad_y_unclamp_s0_y < 62; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = 0; grad_y_unclamp_s0_x < 62; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil_clkwrk_dsa1[((grad_y_unclamp_s0_y + -2) + 2)+0,    ((grad_y_unclamp_s0_x + -2) + 2)+0] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = 0; grad_y_unclamp_s1_y < 62; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = 0; grad_y_unclamp_s1_x < 62; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil_clkwrk_dsa1[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 3)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 3)+0])
    }
  }
  for (int lxy_s0_y = 0; lxy_s0_y < 62; lxy_s0_y++) {
    for (int lxy_s0_x = 0; lxy_s0_x < 62; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0] = hcompute_lxy_stencil(grad_x_unclamp_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0], grad_y_unclamp_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0])
    }
  }
  for (int lgxy_s0_y = 0; lgxy_s0_y < 60; lgxy_s0_y++) {
    for (int lgxy_s0_x = 0; lgxy_s0_x < 60; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil_clkwrk_dsa3[((lgxy_s0_y + -1) + 1)+0,    ((lgxy_s0_x + -1) + 1)+0] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = 0; lgxy_s1_y < 60; lgxy_s1_y++) {
    for (int lgxy_s1_x = 0; lgxy_s1_x < 60; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0] = hcompute_lgxy_stencil_1(lgxy_stencil_clkwrk_dsa3[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 2)+0], lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 3)+0], lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 2)+0], lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 3)+0], lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 3)+0], lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 2)+0])
    }
  }
  for (int lyy_s0_y = 0; lyy_s0_y < 62; lyy_s0_y++) {
    for (int lyy_s0_x = 0; lyy_s0_x < 62; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[((lyy_s0_y + -2) + 2)+0,    ((lyy_s0_x + -2) + 2)+0] = hcompute_lyy_stencil(grad_y_unclamp_stencil[((lyy_s0_y + -2) + 2)+0,    ((lyy_s0_x + -2) + 2)+0])
    }
  }
  for (int lgyy_s0_y = 0; lgyy_s0_y < 60; lgyy_s0_y++) {
    for (int lgyy_s0_x = 0; lgyy_s0_x < 60; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil_clkwrk_dsa4[((lgyy_s0_y + -1) + 1)+0,    ((lgyy_s0_x + -1) + 1)+0] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = 0; lgyy_s1_y < 60; lgyy_s1_y++) {
    for (int lgyy_s1_x = 0; lgyy_s1_x < 60; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0] = hcompute_lgyy_stencil_1(lgyy_stencil_clkwrk_dsa4[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 2)+0], lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 3)+0], lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 2)+0], lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 3)+0], lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 3)+0], lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 2)+0])
    }
  }
  for (int cim_s0_y = 0; cim_s0_y < 60; cim_s0_y++) {
    for (int cim_s0_x = 0; cim_s0_x < 60; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0] = hcompute_cim_stencil(lgxx_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0], lgxy_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0], lgyy_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y+0,  cim_output_s0_x+0] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y+0,  cim_output_s0_x+0], cim_stencil[(cim_output_s0_y + 1)+0,  (cim_output_s0_x + 1)+0], cim_stencil[cim_output_s0_y+0,  (cim_output_s0_x + 1)+0], cim_stencil[cim_output_s0_y+0,  (cim_output_s0_x + 2)+0], cim_stencil[(cim_output_s0_y + 1)+0,  cim_output_s0_x+0], cim_stencil[(cim_output_s0_y + 1)+0,  (cim_output_s0_x + 2)+0], cim_stencil[(cim_output_s0_y + 2)+0,  cim_output_s0_x+0], cim_stencil[(cim_output_s0_y + 2)+0,  (cim_output_s0_x + 1)+0], cim_stencil[(cim_output_s0_y + 2)+0,  (cim_output_s0_x + 2)+0])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
    }
  }
}
harris is a stencil pipeline
Computing validity deps for cim_output_stencil
Computing validity deps for cim_stencil
Computing validity deps for grad_x_unclamp_stencil
Computing validity deps for grad_x_unclamp_stencil_clkwrk_dsa0
Computing validity deps for grad_y_unclamp_stencil
Computing validity deps for grad_y_unclamp_stencil_clkwrk_dsa1
Computing validity deps for hw_output_stencil
Computing validity deps for lgxx_stencil
Computing validity deps for lgxx_stencil_clkwrk_dsa2
Computing validity deps for lgxy_stencil
Computing validity deps for lgxy_stencil_clkwrk_dsa3
Computing validity deps for lgyy_stencil
Computing validity deps for lgyy_stencil_clkwrk_dsa4
Computing validity deps for lxx_stencil
Computing validity deps for lxy_stencil
Computing validity deps for lyy_stencil
Computing validity deps for padded16_global_wrapper_stencil
Computing validity deps for padded16_stencil
Finite validity: { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lgyy_s0_y, lgyy_s1_x = lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lgxx_s0_y, lgxx_s1_x = lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lgxy_s0_y, lgxy_s1_x = lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> op_hcompute_lxy_stencil[root' = 0, lxy_s0_y = grad_y_unclamp_s1_y, lxy_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> op_hcompute_cim_stencil[root' = 0, cim_s0_y = lgyy_s1_y, cim_s0_x = lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> op_hcompute_cim_stencil[root' = 0, cim_s0_y = lgxy_s1_y, cim_s0_x = lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = grad_x_unclamp_s0_y, grad_x_unclamp_s1_x = grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> op_hcompute_lyy_stencil[root' = 0, lyy_s0_y = grad_y_unclamp_s1_y, lyy_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -1 + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 0 < padded16_global_wrapper_s0_x <= 62; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -1 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 0 < padded16_global_wrapper_s0_x <= 62; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 2 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 2 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_yi = cim_output_s0_y, hw_output_s0_x_xi = cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = cim_s0_y, cim_output_s0_x = cim_s0_x] : 0 <= cim_s0_y <= 57 and 0 <= cim_s0_x <= 57; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -1 + cim_s0_y, cim_output_s0_x = cim_s0_x] : 0 < cim_s0_y <= 58 and 0 <= cim_s0_x <= 57; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -2 + cim_s0_y, cim_output_s0_x = cim_s0_x] : 2 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 57; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = cim_s0_y, cim_output_s0_x = -1 + cim_s0_x] : 0 <= cim_s0_y <= 57 and 0 < cim_s0_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -1 + cim_s0_y, cim_output_s0_x = -1 + cim_s0_x] : 0 < cim_s0_y <= 58 and 0 < cim_s0_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -2 + cim_s0_y, cim_output_s0_x = -1 + cim_s0_x] : 2 <= cim_s0_y <= 59 and 0 < cim_s0_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = cim_s0_y, cim_output_s0_x = -2 + cim_s0_x] : 0 <= cim_s0_y <= 57 and 2 <= cim_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -1 + cim_s0_y, cim_output_s0_x = -2 + cim_s0_x] : 0 < cim_s0_y <= 58 and 2 <= cim_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -2 + cim_s0_y, cim_output_s0_x = -2 + cim_s0_x] : 2 <= cim_s0_y <= 59 and 2 <= cim_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> op_hcompute_lxy_stencil[root' = 0, lxy_s0_y = grad_x_unclamp_s1_y, lxy_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> op_hcompute_lxx_stencil[root' = 0, lxx_s0_y = grad_x_unclamp_s1_y, lxx_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = grad_y_unclamp_s0_y, grad_y_unclamp_s1_x = grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> op_hcompute_cim_stencil[root' = 0, cim_s0_y = lgxx_s1_y, cim_s0_x = lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lxy_s0_y, lgxy_s1_x = lxy_s0_x] : 0 <= lxy_s0_y <= 59 and 0 <= lxy_s0_x <= 59; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -1 + lxy_s0_y, lgxy_s1_x = lxy_s0_x] : 0 < lxy_s0_y <= 60 and 0 <= lxy_s0_x <= 59; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -2 + lxy_s0_y, lgxy_s1_x = lxy_s0_x] : 2 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 59; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lxy_s0_y, lgxy_s1_x = -1 + lxy_s0_x] : 0 <= lxy_s0_y <= 59 and 0 < lxy_s0_x <= 60; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -1 + lxy_s0_y, lgxy_s1_x = -1 + lxy_s0_x] : 0 < lxy_s0_y <= 60 and 0 < lxy_s0_x <= 60; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -2 + lxy_s0_y, lgxy_s1_x = -1 + lxy_s0_x] : 2 <= lxy_s0_y <= 61 and 0 < lxy_s0_x <= 60; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lxy_s0_y, lgxy_s1_x = -2 + lxy_s0_x] : 0 <= lxy_s0_y <= 59 and 2 <= lxy_s0_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -1 + lxy_s0_y, lgxy_s1_x = -2 + lxy_s0_x] : 0 < lxy_s0_y <= 60 and 2 <= lxy_s0_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -2 + lxy_s0_y, lgxy_s1_x = -2 + lxy_s0_x] : 2 <= lxy_s0_y <= 61 and 2 <= lxy_s0_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lyy_s0_y, lgyy_s1_x = lyy_s0_x] : 0 <= lyy_s0_y <= 59 and 0 <= lyy_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -1 + lyy_s0_y, lgyy_s1_x = lyy_s0_x] : 0 < lyy_s0_y <= 60 and 0 <= lyy_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -2 + lyy_s0_y, lgyy_s1_x = lyy_s0_x] : 2 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lyy_s0_y, lgyy_s1_x = -1 + lyy_s0_x] : 0 <= lyy_s0_y <= 59 and 0 < lyy_s0_x <= 60; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -1 + lyy_s0_y, lgyy_s1_x = -1 + lyy_s0_x] : 0 < lyy_s0_y <= 60 and 0 < lyy_s0_x <= 60; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -2 + lyy_s0_y, lgyy_s1_x = -1 + lyy_s0_x] : 2 <= lyy_s0_y <= 61 and 0 < lyy_s0_x <= 60; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lyy_s0_y, lgyy_s1_x = -2 + lyy_s0_x] : 0 <= lyy_s0_y <= 59 and 2 <= lyy_s0_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -1 + lyy_s0_y, lgyy_s1_x = -2 + lyy_s0_x] : 0 < lyy_s0_y <= 60 and 2 <= lyy_s0_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -2 + lyy_s0_y, lgyy_s1_x = -2 + lyy_s0_x] : 2 <= lyy_s0_y <= 61 and 2 <= lyy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -1 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 < padded16_global_wrapper_s0_y <= 62 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 2 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -1 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 0 < padded16_global_wrapper_s0_y <= 62 and 2 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 2 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lxx_s0_y, lgxx_s1_x = lxx_s0_x] : 0 <= lxx_s0_y <= 59 and 0 <= lxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -1 + lxx_s0_y, lgxx_s1_x = lxx_s0_x] : 0 < lxx_s0_y <= 60 and 0 <= lxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -2 + lxx_s0_y, lgxx_s1_x = lxx_s0_x] : 2 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lxx_s0_y, lgxx_s1_x = -1 + lxx_s0_x] : 0 <= lxx_s0_y <= 59 and 0 < lxx_s0_x <= 60; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -1 + lxx_s0_y, lgxx_s1_x = -1 + lxx_s0_x] : 0 < lxx_s0_y <= 60 and 0 < lxx_s0_x <= 60; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -2 + lxx_s0_y, lgxx_s1_x = -1 + lxx_s0_x] : 2 <= lxx_s0_y <= 61 and 0 < lxx_s0_x <= 60; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lxx_s0_y, lgxx_s1_x = -2 + lxx_s0_x] : 0 <= lxx_s0_y <= 59 and 2 <= lxx_s0_x <= 61; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -1 + lxx_s0_y, lgxx_s1_x = -2 + lxx_s0_x] : 0 < lxx_s0_y <= 60 and 2 <= lxx_s0_x <= 61; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -2 + lxx_s0_y, lgxx_s1_x = -2 + lxx_s0_x] : 2 <= lxx_s0_y <= 61 and 2 <= lxx_s0_x <= 61 }
  Dep = { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lgyy_s0_y, lgyy_s1_x = lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  Dep = { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lgxx_s0_y, lgxx_s1_x = lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  Dep = { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lgxy_s0_y, lgxy_s1_x = lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  Dep = { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> op_hcompute_lxy_stencil[root' = 0, lxy_s0_y = grad_y_unclamp_s1_y, lxy_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  Dep = { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> op_hcompute_cim_stencil[root' = 0, cim_s0_y = lgyy_s1_y, cim_s0_x = lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  Dep = { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> op_hcompute_cim_stencil[root' = 0, cim_s0_y = lgxy_s1_y, cim_s0_x = lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  Dep = { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = grad_x_unclamp_s0_y, grad_x_unclamp_s1_x = grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  Dep = { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> op_hcompute_lyy_stencil[root' = 0, lyy_s0_y = grad_y_unclamp_s1_y, lyy_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  Dep = { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -1 + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 0 < padded16_global_wrapper_s0_x <= 62; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -1 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 0 < padded16_global_wrapper_s0_x <= 62; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 2 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 2 <= padded16_global_wrapper_s0_x <= 63 }
  Dep = { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_yi = cim_output_s0_y, hw_output_s0_x_xi = cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Dep = { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = cim_s0_y, cim_output_s0_x = cim_s0_x] : 0 <= cim_s0_y <= 57 and 0 <= cim_s0_x <= 57; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -1 + cim_s0_y, cim_output_s0_x = cim_s0_x] : 0 < cim_s0_y <= 58 and 0 <= cim_s0_x <= 57; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -2 + cim_s0_y, cim_output_s0_x = cim_s0_x] : 2 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 57; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = cim_s0_y, cim_output_s0_x = -1 + cim_s0_x] : 0 <= cim_s0_y <= 57 and 0 < cim_s0_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -1 + cim_s0_y, cim_output_s0_x = -1 + cim_s0_x] : 0 < cim_s0_y <= 58 and 0 < cim_s0_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -2 + cim_s0_y, cim_output_s0_x = -1 + cim_s0_x] : 2 <= cim_s0_y <= 59 and 0 < cim_s0_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = cim_s0_y, cim_output_s0_x = -2 + cim_s0_x] : 0 <= cim_s0_y <= 57 and 2 <= cim_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -1 + cim_s0_y, cim_output_s0_x = -2 + cim_s0_x] : 0 < cim_s0_y <= 58 and 2 <= cim_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -2 + cim_s0_y, cim_output_s0_x = -2 + cim_s0_x] : 2 <= cim_s0_y <= 59 and 2 <= cim_s0_x <= 59 }
  Dep = { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> op_hcompute_lxy_stencil[root' = 0, lxy_s0_y = grad_x_unclamp_s1_y, lxy_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  Dep = { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> op_hcompute_lxx_stencil[root' = 0, lxx_s0_y = grad_x_unclamp_s1_y, lxx_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  Dep = { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = grad_y_unclamp_s0_y, grad_y_unclamp_s1_x = grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  Dep = { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> op_hcompute_cim_stencil[root' = 0, cim_s0_y = lgxx_s1_y, cim_s0_x = lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  Dep = { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lxy_s0_y, lgxy_s1_x = lxy_s0_x] : 0 <= lxy_s0_y <= 59 and 0 <= lxy_s0_x <= 59; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -1 + lxy_s0_y, lgxy_s1_x = lxy_s0_x] : 0 < lxy_s0_y <= 60 and 0 <= lxy_s0_x <= 59; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -2 + lxy_s0_y, lgxy_s1_x = lxy_s0_x] : 2 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 59; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lxy_s0_y, lgxy_s1_x = -1 + lxy_s0_x] : 0 <= lxy_s0_y <= 59 and 0 < lxy_s0_x <= 60; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -1 + lxy_s0_y, lgxy_s1_x = -1 + lxy_s0_x] : 0 < lxy_s0_y <= 60 and 0 < lxy_s0_x <= 60; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -2 + lxy_s0_y, lgxy_s1_x = -1 + lxy_s0_x] : 2 <= lxy_s0_y <= 61 and 0 < lxy_s0_x <= 60; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lxy_s0_y, lgxy_s1_x = -2 + lxy_s0_x] : 0 <= lxy_s0_y <= 59 and 2 <= lxy_s0_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -1 + lxy_s0_y, lgxy_s1_x = -2 + lxy_s0_x] : 0 < lxy_s0_y <= 60 and 2 <= lxy_s0_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -2 + lxy_s0_y, lgxy_s1_x = -2 + lxy_s0_x] : 2 <= lxy_s0_y <= 61 and 2 <= lxy_s0_x <= 61 }
  Dep = { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lyy_s0_y, lgyy_s1_x = lyy_s0_x] : 0 <= lyy_s0_y <= 59 and 0 <= lyy_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -1 + lyy_s0_y, lgyy_s1_x = lyy_s0_x] : 0 < lyy_s0_y <= 60 and 0 <= lyy_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -2 + lyy_s0_y, lgyy_s1_x = lyy_s0_x] : 2 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lyy_s0_y, lgyy_s1_x = -1 + lyy_s0_x] : 0 <= lyy_s0_y <= 59 and 0 < lyy_s0_x <= 60; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -1 + lyy_s0_y, lgyy_s1_x = -1 + lyy_s0_x] : 0 < lyy_s0_y <= 60 and 0 < lyy_s0_x <= 60; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -2 + lyy_s0_y, lgyy_s1_x = -1 + lyy_s0_x] : 2 <= lyy_s0_y <= 61 and 0 < lyy_s0_x <= 60; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lyy_s0_y, lgyy_s1_x = -2 + lyy_s0_x] : 0 <= lyy_s0_y <= 59 and 2 <= lyy_s0_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -1 + lyy_s0_y, lgyy_s1_x = -2 + lyy_s0_x] : 0 < lyy_s0_y <= 60 and 2 <= lyy_s0_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -2 + lyy_s0_y, lgyy_s1_x = -2 + lyy_s0_x] : 2 <= lyy_s0_y <= 61 and 2 <= lyy_s0_x <= 61 }
  Dep = { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -1 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 < padded16_global_wrapper_s0_y <= 62 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 2 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -1 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 0 < padded16_global_wrapper_s0_y <= 62 and 2 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 2 <= padded16_global_wrapper_s0_x <= 63 }
  Dep = { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lxx_s0_y, lgxx_s1_x = lxx_s0_x] : 0 <= lxx_s0_y <= 59 and 0 <= lxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -1 + lxx_s0_y, lgxx_s1_x = lxx_s0_x] : 0 < lxx_s0_y <= 60 and 0 <= lxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -2 + lxx_s0_y, lgxx_s1_x = lxx_s0_x] : 2 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lxx_s0_y, lgxx_s1_x = -1 + lxx_s0_x] : 0 <= lxx_s0_y <= 59 and 0 < lxx_s0_x <= 60; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -1 + lxx_s0_y, lgxx_s1_x = -1 + lxx_s0_x] : 0 < lxx_s0_y <= 60 and 0 < lxx_s0_x <= 60; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -2 + lxx_s0_y, lgxx_s1_x = -1 + lxx_s0_x] : 2 <= lxx_s0_y <= 61 and 0 < lxx_s0_x <= 60; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lxx_s0_y, lgxx_s1_x = -2 + lxx_s0_x] : 0 <= lxx_s0_y <= 59 and 2 <= lxx_s0_x <= 61; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -1 + lxx_s0_y, lgxx_s1_x = -2 + lxx_s0_x] : 0 < lxx_s0_y <= 60 and 2 <= lxx_s0_x <= 61; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -2 + lxx_s0_y, lgxx_s1_x = -2 + lxx_s0_x] : 2 <= lxx_s0_y <= 61 and 2 <= lxx_s0_x <= 61 }
Got deps
Schedule dim = 3
  scheduling dimension 0
  { op_hcompute_lgyy_stencil[root = 0] -> op_hcompute_lgyy_stencil_1[root' = 0] }
  { op_hcompute_lgxx_stencil[root = 0] -> op_hcompute_lgxx_stencil_1[root' = 0] }
  { op_hcompute_lgxy_stencil[root = 0] -> op_hcompute_lgxy_stencil_1[root' = 0] }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0] -> op_hcompute_lxy_stencil[root' = 0] }
  { op_hcompute_lgyy_stencil_1[root = 0] -> op_hcompute_cim_stencil[root' = 0] }
  { op_hcompute_lgxy_stencil_1[root = 0] -> op_hcompute_cim_stencil[root' = 0] }
  { op_hcompute_grad_x_unclamp_stencil[root = 0] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0] }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0] -> op_hcompute_lyy_stencil[root' = 0] }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0] }
  { op_hcompute_cim_output_stencil[root = 0] -> op_hcompute_hw_output_stencil[root' = 0] }
  { op_hcompute_cim_stencil[root = 0] -> op_hcompute_cim_output_stencil[root' = 0] }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0] -> op_hcompute_lxy_stencil[root' = 0] }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0] -> op_hcompute_lxx_stencil[root' = 0] }
  { op_hcompute_grad_y_unclamp_stencil[root = 0] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0] }
  { op_hcompute_lgxx_stencil_1[root = 0] -> op_hcompute_cim_stencil[root' = 0] }
  { op_hcompute_lxy_stencil[root = 0] -> op_hcompute_lgxy_stencil_1[root' = 0] }
  { op_hcompute_lyy_stencil[root = 0] -> op_hcompute_lgyy_stencil_1[root' = 0] }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0] }
  { op_hcompute_lxx_stencil[root = 0] -> op_hcompute_lgxx_stencil_1[root' = 0] }
Consumed data...
  { op_hcompute_lgyy_stencil_1[root = 0] -> op_hcompute_lgyy_stencil[root' = 0] }
bound: { op_hcompute_lgyy_stencil_1[root] -> op_hcompute_lgyy_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_lgyy_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_lgyy_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_lgyy_stencil_1[root] -> [(0)] }
  { op_hcompute_lgxx_stencil_1[root = 0] -> op_hcompute_lgxx_stencil[root' = 0] }
bound: { op_hcompute_lgxx_stencil_1[root] -> op_hcompute_lgxx_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_lgxx_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_lgxx_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_lgxx_stencil_1[root] -> [(0)] }
  { op_hcompute_lgxy_stencil_1[root = 0] -> op_hcompute_lgxy_stencil[root' = 0] }
bound: { op_hcompute_lgxy_stencil_1[root] -> op_hcompute_lgxy_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_lgxy_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_lgxy_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_lgxy_stencil_1[root] -> [(0)] }
  { op_hcompute_lxy_stencil[root = 0] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0] }
bound: { op_hcompute_lxy_stencil[root] -> op_hcompute_grad_y_unclamp_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_lxy_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_lxy_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_lxy_stencil[root] -> [(0)] }
  { op_hcompute_cim_stencil[root = 0] -> op_hcompute_lgyy_stencil_1[root' = 0] }
bound: { op_hcompute_cim_stencil[root] -> op_hcompute_lgyy_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_cim_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_cim_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_cim_stencil[root] -> [(0)] }
  { op_hcompute_cim_stencil[root = 0] -> op_hcompute_lgxy_stencil_1[root' = 0] }
bound: { op_hcompute_cim_stencil[root] -> op_hcompute_lgxy_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_cim_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_cim_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_cim_stencil[root] -> [(0)] }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0] -> op_hcompute_grad_x_unclamp_stencil[root' = 0] }
bound: { op_hcompute_grad_x_unclamp_stencil_1[root] -> op_hcompute_grad_x_unclamp_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_grad_x_unclamp_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_grad_x_unclamp_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_grad_x_unclamp_stencil_1[root] -> [(0)] }
  { op_hcompute_lyy_stencil[root = 0] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0] }
bound: { op_hcompute_lyy_stencil[root] -> op_hcompute_grad_y_unclamp_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_lyy_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_lyy_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_lyy_stencil[root] -> [(0)] }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0] -> op_hcompute_padded16_global_wrapper_stencil[root' = 0] }
bound: { op_hcompute_grad_y_unclamp_stencil_1[root] -> op_hcompute_padded16_global_wrapper_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_grad_y_unclamp_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_grad_y_unclamp_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_grad_y_unclamp_stencil_1[root] -> [(0)] }
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_cim_output_stencil[root' = 0] }
bound: { op_hcompute_hw_output_stencil[root] -> op_hcompute_cim_output_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_hw_output_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[root] -> [(0)] }
  { op_hcompute_cim_output_stencil[root = 0] -> op_hcompute_cim_stencil[root' = 0] }
bound: { op_hcompute_cim_output_stencil[root] -> op_hcompute_cim_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_cim_output_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_cim_output_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_cim_output_stencil[root] -> [(0)] }
  { op_hcompute_lxy_stencil[root = 0] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0] }
bound: { op_hcompute_lxy_stencil[root] -> op_hcompute_grad_x_unclamp_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_lxy_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_lxy_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_lxy_stencil[root] -> [(0)] }
  { op_hcompute_lxx_stencil[root = 0] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0] }
bound: { op_hcompute_lxx_stencil[root] -> op_hcompute_grad_x_unclamp_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_lxx_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_lxx_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_lxx_stencil[root] -> [(0)] }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0] -> op_hcompute_grad_y_unclamp_stencil[root' = 0] }
bound: { op_hcompute_grad_y_unclamp_stencil_1[root] -> op_hcompute_grad_y_unclamp_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_grad_y_unclamp_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_grad_y_unclamp_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_grad_y_unclamp_stencil_1[root] -> [(0)] }
  { op_hcompute_cim_stencil[root = 0] -> op_hcompute_lgxx_stencil_1[root' = 0] }
bound: { op_hcompute_cim_stencil[root] -> op_hcompute_lgxx_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_cim_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_cim_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_cim_stencil[root] -> [(0)] }
  { op_hcompute_lgxy_stencil_1[root = 0] -> op_hcompute_lxy_stencil[root' = 0] }
bound: { op_hcompute_lgxy_stencil_1[root] -> op_hcompute_lxy_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_lgxy_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_lgxy_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_lgxy_stencil_1[root] -> [(0)] }
  { op_hcompute_lgyy_stencil_1[root = 0] -> op_hcompute_lyy_stencil[root' = 0] }
bound: { op_hcompute_lgyy_stencil_1[root] -> op_hcompute_lyy_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_lgyy_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_lgyy_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_lgyy_stencil_1[root] -> [(0)] }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0] -> op_hcompute_padded16_global_wrapper_stencil[root' = 0] }
bound: { op_hcompute_grad_x_unclamp_stencil_1[root] -> op_hcompute_padded16_global_wrapper_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_grad_x_unclamp_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_grad_x_unclamp_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_grad_x_unclamp_stencil_1[root] -> [(0)] }
  { op_hcompute_lgxx_stencil_1[root = 0] -> op_hcompute_lxx_stencil[root' = 0] }
bound: { op_hcompute_lgxx_stencil_1[root] -> op_hcompute_lxx_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_lgxx_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_lgxx_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_lgxx_stencil_1[root] -> [(0)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_lgyy_stencil_1, s_op_hcompute_lgyy_stencil, s_op_hcompute_lgxx_stencil_1, s_op_hcompute_lgxx_stencil, s_op_hcompute_lgxy_stencil_1, s_op_hcompute_lgxy_stencil, s_op_hcompute_lxy_stencil, s_op_hcompute_grad_y_unclamp_stencil_1, s_op_hcompute_hw_output_stencil, s_op_hcompute_cim_output_stencil, s_op_hcompute_cim_stencil, s_op_hcompute_grad_x_unclamp_stencil_1, s_op_hcompute_grad_x_unclamp_stencil, s_op_hcompute_lyy_stencil, s_op_hcompute_lxx_stencil, s_op_hcompute_grad_y_unclamp_stencil, s_op_hcompute_padded16_global_wrapper_stencil] : s_op_hcompute_lgyy_stencil_1 > 0 and s_op_hcompute_lgyy_stencil > 0 and s_op_hcompute_lgxx_stencil_1 > 0 and s_op_hcompute_lgxx_stencil > 0 and s_op_hcompute_lgxy_stencil_1 > 0 and s_op_hcompute_lgxy_stencil > 0 and s_op_hcompute_lxy_stencil > 0 and s_op_hcompute_grad_y_unclamp_stencil_1 > 0 and s_op_hcompute_hw_output_stencil > 0 and s_op_hcompute_cim_output_stencil > 0 and s_op_hcompute_cim_stencil > 0 and s_op_hcompute_grad_x_unclamp_stencil_1 > 0 and s_op_hcompute_grad_x_unclamp_stencil > 0 and s_op_hcompute_lyy_stencil > 0 and s_op_hcompute_lxx_stencil > 0 and s_op_hcompute_grad_y_unclamp_stencil > 0 and s_op_hcompute_padded16_global_wrapper_stencil > 0 }
Writing problem to mod file...
  # of constraints: 17
  legal point  : { [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }
  minimal point: 0
Schedule params...
  { op_hcompute_lgyy_stencil_1[root = 0] -> op_hcompute_lgyy_stencil[root' = 0] }
  { op_hcompute_lgxx_stencil_1[root = 0] -> op_hcompute_lgxx_stencil[root' = 0] }
  { op_hcompute_lgxy_stencil_1[root = 0] -> op_hcompute_lgxy_stencil[root' = 0] }
  { op_hcompute_lxy_stencil[root = 0] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0] }
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_cim_output_stencil[root' = 0] }
  { op_hcompute_cim_stencil[root = 0] -> op_hcompute_lgyy_stencil_1[root' = 0] }
  { op_hcompute_cim_stencil[root = 0] -> op_hcompute_lgxy_stencil_1[root' = 0] }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0] -> op_hcompute_grad_x_unclamp_stencil[root' = 0] }
  { op_hcompute_lyy_stencil[root = 0] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0] }
  { op_hcompute_lxy_stencil[root = 0] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0] }
  { op_hcompute_lxx_stencil[root = 0] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0] }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0] -> op_hcompute_grad_y_unclamp_stencil[root' = 0] }
  { op_hcompute_cim_stencil[root = 0] -> op_hcompute_lgxx_stencil_1[root' = 0] }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0] -> op_hcompute_padded16_global_wrapper_stencil[root' = 0] }
  { op_hcompute_cim_output_stencil[root = 0] -> op_hcompute_cim_stencil[root' = 0] }
  { op_hcompute_lgxy_stencil_1[root = 0] -> op_hcompute_lxy_stencil[root' = 0] }
  { op_hcompute_lgyy_stencil_1[root = 0] -> op_hcompute_lyy_stencil[root' = 0] }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0] -> op_hcompute_padded16_global_wrapper_stencil[root' = 0] }
  { op_hcompute_lgxx_stencil_1[root = 0] -> op_hcompute_lxx_stencil[root' = 0] }
Done with schedule
Clockwork schedules...
  op_hcompute_cim_output_stencil: { [i] -> [(i)] }
  op_hcompute_cim_stencil: { [i] -> [(i)] }
  op_hcompute_grad_x_unclamp_stencil: { [i] -> [(i)] }
  op_hcompute_grad_x_unclamp_stencil_1: { [i] -> [(i)] }
  op_hcompute_grad_y_unclamp_stencil: { [i] -> [(i)] }
  op_hcompute_grad_y_unclamp_stencil_1: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(i)] }
  op_hcompute_lgxx_stencil: { [i] -> [(i)] }
  op_hcompute_lgxx_stencil_1: { [i] -> [(i)] }
  op_hcompute_lgxy_stencil: { [i] -> [(i)] }
  op_hcompute_lgxy_stencil_1: { [i] -> [(i)] }
  op_hcompute_lgyy_stencil: { [i] -> [(i)] }
  op_hcompute_lgyy_stencil_1: { [i] -> [(i)] }
  op_hcompute_lxx_stencil: { [i] -> [(i)] }
  op_hcompute_lxy_stencil: { [i] -> [(i)] }
  op_hcompute_lyy_stencil: { [i] -> [(i)] }
  op_hcompute_padded16_global_wrapper_stencil: { [i] -> [(i)] }
  scheduling dimension 1
  { op_hcompute_lgyy_stencil[lgyy_s0_y] -> op_hcompute_lgyy_stencil_1[lgyy_s1_y = lgyy_s0_y] : 0 <= lgyy_s0_y <= 59 }
  { op_hcompute_lgxx_stencil[lgxx_s0_y] -> op_hcompute_lgxx_stencil_1[lgxx_s1_y = lgxx_s0_y] : 0 <= lgxx_s0_y <= 59 }
  { op_hcompute_lgxy_stencil[lgxy_s0_y] -> op_hcompute_lgxy_stencil_1[lgxy_s1_y = lgxy_s0_y] : 0 <= lgxy_s0_y <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_lxy_stencil[lxy_s0_y = grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61 }
  { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_cim_stencil[cim_s0_y = lgyy_s1_y] : 0 <= lgyy_s1_y <= 59 }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_cim_stencil[cim_s0_y = lgxy_s1_y] : 0 <= lgxy_s1_y <= 59 }
  { op_hcompute_grad_x_unclamp_stencil[grad_x_unclamp_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y = grad_x_unclamp_s0_y] : 0 <= grad_x_unclamp_s0_y <= 61 }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_lyy_stencil[lyy_s0_y = grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y = padded16_global_wrapper_s0_y] : 0 <= padded16_global_wrapper_s0_y <= 61; op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y] : 2 <= padded16_global_wrapper_s0_y <= 63 }
  { op_hcompute_cim_output_stencil[cim_output_s0_y] -> op_hcompute_hw_output_stencil[hw_output_s0_y_yi = cim_output_s0_y] : 0 <= cim_output_s0_y <= 57 }
  { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_cim_output_stencil[cim_output_s0_y = cim_s0_y] : 0 <= cim_s0_y <= 57; op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_cim_output_stencil[cim_output_s0_y = -1 + cim_s0_y] : 0 < cim_s0_y <= 58; op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_cim_output_stencil[cim_output_s0_y = -2 + cim_s0_y] : 2 <= cim_s0_y <= 59 }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_lxy_stencil[lxy_s0_y = grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_lxx_stencil[lxx_s0_y = grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[grad_y_unclamp_s0_y] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y = grad_y_unclamp_s0_y] : 0 <= grad_y_unclamp_s0_y <= 61 }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_cim_stencil[cim_s0_y = lgxx_s1_y] : 0 <= lgxx_s1_y <= 59 }
  { op_hcompute_lxy_stencil[lxy_s0_y] -> op_hcompute_lgxy_stencil_1[lgxy_s1_y = lxy_s0_y] : 0 <= lxy_s0_y <= 59; op_hcompute_lxy_stencil[lxy_s0_y] -> op_hcompute_lgxy_stencil_1[lgxy_s1_y = -1 + lxy_s0_y] : 0 < lxy_s0_y <= 60; op_hcompute_lxy_stencil[lxy_s0_y] -> op_hcompute_lgxy_stencil_1[lgxy_s1_y = -2 + lxy_s0_y] : 2 <= lxy_s0_y <= 61 }
  { op_hcompute_lyy_stencil[lyy_s0_y] -> op_hcompute_lgyy_stencil_1[lgyy_s1_y = lyy_s0_y] : 0 <= lyy_s0_y <= 59; op_hcompute_lyy_stencil[lyy_s0_y] -> op_hcompute_lgyy_stencil_1[lgyy_s1_y = -1 + lyy_s0_y] : 0 < lyy_s0_y <= 60; op_hcompute_lyy_stencil[lyy_s0_y] -> op_hcompute_lgyy_stencil_1[lgyy_s1_y = -2 + lyy_s0_y] : 2 <= lyy_s0_y <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y = padded16_global_wrapper_s0_y] : 0 <= padded16_global_wrapper_s0_y <= 61; op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y] : 2 <= padded16_global_wrapper_s0_y <= 63; op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y = -1 + padded16_global_wrapper_s0_y] : 0 < padded16_global_wrapper_s0_y <= 62 }
  { op_hcompute_lxx_stencil[lxx_s0_y] -> op_hcompute_lgxx_stencil_1[lgxx_s1_y = lxx_s0_y] : 0 <= lxx_s0_y <= 59; op_hcompute_lxx_stencil[lxx_s0_y] -> op_hcompute_lgxx_stencil_1[lgxx_s1_y = -1 + lxx_s0_y] : 0 < lxx_s0_y <= 60; op_hcompute_lxx_stencil[lxx_s0_y] -> op_hcompute_lgxx_stencil_1[lgxx_s1_y = -2 + lxx_s0_y] : 2 <= lxx_s0_y <= 61 }
Consumed data...
  { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lgyy_stencil[lgyy_s0_y = lgyy_s1_y] : 0 <= lgyy_s1_y <= 59 }
bound: { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lgyy_stencil[(lgyy_s1_y)] }
    affine upper bound on data needed: { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> [(lgyy_s1_y)] }
      domain of bound: { op_hcompute_lgyy_stencil_1[lgyy_s1_y] : 0 <= lgyy_s1_y <= 59 }
Extracting linear rational approximation: { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> [(lgyy_s1_y)] }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lgxx_stencil[lgxx_s0_y = lgxx_s1_y] : 0 <= lgxx_s1_y <= 59 }
bound: { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lgxx_stencil[(lgxx_s1_y)] }
    affine upper bound on data needed: { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> [(lgxx_s1_y)] }
      domain of bound: { op_hcompute_lgxx_stencil_1[lgxx_s1_y] : 0 <= lgxx_s1_y <= 59 }
Extracting linear rational approximation: { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> [(lgxx_s1_y)] }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lgxy_stencil[lgxy_s0_y = lgxy_s1_y] : 0 <= lgxy_s1_y <= 59 }
bound: { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lgxy_stencil[(lgxy_s1_y)] }
    affine upper bound on data needed: { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> [(lgxy_s1_y)] }
      domain of bound: { op_hcompute_lgxy_stencil_1[lgxy_s1_y] : 0 <= lgxy_s1_y <= 59 }
Extracting linear rational approximation: { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> [(lgxy_s1_y)] }
  { op_hcompute_lxy_stencil[lxy_s0_y] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y = lxy_s0_y] : 0 <= lxy_s0_y <= 61 }
bound: { op_hcompute_lxy_stencil[lxy_s0_y] -> op_hcompute_grad_y_unclamp_stencil_1[(lxy_s0_y)] }
    affine upper bound on data needed: { op_hcompute_lxy_stencil[lxy_s0_y] -> [(lxy_s0_y)] }
      domain of bound: { op_hcompute_lxy_stencil[lxy_s0_y] : 0 <= lxy_s0_y <= 61 }
Extracting linear rational approximation: { op_hcompute_lxy_stencil[lxy_s0_y] -> [(lxy_s0_y)] }
  { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_lgyy_stencil_1[lgyy_s1_y = cim_s0_y] : 0 <= cim_s0_y <= 59 }
bound: { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_lgyy_stencil_1[(cim_s0_y)] }
    affine upper bound on data needed: { op_hcompute_cim_stencil[cim_s0_y] -> [(cim_s0_y)] }
      domain of bound: { op_hcompute_cim_stencil[cim_s0_y] : 0 <= cim_s0_y <= 59 }
Extracting linear rational approximation: { op_hcompute_cim_stencil[cim_s0_y] -> [(cim_s0_y)] }
  { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_lgxy_stencil_1[lgxy_s1_y = cim_s0_y] : 0 <= cim_s0_y <= 59 }
bound: { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_lgxy_stencil_1[(cim_s0_y)] }
    affine upper bound on data needed: { op_hcompute_cim_stencil[cim_s0_y] -> [(cim_s0_y)] }
      domain of bound: { op_hcompute_cim_stencil[cim_s0_y] : 0 <= cim_s0_y <= 59 }
Extracting linear rational approximation: { op_hcompute_cim_stencil[cim_s0_y] -> [(cim_s0_y)] }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_grad_x_unclamp_stencil[grad_x_unclamp_s0_y = grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61 }
bound: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_grad_x_unclamp_stencil[(grad_x_unclamp_s1_y)] }
    affine upper bound on data needed: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> [(grad_x_unclamp_s1_y)] }
      domain of bound: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> [(grad_x_unclamp_s1_y)] }
  { op_hcompute_lyy_stencil[lyy_s0_y] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y = lyy_s0_y] : 0 <= lyy_s0_y <= 61 }
bound: { op_hcompute_lyy_stencil[lyy_s0_y] -> op_hcompute_grad_y_unclamp_stencil_1[(lyy_s0_y)] }
    affine upper bound on data needed: { op_hcompute_lyy_stencil[lyy_s0_y] -> [(lyy_s0_y)] }
      domain of bound: { op_hcompute_lyy_stencil[lyy_s0_y] : 0 <= lyy_s0_y <= 61 }
Extracting linear rational approximation: { op_hcompute_lyy_stencil[lyy_s0_y] -> [(lyy_s0_y)] }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = 2 + grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61; op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61 }
bound: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[(2 + grad_y_unclamp_s1_y)] }
    affine upper bound on data needed: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> [(2 + grad_y_unclamp_s1_y)] }
      domain of bound: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> [(2 + grad_y_unclamp_s1_y)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_cim_output_stencil[cim_output_s0_y = hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 57 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_cim_output_stencil[(hw_output_s0_y_yi)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> [(hw_output_s0_y_yi)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 57 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> [(hw_output_s0_y_yi)] }
  { op_hcompute_cim_output_stencil[cim_output_s0_y] -> op_hcompute_cim_stencil[cim_s0_y = 2 + cim_output_s0_y] : 0 <= cim_output_s0_y <= 57; op_hcompute_cim_output_stencil[cim_output_s0_y] -> op_hcompute_cim_stencil[cim_s0_y = 1 + cim_output_s0_y] : 0 <= cim_output_s0_y <= 57; op_hcompute_cim_output_stencil[cim_output_s0_y] -> op_hcompute_cim_stencil[cim_s0_y = cim_output_s0_y] : 0 <= cim_output_s0_y <= 57 }
bound: { op_hcompute_cim_output_stencil[cim_output_s0_y] -> op_hcompute_cim_stencil[(2 + cim_output_s0_y)] }
    affine upper bound on data needed: { op_hcompute_cim_output_stencil[cim_output_s0_y] -> [(2 + cim_output_s0_y)] }
      domain of bound: { op_hcompute_cim_output_stencil[cim_output_s0_y] : 0 <= cim_output_s0_y <= 57 }
Extracting linear rational approximation: { op_hcompute_cim_output_stencil[cim_output_s0_y] -> [(2 + cim_output_s0_y)] }
  { op_hcompute_lxy_stencil[lxy_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y = lxy_s0_y] : 0 <= lxy_s0_y <= 61 }
bound: { op_hcompute_lxy_stencil[lxy_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[(lxy_s0_y)] }
    affine upper bound on data needed: { op_hcompute_lxy_stencil[lxy_s0_y] -> [(lxy_s0_y)] }
      domain of bound: { op_hcompute_lxy_stencil[lxy_s0_y] : 0 <= lxy_s0_y <= 61 }
Extracting linear rational approximation: { op_hcompute_lxy_stencil[lxy_s0_y] -> [(lxy_s0_y)] }
  { op_hcompute_lxx_stencil[lxx_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y = lxx_s0_y] : 0 <= lxx_s0_y <= 61 }
bound: { op_hcompute_lxx_stencil[lxx_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[(lxx_s0_y)] }
    affine upper bound on data needed: { op_hcompute_lxx_stencil[lxx_s0_y] -> [(lxx_s0_y)] }
      domain of bound: { op_hcompute_lxx_stencil[lxx_s0_y] : 0 <= lxx_s0_y <= 61 }
Extracting linear rational approximation: { op_hcompute_lxx_stencil[lxx_s0_y] -> [(lxx_s0_y)] }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_grad_y_unclamp_stencil[grad_y_unclamp_s0_y = grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61 }
bound: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_grad_y_unclamp_stencil[(grad_y_unclamp_s1_y)] }
    affine upper bound on data needed: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> [(grad_y_unclamp_s1_y)] }
      domain of bound: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> [(grad_y_unclamp_s1_y)] }
  { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_lgxx_stencil_1[lgxx_s1_y = cim_s0_y] : 0 <= cim_s0_y <= 59 }
bound: { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_lgxx_stencil_1[(cim_s0_y)] }
    affine upper bound on data needed: { op_hcompute_cim_stencil[cim_s0_y] -> [(cim_s0_y)] }
      domain of bound: { op_hcompute_cim_stencil[cim_s0_y] : 0 <= cim_s0_y <= 59 }
Extracting linear rational approximation: { op_hcompute_cim_stencil[cim_s0_y] -> [(cim_s0_y)] }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lxy_stencil[lxy_s0_y = 2 + lgxy_s1_y] : 0 <= lgxy_s1_y <= 59; op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lxy_stencil[lxy_s0_y = 1 + lgxy_s1_y] : 0 <= lgxy_s1_y <= 59; op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lxy_stencil[lxy_s0_y = lgxy_s1_y] : 0 <= lgxy_s1_y <= 59 }
bound: { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lxy_stencil[(2 + lgxy_s1_y)] }
    affine upper bound on data needed: { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> [(2 + lgxy_s1_y)] }
      domain of bound: { op_hcompute_lgxy_stencil_1[lgxy_s1_y] : 0 <= lgxy_s1_y <= 59 }
Extracting linear rational approximation: { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> [(2 + lgxy_s1_y)] }
  { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lyy_stencil[lyy_s0_y = 2 + lgyy_s1_y] : 0 <= lgyy_s1_y <= 59; op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lyy_stencil[lyy_s0_y = 1 + lgyy_s1_y] : 0 <= lgyy_s1_y <= 59; op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lyy_stencil[lyy_s0_y = lgyy_s1_y] : 0 <= lgyy_s1_y <= 59 }
bound: { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lyy_stencil[(2 + lgyy_s1_y)] }
    affine upper bound on data needed: { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> [(2 + lgyy_s1_y)] }
      domain of bound: { op_hcompute_lgyy_stencil_1[lgyy_s1_y] : 0 <= lgyy_s1_y <= 59 }
Extracting linear rational approximation: { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> [(2 + lgyy_s1_y)] }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = 2 + grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61; op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61; op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = 1 + grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61 }
bound: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[(2 + grad_x_unclamp_s1_y)] }
    affine upper bound on data needed: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> [(2 + grad_x_unclamp_s1_y)] }
      domain of bound: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> [(2 + grad_x_unclamp_s1_y)] }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lxx_stencil[lxx_s0_y = 2 + lgxx_s1_y] : 0 <= lgxx_s1_y <= 59; op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lxx_stencil[lxx_s0_y = 1 + lgxx_s1_y] : 0 <= lgxx_s1_y <= 59; op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lxx_stencil[lxx_s0_y = lgxx_s1_y] : 0 <= lgxx_s1_y <= 59 }
bound: { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lxx_stencil[(2 + lgxx_s1_y)] }
    affine upper bound on data needed: { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> [(2 + lgxx_s1_y)] }
      domain of bound: { op_hcompute_lgxx_stencil_1[lgxx_s1_y] : 0 <= lgxx_s1_y <= 59 }
Extracting linear rational approximation: { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> [(2 + lgxx_s1_y)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_lgyy_stencil_1, s_op_hcompute_lgyy_stencil, s_op_hcompute_lgxx_stencil_1, s_op_hcompute_lgxx_stencil, s_op_hcompute_lgxy_stencil_1, s_op_hcompute_lgxy_stencil, s_op_hcompute_lxy_stencil, s_op_hcompute_grad_y_unclamp_stencil_1, s_op_hcompute_hw_output_stencil, s_op_hcompute_cim_output_stencil, s_op_hcompute_cim_stencil, s_op_hcompute_grad_x_unclamp_stencil_1, s_op_hcompute_grad_x_unclamp_stencil, s_op_hcompute_lyy_stencil, s_op_hcompute_lxx_stencil, s_op_hcompute_grad_y_unclamp_stencil, s_op_hcompute_padded16_global_wrapper_stencil] : s_op_hcompute_lgyy_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgxx_stencil_1 = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgxx_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgxy_stencil_1 = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgxy_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lxy_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_grad_y_unclamp_stencil_1 = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_cim_output_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_cim_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_grad_x_unclamp_stencil_1 = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_grad_x_unclamp_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lyy_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lxx_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_grad_y_unclamp_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_padded16_global_wrapper_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgyy_stencil_1 > 0 }
Writing problem to mod file...
  # of constraints: 33
  legal point  : { [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }
  minimal point: -17
Schedule params...
  { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lgyy_stencil[lgyy_s0_y = lgyy_s1_y] : 0 <= lgyy_s1_y <= 59 }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lgxx_stencil[lgxx_s0_y = lgxx_s1_y] : 0 <= lgxx_s1_y <= 59 }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lgxy_stencil[lgxy_s0_y = lgxy_s1_y] : 0 <= lgxy_s1_y <= 59 }
  { op_hcompute_lxy_stencil[lxy_s0_y] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y = lxy_s0_y] : 0 <= lxy_s0_y <= 61 }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_cim_output_stencil[cim_output_s0_y = hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 57 }
  { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_lgyy_stencil_1[lgyy_s1_y = cim_s0_y] : 0 <= cim_s0_y <= 59 }
  { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_lgxy_stencil_1[lgxy_s1_y = cim_s0_y] : 0 <= cim_s0_y <= 59 }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_grad_x_unclamp_stencil[grad_x_unclamp_s0_y = grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61 }
  { op_hcompute_lyy_stencil[lyy_s0_y] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y = lyy_s0_y] : 0 <= lyy_s0_y <= 61 }
  { op_hcompute_lxx_stencil[lxx_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y = lxx_s0_y] : 0 <= lxx_s0_y <= 61 }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_grad_y_unclamp_stencil[grad_y_unclamp_s0_y = grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61 }
  { op_hcompute_lxy_stencil[lxy_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y = lxy_s0_y] : 0 <= lxy_s0_y <= 61 }
  { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_lgxx_stencil_1[lgxx_s1_y = cim_s0_y] : 0 <= cim_s0_y <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = 2 + grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61; op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61 }
  { op_hcompute_cim_output_stencil[cim_output_s0_y] -> op_hcompute_cim_stencil[cim_s0_y = 2 + cim_output_s0_y] : 0 <= cim_output_s0_y <= 57; op_hcompute_cim_output_stencil[cim_output_s0_y] -> op_hcompute_cim_stencil[cim_s0_y = 1 + cim_output_s0_y] : 0 <= cim_output_s0_y <= 57; op_hcompute_cim_output_stencil[cim_output_s0_y] -> op_hcompute_cim_stencil[cim_s0_y = cim_output_s0_y] : 0 <= cim_output_s0_y <= 57 }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lxy_stencil[lxy_s0_y = 2 + lgxy_s1_y] : 0 <= lgxy_s1_y <= 59; op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lxy_stencil[lxy_s0_y = 1 + lgxy_s1_y] : 0 <= lgxy_s1_y <= 59; op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lxy_stencil[lxy_s0_y = lgxy_s1_y] : 0 <= lgxy_s1_y <= 59 }
  { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lyy_stencil[lyy_s0_y = 2 + lgyy_s1_y] : 0 <= lgyy_s1_y <= 59; op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lyy_stencil[lyy_s0_y = 1 + lgyy_s1_y] : 0 <= lgyy_s1_y <= 59; op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lyy_stencil[lyy_s0_y = lgyy_s1_y] : 0 <= lgyy_s1_y <= 59 }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = 2 + grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61; op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61; op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = 1 + grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61 }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lxx_stencil[lxx_s0_y = 2 + lgxx_s1_y] : 0 <= lgxx_s1_y <= 59; op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lxx_stencil[lxx_s0_y = 1 + lgxx_s1_y] : 0 <= lgxx_s1_y <= 59; op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lxx_stencil[lxx_s0_y = lgxx_s1_y] : 0 <= lgxx_s1_y <= 59 }
Done with schedule
Clockwork schedules...
  op_hcompute_cim_output_stencil: { [i] -> [(6 + i)] }
  op_hcompute_cim_stencil: { [i] -> [(4 + i)] }
  op_hcompute_grad_x_unclamp_stencil: { [i] -> [(2 + i)] }
  op_hcompute_grad_x_unclamp_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_grad_y_unclamp_stencil: { [i] -> [(2 + i)] }
  op_hcompute_grad_y_unclamp_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(6 + i)] }
  op_hcompute_lgxx_stencil: { [i] -> [(4 + i)] }
  op_hcompute_lgxx_stencil_1: { [i] -> [(4 + i)] }
  op_hcompute_lgxy_stencil: { [i] -> [(4 + i)] }
  op_hcompute_lgxy_stencil_1: { [i] -> [(4 + i)] }
  op_hcompute_lgyy_stencil: { [i] -> [(4 + i)] }
  op_hcompute_lgyy_stencil_1: { [i] -> [(4 + i)] }
  op_hcompute_lxx_stencil: { [i] -> [(2 + i)] }
  op_hcompute_lxy_stencil: { [i] -> [(2 + i)] }
  op_hcompute_lyy_stencil: { [i] -> [(2 + i)] }
  op_hcompute_padded16_global_wrapper_stencil: { [i] -> [(i)] }
  scheduling dimension 2
  { op_hcompute_lgyy_stencil[lgyy_s0_x] -> op_hcompute_lgyy_stencil_1[lgyy_s1_x = lgyy_s0_x] : 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgxx_stencil[lgxx_s0_x] -> op_hcompute_lgxx_stencil_1[lgxx_s1_x = lgxx_s0_x] : 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lgxy_stencil[lgxy_s0_x] -> op_hcompute_lgxy_stencil_1[lgxy_s1_x = lgxy_s0_x] : 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_lxy_stencil[lxy_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_cim_stencil[cim_s0_x = lgyy_s1_x] : 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_cim_stencil[cim_s0_x = lgxy_s1_x] : 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_grad_x_unclamp_stencil[grad_x_unclamp_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x = grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_lyy_stencil[lyy_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x = -1 + padded16_global_wrapper_s0_x] : 0 < padded16_global_wrapper_s0_x <= 62 }
  { op_hcompute_cim_output_stencil[cim_output_s0_x] -> op_hcompute_hw_output_stencil[hw_output_s0_x_xi = cim_output_s0_x] : 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_cim_output_stencil[cim_output_s0_x = cim_s0_x] : 0 <= cim_s0_x <= 57; op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_cim_output_stencil[cim_output_s0_x = -1 + cim_s0_x] : 0 < cim_s0_x <= 58; op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_cim_output_stencil[cim_output_s0_x = -2 + cim_s0_x] : 2 <= cim_s0_x <= 59 }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_lxy_stencil[lxy_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_lxx_stencil[lxx_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[grad_y_unclamp_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x = grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_cim_stencil[cim_s0_x = lgxx_s1_x] : 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lxy_stencil[lxy_s0_x] -> op_hcompute_lgxy_stencil_1[lgxy_s1_x = lxy_s0_x] : 0 <= lxy_s0_x <= 59; op_hcompute_lxy_stencil[lxy_s0_x] -> op_hcompute_lgxy_stencil_1[lgxy_s1_x = -1 + lxy_s0_x] : 0 < lxy_s0_x <= 60; op_hcompute_lxy_stencil[lxy_s0_x] -> op_hcompute_lgxy_stencil_1[lgxy_s1_x = -2 + lxy_s0_x] : 2 <= lxy_s0_x <= 61 }
  { op_hcompute_lyy_stencil[lyy_s0_x] -> op_hcompute_lgyy_stencil_1[lgyy_s1_x = lyy_s0_x] : 0 <= lyy_s0_x <= 59; op_hcompute_lyy_stencil[lyy_s0_x] -> op_hcompute_lgyy_stencil_1[lgyy_s1_x = -1 + lyy_s0_x] : 0 < lyy_s0_x <= 60; op_hcompute_lyy_stencil[lyy_s0_x] -> op_hcompute_lgyy_stencil_1[lgyy_s1_x = -2 + lyy_s0_x] : 2 <= lyy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lxx_stencil[lxx_s0_x] -> op_hcompute_lgxx_stencil_1[lgxx_s1_x = lxx_s0_x] : 0 <= lxx_s0_x <= 59; op_hcompute_lxx_stencil[lxx_s0_x] -> op_hcompute_lgxx_stencil_1[lgxx_s1_x = -1 + lxx_s0_x] : 0 < lxx_s0_x <= 60; op_hcompute_lxx_stencil[lxx_s0_x] -> op_hcompute_lgxx_stencil_1[lgxx_s1_x = -2 + lxx_s0_x] : 2 <= lxx_s0_x <= 61 }
Consumed data...
  { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lgyy_stencil[lgyy_s0_x = lgyy_s1_x] : 0 <= lgyy_s1_x <= 59 }
bound: { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lgyy_stencil[(lgyy_s1_x)] }
    affine upper bound on data needed: { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> [(lgyy_s1_x)] }
      domain of bound: { op_hcompute_lgyy_stencil_1[lgyy_s1_x] : 0 <= lgyy_s1_x <= 59 }
Extracting linear rational approximation: { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> [(lgyy_s1_x)] }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lgxx_stencil[lgxx_s0_x = lgxx_s1_x] : 0 <= lgxx_s1_x <= 59 }
bound: { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lgxx_stencil[(lgxx_s1_x)] }
    affine upper bound on data needed: { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> [(lgxx_s1_x)] }
      domain of bound: { op_hcompute_lgxx_stencil_1[lgxx_s1_x] : 0 <= lgxx_s1_x <= 59 }
Extracting linear rational approximation: { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> [(lgxx_s1_x)] }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lgxy_stencil[lgxy_s0_x = lgxy_s1_x] : 0 <= lgxy_s1_x <= 59 }
bound: { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lgxy_stencil[(lgxy_s1_x)] }
    affine upper bound on data needed: { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> [(lgxy_s1_x)] }
      domain of bound: { op_hcompute_lgxy_stencil_1[lgxy_s1_x] : 0 <= lgxy_s1_x <= 59 }
Extracting linear rational approximation: { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> [(lgxy_s1_x)] }
  { op_hcompute_lxy_stencil[lxy_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x = lxy_s0_x] : 0 <= lxy_s0_x <= 61 }
bound: { op_hcompute_lxy_stencil[lxy_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[(lxy_s0_x)] }
    affine upper bound on data needed: { op_hcompute_lxy_stencil[lxy_s0_x] -> [(lxy_s0_x)] }
      domain of bound: { op_hcompute_lxy_stencil[lxy_s0_x] : 0 <= lxy_s0_x <= 61 }
Extracting linear rational approximation: { op_hcompute_lxy_stencil[lxy_s0_x] -> [(lxy_s0_x)] }
  { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_lgyy_stencil_1[lgyy_s1_x = cim_s0_x] : 0 <= cim_s0_x <= 59 }
bound: { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_lgyy_stencil_1[(cim_s0_x)] }
    affine upper bound on data needed: { op_hcompute_cim_stencil[cim_s0_x] -> [(cim_s0_x)] }
      domain of bound: { op_hcompute_cim_stencil[cim_s0_x] : 0 <= cim_s0_x <= 59 }
Extracting linear rational approximation: { op_hcompute_cim_stencil[cim_s0_x] -> [(cim_s0_x)] }
  { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_lgxy_stencil_1[lgxy_s1_x = cim_s0_x] : 0 <= cim_s0_x <= 59 }
bound: { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_lgxy_stencil_1[(cim_s0_x)] }
    affine upper bound on data needed: { op_hcompute_cim_stencil[cim_s0_x] -> [(cim_s0_x)] }
      domain of bound: { op_hcompute_cim_stencil[cim_s0_x] : 0 <= cim_s0_x <= 59 }
Extracting linear rational approximation: { op_hcompute_cim_stencil[cim_s0_x] -> [(cim_s0_x)] }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_grad_x_unclamp_stencil[grad_x_unclamp_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61 }
bound: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_grad_x_unclamp_stencil[(grad_x_unclamp_s1_x)] }
    affine upper bound on data needed: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> [(grad_x_unclamp_s1_x)] }
      domain of bound: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> [(grad_x_unclamp_s1_x)] }
  { op_hcompute_lyy_stencil[lyy_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x = lyy_s0_x] : 0 <= lyy_s0_x <= 61 }
bound: { op_hcompute_lyy_stencil[lyy_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[(lyy_s0_x)] }
    affine upper bound on data needed: { op_hcompute_lyy_stencil[lyy_s0_x] -> [(lyy_s0_x)] }
      domain of bound: { op_hcompute_lyy_stencil[lyy_s0_x] : 0 <= lyy_s0_x <= 61 }
Extracting linear rational approximation: { op_hcompute_lyy_stencil[lyy_s0_x] -> [(lyy_s0_x)] }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = 2 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = 1 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61 }
bound: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[(2 + grad_y_unclamp_s1_x)] }
    affine upper bound on data needed: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_x)] }
      domain of bound: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_x)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_cim_output_stencil[cim_output_s0_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 57 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_cim_output_stencil[(hw_output_s0_x_xi)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 57 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
  { op_hcompute_cim_output_stencil[cim_output_s0_x] -> op_hcompute_cim_stencil[cim_s0_x = 2 + cim_output_s0_x] : 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[cim_output_s0_x] -> op_hcompute_cim_stencil[cim_s0_x = 1 + cim_output_s0_x] : 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[cim_output_s0_x] -> op_hcompute_cim_stencil[cim_s0_x = cim_output_s0_x] : 0 <= cim_output_s0_x <= 57 }
bound: { op_hcompute_cim_output_stencil[cim_output_s0_x] -> op_hcompute_cim_stencil[(2 + cim_output_s0_x)] }
    affine upper bound on data needed: { op_hcompute_cim_output_stencil[cim_output_s0_x] -> [(2 + cim_output_s0_x)] }
      domain of bound: { op_hcompute_cim_output_stencil[cim_output_s0_x] : 0 <= cim_output_s0_x <= 57 }
Extracting linear rational approximation: { op_hcompute_cim_output_stencil[cim_output_s0_x] -> [(2 + cim_output_s0_x)] }
  { op_hcompute_lxy_stencil[lxy_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x = lxy_s0_x] : 0 <= lxy_s0_x <= 61 }
bound: { op_hcompute_lxy_stencil[lxy_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[(lxy_s0_x)] }
    affine upper bound on data needed: { op_hcompute_lxy_stencil[lxy_s0_x] -> [(lxy_s0_x)] }
      domain of bound: { op_hcompute_lxy_stencil[lxy_s0_x] : 0 <= lxy_s0_x <= 61 }
Extracting linear rational approximation: { op_hcompute_lxy_stencil[lxy_s0_x] -> [(lxy_s0_x)] }
  { op_hcompute_lxx_stencil[lxx_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x = lxx_s0_x] : 0 <= lxx_s0_x <= 61 }
bound: { op_hcompute_lxx_stencil[lxx_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[(lxx_s0_x)] }
    affine upper bound on data needed: { op_hcompute_lxx_stencil[lxx_s0_x] -> [(lxx_s0_x)] }
      domain of bound: { op_hcompute_lxx_stencil[lxx_s0_x] : 0 <= lxx_s0_x <= 61 }
Extracting linear rational approximation: { op_hcompute_lxx_stencil[lxx_s0_x] -> [(lxx_s0_x)] }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_grad_y_unclamp_stencil[grad_y_unclamp_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61 }
bound: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_grad_y_unclamp_stencil[(grad_y_unclamp_s1_x)] }
    affine upper bound on data needed: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> [(grad_y_unclamp_s1_x)] }
      domain of bound: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> [(grad_y_unclamp_s1_x)] }
  { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_lgxx_stencil_1[lgxx_s1_x = cim_s0_x] : 0 <= cim_s0_x <= 59 }
bound: { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_lgxx_stencil_1[(cim_s0_x)] }
    affine upper bound on data needed: { op_hcompute_cim_stencil[cim_s0_x] -> [(cim_s0_x)] }
      domain of bound: { op_hcompute_cim_stencil[cim_s0_x] : 0 <= cim_s0_x <= 59 }
Extracting linear rational approximation: { op_hcompute_cim_stencil[cim_s0_x] -> [(cim_s0_x)] }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lxy_stencil[lxy_s0_x = 2 + lgxy_s1_x] : 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lxy_stencil[lxy_s0_x = 1 + lgxy_s1_x] : 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lxy_stencil[lxy_s0_x = lgxy_s1_x] : 0 <= lgxy_s1_x <= 59 }
bound: { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lxy_stencil[(2 + lgxy_s1_x)] }
    affine upper bound on data needed: { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> [(2 + lgxy_s1_x)] }
      domain of bound: { op_hcompute_lgxy_stencil_1[lgxy_s1_x] : 0 <= lgxy_s1_x <= 59 }
Extracting linear rational approximation: { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> [(2 + lgxy_s1_x)] }
  { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lyy_stencil[lyy_s0_x = 2 + lgyy_s1_x] : 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lyy_stencil[lyy_s0_x = 1 + lgyy_s1_x] : 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lyy_stencil[lyy_s0_x = lgyy_s1_x] : 0 <= lgyy_s1_x <= 59 }
bound: { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lyy_stencil[(2 + lgyy_s1_x)] }
    affine upper bound on data needed: { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> [(2 + lgyy_s1_x)] }
      domain of bound: { op_hcompute_lgyy_stencil_1[lgyy_s1_x] : 0 <= lgyy_s1_x <= 59 }
Extracting linear rational approximation: { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> [(2 + lgyy_s1_x)] }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61 }
bound: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[(2 + grad_x_unclamp_s1_x)] }
    affine upper bound on data needed: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_x)] }
      domain of bound: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_x)] }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lxx_stencil[lxx_s0_x = 2 + lgxx_s1_x] : 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lxx_stencil[lxx_s0_x = 1 + lgxx_s1_x] : 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lxx_stencil[lxx_s0_x = lgxx_s1_x] : 0 <= lgxx_s1_x <= 59 }
bound: { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lxx_stencil[(2 + lgxx_s1_x)] }
    affine upper bound on data needed: { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> [(2 + lgxx_s1_x)] }
      domain of bound: { op_hcompute_lgxx_stencil_1[lgxx_s1_x] : 0 <= lgxx_s1_x <= 59 }
Extracting linear rational approximation: { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> [(2 + lgxx_s1_x)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_lgyy_stencil_1, s_op_hcompute_lgyy_stencil, s_op_hcompute_lgxx_stencil_1, s_op_hcompute_lgxx_stencil, s_op_hcompute_lgxy_stencil_1, s_op_hcompute_lgxy_stencil, s_op_hcompute_lxy_stencil, s_op_hcompute_grad_y_unclamp_stencil_1, s_op_hcompute_hw_output_stencil, s_op_hcompute_cim_output_stencil, s_op_hcompute_cim_stencil, s_op_hcompute_grad_x_unclamp_stencil_1, s_op_hcompute_grad_x_unclamp_stencil, s_op_hcompute_lyy_stencil, s_op_hcompute_lxx_stencil, s_op_hcompute_grad_y_unclamp_stencil, s_op_hcompute_padded16_global_wrapper_stencil] : s_op_hcompute_lgyy_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgxx_stencil_1 = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgxx_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgxy_stencil_1 = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgxy_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lxy_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_grad_y_unclamp_stencil_1 = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_cim_output_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_cim_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_grad_x_unclamp_stencil_1 = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_grad_x_unclamp_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lyy_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lxx_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_grad_y_unclamp_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_padded16_global_wrapper_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgyy_stencil_1 > 0 }
Writing problem to mod file...
  # of constraints: 33
  legal point  : { [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }
  minimal point: -17
Schedule params...
  { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lgyy_stencil[lgyy_s0_x = lgyy_s1_x] : 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lgxx_stencil[lgxx_s0_x = lgxx_s1_x] : 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lgxy_stencil[lgxy_s0_x = lgxy_s1_x] : 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_lxy_stencil[lxy_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x = lxy_s0_x] : 0 <= lxy_s0_x <= 61 }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_cim_output_stencil[cim_output_s0_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_lgyy_stencil_1[lgyy_s1_x = cim_s0_x] : 0 <= cim_s0_x <= 59 }
  { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_lgxy_stencil_1[lgxy_s1_x = cim_s0_x] : 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_grad_x_unclamp_stencil[grad_x_unclamp_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[lyy_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x = lyy_s0_x] : 0 <= lyy_s0_x <= 61 }
  { op_hcompute_lxx_stencil[lxx_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x = lxx_s0_x] : 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_grad_y_unclamp_stencil[grad_y_unclamp_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_lgxx_stencil_1[lgxx_s1_x = cim_s0_x] : 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = 2 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = 1 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_lxy_stencil[lxy_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x = lxy_s0_x] : 0 <= lxy_s0_x <= 61 }
  { op_hcompute_cim_output_stencil[cim_output_s0_x] -> op_hcompute_cim_stencil[cim_s0_x = 2 + cim_output_s0_x] : 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[cim_output_s0_x] -> op_hcompute_cim_stencil[cim_s0_x = 1 + cim_output_s0_x] : 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[cim_output_s0_x] -> op_hcompute_cim_stencil[cim_s0_x = cim_output_s0_x] : 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lxy_stencil[lxy_s0_x = 2 + lgxy_s1_x] : 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lxy_stencil[lxy_s0_x = 1 + lgxy_s1_x] : 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lxy_stencil[lxy_s0_x = lgxy_s1_x] : 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lyy_stencil[lyy_s0_x = 2 + lgyy_s1_x] : 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lyy_stencil[lyy_s0_x = 1 + lgyy_s1_x] : 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lyy_stencil[lyy_s0_x = lgyy_s1_x] : 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lxx_stencil[lxx_s0_x = 2 + lgxx_s1_x] : 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lxx_stencil[lxx_s0_x = 1 + lgxx_s1_x] : 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lxx_stencil[lxx_s0_x = lgxx_s1_x] : 0 <= lgxx_s1_x <= 59 }
Done with schedule
Clockwork schedules...
  op_hcompute_cim_output_stencil: { [i] -> [(6 + i)] }
  op_hcompute_cim_stencil: { [i] -> [(4 + i)] }
  op_hcompute_grad_x_unclamp_stencil: { [i] -> [(2 + i)] }
  op_hcompute_grad_x_unclamp_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_grad_y_unclamp_stencil: { [i] -> [(2 + i)] }
  op_hcompute_grad_y_unclamp_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(6 + i)] }
  op_hcompute_lgxx_stencil: { [i] -> [(4 + i)] }
  op_hcompute_lgxx_stencil_1: { [i] -> [(4 + i)] }
  op_hcompute_lgxy_stencil: { [i] -> [(4 + i)] }
  op_hcompute_lgxy_stencil_1: { [i] -> [(4 + i)] }
  op_hcompute_lgyy_stencil: { [i] -> [(4 + i)] }
  op_hcompute_lgyy_stencil_1: { [i] -> [(4 + i)] }
  op_hcompute_lxx_stencil: { [i] -> [(2 + i)] }
  op_hcompute_lxy_stencil: { [i] -> [(2 + i)] }
  op_hcompute_lyy_stencil: { [i] -> [(2 + i)] }
  op_hcompute_padded16_global_wrapper_stencil: { [i] -> [(i)] }
Final schedule...
  op_hcompute_cim_output_stencil
    1*d2*1*1 + 1*6
    1*d1*1*1 + 1*6
    1*d0*1*1 + 1*0

  op_hcompute_cim_stencil
    1*d2*1*1 + 1*4
    1*d1*1*1 + 1*4
    1*d0*1*1 + 1*0

  op_hcompute_grad_x_unclamp_stencil
    1*d2*1*1 + 1*2
    1*d1*1*1 + 1*2
    1*d0*1*1 + 1*0

  op_hcompute_grad_x_unclamp_stencil_1
    1*d2*1*1 + 1*2
    1*d1*1*1 + 1*2
    1*d0*1*1 + 1*0

  op_hcompute_grad_y_unclamp_stencil
    1*d2*1*1 + 1*2
    1*d1*1*1 + 1*2
    1*d0*1*1 + 1*0

  op_hcompute_grad_y_unclamp_stencil_1
    1*d2*1*1 + 1*2
    1*d1*1*1 + 1*2
    1*d0*1*1 + 1*0

  op_hcompute_hw_output_stencil
    1*d2*1*1 + 1*6
    1*d1*1*1 + 1*6
    1*d0*1*1 + 1*0

  op_hcompute_lgxx_stencil
    1*d2*1*1 + 1*4
    1*d1*1*1 + 1*4
    1*d0*1*1 + 1*0

  op_hcompute_lgxx_stencil_1
    1*d2*1*1 + 1*4
    1*d1*1*1 + 1*4
    1*d0*1*1 + 1*0

  op_hcompute_lgxy_stencil
    1*d2*1*1 + 1*4
    1*d1*1*1 + 1*4
    1*d0*1*1 + 1*0

  op_hcompute_lgxy_stencil_1
    1*d2*1*1 + 1*4
    1*d1*1*1 + 1*4
    1*d0*1*1 + 1*0

  op_hcompute_lgyy_stencil
    1*d2*1*1 + 1*4
    1*d1*1*1 + 1*4
    1*d0*1*1 + 1*0

  op_hcompute_lgyy_stencil_1
    1*d2*1*1 + 1*4
    1*d1*1*1 + 1*4
    1*d0*1*1 + 1*0

  op_hcompute_lxx_stencil
    1*d2*1*1 + 1*2
    1*d1*1*1 + 1*2
    1*d0*1*1 + 1*0

  op_hcompute_lxy_stencil
    1*d2*1*1 + 1*2
    1*d1*1*1 + 1*2
    1*d0*1*1 + 1*0

  op_hcompute_lyy_stencil
    1*d2*1*1 + 1*2
    1*d1*1*1 + 1*2
    1*d0*1*1 + 1*0

  op_hcompute_padded16_global_wrapper_stencil
    1*d2*1*1 + 1*0
    1*d1*1*1 + 1*0
    1*d0*1*1 + 1*0

Sched expr: 1*d2 + 6
Sched expr: 1*d1 + 6
Sched expr: 1*d0 + 0
Map str: { op_hcompute_cim_output_stencil[d0, d1, d2] -> [1*d2 + 6, 1*d1 + 6, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 4
Sched expr: 1*d1 + 4
Sched expr: 1*d0 + 0
Map str: { op_hcompute_cim_stencil[d0, d1, d2] -> [1*d2 + 4, 1*d1 + 4, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 2
Sched expr: 1*d1 + 2
Sched expr: 1*d0 + 0
Map str: { op_hcompute_grad_x_unclamp_stencil[d0, d1, d2] -> [1*d2 + 2, 1*d1 + 2, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 2
Sched expr: 1*d1 + 2
Sched expr: 1*d0 + 0
Map str: { op_hcompute_grad_x_unclamp_stencil_1[d0, d1, d2] -> [1*d2 + 2, 1*d1 + 2, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 2
Sched expr: 1*d1 + 2
Sched expr: 1*d0 + 0
Map str: { op_hcompute_grad_y_unclamp_stencil[d0, d1, d2] -> [1*d2 + 2, 1*d1 + 2, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 2
Sched expr: 1*d1 + 2
Sched expr: 1*d0 + 0
Map str: { op_hcompute_grad_y_unclamp_stencil_1[d0, d1, d2] -> [1*d2 + 2, 1*d1 + 2, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 6
Sched expr: 1*d1 + 6
Sched expr: 1*d0 + 0
Map str: { op_hcompute_hw_output_stencil[d0, d1, d2] -> [1*d2 + 6, 1*d1 + 6, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 4
Sched expr: 1*d1 + 4
Sched expr: 1*d0 + 0
Map str: { op_hcompute_lgxx_stencil[d0, d1, d2] -> [1*d2 + 4, 1*d1 + 4, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 4
Sched expr: 1*d1 + 4
Sched expr: 1*d0 + 0
Map str: { op_hcompute_lgxx_stencil_1[d0, d1, d2] -> [1*d2 + 4, 1*d1 + 4, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 4
Sched expr: 1*d1 + 4
Sched expr: 1*d0 + 0
Map str: { op_hcompute_lgxy_stencil[d0, d1, d2] -> [1*d2 + 4, 1*d1 + 4, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 4
Sched expr: 1*d1 + 4
Sched expr: 1*d0 + 0
Map str: { op_hcompute_lgxy_stencil_1[d0, d1, d2] -> [1*d2 + 4, 1*d1 + 4, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 4
Sched expr: 1*d1 + 4
Sched expr: 1*d0 + 0
Map str: { op_hcompute_lgyy_stencil[d0, d1, d2] -> [1*d2 + 4, 1*d1 + 4, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 4
Sched expr: 1*d1 + 4
Sched expr: 1*d0 + 0
Map str: { op_hcompute_lgyy_stencil_1[d0, d1, d2] -> [1*d2 + 4, 1*d1 + 4, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 2
Sched expr: 1*d1 + 2
Sched expr: 1*d0 + 0
Map str: { op_hcompute_lxx_stencil[d0, d1, d2] -> [1*d2 + 2, 1*d1 + 2, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 2
Sched expr: 1*d1 + 2
Sched expr: 1*d0 + 0
Map str: { op_hcompute_lxy_stencil[d0, d1, d2] -> [1*d2 + 2, 1*d1 + 2, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 2
Sched expr: 1*d1 + 2
Sched expr: 1*d0 + 0
Map str: { op_hcompute_lyy_stencil[d0, d1, d2] -> [1*d2 + 2, 1*d1 + 2, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 0
Sched expr: 1*d1 + 0
Sched expr: 1*d0 + 0
Map str: { op_hcompute_padded16_global_wrapper_stencil[d0, d1, d2] -> [1*d2 + 0, 1*d1 + 0, 1*d0 + 0] }
map got str
Clockwork schedule...
  { op_hcompute_cim_stencil[d0, d1, d2] -> [4 + d2, 4 + d1, d0] }
  { op_hcompute_lgxx_stencil_1[d0, d1, d2] -> [4 + d2, 4 + d1, d0] }
  { op_hcompute_grad_x_unclamp_stencil[d0, d1, d2] -> [2 + d2, 2 + d1, d0] }
  { op_hcompute_cim_output_stencil[d0, d1, d2] -> [6 + d2, 6 + d1, d0] }
  { op_hcompute_lgxy_stencil_1[d0, d1, d2] -> [4 + d2, 4 + d1, d0] }
  { op_hcompute_grad_y_unclamp_stencil_1[d0, d1, d2] -> [2 + d2, 2 + d1, d0] }
  { op_hcompute_lgyy_stencil[d0, d1, d2] -> [4 + d2, 4 + d1, d0] }
  { op_hcompute_lyy_stencil[d0, d1, d2] -> [2 + d2, 2 + d1, d0] }
  { op_hcompute_hw_output_stencil[d0, d1, d2] -> [6 + d2, 6 + d1, d0] }
  { op_hcompute_lgyy_stencil_1[d0, d1, d2] -> [4 + d2, 4 + d1, d0] }
  { op_hcompute_grad_y_unclamp_stencil[d0, d1, d2] -> [2 + d2, 2 + d1, d0] }
  { op_hcompute_lgxx_stencil[d0, d1, d2] -> [4 + d2, 4 + d1, d0] }
  { op_hcompute_lxx_stencil[d0, d1, d2] -> [2 + d2, 2 + d1, d0] }
  { op_hcompute_lgxy_stencil[d0, d1, d2] -> [4 + d2, 4 + d1, d0] }
  { op_hcompute_padded16_global_wrapper_stencil[d0, d1, d2] -> [d2, d1, d0] }
  { op_hcompute_grad_x_unclamp_stencil_1[d0, d1, d2] -> [2 + d2, 2 + d1, d0] }
  { op_hcompute_lxy_stencil[d0, d1, d2] -> [2 + d2, 2 + d1, d0] }
Domain...
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
bounds...{ [i0, i1, 0] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
lengths
1
64
64
1
Fused iis
  4096
  64
  1
Finite validity: { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lgyy_s0_y, lgyy_s1_x = lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lgxx_s0_y, lgxx_s1_x = lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lgxy_s0_y, lgxy_s1_x = lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> op_hcompute_lxy_stencil[root' = 0, lxy_s0_y = grad_y_unclamp_s1_y, lxy_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> op_hcompute_cim_stencil[root' = 0, cim_s0_y = lgyy_s1_y, cim_s0_x = lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> op_hcompute_cim_stencil[root' = 0, cim_s0_y = lgxy_s1_y, cim_s0_x = lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = grad_x_unclamp_s0_y, grad_x_unclamp_s1_x = grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> op_hcompute_lyy_stencil[root' = 0, lyy_s0_y = grad_y_unclamp_s1_y, lyy_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -1 + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 0 < padded16_global_wrapper_s0_x <= 62; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -1 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 0 < padded16_global_wrapper_s0_x <= 62; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 2 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 2 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_yi = cim_output_s0_y, hw_output_s0_x_xi = cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = cim_s0_y, cim_output_s0_x = cim_s0_x] : 0 <= cim_s0_y <= 57 and 0 <= cim_s0_x <= 57; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -1 + cim_s0_y, cim_output_s0_x = cim_s0_x] : 0 < cim_s0_y <= 58 and 0 <= cim_s0_x <= 57; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -2 + cim_s0_y, cim_output_s0_x = cim_s0_x] : 2 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 57; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = cim_s0_y, cim_output_s0_x = -1 + cim_s0_x] : 0 <= cim_s0_y <= 57 and 0 < cim_s0_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -1 + cim_s0_y, cim_output_s0_x = -1 + cim_s0_x] : 0 < cim_s0_y <= 58 and 0 < cim_s0_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -2 + cim_s0_y, cim_output_s0_x = -1 + cim_s0_x] : 2 <= cim_s0_y <= 59 and 0 < cim_s0_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = cim_s0_y, cim_output_s0_x = -2 + cim_s0_x] : 0 <= cim_s0_y <= 57 and 2 <= cim_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -1 + cim_s0_y, cim_output_s0_x = -2 + cim_s0_x] : 0 < cim_s0_y <= 58 and 2 <= cim_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -2 + cim_s0_y, cim_output_s0_x = -2 + cim_s0_x] : 2 <= cim_s0_y <= 59 and 2 <= cim_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> op_hcompute_lxy_stencil[root' = 0, lxy_s0_y = grad_x_unclamp_s1_y, lxy_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> op_hcompute_lxx_stencil[root' = 0, lxx_s0_y = grad_x_unclamp_s1_y, lxx_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = grad_y_unclamp_s0_y, grad_y_unclamp_s1_x = grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> op_hcompute_cim_stencil[root' = 0, cim_s0_y = lgxx_s1_y, cim_s0_x = lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lxy_s0_y, lgxy_s1_x = lxy_s0_x] : 0 <= lxy_s0_y <= 59 and 0 <= lxy_s0_x <= 59; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -1 + lxy_s0_y, lgxy_s1_x = lxy_s0_x] : 0 < lxy_s0_y <= 60 and 0 <= lxy_s0_x <= 59; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -2 + lxy_s0_y, lgxy_s1_x = lxy_s0_x] : 2 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 59; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lxy_s0_y, lgxy_s1_x = -1 + lxy_s0_x] : 0 <= lxy_s0_y <= 59 and 0 < lxy_s0_x <= 60; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -1 + lxy_s0_y, lgxy_s1_x = -1 + lxy_s0_x] : 0 < lxy_s0_y <= 60 and 0 < lxy_s0_x <= 60; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -2 + lxy_s0_y, lgxy_s1_x = -1 + lxy_s0_x] : 2 <= lxy_s0_y <= 61 and 0 < lxy_s0_x <= 60; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lxy_s0_y, lgxy_s1_x = -2 + lxy_s0_x] : 0 <= lxy_s0_y <= 59 and 2 <= lxy_s0_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -1 + lxy_s0_y, lgxy_s1_x = -2 + lxy_s0_x] : 0 < lxy_s0_y <= 60 and 2 <= lxy_s0_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -2 + lxy_s0_y, lgxy_s1_x = -2 + lxy_s0_x] : 2 <= lxy_s0_y <= 61 and 2 <= lxy_s0_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lyy_s0_y, lgyy_s1_x = lyy_s0_x] : 0 <= lyy_s0_y <= 59 and 0 <= lyy_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -1 + lyy_s0_y, lgyy_s1_x = lyy_s0_x] : 0 < lyy_s0_y <= 60 and 0 <= lyy_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -2 + lyy_s0_y, lgyy_s1_x = lyy_s0_x] : 2 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lyy_s0_y, lgyy_s1_x = -1 + lyy_s0_x] : 0 <= lyy_s0_y <= 59 and 0 < lyy_s0_x <= 60; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -1 + lyy_s0_y, lgyy_s1_x = -1 + lyy_s0_x] : 0 < lyy_s0_y <= 60 and 0 < lyy_s0_x <= 60; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -2 + lyy_s0_y, lgyy_s1_x = -1 + lyy_s0_x] : 2 <= lyy_s0_y <= 61 and 0 < lyy_s0_x <= 60; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lyy_s0_y, lgyy_s1_x = -2 + lyy_s0_x] : 0 <= lyy_s0_y <= 59 and 2 <= lyy_s0_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -1 + lyy_s0_y, lgyy_s1_x = -2 + lyy_s0_x] : 0 < lyy_s0_y <= 60 and 2 <= lyy_s0_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -2 + lyy_s0_y, lgyy_s1_x = -2 + lyy_s0_x] : 2 <= lyy_s0_y <= 61 and 2 <= lyy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -1 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 < padded16_global_wrapper_s0_y <= 62 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 2 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -1 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 0 < padded16_global_wrapper_s0_y <= 62 and 2 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 2 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lxx_s0_y, lgxx_s1_x = lxx_s0_x] : 0 <= lxx_s0_y <= 59 and 0 <= lxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -1 + lxx_s0_y, lgxx_s1_x = lxx_s0_x] : 0 < lxx_s0_y <= 60 and 0 <= lxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -2 + lxx_s0_y, lgxx_s1_x = lxx_s0_x] : 2 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lxx_s0_y, lgxx_s1_x = -1 + lxx_s0_x] : 0 <= lxx_s0_y <= 59 and 0 < lxx_s0_x <= 60; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -1 + lxx_s0_y, lgxx_s1_x = -1 + lxx_s0_x] : 0 < lxx_s0_y <= 60 and 0 < lxx_s0_x <= 60; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -2 + lxx_s0_y, lgxx_s1_x = -1 + lxx_s0_x] : 2 <= lxx_s0_y <= 61 and 0 < lxx_s0_x <= 60; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lxx_s0_y, lgxx_s1_x = -2 + lxx_s0_x] : 0 <= lxx_s0_y <= 59 and 2 <= lxx_s0_x <= 61; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -1 + lxx_s0_y, lgxx_s1_x = -2 + lxx_s0_x] : 0 < lxx_s0_y <= 60 and 2 <= lxx_s0_x <= 61; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -2 + lxx_s0_y, lgxx_s1_x = -2 + lxx_s0_x] : 2 <= lxx_s0_y <= 61 and 2 <= lxx_s0_x <= 61 }
  Dep = { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lgyy_s0_y, lgyy_s1_x = lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  Dep = { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lgxx_s0_y, lgxx_s1_x = lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  Dep = { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lgxy_s0_y, lgxy_s1_x = lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  Dep = { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> op_hcompute_lxy_stencil[root' = 0, lxy_s0_y = grad_y_unclamp_s1_y, lxy_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  Dep = { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> op_hcompute_cim_stencil[root' = 0, cim_s0_y = lgyy_s1_y, cim_s0_x = lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  Dep = { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> op_hcompute_cim_stencil[root' = 0, cim_s0_y = lgxy_s1_y, cim_s0_x = lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  Dep = { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = grad_x_unclamp_s0_y, grad_x_unclamp_s1_x = grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  Dep = { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> op_hcompute_lyy_stencil[root' = 0, lyy_s0_y = grad_y_unclamp_s1_y, lyy_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  Dep = { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -1 + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 0 < padded16_global_wrapper_s0_x <= 62; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -1 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 0 < padded16_global_wrapper_s0_x <= 62; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 2 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 2 <= padded16_global_wrapper_s0_x <= 63 }
  Dep = { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_yi = cim_output_s0_y, hw_output_s0_x_xi = cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Dep = { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = cim_s0_y, cim_output_s0_x = cim_s0_x] : 0 <= cim_s0_y <= 57 and 0 <= cim_s0_x <= 57; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -1 + cim_s0_y, cim_output_s0_x = cim_s0_x] : 0 < cim_s0_y <= 58 and 0 <= cim_s0_x <= 57; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -2 + cim_s0_y, cim_output_s0_x = cim_s0_x] : 2 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 57; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = cim_s0_y, cim_output_s0_x = -1 + cim_s0_x] : 0 <= cim_s0_y <= 57 and 0 < cim_s0_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -1 + cim_s0_y, cim_output_s0_x = -1 + cim_s0_x] : 0 < cim_s0_y <= 58 and 0 < cim_s0_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -2 + cim_s0_y, cim_output_s0_x = -1 + cim_s0_x] : 2 <= cim_s0_y <= 59 and 0 < cim_s0_x <= 58; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = cim_s0_y, cim_output_s0_x = -2 + cim_s0_x] : 0 <= cim_s0_y <= 57 and 2 <= cim_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -1 + cim_s0_y, cim_output_s0_x = -2 + cim_s0_x] : 0 < cim_s0_y <= 58 and 2 <= cim_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -2 + cim_s0_y, cim_output_s0_x = -2 + cim_s0_x] : 2 <= cim_s0_y <= 59 and 2 <= cim_s0_x <= 59 }
  Dep = { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> op_hcompute_lxy_stencil[root' = 0, lxy_s0_y = grad_x_unclamp_s1_y, lxy_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  Dep = { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> op_hcompute_lxx_stencil[root' = 0, lxx_s0_y = grad_x_unclamp_s1_y, lxx_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  Dep = { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = grad_y_unclamp_s0_y, grad_y_unclamp_s1_x = grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  Dep = { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> op_hcompute_cim_stencil[root' = 0, cim_s0_y = lgxx_s1_y, cim_s0_x = lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  Dep = { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lxy_s0_y, lgxy_s1_x = lxy_s0_x] : 0 <= lxy_s0_y <= 59 and 0 <= lxy_s0_x <= 59; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -1 + lxy_s0_y, lgxy_s1_x = lxy_s0_x] : 0 < lxy_s0_y <= 60 and 0 <= lxy_s0_x <= 59; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -2 + lxy_s0_y, lgxy_s1_x = lxy_s0_x] : 2 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 59; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lxy_s0_y, lgxy_s1_x = -1 + lxy_s0_x] : 0 <= lxy_s0_y <= 59 and 0 < lxy_s0_x <= 60; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -1 + lxy_s0_y, lgxy_s1_x = -1 + lxy_s0_x] : 0 < lxy_s0_y <= 60 and 0 < lxy_s0_x <= 60; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -2 + lxy_s0_y, lgxy_s1_x = -1 + lxy_s0_x] : 2 <= lxy_s0_y <= 61 and 0 < lxy_s0_x <= 60; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lxy_s0_y, lgxy_s1_x = -2 + lxy_s0_x] : 0 <= lxy_s0_y <= 59 and 2 <= lxy_s0_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -1 + lxy_s0_y, lgxy_s1_x = -2 + lxy_s0_x] : 0 < lxy_s0_y <= 60 and 2 <= lxy_s0_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -2 + lxy_s0_y, lgxy_s1_x = -2 + lxy_s0_x] : 2 <= lxy_s0_y <= 61 and 2 <= lxy_s0_x <= 61 }
  Dep = { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lyy_s0_y, lgyy_s1_x = lyy_s0_x] : 0 <= lyy_s0_y <= 59 and 0 <= lyy_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -1 + lyy_s0_y, lgyy_s1_x = lyy_s0_x] : 0 < lyy_s0_y <= 60 and 0 <= lyy_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -2 + lyy_s0_y, lgyy_s1_x = lyy_s0_x] : 2 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lyy_s0_y, lgyy_s1_x = -1 + lyy_s0_x] : 0 <= lyy_s0_y <= 59 and 0 < lyy_s0_x <= 60; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -1 + lyy_s0_y, lgyy_s1_x = -1 + lyy_s0_x] : 0 < lyy_s0_y <= 60 and 0 < lyy_s0_x <= 60; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -2 + lyy_s0_y, lgyy_s1_x = -1 + lyy_s0_x] : 2 <= lyy_s0_y <= 61 and 0 < lyy_s0_x <= 60; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lyy_s0_y, lgyy_s1_x = -2 + lyy_s0_x] : 0 <= lyy_s0_y <= 59 and 2 <= lyy_s0_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -1 + lyy_s0_y, lgyy_s1_x = -2 + lyy_s0_x] : 0 < lyy_s0_y <= 60 and 2 <= lyy_s0_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -2 + lyy_s0_y, lgyy_s1_x = -2 + lyy_s0_x] : 2 <= lyy_s0_y <= 61 and 2 <= lyy_s0_x <= 61 }
  Dep = { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -1 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 < padded16_global_wrapper_s0_y <= 62 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 2 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -1 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 0 < padded16_global_wrapper_s0_y <= 62 and 2 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 2 <= padded16_global_wrapper_s0_x <= 63 }
  Dep = { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lxx_s0_y, lgxx_s1_x = lxx_s0_x] : 0 <= lxx_s0_y <= 59 and 0 <= lxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -1 + lxx_s0_y, lgxx_s1_x = lxx_s0_x] : 0 < lxx_s0_y <= 60 and 0 <= lxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -2 + lxx_s0_y, lgxx_s1_x = lxx_s0_x] : 2 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lxx_s0_y, lgxx_s1_x = -1 + lxx_s0_x] : 0 <= lxx_s0_y <= 59 and 0 < lxx_s0_x <= 60; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -1 + lxx_s0_y, lgxx_s1_x = -1 + lxx_s0_x] : 0 < lxx_s0_y <= 60 and 0 < lxx_s0_x <= 60; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -2 + lxx_s0_y, lgxx_s1_x = -1 + lxx_s0_x] : 2 <= lxx_s0_y <= 61 and 0 < lxx_s0_x <= 60; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lxx_s0_y, lgxx_s1_x = -2 + lxx_s0_x] : 0 <= lxx_s0_y <= 59 and 2 <= lxx_s0_x <= 61; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -1 + lxx_s0_y, lgxx_s1_x = -2 + lxx_s0_x] : 0 < lxx_s0_y <= 60 and 2 <= lxx_s0_x <= 61; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -2 + lxx_s0_y, lgxx_s1_x = -2 + lxx_s0_x] : 2 <= lxx_s0_y <= 61 and 2 <= lxx_s0_x <= 61 }
Got deps
Schedule dim = 3
  scheduling dimension 0
  { op_hcompute_lgyy_stencil[root = 0] -> op_hcompute_lgyy_stencil_1[root' = 0] }
  { op_hcompute_lgxx_stencil[root = 0] -> op_hcompute_lgxx_stencil_1[root' = 0] }
  { op_hcompute_lgxy_stencil[root = 0] -> op_hcompute_lgxy_stencil_1[root' = 0] }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0] -> op_hcompute_lxy_stencil[root' = 0] }
  { op_hcompute_lgyy_stencil_1[root = 0] -> op_hcompute_cim_stencil[root' = 0] }
  { op_hcompute_lgxy_stencil_1[root = 0] -> op_hcompute_cim_stencil[root' = 0] }
  { op_hcompute_grad_x_unclamp_stencil[root = 0] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0] }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0] -> op_hcompute_lyy_stencil[root' = 0] }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0] }
  { op_hcompute_cim_output_stencil[root = 0] -> op_hcompute_hw_output_stencil[root' = 0] }
  { op_hcompute_cim_stencil[root = 0] -> op_hcompute_cim_output_stencil[root' = 0] }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0] -> op_hcompute_lxy_stencil[root' = 0] }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0] -> op_hcompute_lxx_stencil[root' = 0] }
  { op_hcompute_grad_y_unclamp_stencil[root = 0] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0] }
  { op_hcompute_lgxx_stencil_1[root = 0] -> op_hcompute_cim_stencil[root' = 0] }
  { op_hcompute_lxy_stencil[root = 0] -> op_hcompute_lgxy_stencil_1[root' = 0] }
  { op_hcompute_lyy_stencil[root = 0] -> op_hcompute_lgyy_stencil_1[root' = 0] }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0] }
  { op_hcompute_lxx_stencil[root = 0] -> op_hcompute_lgxx_stencil_1[root' = 0] }
Consumed data...
  { op_hcompute_lgyy_stencil_1[root = 0] -> op_hcompute_lgyy_stencil[root' = 0] }
bound: { op_hcompute_lgyy_stencil_1[root] -> op_hcompute_lgyy_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_lgyy_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_lgyy_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_lgyy_stencil_1[root] -> [(0)] }
  { op_hcompute_lgxx_stencil_1[root = 0] -> op_hcompute_lgxx_stencil[root' = 0] }
bound: { op_hcompute_lgxx_stencil_1[root] -> op_hcompute_lgxx_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_lgxx_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_lgxx_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_lgxx_stencil_1[root] -> [(0)] }
  { op_hcompute_lgxy_stencil_1[root = 0] -> op_hcompute_lgxy_stencil[root' = 0] }
bound: { op_hcompute_lgxy_stencil_1[root] -> op_hcompute_lgxy_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_lgxy_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_lgxy_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_lgxy_stencil_1[root] -> [(0)] }
  { op_hcompute_lxy_stencil[root = 0] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0] }
bound: { op_hcompute_lxy_stencil[root] -> op_hcompute_grad_y_unclamp_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_lxy_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_lxy_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_lxy_stencil[root] -> [(0)] }
  { op_hcompute_cim_stencil[root = 0] -> op_hcompute_lgyy_stencil_1[root' = 0] }
bound: { op_hcompute_cim_stencil[root] -> op_hcompute_lgyy_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_cim_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_cim_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_cim_stencil[root] -> [(0)] }
  { op_hcompute_cim_stencil[root = 0] -> op_hcompute_lgxy_stencil_1[root' = 0] }
bound: { op_hcompute_cim_stencil[root] -> op_hcompute_lgxy_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_cim_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_cim_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_cim_stencil[root] -> [(0)] }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0] -> op_hcompute_grad_x_unclamp_stencil[root' = 0] }
bound: { op_hcompute_grad_x_unclamp_stencil_1[root] -> op_hcompute_grad_x_unclamp_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_grad_x_unclamp_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_grad_x_unclamp_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_grad_x_unclamp_stencil_1[root] -> [(0)] }
  { op_hcompute_lyy_stencil[root = 0] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0] }
bound: { op_hcompute_lyy_stencil[root] -> op_hcompute_grad_y_unclamp_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_lyy_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_lyy_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_lyy_stencil[root] -> [(0)] }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0] -> op_hcompute_padded16_global_wrapper_stencil[root' = 0] }
bound: { op_hcompute_grad_y_unclamp_stencil_1[root] -> op_hcompute_padded16_global_wrapper_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_grad_y_unclamp_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_grad_y_unclamp_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_grad_y_unclamp_stencil_1[root] -> [(0)] }
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_cim_output_stencil[root' = 0] }
bound: { op_hcompute_hw_output_stencil[root] -> op_hcompute_cim_output_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_hw_output_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[root] -> [(0)] }
  { op_hcompute_cim_output_stencil[root = 0] -> op_hcompute_cim_stencil[root' = 0] }
bound: { op_hcompute_cim_output_stencil[root] -> op_hcompute_cim_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_cim_output_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_cim_output_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_cim_output_stencil[root] -> [(0)] }
  { op_hcompute_lxy_stencil[root = 0] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0] }
bound: { op_hcompute_lxy_stencil[root] -> op_hcompute_grad_x_unclamp_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_lxy_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_lxy_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_lxy_stencil[root] -> [(0)] }
  { op_hcompute_lxx_stencil[root = 0] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0] }
bound: { op_hcompute_lxx_stencil[root] -> op_hcompute_grad_x_unclamp_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_lxx_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_lxx_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_lxx_stencil[root] -> [(0)] }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0] -> op_hcompute_grad_y_unclamp_stencil[root' = 0] }
bound: { op_hcompute_grad_y_unclamp_stencil_1[root] -> op_hcompute_grad_y_unclamp_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_grad_y_unclamp_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_grad_y_unclamp_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_grad_y_unclamp_stencil_1[root] -> [(0)] }
  { op_hcompute_cim_stencil[root = 0] -> op_hcompute_lgxx_stencil_1[root' = 0] }
bound: { op_hcompute_cim_stencil[root] -> op_hcompute_lgxx_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_cim_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_cim_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_cim_stencil[root] -> [(0)] }
  { op_hcompute_lgxy_stencil_1[root = 0] -> op_hcompute_lxy_stencil[root' = 0] }
bound: { op_hcompute_lgxy_stencil_1[root] -> op_hcompute_lxy_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_lgxy_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_lgxy_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_lgxy_stencil_1[root] -> [(0)] }
  { op_hcompute_lgyy_stencil_1[root = 0] -> op_hcompute_lyy_stencil[root' = 0] }
bound: { op_hcompute_lgyy_stencil_1[root] -> op_hcompute_lyy_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_lgyy_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_lgyy_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_lgyy_stencil_1[root] -> [(0)] }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0] -> op_hcompute_padded16_global_wrapper_stencil[root' = 0] }
bound: { op_hcompute_grad_x_unclamp_stencil_1[root] -> op_hcompute_padded16_global_wrapper_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_grad_x_unclamp_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_grad_x_unclamp_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_grad_x_unclamp_stencil_1[root] -> [(0)] }
  { op_hcompute_lgxx_stencil_1[root = 0] -> op_hcompute_lxx_stencil[root' = 0] }
bound: { op_hcompute_lgxx_stencil_1[root] -> op_hcompute_lxx_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_lgxx_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_lgxx_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_lgxx_stencil_1[root] -> [(0)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_lgyy_stencil_1, s_op_hcompute_lgyy_stencil, s_op_hcompute_lgxx_stencil_1, s_op_hcompute_lgxx_stencil, s_op_hcompute_lgxy_stencil_1, s_op_hcompute_lgxy_stencil, s_op_hcompute_lxy_stencil, s_op_hcompute_grad_y_unclamp_stencil_1, s_op_hcompute_hw_output_stencil, s_op_hcompute_cim_output_stencil, s_op_hcompute_cim_stencil, s_op_hcompute_grad_x_unclamp_stencil_1, s_op_hcompute_grad_x_unclamp_stencil, s_op_hcompute_lyy_stencil, s_op_hcompute_lxx_stencil, s_op_hcompute_grad_y_unclamp_stencil, s_op_hcompute_padded16_global_wrapper_stencil] : s_op_hcompute_lgyy_stencil_1 > 0 and s_op_hcompute_lgyy_stencil > 0 and s_op_hcompute_lgxx_stencil_1 > 0 and s_op_hcompute_lgxx_stencil > 0 and s_op_hcompute_lgxy_stencil_1 > 0 and s_op_hcompute_lgxy_stencil > 0 and s_op_hcompute_lxy_stencil > 0 and s_op_hcompute_grad_y_unclamp_stencil_1 > 0 and s_op_hcompute_hw_output_stencil > 0 and s_op_hcompute_cim_output_stencil > 0 and s_op_hcompute_cim_stencil > 0 and s_op_hcompute_grad_x_unclamp_stencil_1 > 0 and s_op_hcompute_grad_x_unclamp_stencil > 0 and s_op_hcompute_lyy_stencil > 0 and s_op_hcompute_lxx_stencil > 0 and s_op_hcompute_grad_y_unclamp_stencil > 0 and s_op_hcompute_padded16_global_wrapper_stencil > 0 }
Writing problem to mod file...
  # of constraints: 17
  legal point  : { [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }
  minimal point: 0
Schedule params...
  { op_hcompute_lgyy_stencil_1[root = 0] -> op_hcompute_lgyy_stencil[root' = 0] }
  { op_hcompute_lgxx_stencil_1[root = 0] -> op_hcompute_lgxx_stencil[root' = 0] }
  { op_hcompute_lgxy_stencil_1[root = 0] -> op_hcompute_lgxy_stencil[root' = 0] }
  { op_hcompute_lxy_stencil[root = 0] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0] }
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_cim_output_stencil[root' = 0] }
  { op_hcompute_cim_stencil[root = 0] -> op_hcompute_lgyy_stencil_1[root' = 0] }
  { op_hcompute_cim_stencil[root = 0] -> op_hcompute_lgxy_stencil_1[root' = 0] }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0] -> op_hcompute_grad_x_unclamp_stencil[root' = 0] }
  { op_hcompute_lyy_stencil[root = 0] -> op_hcompute_grad_y_unclamp_stencil_1[root' = 0] }
  { op_hcompute_lxy_stencil[root = 0] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0] }
  { op_hcompute_lxx_stencil[root = 0] -> op_hcompute_grad_x_unclamp_stencil_1[root' = 0] }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0] -> op_hcompute_grad_y_unclamp_stencil[root' = 0] }
  { op_hcompute_cim_stencil[root = 0] -> op_hcompute_lgxx_stencil_1[root' = 0] }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0] -> op_hcompute_padded16_global_wrapper_stencil[root' = 0] }
  { op_hcompute_cim_output_stencil[root = 0] -> op_hcompute_cim_stencil[root' = 0] }
  { op_hcompute_lgxy_stencil_1[root = 0] -> op_hcompute_lxy_stencil[root' = 0] }
  { op_hcompute_lgyy_stencil_1[root = 0] -> op_hcompute_lyy_stencil[root' = 0] }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0] -> op_hcompute_padded16_global_wrapper_stencil[root' = 0] }
  { op_hcompute_lgxx_stencil_1[root = 0] -> op_hcompute_lxx_stencil[root' = 0] }
Done with schedule
Clockwork schedules...
  op_hcompute_cim_output_stencil: { [i] -> [(i)] }
  op_hcompute_cim_stencil: { [i] -> [(i)] }
  op_hcompute_grad_x_unclamp_stencil: { [i] -> [(i)] }
  op_hcompute_grad_x_unclamp_stencil_1: { [i] -> [(i)] }
  op_hcompute_grad_y_unclamp_stencil: { [i] -> [(i)] }
  op_hcompute_grad_y_unclamp_stencil_1: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(i)] }
  op_hcompute_lgxx_stencil: { [i] -> [(i)] }
  op_hcompute_lgxx_stencil_1: { [i] -> [(i)] }
  op_hcompute_lgxy_stencil: { [i] -> [(i)] }
  op_hcompute_lgxy_stencil_1: { [i] -> [(i)] }
  op_hcompute_lgyy_stencil: { [i] -> [(i)] }
  op_hcompute_lgyy_stencil_1: { [i] -> [(i)] }
  op_hcompute_lxx_stencil: { [i] -> [(i)] }
  op_hcompute_lxy_stencil: { [i] -> [(i)] }
  op_hcompute_lyy_stencil: { [i] -> [(i)] }
  op_hcompute_padded16_global_wrapper_stencil: { [i] -> [(i)] }
  scheduling dimension 1
  { op_hcompute_lgyy_stencil[lgyy_s0_y] -> op_hcompute_lgyy_stencil_1[lgyy_s1_y = lgyy_s0_y] : 0 <= lgyy_s0_y <= 59 }
  { op_hcompute_lgxx_stencil[lgxx_s0_y] -> op_hcompute_lgxx_stencil_1[lgxx_s1_y = lgxx_s0_y] : 0 <= lgxx_s0_y <= 59 }
  { op_hcompute_lgxy_stencil[lgxy_s0_y] -> op_hcompute_lgxy_stencil_1[lgxy_s1_y = lgxy_s0_y] : 0 <= lgxy_s0_y <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_lxy_stencil[lxy_s0_y = grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61 }
  { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_cim_stencil[cim_s0_y = lgyy_s1_y] : 0 <= lgyy_s1_y <= 59 }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_cim_stencil[cim_s0_y = lgxy_s1_y] : 0 <= lgxy_s1_y <= 59 }
  { op_hcompute_grad_x_unclamp_stencil[grad_x_unclamp_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y = grad_x_unclamp_s0_y] : 0 <= grad_x_unclamp_s0_y <= 61 }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_lyy_stencil[lyy_s0_y = grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y = padded16_global_wrapper_s0_y] : 0 <= padded16_global_wrapper_s0_y <= 61; op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y] : 2 <= padded16_global_wrapper_s0_y <= 63 }
  { op_hcompute_cim_output_stencil[cim_output_s0_y] -> op_hcompute_hw_output_stencil[hw_output_s0_y_yi = cim_output_s0_y] : 0 <= cim_output_s0_y <= 57 }
  { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_cim_output_stencil[cim_output_s0_y = cim_s0_y] : 0 <= cim_s0_y <= 57; op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_cim_output_stencil[cim_output_s0_y = -1 + cim_s0_y] : 0 < cim_s0_y <= 58; op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_cim_output_stencil[cim_output_s0_y = -2 + cim_s0_y] : 2 <= cim_s0_y <= 59 }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_lxy_stencil[lxy_s0_y = grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_lxx_stencil[lxx_s0_y = grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[grad_y_unclamp_s0_y] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y = grad_y_unclamp_s0_y] : 0 <= grad_y_unclamp_s0_y <= 61 }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_cim_stencil[cim_s0_y = lgxx_s1_y] : 0 <= lgxx_s1_y <= 59 }
  { op_hcompute_lxy_stencil[lxy_s0_y] -> op_hcompute_lgxy_stencil_1[lgxy_s1_y = lxy_s0_y] : 0 <= lxy_s0_y <= 59; op_hcompute_lxy_stencil[lxy_s0_y] -> op_hcompute_lgxy_stencil_1[lgxy_s1_y = -1 + lxy_s0_y] : 0 < lxy_s0_y <= 60; op_hcompute_lxy_stencil[lxy_s0_y] -> op_hcompute_lgxy_stencil_1[lgxy_s1_y = -2 + lxy_s0_y] : 2 <= lxy_s0_y <= 61 }
  { op_hcompute_lyy_stencil[lyy_s0_y] -> op_hcompute_lgyy_stencil_1[lgyy_s1_y = lyy_s0_y] : 0 <= lyy_s0_y <= 59; op_hcompute_lyy_stencil[lyy_s0_y] -> op_hcompute_lgyy_stencil_1[lgyy_s1_y = -1 + lyy_s0_y] : 0 < lyy_s0_y <= 60; op_hcompute_lyy_stencil[lyy_s0_y] -> op_hcompute_lgyy_stencil_1[lgyy_s1_y = -2 + lyy_s0_y] : 2 <= lyy_s0_y <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y = padded16_global_wrapper_s0_y] : 0 <= padded16_global_wrapper_s0_y <= 61; op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y] : 2 <= padded16_global_wrapper_s0_y <= 63; op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y = -1 + padded16_global_wrapper_s0_y] : 0 < padded16_global_wrapper_s0_y <= 62 }
  { op_hcompute_lxx_stencil[lxx_s0_y] -> op_hcompute_lgxx_stencil_1[lgxx_s1_y = lxx_s0_y] : 0 <= lxx_s0_y <= 59; op_hcompute_lxx_stencil[lxx_s0_y] -> op_hcompute_lgxx_stencil_1[lgxx_s1_y = -1 + lxx_s0_y] : 0 < lxx_s0_y <= 60; op_hcompute_lxx_stencil[lxx_s0_y] -> op_hcompute_lgxx_stencil_1[lgxx_s1_y = -2 + lxx_s0_y] : 2 <= lxx_s0_y <= 61 }
Consumed data...
  { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lgyy_stencil[lgyy_s0_y = lgyy_s1_y] : 0 <= lgyy_s1_y <= 59 }
bound: { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lgyy_stencil[(lgyy_s1_y)] }
    affine upper bound on data needed: { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> [(lgyy_s1_y)] }
      domain of bound: { op_hcompute_lgyy_stencil_1[lgyy_s1_y] : 0 <= lgyy_s1_y <= 59 }
Extracting linear rational approximation: { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> [(lgyy_s1_y)] }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lgxx_stencil[lgxx_s0_y = lgxx_s1_y] : 0 <= lgxx_s1_y <= 59 }
bound: { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lgxx_stencil[(lgxx_s1_y)] }
    affine upper bound on data needed: { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> [(lgxx_s1_y)] }
      domain of bound: { op_hcompute_lgxx_stencil_1[lgxx_s1_y] : 0 <= lgxx_s1_y <= 59 }
Extracting linear rational approximation: { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> [(lgxx_s1_y)] }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lgxy_stencil[lgxy_s0_y = lgxy_s1_y] : 0 <= lgxy_s1_y <= 59 }
bound: { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lgxy_stencil[(lgxy_s1_y)] }
    affine upper bound on data needed: { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> [(lgxy_s1_y)] }
      domain of bound: { op_hcompute_lgxy_stencil_1[lgxy_s1_y] : 0 <= lgxy_s1_y <= 59 }
Extracting linear rational approximation: { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> [(lgxy_s1_y)] }
  { op_hcompute_lxy_stencil[lxy_s0_y] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y = lxy_s0_y] : 0 <= lxy_s0_y <= 61 }
bound: { op_hcompute_lxy_stencil[lxy_s0_y] -> op_hcompute_grad_y_unclamp_stencil_1[(lxy_s0_y)] }
    affine upper bound on data needed: { op_hcompute_lxy_stencil[lxy_s0_y] -> [(lxy_s0_y)] }
      domain of bound: { op_hcompute_lxy_stencil[lxy_s0_y] : 0 <= lxy_s0_y <= 61 }
Extracting linear rational approximation: { op_hcompute_lxy_stencil[lxy_s0_y] -> [(lxy_s0_y)] }
  { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_lgyy_stencil_1[lgyy_s1_y = cim_s0_y] : 0 <= cim_s0_y <= 59 }
bound: { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_lgyy_stencil_1[(cim_s0_y)] }
    affine upper bound on data needed: { op_hcompute_cim_stencil[cim_s0_y] -> [(cim_s0_y)] }
      domain of bound: { op_hcompute_cim_stencil[cim_s0_y] : 0 <= cim_s0_y <= 59 }
Extracting linear rational approximation: { op_hcompute_cim_stencil[cim_s0_y] -> [(cim_s0_y)] }
  { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_lgxy_stencil_1[lgxy_s1_y = cim_s0_y] : 0 <= cim_s0_y <= 59 }
bound: { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_lgxy_stencil_1[(cim_s0_y)] }
    affine upper bound on data needed: { op_hcompute_cim_stencil[cim_s0_y] -> [(cim_s0_y)] }
      domain of bound: { op_hcompute_cim_stencil[cim_s0_y] : 0 <= cim_s0_y <= 59 }
Extracting linear rational approximation: { op_hcompute_cim_stencil[cim_s0_y] -> [(cim_s0_y)] }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_grad_x_unclamp_stencil[grad_x_unclamp_s0_y = grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61 }
bound: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_grad_x_unclamp_stencil[(grad_x_unclamp_s1_y)] }
    affine upper bound on data needed: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> [(grad_x_unclamp_s1_y)] }
      domain of bound: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> [(grad_x_unclamp_s1_y)] }
  { op_hcompute_lyy_stencil[lyy_s0_y] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y = lyy_s0_y] : 0 <= lyy_s0_y <= 61 }
bound: { op_hcompute_lyy_stencil[lyy_s0_y] -> op_hcompute_grad_y_unclamp_stencil_1[(lyy_s0_y)] }
    affine upper bound on data needed: { op_hcompute_lyy_stencil[lyy_s0_y] -> [(lyy_s0_y)] }
      domain of bound: { op_hcompute_lyy_stencil[lyy_s0_y] : 0 <= lyy_s0_y <= 61 }
Extracting linear rational approximation: { op_hcompute_lyy_stencil[lyy_s0_y] -> [(lyy_s0_y)] }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = 2 + grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61; op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61 }
bound: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[(2 + grad_y_unclamp_s1_y)] }
    affine upper bound on data needed: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> [(2 + grad_y_unclamp_s1_y)] }
      domain of bound: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> [(2 + grad_y_unclamp_s1_y)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_cim_output_stencil[cim_output_s0_y = hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 57 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_cim_output_stencil[(hw_output_s0_y_yi)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> [(hw_output_s0_y_yi)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 57 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> [(hw_output_s0_y_yi)] }
  { op_hcompute_cim_output_stencil[cim_output_s0_y] -> op_hcompute_cim_stencil[cim_s0_y = 2 + cim_output_s0_y] : 0 <= cim_output_s0_y <= 57; op_hcompute_cim_output_stencil[cim_output_s0_y] -> op_hcompute_cim_stencil[cim_s0_y = 1 + cim_output_s0_y] : 0 <= cim_output_s0_y <= 57; op_hcompute_cim_output_stencil[cim_output_s0_y] -> op_hcompute_cim_stencil[cim_s0_y = cim_output_s0_y] : 0 <= cim_output_s0_y <= 57 }
bound: { op_hcompute_cim_output_stencil[cim_output_s0_y] -> op_hcompute_cim_stencil[(2 + cim_output_s0_y)] }
    affine upper bound on data needed: { op_hcompute_cim_output_stencil[cim_output_s0_y] -> [(2 + cim_output_s0_y)] }
      domain of bound: { op_hcompute_cim_output_stencil[cim_output_s0_y] : 0 <= cim_output_s0_y <= 57 }
Extracting linear rational approximation: { op_hcompute_cim_output_stencil[cim_output_s0_y] -> [(2 + cim_output_s0_y)] }
  { op_hcompute_lxy_stencil[lxy_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y = lxy_s0_y] : 0 <= lxy_s0_y <= 61 }
bound: { op_hcompute_lxy_stencil[lxy_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[(lxy_s0_y)] }
    affine upper bound on data needed: { op_hcompute_lxy_stencil[lxy_s0_y] -> [(lxy_s0_y)] }
      domain of bound: { op_hcompute_lxy_stencil[lxy_s0_y] : 0 <= lxy_s0_y <= 61 }
Extracting linear rational approximation: { op_hcompute_lxy_stencil[lxy_s0_y] -> [(lxy_s0_y)] }
  { op_hcompute_lxx_stencil[lxx_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y = lxx_s0_y] : 0 <= lxx_s0_y <= 61 }
bound: { op_hcompute_lxx_stencil[lxx_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[(lxx_s0_y)] }
    affine upper bound on data needed: { op_hcompute_lxx_stencil[lxx_s0_y] -> [(lxx_s0_y)] }
      domain of bound: { op_hcompute_lxx_stencil[lxx_s0_y] : 0 <= lxx_s0_y <= 61 }
Extracting linear rational approximation: { op_hcompute_lxx_stencil[lxx_s0_y] -> [(lxx_s0_y)] }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_grad_y_unclamp_stencil[grad_y_unclamp_s0_y = grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61 }
bound: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_grad_y_unclamp_stencil[(grad_y_unclamp_s1_y)] }
    affine upper bound on data needed: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> [(grad_y_unclamp_s1_y)] }
      domain of bound: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> [(grad_y_unclamp_s1_y)] }
  { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_lgxx_stencil_1[lgxx_s1_y = cim_s0_y] : 0 <= cim_s0_y <= 59 }
bound: { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_lgxx_stencil_1[(cim_s0_y)] }
    affine upper bound on data needed: { op_hcompute_cim_stencil[cim_s0_y] -> [(cim_s0_y)] }
      domain of bound: { op_hcompute_cim_stencil[cim_s0_y] : 0 <= cim_s0_y <= 59 }
Extracting linear rational approximation: { op_hcompute_cim_stencil[cim_s0_y] -> [(cim_s0_y)] }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lxy_stencil[lxy_s0_y = 2 + lgxy_s1_y] : 0 <= lgxy_s1_y <= 59; op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lxy_stencil[lxy_s0_y = 1 + lgxy_s1_y] : 0 <= lgxy_s1_y <= 59; op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lxy_stencil[lxy_s0_y = lgxy_s1_y] : 0 <= lgxy_s1_y <= 59 }
bound: { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lxy_stencil[(2 + lgxy_s1_y)] }
    affine upper bound on data needed: { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> [(2 + lgxy_s1_y)] }
      domain of bound: { op_hcompute_lgxy_stencil_1[lgxy_s1_y] : 0 <= lgxy_s1_y <= 59 }
Extracting linear rational approximation: { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> [(2 + lgxy_s1_y)] }
  { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lyy_stencil[lyy_s0_y = 2 + lgyy_s1_y] : 0 <= lgyy_s1_y <= 59; op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lyy_stencil[lyy_s0_y = 1 + lgyy_s1_y] : 0 <= lgyy_s1_y <= 59; op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lyy_stencil[lyy_s0_y = lgyy_s1_y] : 0 <= lgyy_s1_y <= 59 }
bound: { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lyy_stencil[(2 + lgyy_s1_y)] }
    affine upper bound on data needed: { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> [(2 + lgyy_s1_y)] }
      domain of bound: { op_hcompute_lgyy_stencil_1[lgyy_s1_y] : 0 <= lgyy_s1_y <= 59 }
Extracting linear rational approximation: { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> [(2 + lgyy_s1_y)] }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = 2 + grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61; op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61; op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = 1 + grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61 }
bound: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[(2 + grad_x_unclamp_s1_y)] }
    affine upper bound on data needed: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> [(2 + grad_x_unclamp_s1_y)] }
      domain of bound: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> [(2 + grad_x_unclamp_s1_y)] }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lxx_stencil[lxx_s0_y = 2 + lgxx_s1_y] : 0 <= lgxx_s1_y <= 59; op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lxx_stencil[lxx_s0_y = 1 + lgxx_s1_y] : 0 <= lgxx_s1_y <= 59; op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lxx_stencil[lxx_s0_y = lgxx_s1_y] : 0 <= lgxx_s1_y <= 59 }
bound: { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lxx_stencil[(2 + lgxx_s1_y)] }
    affine upper bound on data needed: { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> [(2 + lgxx_s1_y)] }
      domain of bound: { op_hcompute_lgxx_stencil_1[lgxx_s1_y] : 0 <= lgxx_s1_y <= 59 }
Extracting linear rational approximation: { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> [(2 + lgxx_s1_y)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_lgyy_stencil_1, s_op_hcompute_lgyy_stencil, s_op_hcompute_lgxx_stencil_1, s_op_hcompute_lgxx_stencil, s_op_hcompute_lgxy_stencil_1, s_op_hcompute_lgxy_stencil, s_op_hcompute_lxy_stencil, s_op_hcompute_grad_y_unclamp_stencil_1, s_op_hcompute_hw_output_stencil, s_op_hcompute_cim_output_stencil, s_op_hcompute_cim_stencil, s_op_hcompute_grad_x_unclamp_stencil_1, s_op_hcompute_grad_x_unclamp_stencil, s_op_hcompute_lyy_stencil, s_op_hcompute_lxx_stencil, s_op_hcompute_grad_y_unclamp_stencil, s_op_hcompute_padded16_global_wrapper_stencil] : s_op_hcompute_lgyy_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgxx_stencil_1 = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgxx_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgxy_stencil_1 = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgxy_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lxy_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_grad_y_unclamp_stencil_1 = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_cim_output_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_cim_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_grad_x_unclamp_stencil_1 = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_grad_x_unclamp_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lyy_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lxx_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_grad_y_unclamp_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_padded16_global_wrapper_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgyy_stencil_1 > 0 }
Writing problem to mod file...
  # of constraints: 33
  legal point  : { [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }
  minimal point: -17
Schedule params...
  { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lgyy_stencil[lgyy_s0_y = lgyy_s1_y] : 0 <= lgyy_s1_y <= 59 }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lgxx_stencil[lgxx_s0_y = lgxx_s1_y] : 0 <= lgxx_s1_y <= 59 }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lgxy_stencil[lgxy_s0_y = lgxy_s1_y] : 0 <= lgxy_s1_y <= 59 }
  { op_hcompute_lxy_stencil[lxy_s0_y] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y = lxy_s0_y] : 0 <= lxy_s0_y <= 61 }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_cim_output_stencil[cim_output_s0_y = hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 57 }
  { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_lgyy_stencil_1[lgyy_s1_y = cim_s0_y] : 0 <= cim_s0_y <= 59 }
  { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_lgxy_stencil_1[lgxy_s1_y = cim_s0_y] : 0 <= cim_s0_y <= 59 }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_grad_x_unclamp_stencil[grad_x_unclamp_s0_y = grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61 }
  { op_hcompute_lyy_stencil[lyy_s0_y] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y = lyy_s0_y] : 0 <= lyy_s0_y <= 61 }
  { op_hcompute_lxx_stencil[lxx_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y = lxx_s0_y] : 0 <= lxx_s0_y <= 61 }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_grad_y_unclamp_stencil[grad_y_unclamp_s0_y = grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61 }
  { op_hcompute_lxy_stencil[lxy_s0_y] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y = lxy_s0_y] : 0 <= lxy_s0_y <= 61 }
  { op_hcompute_cim_stencil[cim_s0_y] -> op_hcompute_lgxx_stencil_1[lgxx_s1_y = cim_s0_y] : 0 <= cim_s0_y <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = 2 + grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61; op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = grad_y_unclamp_s1_y] : 0 <= grad_y_unclamp_s1_y <= 61 }
  { op_hcompute_cim_output_stencil[cim_output_s0_y] -> op_hcompute_cim_stencil[cim_s0_y = 2 + cim_output_s0_y] : 0 <= cim_output_s0_y <= 57; op_hcompute_cim_output_stencil[cim_output_s0_y] -> op_hcompute_cim_stencil[cim_s0_y = 1 + cim_output_s0_y] : 0 <= cim_output_s0_y <= 57; op_hcompute_cim_output_stencil[cim_output_s0_y] -> op_hcompute_cim_stencil[cim_s0_y = cim_output_s0_y] : 0 <= cim_output_s0_y <= 57 }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lxy_stencil[lxy_s0_y = 2 + lgxy_s1_y] : 0 <= lgxy_s1_y <= 59; op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lxy_stencil[lxy_s0_y = 1 + lgxy_s1_y] : 0 <= lgxy_s1_y <= 59; op_hcompute_lgxy_stencil_1[lgxy_s1_y] -> op_hcompute_lxy_stencil[lxy_s0_y = lgxy_s1_y] : 0 <= lgxy_s1_y <= 59 }
  { op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lyy_stencil[lyy_s0_y = 2 + lgyy_s1_y] : 0 <= lgyy_s1_y <= 59; op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lyy_stencil[lyy_s0_y = 1 + lgyy_s1_y] : 0 <= lgyy_s1_y <= 59; op_hcompute_lgyy_stencil_1[lgyy_s1_y] -> op_hcompute_lyy_stencil[lyy_s0_y = lgyy_s1_y] : 0 <= lgyy_s1_y <= 59 }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = 2 + grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61; op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61; op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_y] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y = 1 + grad_x_unclamp_s1_y] : 0 <= grad_x_unclamp_s1_y <= 61 }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lxx_stencil[lxx_s0_y = 2 + lgxx_s1_y] : 0 <= lgxx_s1_y <= 59; op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lxx_stencil[lxx_s0_y = 1 + lgxx_s1_y] : 0 <= lgxx_s1_y <= 59; op_hcompute_lgxx_stencil_1[lgxx_s1_y] -> op_hcompute_lxx_stencil[lxx_s0_y = lgxx_s1_y] : 0 <= lgxx_s1_y <= 59 }
Done with schedule
Clockwork schedules...
  op_hcompute_cim_output_stencil: { [i] -> [(6 + i)] }
  op_hcompute_cim_stencil: { [i] -> [(4 + i)] }
  op_hcompute_grad_x_unclamp_stencil: { [i] -> [(2 + i)] }
  op_hcompute_grad_x_unclamp_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_grad_y_unclamp_stencil: { [i] -> [(2 + i)] }
  op_hcompute_grad_y_unclamp_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(6 + i)] }
  op_hcompute_lgxx_stencil: { [i] -> [(4 + i)] }
  op_hcompute_lgxx_stencil_1: { [i] -> [(4 + i)] }
  op_hcompute_lgxy_stencil: { [i] -> [(4 + i)] }
  op_hcompute_lgxy_stencil_1: { [i] -> [(4 + i)] }
  op_hcompute_lgyy_stencil: { [i] -> [(4 + i)] }
  op_hcompute_lgyy_stencil_1: { [i] -> [(4 + i)] }
  op_hcompute_lxx_stencil: { [i] -> [(2 + i)] }
  op_hcompute_lxy_stencil: { [i] -> [(2 + i)] }
  op_hcompute_lyy_stencil: { [i] -> [(2 + i)] }
  op_hcompute_padded16_global_wrapper_stencil: { [i] -> [(i)] }
  scheduling dimension 2
  { op_hcompute_lgyy_stencil[lgyy_s0_x] -> op_hcompute_lgyy_stencil_1[lgyy_s1_x = lgyy_s0_x] : 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgxx_stencil[lgxx_s0_x] -> op_hcompute_lgxx_stencil_1[lgxx_s1_x = lgxx_s0_x] : 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lgxy_stencil[lgxy_s0_x] -> op_hcompute_lgxy_stencil_1[lgxy_s1_x = lgxy_s0_x] : 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_lxy_stencil[lxy_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_cim_stencil[cim_s0_x = lgyy_s1_x] : 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_cim_stencil[cim_s0_x = lgxy_s1_x] : 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_grad_x_unclamp_stencil[grad_x_unclamp_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x = grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_lyy_stencil[lyy_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x = -1 + padded16_global_wrapper_s0_x] : 0 < padded16_global_wrapper_s0_x <= 62 }
  { op_hcompute_cim_output_stencil[cim_output_s0_x] -> op_hcompute_hw_output_stencil[hw_output_s0_x_xi = cim_output_s0_x] : 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_cim_output_stencil[cim_output_s0_x = cim_s0_x] : 0 <= cim_s0_x <= 57; op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_cim_output_stencil[cim_output_s0_x = -1 + cim_s0_x] : 0 < cim_s0_x <= 58; op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_cim_output_stencil[cim_output_s0_x = -2 + cim_s0_x] : 2 <= cim_s0_x <= 59 }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_lxy_stencil[lxy_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_lxx_stencil[lxx_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[grad_y_unclamp_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x = grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_cim_stencil[cim_s0_x = lgxx_s1_x] : 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lxy_stencil[lxy_s0_x] -> op_hcompute_lgxy_stencil_1[lgxy_s1_x = lxy_s0_x] : 0 <= lxy_s0_x <= 59; op_hcompute_lxy_stencil[lxy_s0_x] -> op_hcompute_lgxy_stencil_1[lgxy_s1_x = -1 + lxy_s0_x] : 0 < lxy_s0_x <= 60; op_hcompute_lxy_stencil[lxy_s0_x] -> op_hcompute_lgxy_stencil_1[lgxy_s1_x = -2 + lxy_s0_x] : 2 <= lxy_s0_x <= 61 }
  { op_hcompute_lyy_stencil[lyy_s0_x] -> op_hcompute_lgyy_stencil_1[lgyy_s1_x = lyy_s0_x] : 0 <= lyy_s0_x <= 59; op_hcompute_lyy_stencil[lyy_s0_x] -> op_hcompute_lgyy_stencil_1[lgyy_s1_x = -1 + lyy_s0_x] : 0 < lyy_s0_x <= 60; op_hcompute_lyy_stencil[lyy_s0_x] -> op_hcompute_lgyy_stencil_1[lgyy_s1_x = -2 + lyy_s0_x] : 2 <= lyy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lxx_stencil[lxx_s0_x] -> op_hcompute_lgxx_stencil_1[lgxx_s1_x = lxx_s0_x] : 0 <= lxx_s0_x <= 59; op_hcompute_lxx_stencil[lxx_s0_x] -> op_hcompute_lgxx_stencil_1[lgxx_s1_x = -1 + lxx_s0_x] : 0 < lxx_s0_x <= 60; op_hcompute_lxx_stencil[lxx_s0_x] -> op_hcompute_lgxx_stencil_1[lgxx_s1_x = -2 + lxx_s0_x] : 2 <= lxx_s0_x <= 61 }
Consumed data...
  { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lgyy_stencil[lgyy_s0_x = lgyy_s1_x] : 0 <= lgyy_s1_x <= 59 }
bound: { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lgyy_stencil[(lgyy_s1_x)] }
    affine upper bound on data needed: { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> [(lgyy_s1_x)] }
      domain of bound: { op_hcompute_lgyy_stencil_1[lgyy_s1_x] : 0 <= lgyy_s1_x <= 59 }
Extracting linear rational approximation: { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> [(lgyy_s1_x)] }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lgxx_stencil[lgxx_s0_x = lgxx_s1_x] : 0 <= lgxx_s1_x <= 59 }
bound: { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lgxx_stencil[(lgxx_s1_x)] }
    affine upper bound on data needed: { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> [(lgxx_s1_x)] }
      domain of bound: { op_hcompute_lgxx_stencil_1[lgxx_s1_x] : 0 <= lgxx_s1_x <= 59 }
Extracting linear rational approximation: { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> [(lgxx_s1_x)] }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lgxy_stencil[lgxy_s0_x = lgxy_s1_x] : 0 <= lgxy_s1_x <= 59 }
bound: { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lgxy_stencil[(lgxy_s1_x)] }
    affine upper bound on data needed: { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> [(lgxy_s1_x)] }
      domain of bound: { op_hcompute_lgxy_stencil_1[lgxy_s1_x] : 0 <= lgxy_s1_x <= 59 }
Extracting linear rational approximation: { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> [(lgxy_s1_x)] }
  { op_hcompute_lxy_stencil[lxy_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x = lxy_s0_x] : 0 <= lxy_s0_x <= 61 }
bound: { op_hcompute_lxy_stencil[lxy_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[(lxy_s0_x)] }
    affine upper bound on data needed: { op_hcompute_lxy_stencil[lxy_s0_x] -> [(lxy_s0_x)] }
      domain of bound: { op_hcompute_lxy_stencil[lxy_s0_x] : 0 <= lxy_s0_x <= 61 }
Extracting linear rational approximation: { op_hcompute_lxy_stencil[lxy_s0_x] -> [(lxy_s0_x)] }
  { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_lgyy_stencil_1[lgyy_s1_x = cim_s0_x] : 0 <= cim_s0_x <= 59 }
bound: { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_lgyy_stencil_1[(cim_s0_x)] }
    affine upper bound on data needed: { op_hcompute_cim_stencil[cim_s0_x] -> [(cim_s0_x)] }
      domain of bound: { op_hcompute_cim_stencil[cim_s0_x] : 0 <= cim_s0_x <= 59 }
Extracting linear rational approximation: { op_hcompute_cim_stencil[cim_s0_x] -> [(cim_s0_x)] }
  { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_lgxy_stencil_1[lgxy_s1_x = cim_s0_x] : 0 <= cim_s0_x <= 59 }
bound: { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_lgxy_stencil_1[(cim_s0_x)] }
    affine upper bound on data needed: { op_hcompute_cim_stencil[cim_s0_x] -> [(cim_s0_x)] }
      domain of bound: { op_hcompute_cim_stencil[cim_s0_x] : 0 <= cim_s0_x <= 59 }
Extracting linear rational approximation: { op_hcompute_cim_stencil[cim_s0_x] -> [(cim_s0_x)] }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_grad_x_unclamp_stencil[grad_x_unclamp_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61 }
bound: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_grad_x_unclamp_stencil[(grad_x_unclamp_s1_x)] }
    affine upper bound on data needed: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> [(grad_x_unclamp_s1_x)] }
      domain of bound: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> [(grad_x_unclamp_s1_x)] }
  { op_hcompute_lyy_stencil[lyy_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x = lyy_s0_x] : 0 <= lyy_s0_x <= 61 }
bound: { op_hcompute_lyy_stencil[lyy_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[(lyy_s0_x)] }
    affine upper bound on data needed: { op_hcompute_lyy_stencil[lyy_s0_x] -> [(lyy_s0_x)] }
      domain of bound: { op_hcompute_lyy_stencil[lyy_s0_x] : 0 <= lyy_s0_x <= 61 }
Extracting linear rational approximation: { op_hcompute_lyy_stencil[lyy_s0_x] -> [(lyy_s0_x)] }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = 2 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = 1 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61 }
bound: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[(2 + grad_y_unclamp_s1_x)] }
    affine upper bound on data needed: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_x)] }
      domain of bound: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> [(2 + grad_y_unclamp_s1_x)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_cim_output_stencil[cim_output_s0_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 57 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_cim_output_stencil[(hw_output_s0_x_xi)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 57 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
  { op_hcompute_cim_output_stencil[cim_output_s0_x] -> op_hcompute_cim_stencil[cim_s0_x = 2 + cim_output_s0_x] : 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[cim_output_s0_x] -> op_hcompute_cim_stencil[cim_s0_x = 1 + cim_output_s0_x] : 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[cim_output_s0_x] -> op_hcompute_cim_stencil[cim_s0_x = cim_output_s0_x] : 0 <= cim_output_s0_x <= 57 }
bound: { op_hcompute_cim_output_stencil[cim_output_s0_x] -> op_hcompute_cim_stencil[(2 + cim_output_s0_x)] }
    affine upper bound on data needed: { op_hcompute_cim_output_stencil[cim_output_s0_x] -> [(2 + cim_output_s0_x)] }
      domain of bound: { op_hcompute_cim_output_stencil[cim_output_s0_x] : 0 <= cim_output_s0_x <= 57 }
Extracting linear rational approximation: { op_hcompute_cim_output_stencil[cim_output_s0_x] -> [(2 + cim_output_s0_x)] }
  { op_hcompute_lxy_stencil[lxy_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x = lxy_s0_x] : 0 <= lxy_s0_x <= 61 }
bound: { op_hcompute_lxy_stencil[lxy_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[(lxy_s0_x)] }
    affine upper bound on data needed: { op_hcompute_lxy_stencil[lxy_s0_x] -> [(lxy_s0_x)] }
      domain of bound: { op_hcompute_lxy_stencil[lxy_s0_x] : 0 <= lxy_s0_x <= 61 }
Extracting linear rational approximation: { op_hcompute_lxy_stencil[lxy_s0_x] -> [(lxy_s0_x)] }
  { op_hcompute_lxx_stencil[lxx_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x = lxx_s0_x] : 0 <= lxx_s0_x <= 61 }
bound: { op_hcompute_lxx_stencil[lxx_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[(lxx_s0_x)] }
    affine upper bound on data needed: { op_hcompute_lxx_stencil[lxx_s0_x] -> [(lxx_s0_x)] }
      domain of bound: { op_hcompute_lxx_stencil[lxx_s0_x] : 0 <= lxx_s0_x <= 61 }
Extracting linear rational approximation: { op_hcompute_lxx_stencil[lxx_s0_x] -> [(lxx_s0_x)] }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_grad_y_unclamp_stencil[grad_y_unclamp_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61 }
bound: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_grad_y_unclamp_stencil[(grad_y_unclamp_s1_x)] }
    affine upper bound on data needed: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> [(grad_y_unclamp_s1_x)] }
      domain of bound: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> [(grad_y_unclamp_s1_x)] }
  { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_lgxx_stencil_1[lgxx_s1_x = cim_s0_x] : 0 <= cim_s0_x <= 59 }
bound: { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_lgxx_stencil_1[(cim_s0_x)] }
    affine upper bound on data needed: { op_hcompute_cim_stencil[cim_s0_x] -> [(cim_s0_x)] }
      domain of bound: { op_hcompute_cim_stencil[cim_s0_x] : 0 <= cim_s0_x <= 59 }
Extracting linear rational approximation: { op_hcompute_cim_stencil[cim_s0_x] -> [(cim_s0_x)] }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lxy_stencil[lxy_s0_x = 2 + lgxy_s1_x] : 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lxy_stencil[lxy_s0_x = 1 + lgxy_s1_x] : 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lxy_stencil[lxy_s0_x = lgxy_s1_x] : 0 <= lgxy_s1_x <= 59 }
bound: { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lxy_stencil[(2 + lgxy_s1_x)] }
    affine upper bound on data needed: { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> [(2 + lgxy_s1_x)] }
      domain of bound: { op_hcompute_lgxy_stencil_1[lgxy_s1_x] : 0 <= lgxy_s1_x <= 59 }
Extracting linear rational approximation: { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> [(2 + lgxy_s1_x)] }
  { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lyy_stencil[lyy_s0_x = 2 + lgyy_s1_x] : 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lyy_stencil[lyy_s0_x = 1 + lgyy_s1_x] : 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lyy_stencil[lyy_s0_x = lgyy_s1_x] : 0 <= lgyy_s1_x <= 59 }
bound: { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lyy_stencil[(2 + lgyy_s1_x)] }
    affine upper bound on data needed: { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> [(2 + lgyy_s1_x)] }
      domain of bound: { op_hcompute_lgyy_stencil_1[lgyy_s1_x] : 0 <= lgyy_s1_x <= 59 }
Extracting linear rational approximation: { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> [(2 + lgyy_s1_x)] }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61 }
bound: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[(2 + grad_x_unclamp_s1_x)] }
    affine upper bound on data needed: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_x)] }
      domain of bound: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> [(2 + grad_x_unclamp_s1_x)] }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lxx_stencil[lxx_s0_x = 2 + lgxx_s1_x] : 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lxx_stencil[lxx_s0_x = 1 + lgxx_s1_x] : 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lxx_stencil[lxx_s0_x = lgxx_s1_x] : 0 <= lgxx_s1_x <= 59 }
bound: { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lxx_stencil[(2 + lgxx_s1_x)] }
    affine upper bound on data needed: { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> [(2 + lgxx_s1_x)] }
      domain of bound: { op_hcompute_lgxx_stencil_1[lgxx_s1_x] : 0 <= lgxx_s1_x <= 59 }
Extracting linear rational approximation: { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> [(2 + lgxx_s1_x)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_lgyy_stencil_1, s_op_hcompute_lgyy_stencil, s_op_hcompute_lgxx_stencil_1, s_op_hcompute_lgxx_stencil, s_op_hcompute_lgxy_stencil_1, s_op_hcompute_lgxy_stencil, s_op_hcompute_lxy_stencil, s_op_hcompute_grad_y_unclamp_stencil_1, s_op_hcompute_hw_output_stencil, s_op_hcompute_cim_output_stencil, s_op_hcompute_cim_stencil, s_op_hcompute_grad_x_unclamp_stencil_1, s_op_hcompute_grad_x_unclamp_stencil, s_op_hcompute_lyy_stencil, s_op_hcompute_lxx_stencil, s_op_hcompute_grad_y_unclamp_stencil, s_op_hcompute_padded16_global_wrapper_stencil] : s_op_hcompute_lgyy_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgxx_stencil_1 = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgxx_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgxy_stencil_1 = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgxy_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lxy_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_grad_y_unclamp_stencil_1 = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_cim_output_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_cim_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_grad_x_unclamp_stencil_1 = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_grad_x_unclamp_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lyy_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lxx_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_grad_y_unclamp_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_padded16_global_wrapper_stencil = s_op_hcompute_lgyy_stencil_1 and s_op_hcompute_lgyy_stencil_1 > 0 }
Writing problem to mod file...
  # of constraints: 33
  legal point  : { [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }
  minimal point: -17
Schedule params...
  { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lgyy_stencil[lgyy_s0_x = lgyy_s1_x] : 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lgxx_stencil[lgxx_s0_x = lgxx_s1_x] : 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lgxy_stencil[lgxy_s0_x = lgxy_s1_x] : 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_lxy_stencil[lxy_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x = lxy_s0_x] : 0 <= lxy_s0_x <= 61 }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_cim_output_stencil[cim_output_s0_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_lgyy_stencil_1[lgyy_s1_x = cim_s0_x] : 0 <= cim_s0_x <= 59 }
  { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_lgxy_stencil_1[lgxy_s1_x = cim_s0_x] : 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_grad_x_unclamp_stencil[grad_x_unclamp_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[lyy_s0_x] -> op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x = lyy_s0_x] : 0 <= lyy_s0_x <= 61 }
  { op_hcompute_lxx_stencil[lxx_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x = lxx_s0_x] : 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_grad_y_unclamp_stencil[grad_y_unclamp_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_stencil[cim_s0_x] -> op_hcompute_lgxx_stencil_1[lgxx_s1_x = cim_s0_x] : 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = 2 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[grad_y_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = 1 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_lxy_stencil[lxy_s0_x] -> op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x = lxy_s0_x] : 0 <= lxy_s0_x <= 61 }
  { op_hcompute_cim_output_stencil[cim_output_s0_x] -> op_hcompute_cim_stencil[cim_s0_x = 2 + cim_output_s0_x] : 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[cim_output_s0_x] -> op_hcompute_cim_stencil[cim_s0_x = 1 + cim_output_s0_x] : 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[cim_output_s0_x] -> op_hcompute_cim_stencil[cim_s0_x = cim_output_s0_x] : 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lxy_stencil[lxy_s0_x = 2 + lgxy_s1_x] : 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lxy_stencil[lxy_s0_x = 1 + lgxy_s1_x] : 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[lgxy_s1_x] -> op_hcompute_lxy_stencil[lxy_s0_x = lgxy_s1_x] : 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[grad_x_unclamp_s1_x] -> op_hcompute_padded16_global_wrapper_stencil[padded16_global_wrapper_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lyy_stencil[lyy_s0_x = 2 + lgyy_s1_x] : 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lyy_stencil[lyy_s0_x = 1 + lgyy_s1_x] : 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[lgyy_s1_x] -> op_hcompute_lyy_stencil[lyy_s0_x = lgyy_s1_x] : 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lxx_stencil[lxx_s0_x = 2 + lgxx_s1_x] : 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lxx_stencil[lxx_s0_x = 1 + lgxx_s1_x] : 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[lgxx_s1_x] -> op_hcompute_lxx_stencil[lxx_s0_x = lgxx_s1_x] : 0 <= lgxx_s1_x <= 59 }
Done with schedule
Clockwork schedules...
  op_hcompute_cim_output_stencil: { [i] -> [(6 + i)] }
  op_hcompute_cim_stencil: { [i] -> [(4 + i)] }
  op_hcompute_grad_x_unclamp_stencil: { [i] -> [(2 + i)] }
  op_hcompute_grad_x_unclamp_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_grad_y_unclamp_stencil: { [i] -> [(2 + i)] }
  op_hcompute_grad_y_unclamp_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(6 + i)] }
  op_hcompute_lgxx_stencil: { [i] -> [(4 + i)] }
  op_hcompute_lgxx_stencil_1: { [i] -> [(4 + i)] }
  op_hcompute_lgxy_stencil: { [i] -> [(4 + i)] }
  op_hcompute_lgxy_stencil_1: { [i] -> [(4 + i)] }
  op_hcompute_lgyy_stencil: { [i] -> [(4 + i)] }
  op_hcompute_lgyy_stencil_1: { [i] -> [(4 + i)] }
  op_hcompute_lxx_stencil: { [i] -> [(2 + i)] }
  op_hcompute_lxy_stencil: { [i] -> [(2 + i)] }
  op_hcompute_lyy_stencil: { [i] -> [(2 + i)] }
  op_hcompute_padded16_global_wrapper_stencil: { [i] -> [(i)] }
Original Loop iis
op_hcompute_padded16_global_wrapper_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_padded16_global_wrapper_stencil
  padded16_global_wrapper_s0_y q: 1, d = 0
    ii = 64
op_hcompute_padded16_global_wrapper_stencil
  padded16_global_wrapper_s0_x q: 1, d = 0
    ii = 1
op_hcompute_grad_x_unclamp_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_grad_x_unclamp_stencil
  grad_x_unclamp_s0_y q: 1, d = 2
    ii = 64
op_hcompute_grad_x_unclamp_stencil
  grad_x_unclamp_s0_x q: 1, d = 2
    ii = 1
op_hcompute_grad_x_unclamp_stencil_1
  root q: 1, d = 0
    ii = 4096
op_hcompute_grad_x_unclamp_stencil_1
  grad_x_unclamp_s1_y q: 1, d = 2
    ii = 64
op_hcompute_grad_x_unclamp_stencil_1
  grad_x_unclamp_s1_x q: 1, d = 2
    ii = 1
op_hcompute_lxx_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_lxx_stencil
  lxx_s0_y q: 1, d = 2
    ii = 64
op_hcompute_lxx_stencil
  lxx_s0_x q: 1, d = 2
    ii = 1
op_hcompute_lgxx_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_lgxx_stencil
  lgxx_s0_y q: 1, d = 4
    ii = 64
op_hcompute_lgxx_stencil
  lgxx_s0_x q: 1, d = 4
    ii = 1
op_hcompute_lgxx_stencil_1
  root q: 1, d = 0
    ii = 4096
op_hcompute_lgxx_stencil_1
  lgxx_s1_y q: 1, d = 4
    ii = 64
op_hcompute_lgxx_stencil_1
  lgxx_s1_x q: 1, d = 4
    ii = 1
op_hcompute_grad_y_unclamp_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_grad_y_unclamp_stencil
  grad_y_unclamp_s0_y q: 1, d = 2
    ii = 64
op_hcompute_grad_y_unclamp_stencil
  grad_y_unclamp_s0_x q: 1, d = 2
    ii = 1
op_hcompute_grad_y_unclamp_stencil_1
  root q: 1, d = 0
    ii = 4096
op_hcompute_grad_y_unclamp_stencil_1
  grad_y_unclamp_s1_y q: 1, d = 2
    ii = 64
op_hcompute_grad_y_unclamp_stencil_1
  grad_y_unclamp_s1_x q: 1, d = 2
    ii = 1
op_hcompute_lxy_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_lxy_stencil
  lxy_s0_y q: 1, d = 2
    ii = 64
op_hcompute_lxy_stencil
  lxy_s0_x q: 1, d = 2
    ii = 1
op_hcompute_lgxy_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_lgxy_stencil
  lgxy_s0_y q: 1, d = 4
    ii = 64
op_hcompute_lgxy_stencil
  lgxy_s0_x q: 1, d = 4
    ii = 1
op_hcompute_lgxy_stencil_1
  root q: 1, d = 0
    ii = 4096
op_hcompute_lgxy_stencil_1
  lgxy_s1_y q: 1, d = 4
    ii = 64
op_hcompute_lgxy_stencil_1
  lgxy_s1_x q: 1, d = 4
    ii = 1
op_hcompute_lyy_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_lyy_stencil
  lyy_s0_y q: 1, d = 2
    ii = 64
op_hcompute_lyy_stencil
  lyy_s0_x q: 1, d = 2
    ii = 1
op_hcompute_lgyy_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_lgyy_stencil
  lgyy_s0_y q: 1, d = 4
    ii = 64
op_hcompute_lgyy_stencil
  lgyy_s0_x q: 1, d = 4
    ii = 1
op_hcompute_lgyy_stencil_1
  root q: 1, d = 0
    ii = 4096
op_hcompute_lgyy_stencil_1
  lgyy_s1_y q: 1, d = 4
    ii = 64
op_hcompute_lgyy_stencil_1
  lgyy_s1_x q: 1, d = 4
    ii = 1
op_hcompute_cim_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_cim_stencil
  cim_s0_y q: 1, d = 4
    ii = 64
op_hcompute_cim_stencil
  cim_s0_x q: 1, d = 4
    ii = 1
op_hcompute_cim_output_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_cim_output_stencil
  cim_output_s0_y q: 1, d = 6
    ii = 64
op_hcompute_cim_output_stencil
  cim_output_s0_x q: 1, d = 6
    ii = 1
op_hcompute_hw_output_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_hw_output_stencil
  hw_output_s0_y_yi q: 1, d = 6
    ii = 64
op_hcompute_hw_output_stencil
  hw_output_s0_x_xi q: 1, d = 6
    ii = 1
inner ops: op_hcompute_padded16_global_wrapper_stencil
inner ops: op_hcompute_padded16_global_wrapper_stencil, offset: 0
inner ops: op_hcompute_grad_x_unclamp_stencil
inner ops: op_hcompute_grad_x_unclamp_stencil, offset: 0
inner ops: op_hcompute_grad_x_unclamp_stencil_1
force inner op: op_hcompute_grad_x_unclamp_stencil, has same offset as update: 0
inner ops: op_hcompute_grad_x_unclamp_stencil_1, offset: 0
inner ops: op_hcompute_lxx_stencil
inner ops: op_hcompute_lxx_stencil, offset: 0
inner ops: op_hcompute_lgxx_stencil
inner ops: op_hcompute_lgxx_stencil, offset: 0
inner ops: op_hcompute_lgxx_stencil_1
force inner op: op_hcompute_lgxx_stencil, has same offset as update: 0
inner ops: op_hcompute_lgxx_stencil_1, offset: 0
inner ops: op_hcompute_grad_y_unclamp_stencil
inner ops: op_hcompute_grad_y_unclamp_stencil, offset: 0
inner ops: op_hcompute_grad_y_unclamp_stencil_1
force inner op: op_hcompute_grad_y_unclamp_stencil, has same offset as update: 0
inner ops: op_hcompute_grad_y_unclamp_stencil_1, offset: 0
inner ops: op_hcompute_lxy_stencil
inner ops: op_hcompute_lxy_stencil, offset: 0
inner ops: op_hcompute_lgxy_stencil
inner ops: op_hcompute_lgxy_stencil, offset: 0
inner ops: op_hcompute_lgxy_stencil_1
force inner op: op_hcompute_lgxy_stencil, has same offset as update: 0
inner ops: op_hcompute_lgxy_stencil_1, offset: 0
inner ops: op_hcompute_lyy_stencil
inner ops: op_hcompute_lyy_stencil, offset: 0
inner ops: op_hcompute_lgyy_stencil
inner ops: op_hcompute_lgyy_stencil, offset: 0
inner ops: op_hcompute_lgyy_stencil_1
force inner op: op_hcompute_lgyy_stencil, has same offset as update: 0
inner ops: op_hcompute_lgyy_stencil_1, offset: 0
inner ops: op_hcompute_cim_stencil
inner ops: op_hcompute_cim_stencil, offset: 0
inner ops: op_hcompute_cim_output_stencil
inner ops: op_hcompute_cim_output_stencil, offset: 0
inner ops: op_hcompute_hw_output_stencil
inner ops: op_hcompute_hw_output_stencil, offset: 0
schedule for n: { start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedmap = { start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x] }
schedmap = { start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedmap = { start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedmap = { start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] }
schedmap = { start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] }
schedmap = { start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
orginal schedule before relax: { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedmap = { start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x] }
schedmap = { start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedmap = { start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedmap = { start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] }
schedmap = { start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] }
schedmap = { start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
Start times...
{ start_op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; start_op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; start_op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; start_op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; start_op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; start_op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; start_op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; start_op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; start_op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; start_op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; start_op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; start_op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; start_op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; start_op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; start_op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; start_op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; start_op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  pre adjustment min: { [0] }
Adjusting delays of harris
schedule for n: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedmap = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x] }
schedmap = { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x] }
schedule for n: { op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x] }
sorted kernel: {}
sorted kernel: {}
sorted kernel: {}
sorted kernel: {grad_x_unclamp_s0_y}
sorted kernel: {grad_x_unclamp_s0_y}
sorted kernel: {grad_x_unclamp_s0_y}
sorted kernel: {grad_x_unclamp_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y, lxy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y, lxy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y, lxy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y, lxy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y, lxy_s0_y, lgxy_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y, lxy_s0_y, lgxy_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y, lxy_s0_y, lgxy_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y, lxy_s0_y, lgxy_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y, lxy_s0_y, lgxy_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y, lxy_s0_y, lgxy_s1_y, lyy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y, lxy_s0_y, lgxy_s1_y, lyy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y, lxy_s0_y, lgxy_s1_y, lyy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y, lxy_s0_y, lgxy_s1_y, lyy_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y, lxy_s0_y, lgxy_s1_y, lyy_s0_y, lgyy_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y, lxy_s0_y, lgxy_s1_y, lyy_s0_y, lgyy_s1_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y, lxy_s0_y, lgxy_s1_y, lyy_s0_y, lgyy_s1_y, cim_s0_y}
sorted kernel: {grad_x_unclamp_s0_y, grad_y_unclamp_s0_y, lgxx_s0_y, lgxy_s0_y, lgyy_s0_y, padded16_global_wrapper_s0_y, grad_x_unclamp_s1_y, grad_y_unclamp_s1_y, lxx_s0_y, lgxx_s1_y, lxy_s0_y, lgxy_s1_y, lyy_s0_y, lgyy_s1_y, cim_s0_y, cim_output_s0_y}
Adjusting delay of grad_x_unclamp_s0_y
Adjusting delay of grad_y_unclamp_s0_y
Adjusting delay of lgxx_s0_y
Adjusting delay of lgxy_s0_y
Adjusting delay of lgyy_s0_y
Adjusting delay of padded16_global_wrapper_s0_y
read map: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
Kernel <padded16_global_wrapper_s0_y> has Delay slack: 0
Offset with in parent: 0
Adjusting delay of grad_x_unclamp_s1_y
read map: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[1 + grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[1 + grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
write map: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
writes: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
reads : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[1 + grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[1 + grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> grad_x_unclamp_stencil_clkwrk_dsa0[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -2 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -64 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -66 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -128 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> grad_x_unclamp_stencil_clkwrk_dsa0[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_grad_x_unclamp_stencil
    sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
    Consumers: op_hcompute_grad_x_unclamp_stencil_1
    sched: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
write map: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
writes: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[1 + grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[1 + grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -2 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -64 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -66 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -128 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> grad_x_unclamp_stencil_clkwrk_dsa0[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [130 + i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0; [i0] -> [128 + i0] : 0 <= i0 <= 3967 and 64*floor((i0)/64) <= -2 + i0; [i0] -> [66 + i0] : 62 <= i0 <= 4029 and 64*floor((2 + i0)/64) <= i0; [i0] -> [64 + i0] : 64 <= i0 <= 4031 and 64*floor((i0)/64) <= -2 + i0; [i0] -> [2 + i0] : 126 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= i0; [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [130]; [128]; [66]; [64]; [2]; [0] }
    Producers: op_hcompute_padded16_global_wrapper_stencil
    sched: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
    Consumers: op_hcompute_grad_x_unclamp_stencil_1
    sched: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Kernel <grad_x_unclamp_s1_y> has Delay slack: 0
Offset with in parent: 128
Adjusting delay of grad_y_unclamp_s1_y
read map: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, 2 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_y_unclamp_s1_y, 2 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, 1 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_y_unclamp_s1_y, 1 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
write map: { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
writes: { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
reads : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, 2 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_y_unclamp_s1_y, 2 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, 1 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_y_unclamp_s1_y, 1 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> grad_y_unclamp_stencil_clkwrk_dsa1[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> grad_y_unclamp_stencil_clkwrk_dsa1[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -1 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -2 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -128 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -129 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_grad_y_unclamp_stencil
    sched: { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
    Consumers: op_hcompute_grad_y_unclamp_stencil_1
    sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
write map: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
writes: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, 2 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_y_unclamp_s1_y, 2 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, 1 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_y_unclamp_s1_y, 1 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> grad_y_unclamp_stencil_clkwrk_dsa1[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -1 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -2 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -128 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -129 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> padded16_global_wrapper_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [130 + i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0; [i0] -> [129 + i0] : -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) < i0; [i0] -> [128 + i0] : 0 <= i0 <= 3967 and 64*floor((i0)/64) <= -2 + i0; [i0] -> [2 + i0] : 126 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= i0; [i0] -> [1 + i0] : 127 <= i0 <= 4094 and 64*floor((1 + i0)/64) < i0; [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [130]; [129]; [128]; [2]; [1]; [0] }
    Producers: op_hcompute_padded16_global_wrapper_stencil
    sched: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
    Consumers: op_hcompute_grad_y_unclamp_stencil_1
    sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Kernel <grad_y_unclamp_s1_y> has Delay slack: 0
Offset with in parent: 128
Adjusting delay of lxx_s0_y
read map: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> grad_x_unclamp_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
write map: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
writes: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
reads : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> grad_x_unclamp_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> grad_x_unclamp_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> grad_x_unclamp_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_grad_x_unclamp_stencil_1
    sched: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
    Consumers: op_hcompute_lxx_stencil
    sched: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
Kernel <lxx_s0_y> has Delay slack: 0
Offset with in parent: 128
Adjusting delay of lgxx_s1_y
read map: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil_clkwrk_dsa2[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, 2 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, 2 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[lgxx_s1_y, 2 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, 1 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, 1 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[lgxx_s1_y, 1 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
write map: { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> lgxx_stencil_clkwrk_dsa2[lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
writes: { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> lgxx_stencil_clkwrk_dsa2[lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
reads : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil_clkwrk_dsa2[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, 2 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, 2 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[lgxx_s1_y, 2 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, 1 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, 1 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[lgxx_s1_y, 1 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> lgxx_stencil_clkwrk_dsa2[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> lgxx_stencil_clkwrk_dsa2[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lxx_stencil[o0, -130 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> lxx_stencil[o0, -131 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> lxx_stencil[o0, -132 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> lxx_stencil[o0, -194 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> lxx_stencil[o0, -195 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> lxx_stencil[o0, -196 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> lxx_stencil[o0, -258 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lxx_stencil[o0, -259 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lxx_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_lgxx_stencil
    sched: { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
    Consumers: op_hcompute_lgxx_stencil_1
    sched: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
write map: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
writes: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
reads : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil_clkwrk_dsa2[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, 2 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, 2 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[lgxx_s1_y, 2 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, 1 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, 1 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[lgxx_s1_y, 1 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> lxx_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lgxx_stencil_clkwrk_dsa2[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lxx_stencil[o0, -130 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> lxx_stencil[o0, -131 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> lxx_stencil[o0, -132 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> lxx_stencil[o0, -194 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> lxx_stencil[o0, -195 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> lxx_stencil[o0, -196 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> lxx_stencil[o0, -258 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lxx_stencil[o0, -259 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lxx_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [130 + i0] : 126 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= -2 + i0; [i0] -> [129 + i0] : 127 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -3 + i0; [i0] -> [128 + i0] : 128 <= i0 <= 3967 and 64*floor((i0)/64) <= -4 + i0; [i0] -> [66 + i0] : 190 <= i0 <= 4029 and 64*floor((2 + i0)/64) <= -2 + i0; [i0] -> [65 + i0] : 191 <= i0 <= 4030 and 64*floor((1 + i0)/64) <= -3 + i0; [i0] -> [64 + i0] : 192 <= i0 <= 4031 and 64*floor((i0)/64) <= -4 + i0; [i0] -> [2 + i0] : 254 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= -2 + i0; [i0] -> [1 + i0] : 255 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -3 + i0; [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [130]; [129]; [128]; [66]; [65]; [64]; [2]; [1]; [0] }
    Producers: op_hcompute_lxx_stencil
    sched: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
    Consumers: op_hcompute_lgxx_stencil_1
    sched: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Kernel <lgxx_s1_y> has Delay slack: 0
Offset with in parent: 256
Adjusting delay of lxy_s0_y
read map: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> grad_y_unclamp_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> grad_x_unclamp_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
write map: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
writes: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
reads : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> grad_y_unclamp_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> grad_x_unclamp_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> grad_x_unclamp_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> grad_x_unclamp_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> grad_y_unclamp_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_grad_x_unclamp_stencil_1
    sched: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
    Consumers: op_hcompute_lxy_stencil
    sched: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
write map: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
writes: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
reads : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> grad_y_unclamp_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> grad_x_unclamp_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> grad_y_unclamp_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> grad_x_unclamp_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> grad_y_unclamp_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_grad_y_unclamp_stencil_1
    sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
    Consumers: op_hcompute_lxy_stencil
    sched: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
Kernel <lxy_s0_y> has Delay slack: 0
Offset with in parent: 128
Adjusting delay of lgxy_s1_y
read map: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil_clkwrk_dsa3[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, 2 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, 2 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[lgxy_s1_y, 2 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, 1 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, 1 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[lgxy_s1_y, 1 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
write map: { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> lgxy_stencil_clkwrk_dsa3[lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
writes: { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> lgxy_stencil_clkwrk_dsa3[lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
reads : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil_clkwrk_dsa3[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, 2 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, 2 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[lgxy_s1_y, 2 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, 1 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, 1 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[lgxy_s1_y, 1 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> lgxy_stencil_clkwrk_dsa3[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> lgxy_stencil_clkwrk_dsa3[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lxy_stencil[o0, -130 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> lxy_stencil[o0, -131 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> lxy_stencil[o0, -132 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> lxy_stencil[o0, -194 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> lxy_stencil[o0, -195 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> lxy_stencil[o0, -196 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> lxy_stencil[o0, -258 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lxy_stencil[o0, -259 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lxy_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_lgxy_stencil
    sched: { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
    Consumers: op_hcompute_lgxy_stencil_1
    sched: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
write map: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
writes: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
reads : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil_clkwrk_dsa3[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, 2 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, 2 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[lgxy_s1_y, 2 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, 1 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, 1 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[lgxy_s1_y, 1 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> lxy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lgxy_stencil_clkwrk_dsa3[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lxy_stencil[o0, -130 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> lxy_stencil[o0, -131 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> lxy_stencil[o0, -132 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> lxy_stencil[o0, -194 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> lxy_stencil[o0, -195 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> lxy_stencil[o0, -196 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> lxy_stencil[o0, -258 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lxy_stencil[o0, -259 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lxy_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [130 + i0] : 126 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= -2 + i0; [i0] -> [129 + i0] : 127 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -3 + i0; [i0] -> [128 + i0] : 128 <= i0 <= 3967 and 64*floor((i0)/64) <= -4 + i0; [i0] -> [66 + i0] : 190 <= i0 <= 4029 and 64*floor((2 + i0)/64) <= -2 + i0; [i0] -> [65 + i0] : 191 <= i0 <= 4030 and 64*floor((1 + i0)/64) <= -3 + i0; [i0] -> [64 + i0] : 192 <= i0 <= 4031 and 64*floor((i0)/64) <= -4 + i0; [i0] -> [2 + i0] : 254 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= -2 + i0; [i0] -> [1 + i0] : 255 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -3 + i0; [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [130]; [129]; [128]; [66]; [65]; [64]; [2]; [1]; [0] }
    Producers: op_hcompute_lxy_stencil
    sched: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
    Consumers: op_hcompute_lgxy_stencil_1
    sched: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Kernel <lgxy_s1_y> has Delay slack: 0
Offset with in parent: 256
Adjusting delay of lyy_s0_y
read map: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> grad_y_unclamp_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
write map: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
writes: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
reads : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> grad_y_unclamp_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> grad_y_unclamp_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> grad_y_unclamp_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_grad_y_unclamp_stencil_1
    sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
    Consumers: op_hcompute_lyy_stencil
    sched: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Kernel <lyy_s0_y> has Delay slack: 0
Offset with in parent: 128
Adjusting delay of lgyy_s1_y
read map: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil_clkwrk_dsa4[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, 2 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, 2 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[lgyy_s1_y, 2 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, 1 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, 1 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[lgyy_s1_y, 1 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
write map: { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> lgyy_stencil_clkwrk_dsa4[lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
writes: { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> lgyy_stencil_clkwrk_dsa4[lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
reads : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil_clkwrk_dsa4[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, 2 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, 2 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[lgyy_s1_y, 2 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, 1 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, 1 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[lgyy_s1_y, 1 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> lgyy_stencil_clkwrk_dsa4[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> lgyy_stencil_clkwrk_dsa4[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lyy_stencil[o0, -130 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> lyy_stencil[o0, -131 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> lyy_stencil[o0, -132 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> lyy_stencil[o0, -194 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> lyy_stencil[o0, -195 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> lyy_stencil[o0, -196 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> lyy_stencil[o0, -258 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lyy_stencil[o0, -259 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lyy_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_lgyy_stencil
    sched: { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
    Consumers: op_hcompute_lgyy_stencil_1
    sched: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
write map: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
writes: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
reads : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil_clkwrk_dsa4[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, 2 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, 2 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[lgyy_s1_y, 2 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, 1 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, 1 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[lgyy_s1_y, 1 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> lyy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lgyy_stencil_clkwrk_dsa4[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lyy_stencil[o0, -130 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> lyy_stencil[o0, -131 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> lyy_stencil[o0, -132 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> lyy_stencil[o0, -194 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> lyy_stencil[o0, -195 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> lyy_stencil[o0, -196 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> lyy_stencil[o0, -258 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lyy_stencil[o0, -259 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lyy_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [130 + i0] : 126 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= -2 + i0; [i0] -> [129 + i0] : 127 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -3 + i0; [i0] -> [128 + i0] : 128 <= i0 <= 3967 and 64*floor((i0)/64) <= -4 + i0; [i0] -> [66 + i0] : 190 <= i0 <= 4029 and 64*floor((2 + i0)/64) <= -2 + i0; [i0] -> [65 + i0] : 191 <= i0 <= 4030 and 64*floor((1 + i0)/64) <= -3 + i0; [i0] -> [64 + i0] : 192 <= i0 <= 4031 and 64*floor((i0)/64) <= -4 + i0; [i0] -> [2 + i0] : 254 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= -2 + i0; [i0] -> [1 + i0] : 255 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -3 + i0; [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [130]; [129]; [128]; [66]; [65]; [64]; [2]; [1]; [0] }
    Producers: op_hcompute_lyy_stencil
    sched: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
    Consumers: op_hcompute_lgyy_stencil_1
    sched: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Kernel <lgyy_s1_y> has Delay slack: 0
Offset with in parent: 256
Adjusting delay of cim_s0_y
read map: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgxx_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgxy_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgyy_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
write map: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
writes: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
reads : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgxx_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgxy_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgyy_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> lgxx_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> lgxy_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lgxx_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lgyy_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_lgxx_stencil_1
    sched: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
    Consumers: op_hcompute_cim_stencil
    sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
write map: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
writes: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
reads : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgxx_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgxy_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgyy_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> lgxy_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> lgxy_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lgxx_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lgyy_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_lgxy_stencil_1
    sched: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
    Consumers: op_hcompute_cim_stencil
    sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
write map: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
writes: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
reads : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgxx_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgxy_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgyy_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> lgyy_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> lgxy_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lgxx_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> lgyy_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_lgyy_stencil_1
    sched: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
    Consumers: op_hcompute_cim_stencil
    sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
Kernel <cim_s0_y> has Delay slack: 0
Offset with in parent: 256
Adjusting delay of cim_output_s0_y
read map: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[2 + cim_output_s0_y, 2 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[1 + cim_output_s0_y, 2 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, 2 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[2 + cim_output_s0_y, 1 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[1 + cim_output_s0_y, 1 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, 1 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[2 + cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[1 + cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
write map: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
writes: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
reads : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[2 + cim_output_s0_y, 2 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[1 + cim_output_s0_y, 2 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, 2 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[2 + cim_output_s0_y, 1 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[1 + cim_output_s0_y, 1 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, 1 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[2 + cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[1 + cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> cim_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> cim_stencil[o0, -260 + i0 - 64o0] : 2 <= o0 <= 59 and -319 + i0 <= 64o0 <= -262 + i0; [i0] -> cim_stencil[o0, -261 + i0 - 64o0] : 2 <= o0 <= 59 and -319 + i0 <= 64o0 <= -262 + i0; [i0] -> cim_stencil[o0, -262 + i0 - 64o0] : 2 <= o0 <= 59 and -319 + i0 <= 64o0 <= -262 + i0; [i0] -> cim_stencil[o0, -324 + i0 - 64o0] : 0 < o0 <= 58 and -383 + i0 <= 64o0 <= -326 + i0; [i0] -> cim_stencil[o0, -325 + i0 - 64o0] : 0 < o0 <= 58 and -383 + i0 <= 64o0 <= -326 + i0; [i0] -> cim_stencil[o0, -326 + i0 - 64o0] : 0 < o0 <= 58 and -383 + i0 <= 64o0 <= -326 + i0; [i0] -> cim_stencil[o0, -388 + i0 - 64o0] : 0 <= o0 <= 57 and -447 + i0 <= 64o0 <= -390 + i0; [i0] -> cim_stencil[o0, -389 + i0 - 64o0] : 0 <= o0 <= 57 and -447 + i0 <= 64o0 <= -390 + i0; [i0] -> cim_stencil[o0, -390 + i0 - 64o0] : 0 <= o0 <= 57 and -447 + i0 <= 64o0 <= -390 + i0 }
PC times     : { [i0] -> [130 + i0] : 254 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= -4 + i0; [i0] -> [129 + i0] : 255 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -5 + i0; [i0] -> [128 + i0] : 256 <= i0 <= 3967 and 64*floor((i0)/64) <= -6 + i0; [i0] -> [66 + i0] : 318 <= i0 <= 4029 and 64*floor((2 + i0)/64) <= -4 + i0; [i0] -> [65 + i0] : 319 <= i0 <= 4030 and 64*floor((1 + i0)/64) <= -5 + i0; [i0] -> [64 + i0] : 320 <= i0 <= 4031 and 64*floor((i0)/64) <= -6 + i0; [i0] -> [2 + i0] : 382 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= -4 + i0; [i0] -> [1 + i0] : 383 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -5 + i0; [i0] -> [i0] : 384 <= i0 <= 4095 and 64*floor((i0)/64) <= -6 + i0 }
DDs          : { [130]; [129]; [128]; [66]; [65]; [64]; [2]; [1]; [0] }
    Producers: op_hcompute_cim_stencil
    sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
    Consumers: op_hcompute_cim_output_stencil
    sched: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Kernel <cim_output_s0_y> has Delay slack: 0
Offset with in parent: 384
Adjusting delay of hw_output_s0_y_yi
read map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
write map: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_output_stencil[cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
writes: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_output_stencil[cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
reads : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> cim_output_stencil[o0, -390 + i0 - 64o0] : 0 <= o0 <= 57 and -447 + i0 <= 64o0 <= -390 + i0 }
Time to read : { [i0] -> cim_output_stencil[o0, -390 + i0 - 64o0] : 0 <= o0 <= 57 and -447 + i0 <= 64o0 <= -390 + i0 }
PC times     : { [i0] -> [i0] : 384 <= i0 <= 4095 and 64*floor((i0)/64) <= -6 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_cim_output_stencil
    sched: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
    Consumers: op_hcompute_hw_output_stencil
    sched: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Kernel <hw_output_s0_y_yi> has Delay slack: 0
Offset with in parent: 384
    Find buffers need to be rewritten: grad_x_unclamp_stencil_clkwrk_dsa0
    Find buffers need to be rewritten: grad_y_unclamp_stencil_clkwrk_dsa1
    Find buffers need to be rewritten: lgxx_stencil_clkwrk_dsa2
    Find buffers need to be rewritten: lgxy_stencil_clkwrk_dsa3
    Find buffers need to be rewritten: lgyy_stencil_clkwrk_dsa4
    Find buffers need to be rewritten: padded16_global_wrapper_stencil

Filter buffers...

schedule for n: { start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedmap = { start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x] }
schedmap = { start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedmap = { start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedmap = { start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] }
schedmap = { start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] }
schedmap = { start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
Final schedule after relax: { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedmap = { end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] }
schedule for n: { end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x]; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
Final end schedule after relax: { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x]; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedmap = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x] }
schedmap = { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x] }
schedule for n: { op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x] }
Computing validity deps for cim_output_stencil
Computing validity deps for cim_stencil
Computing validity deps for grad_x_unclamp_stencil
Computing validity deps for grad_x_unclamp_stencil_clkwrk_dsa0
Computing validity deps for grad_y_unclamp_stencil
Computing validity deps for grad_y_unclamp_stencil_clkwrk_dsa1
Computing validity deps for hw_output_stencil
Computing validity deps for lgxx_stencil
Computing validity deps for lgxx_stencil_clkwrk_dsa2
Computing validity deps for lgxy_stencil
Computing validity deps for lgxy_stencil_clkwrk_dsa3
Computing validity deps for lgyy_stencil
Computing validity deps for lgyy_stencil_clkwrk_dsa4
Computing validity deps for lxx_stencil
Computing validity deps for lxy_stencil
Computing validity deps for lyy_stencil
Computing validity deps for padded16_global_wrapper_stencil
Computing validity deps for padded16_stencil
program: harris
Inputs...
  padded16_stencil
Outputs...
  hw_output_stencil
buffers...
  padded16_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int padded16_global_wrapper_s0_y = 0; padded16_global_wrapper_s0_y < 64; padded16_global_wrapper_s0_y++) {
    for (int padded16_global_wrapper_s0_x = 0; padded16_global_wrapper_s0_x < 64; padded16_global_wrapper_s0_x++) {
      op_hcompute_padded16_global_wrapper_stencil: padded16_global_wrapper_stencil[((padded16_global_wrapper_s0_y + -3) + 3)+0,    ((padded16_global_wrapper_s0_x + -3) + 3)+0] = hcompute_padded16_global_wrapper_stencil(padded16_stencil[(padded16_global_wrapper_s0_y + -3)+3,    (padded16_global_wrapper_s0_x + -3)+3])
    }
  }
  for (int grad_x_unclamp_s0_y = 0; grad_x_unclamp_s0_y < 62; grad_x_unclamp_s0_y++) {
    for (int grad_x_unclamp_s0_x = 0; grad_x_unclamp_s0_x < 62; grad_x_unclamp_s0_x++) {
      op_hcompute_grad_x_unclamp_stencil: grad_x_unclamp_stencil_clkwrk_dsa0[((grad_x_unclamp_s0_y + -2) + 2)+0,    ((grad_x_unclamp_s0_x + -2) + 2)+0] = hcompute_grad_x_unclamp_stencil()
    }
  }
  for (int grad_x_unclamp_s1_y = 0; grad_x_unclamp_s1_y < 62; grad_x_unclamp_s1_y++) {
    for (int grad_x_unclamp_s1_x = 0; grad_x_unclamp_s1_x < 62; grad_x_unclamp_s1_x++) {
      op_hcompute_grad_x_unclamp_stencil_1: grad_x_unclamp_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0] = hcompute_grad_x_unclamp_stencil_1(grad_x_unclamp_stencil_clkwrk_dsa0[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 4)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 3)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 3)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 4)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0])
    }
  }
  for (int lxx_s0_y = 0; lxx_s0_y < 62; lxx_s0_y++) {
    for (int lxx_s0_x = 0; lxx_s0_x < 62; lxx_s0_x++) {
      op_hcompute_lxx_stencil: lxx_stencil[((lxx_s0_y + -2) + 2)+0,    ((lxx_s0_x + -2) + 2)+0] = hcompute_lxx_stencil(grad_x_unclamp_stencil[((lxx_s0_y + -2) + 2)+0,    ((lxx_s0_x + -2) + 2)+0])
    }
  }
  for (int lgxx_s0_y = 0; lgxx_s0_y < 60; lgxx_s0_y++) {
    for (int lgxx_s0_x = 0; lgxx_s0_x < 60; lgxx_s0_x++) {
      op_hcompute_lgxx_stencil: lgxx_stencil_clkwrk_dsa2[((lgxx_s0_y + -1) + 1)+0,    ((lgxx_s0_x + -1) + 1)+0] = hcompute_lgxx_stencil()
    }
  }
  for (int lgxx_s1_y = 0; lgxx_s1_y < 60; lgxx_s1_y++) {
    for (int lgxx_s1_x = 0; lgxx_s1_x < 60; lgxx_s1_x++) {
      op_hcompute_lgxx_stencil_1: lgxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0] = hcompute_lgxx_stencil_1(lgxx_stencil_clkwrk_dsa2[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 2)+0], lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 3)+0], lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 2)+0], lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 3)+0], lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 1)+0], lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 3)+0], lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 2)+0])
    }
  }
  for (int grad_y_unclamp_s0_y = 0; grad_y_unclamp_s0_y < 62; grad_y_unclamp_s0_y++) {
    for (int grad_y_unclamp_s0_x = 0; grad_y_unclamp_s0_x < 62; grad_y_unclamp_s0_x++) {
      op_hcompute_grad_y_unclamp_stencil: grad_y_unclamp_stencil_clkwrk_dsa1[((grad_y_unclamp_s0_y + -2) + 2)+0,    ((grad_y_unclamp_s0_x + -2) + 2)+0] = hcompute_grad_y_unclamp_stencil()
    }
  }
  for (int grad_y_unclamp_s1_y = 0; grad_y_unclamp_s1_y < 62; grad_y_unclamp_s1_y++) {
    for (int grad_y_unclamp_s1_x = 0; grad_y_unclamp_s1_x < 62; grad_y_unclamp_s1_x++) {
      op_hcompute_grad_y_unclamp_stencil_1: grad_y_unclamp_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0] = hcompute_grad_y_unclamp_stencil_1(grad_y_unclamp_stencil_clkwrk_dsa1[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 3)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 4)+0], padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 3)+0])
    }
  }
  for (int lxy_s0_y = 0; lxy_s0_y < 62; lxy_s0_y++) {
    for (int lxy_s0_x = 0; lxy_s0_x < 62; lxy_s0_x++) {
      op_hcompute_lxy_stencil: lxy_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0] = hcompute_lxy_stencil(grad_x_unclamp_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0], grad_y_unclamp_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0])
    }
  }
  for (int lgxy_s0_y = 0; lgxy_s0_y < 60; lgxy_s0_y++) {
    for (int lgxy_s0_x = 0; lgxy_s0_x < 60; lgxy_s0_x++) {
      op_hcompute_lgxy_stencil: lgxy_stencil_clkwrk_dsa3[((lgxy_s0_y + -1) + 1)+0,    ((lgxy_s0_x + -1) + 1)+0] = hcompute_lgxy_stencil()
    }
  }
  for (int lgxy_s1_y = 0; lgxy_s1_y < 60; lgxy_s1_y++) {
    for (int lgxy_s1_x = 0; lgxy_s1_x < 60; lgxy_s1_x++) {
      op_hcompute_lgxy_stencil_1: lgxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0] = hcompute_lgxy_stencil_1(lgxy_stencil_clkwrk_dsa3[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 2)+0], lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 3)+0], lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 2)+0], lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 3)+0], lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 1)+0], lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 3)+0], lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 2)+0])
    }
  }
  for (int lyy_s0_y = 0; lyy_s0_y < 62; lyy_s0_y++) {
    for (int lyy_s0_x = 0; lyy_s0_x < 62; lyy_s0_x++) {
      op_hcompute_lyy_stencil: lyy_stencil[((lyy_s0_y + -2) + 2)+0,    ((lyy_s0_x + -2) + 2)+0] = hcompute_lyy_stencil(grad_y_unclamp_stencil[((lyy_s0_y + -2) + 2)+0,    ((lyy_s0_x + -2) + 2)+0])
    }
  }
  for (int lgyy_s0_y = 0; lgyy_s0_y < 60; lgyy_s0_y++) {
    for (int lgyy_s0_x = 0; lgyy_s0_x < 60; lgyy_s0_x++) {
      op_hcompute_lgyy_stencil: lgyy_stencil_clkwrk_dsa4[((lgyy_s0_y + -1) + 1)+0,    ((lgyy_s0_x + -1) + 1)+0] = hcompute_lgyy_stencil()
    }
  }
  for (int lgyy_s1_y = 0; lgyy_s1_y < 60; lgyy_s1_y++) {
    for (int lgyy_s1_x = 0; lgyy_s1_x < 60; lgyy_s1_x++) {
      op_hcompute_lgyy_stencil_1: lgyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0] = hcompute_lgyy_stencil_1(lgyy_stencil_clkwrk_dsa4[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 2)+0], lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 3)+0], lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 2)+0], lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 3)+0], lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 1)+0], lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 3)+0], lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 2)+0])
    }
  }
  for (int cim_s0_y = 0; cim_s0_y < 60; cim_s0_y++) {
    for (int cim_s0_x = 0; cim_s0_x < 60; cim_s0_x++) {
      op_hcompute_cim_stencil: cim_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0] = hcompute_cim_stencil(lgxx_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0], lgxy_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0], lgyy_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0])
    }
  }
  for (int cim_output_s0_y = 0; cim_output_s0_y < 58; cim_output_s0_y++) {
    for (int cim_output_s0_x = 0; cim_output_s0_x < 58; cim_output_s0_x++) {
      op_hcompute_cim_output_stencil: cim_output_stencil[cim_output_s0_y+0,  cim_output_s0_x+0] = hcompute_cim_output_stencil(cim_stencil[cim_output_s0_y+0,  cim_output_s0_x+0], cim_stencil[(cim_output_s0_y + 1)+0,  (cim_output_s0_x + 1)+0], cim_stencil[cim_output_s0_y+0,  (cim_output_s0_x + 1)+0], cim_stencil[cim_output_s0_y+0,  (cim_output_s0_x + 2)+0], cim_stencil[(cim_output_s0_y + 1)+0,  cim_output_s0_x+0], cim_stencil[(cim_output_s0_y + 1)+0,  (cim_output_s0_x + 2)+0], cim_stencil[(cim_output_s0_y + 2)+0,  cim_output_s0_x+0], cim_stencil[(cim_output_s0_y + 2)+0,  (cim_output_s0_x + 1)+0], cim_stencil[(cim_output_s0_y + 2)+0,  (cim_output_s0_x + 2)+0])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 58; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 58; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(cim_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
    }
  }
}
schedule for n: { start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedmap = { start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x] }
schedmap = { start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedmap = { start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedmap = { start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] }
schedmap = { start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] }
schedmap = { start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
Start times...
  { start_op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
  { start_op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { start_op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { start_op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { start_op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  { start_op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { start_op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { start_op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
  { start_op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
  { start_op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { start_op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { start_op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
  { start_op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
  { start_op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  { start_op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { start_op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { start_op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  min: { [0] }
schedule for n: { start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedmap = { start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x] }
schedmap = { start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedmap = { start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedmap = { start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] }
schedmap = { start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] }
schedmap = { start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x]; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedule for n: { end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedmap = { end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] }
schedule for n: { end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedule for n: { end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] }
schedmap = { end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x]; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
Schedule...
  { start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x] }
  { start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] }
  { start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x] }
  { start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x] }
  { start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
  { start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x] }
  { start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x] }
  { start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x] }
  { start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] }
  { start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] }
  { start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
  { start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x] }
  { start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x] }
  { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
  { start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x] }
  { start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x] }
  { start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
  Cycle deps: { end_op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lgxx_s0_y, lgxx_s1_x = lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; end_op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lgyy_s0_y, lgyy_s1_x = lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; end_op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = grad_x_unclamp_s0_y, grad_x_unclamp_s1_x = grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; end_op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 0 <= padded16_global_wrapper_s0_x <= 61; end_op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -1 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 < padded16_global_wrapper_s0_y <= 62 and 0 <= padded16_global_wrapper_s0_x <= 61; end_op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 61; end_op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 2 <= padded16_global_wrapper_s0_x <= 63; end_op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -1 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 0 < padded16_global_wrapper_s0_y <= 62 and 2 <= padded16_global_wrapper_s0_x <= 63; end_op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root' = 0, grad_x_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_x_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 2 <= padded16_global_wrapper_s0_x <= 63; end_op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_cim_stencil[root' = 0, cim_s0_y = lgyy_s1_y, cim_s0_x = lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; end_op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lyy_stencil[root' = 0, lyy_s0_y = grad_y_unclamp_s1_y, lyy_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; end_op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> start_op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = cim_s0_y, cim_output_s0_x = cim_s0_x] : 0 <= cim_s0_y <= 57 and 0 <= cim_s0_x <= 57; end_op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> start_op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -1 + cim_s0_y, cim_output_s0_x = cim_s0_x] : 0 < cim_s0_y <= 58 and 0 <= cim_s0_x <= 57; end_op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> start_op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -2 + cim_s0_y, cim_output_s0_x = cim_s0_x] : 2 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 57; end_op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> start_op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = cim_s0_y, cim_output_s0_x = -1 + cim_s0_x] : 0 <= cim_s0_y <= 57 and 0 < cim_s0_x <= 58; end_op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> start_op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -1 + cim_s0_y, cim_output_s0_x = -1 + cim_s0_x] : 0 < cim_s0_y <= 58 and 0 < cim_s0_x <= 58; end_op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> start_op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -2 + cim_s0_y, cim_output_s0_x = -1 + cim_s0_x] : 2 <= cim_s0_y <= 59 and 0 < cim_s0_x <= 58; end_op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> start_op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = cim_s0_y, cim_output_s0_x = -2 + cim_s0_x] : 0 <= cim_s0_y <= 57 and 2 <= cim_s0_x <= 59; end_op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> start_op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -1 + cim_s0_y, cim_output_s0_x = -2 + cim_s0_x] : 0 < cim_s0_y <= 58 and 2 <= cim_s0_x <= 59; end_op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> start_op_hcompute_cim_output_stencil[root' = 0, cim_output_s0_y = -2 + cim_s0_y, cim_output_s0_x = -2 + cim_s0_x] : 2 <= cim_s0_y <= 59 and 2 <= cim_s0_x <= 59; end_op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 0 <= padded16_global_wrapper_s0_x <= 61; end_op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 61; end_op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -1 + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 0 < padded16_global_wrapper_s0_x <= 62; end_op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -1 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 0 < padded16_global_wrapper_s0_x <= 62; end_op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 61 and 2 <= padded16_global_wrapper_s0_x <= 63; end_op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = -2 + padded16_global_wrapper_s0_y, grad_y_unclamp_s1_x = -2 + padded16_global_wrapper_s0_x] : 2 <= padded16_global_wrapper_s0_y <= 63 and 2 <= padded16_global_wrapper_s0_x <= 63; end_op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root' = 0, grad_y_unclamp_s1_y = grad_y_unclamp_s0_y, grad_y_unclamp_s1_x = grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; end_op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lxy_stencil[root' = 0, lxy_s0_y = grad_y_unclamp_s1_y, lxy_s0_x = grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; end_op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_cim_stencil[root' = 0, cim_s0_y = lgxx_s1_y, cim_s0_x = lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; end_op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lxy_stencil[root' = 0, lxy_s0_y = grad_x_unclamp_s1_y, lxy_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; end_op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lxy_s0_y, lgxy_s1_x = lxy_s0_x] : 0 <= lxy_s0_y <= 59 and 0 <= lxy_s0_x <= 59; end_op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -1 + lxy_s0_y, lgxy_s1_x = lxy_s0_x] : 0 < lxy_s0_y <= 60 and 0 <= lxy_s0_x <= 59; end_op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -2 + lxy_s0_y, lgxy_s1_x = lxy_s0_x] : 2 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 59; end_op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lxy_s0_y, lgxy_s1_x = -1 + lxy_s0_x] : 0 <= lxy_s0_y <= 59 and 0 < lxy_s0_x <= 60; end_op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -1 + lxy_s0_y, lgxy_s1_x = -1 + lxy_s0_x] : 0 < lxy_s0_y <= 60 and 0 < lxy_s0_x <= 60; end_op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -2 + lxy_s0_y, lgxy_s1_x = -1 + lxy_s0_x] : 2 <= lxy_s0_y <= 61 and 0 < lxy_s0_x <= 60; end_op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lxy_s0_y, lgxy_s1_x = -2 + lxy_s0_x] : 0 <= lxy_s0_y <= 59 and 2 <= lxy_s0_x <= 61; end_op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -1 + lxy_s0_y, lgxy_s1_x = -2 + lxy_s0_x] : 0 < lxy_s0_y <= 60 and 2 <= lxy_s0_x <= 61; end_op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = -2 + lxy_s0_y, lgxy_s1_x = -2 + lxy_s0_x] : 2 <= lxy_s0_y <= 61 and 2 <= lxy_s0_x <= 61; end_op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lyy_s0_y, lgyy_s1_x = lyy_s0_x] : 0 <= lyy_s0_y <= 59 and 0 <= lyy_s0_x <= 59; end_op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -1 + lyy_s0_y, lgyy_s1_x = lyy_s0_x] : 0 < lyy_s0_y <= 60 and 0 <= lyy_s0_x <= 59; end_op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -2 + lyy_s0_y, lgyy_s1_x = lyy_s0_x] : 2 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 59; end_op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lyy_s0_y, lgyy_s1_x = -1 + lyy_s0_x] : 0 <= lyy_s0_y <= 59 and 0 < lyy_s0_x <= 60; end_op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -1 + lyy_s0_y, lgyy_s1_x = -1 + lyy_s0_x] : 0 < lyy_s0_y <= 60 and 0 < lyy_s0_x <= 60; end_op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -2 + lyy_s0_y, lgyy_s1_x = -1 + lyy_s0_x] : 2 <= lyy_s0_y <= 61 and 0 < lyy_s0_x <= 60; end_op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = lyy_s0_y, lgyy_s1_x = -2 + lyy_s0_x] : 0 <= lyy_s0_y <= 59 and 2 <= lyy_s0_x <= 61; end_op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -1 + lyy_s0_y, lgyy_s1_x = -2 + lyy_s0_x] : 0 < lyy_s0_y <= 60 and 2 <= lyy_s0_x <= 61; end_op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgyy_stencil_1[root' = 0, lgyy_s1_y = -2 + lyy_s0_y, lgyy_s1_x = -2 + lyy_s0_x] : 2 <= lyy_s0_y <= 61 and 2 <= lyy_s0_x <= 61; end_op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lxx_s0_y, lgxx_s1_x = lxx_s0_x] : 0 <= lxx_s0_y <= 59 and 0 <= lxx_s0_x <= 59; end_op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -1 + lxx_s0_y, lgxx_s1_x = lxx_s0_x] : 0 < lxx_s0_y <= 60 and 0 <= lxx_s0_x <= 59; end_op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -2 + lxx_s0_y, lgxx_s1_x = lxx_s0_x] : 2 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 59; end_op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lxx_s0_y, lgxx_s1_x = -1 + lxx_s0_x] : 0 <= lxx_s0_y <= 59 and 0 < lxx_s0_x <= 60; end_op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -1 + lxx_s0_y, lgxx_s1_x = -1 + lxx_s0_x] : 0 < lxx_s0_y <= 60 and 0 < lxx_s0_x <= 60; end_op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -2 + lxx_s0_y, lgxx_s1_x = -1 + lxx_s0_x] : 2 <= lxx_s0_y <= 61 and 0 < lxx_s0_x <= 60; end_op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = lxx_s0_y, lgxx_s1_x = -2 + lxx_s0_x] : 0 <= lxx_s0_y <= 59 and 2 <= lxx_s0_x <= 61; end_op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -1 + lxx_s0_y, lgxx_s1_x = -2 + lxx_s0_x] : 0 < lxx_s0_y <= 60 and 2 <= lxx_s0_x <= 61; end_op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgxx_stencil_1[root' = 0, lgxx_s1_y = -2 + lxx_s0_y, lgxx_s1_x = -2 + lxx_s0_x] : 2 <= lxx_s0_y <= 61 and 2 <= lxx_s0_x <= 61; end_op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lgxy_stencil_1[root' = 0, lgxy_s1_y = lgxy_s0_y, lgxy_s1_x = lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; end_op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_cim_stencil[root' = 0, cim_s0_y = lgxy_s1_y, cim_s0_x = lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; end_op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_yi = cim_output_s0_y, hw_output_s0_x_xi = cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; end_op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lxx_stencil[root' = 0, lxx_s0_y = grad_x_unclamp_s1_y, lxx_s0_x = grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  Earlier deps: { start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lxx_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lxx_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y', lxx_s0_x'] : lxx_s0_x' > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lxx_s0_y'; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y', grad_y_unclamp_s0_x'] : grad_y_unclamp_s0_x' > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64grad_y_unclamp_s0_y'; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 391 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 391 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64cim_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lxy_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgxx_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y', lgxx_s1_x'] : lgxx_s1_x' > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgxx_s1_y'; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64cim_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lxy_s0_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64cim_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgxx_s1_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_output_s0_y_yi'; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_output_s0_y_yi'; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y', lxy_s0_x'] : lxy_s0_x' > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lxy_s0_y'; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lxy_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lxy_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lxy_s0_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lxx_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lyy_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64cim_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgxx_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgxy_s0_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lxy_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y', lyy_s0_x'] : lyy_s0_x' > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lyy_s0_y'; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y', cim_output_s0_x'] : cim_output_s0_x' > 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64cim_output_s0_y'; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lyy_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lxy_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lxx_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y', grad_y_unclamp_s0_x'] : grad_y_unclamp_s0_x' > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64grad_y_unclamp_s0_y'; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y', lgxy_s0_x'] : lgxy_s0_x' > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgxy_s0_y'; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y', lgxx_s0_x'] : lgxx_s0_x' > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgxx_s0_y'; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgxx_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lxx_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y', lgxx_s1_x'] : lgxx_s1_x' > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgxx_s1_y'; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y', cim_output_s0_x'] : cim_output_s0_x' > 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64cim_output_s0_y'; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lxx_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgxx_s1_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lxy_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y', grad_y_unclamp_s0_x'] : grad_y_unclamp_s0_x' > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64grad_y_unclamp_s0_y'; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64cim_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lxy_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -389 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lxx_s0_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lxx_s0_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lxx_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgyy_s1_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lxy_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64cim_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lyy_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lxx_s0_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64cim_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lxy_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgxx_s1_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgyy_s1_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lxx_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y', padded16_global_wrapper_s0_x'] : padded16_global_wrapper_s0_x' > 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64padded16_global_wrapper_s0_y'; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y', lgxy_s1_x'] : lgxy_s1_x' > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgxy_s1_y'; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y', lxy_s0_x'] : lxy_s0_x' > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lxy_s0_y'; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgyy_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64cim_s0_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lxx_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64cim_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64cim_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y', grad_y_unclamp_s1_x'] : grad_y_unclamp_s1_x' > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64grad_y_unclamp_s1_y'; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y', lxx_s0_x'] : lxx_s0_x' > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lxx_s0_y'; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y', lgxy_s0_x'] : lgxy_s0_x' > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgxy_s0_y'; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y', lgyy_s1_x'] : lgyy_s1_x' > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgyy_s1_y'; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -389 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64cim_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lxx_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64cim_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lyy_s0_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64cim_s0_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y', lgxx_s1_x'] : lgxx_s1_x' > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgxx_s1_y'; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lyy_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lxy_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lxx_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y', grad_x_unclamp_s0_x'] : grad_x_unclamp_s0_x' > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64grad_x_unclamp_s0_y'; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 391 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y', lgyy_s1_x'] : lgyy_s1_x' > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgyy_s1_y'; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lxy_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y', lgxy_s0_x'] : lgxy_s0_x' > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgxy_s0_y'; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y', lgxx_s0_x'] : lgxx_s0_x' > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgxx_s0_y'; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y', lgyy_s0_x'] : lgyy_s0_x' > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgyy_s0_y'; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lxy_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y', grad_y_unclamp_s1_x'] : grad_y_unclamp_s1_x' > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64grad_y_unclamp_s1_y'; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -389 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lxy_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y', lyy_s0_x'] : lyy_s0_x' > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lyy_s0_y'; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lxy_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lxx_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64cim_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lxy_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lxy_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lxx_s0_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgyy_s1_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lxy_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64cim_s0_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64cim_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lyy_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_output_s0_y_yi'; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lxy_s0_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lxx_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y', lgyy_s0_x'] : lgyy_s0_x' > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgyy_s0_y'; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lxy_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y', padded16_global_wrapper_s0_x'] : padded16_global_wrapper_s0_x' > 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64padded16_global_wrapper_s0_y'; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lxy_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y', lxy_s0_x'] : lxy_s0_x' > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lxy_s0_y'; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y', grad_x_unclamp_s1_x'] : grad_x_unclamp_s1_x' > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64grad_x_unclamp_s1_y'; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lxx_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y', lyy_s0_x'] : lyy_s0_x' > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lyy_s0_y'; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64cim_output_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lxx_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64cim_output_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y', lxx_s0_x'] : lxx_s0_x' > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lxx_s0_y'; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64cim_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y', lgxy_s1_x'] : lgxy_s1_x' > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgxy_s1_y'; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64cim_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y', cim_output_s0_x'] : cim_output_s0_x' > 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64cim_output_s0_y'; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lxx_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -389 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgyy_s0_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgxx_s1_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgxy_s1_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y', lgxy_s1_x'] : lgxy_s1_x' > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgxy_s1_y'; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lxx_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64cim_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y', lgyy_s0_x'] : lgyy_s0_x' > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgyy_s0_y'; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lyy_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lxx_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64cim_s0_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lxy_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lxx_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_output_s0_y_yi'; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y', grad_x_unclamp_s1_x'] : grad_x_unclamp_s1_x' > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64grad_x_unclamp_s1_y'; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64cim_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64cim_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgxy_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lxx_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lxy_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lxy_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y', grad_x_unclamp_s0_x'] : grad_x_unclamp_s0_x' > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64grad_x_unclamp_s0_y'; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y', padded16_global_wrapper_s0_x'] : padded16_global_wrapper_s0_x' > 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64padded16_global_wrapper_s0_y'; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lxy_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lxx_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lxy_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y', lgyy_s1_x'] : lgyy_s1_x' > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgyy_s1_y'; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y', grad_y_unclamp_s0_x'] : grad_y_unclamp_s0_x' > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64grad_y_unclamp_s0_y'; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lxy_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y', grad_y_unclamp_s1_x'] : grad_y_unclamp_s1_x' > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64grad_y_unclamp_s1_y'; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lxx_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lyy_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lxx_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lyy_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lxx_s0_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lxy_s0_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64cim_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -389 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 391 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lxx_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64cim_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lyy_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64cim_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y', grad_y_unclamp_s1_x'] : grad_y_unclamp_s1_x' > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64grad_y_unclamp_s1_y'; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lyy_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lxx_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64cim_s0_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lxx_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y', cim_s0_x'] : cim_s0_x' > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64cim_s0_y'; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgyy_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64cim_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lxx_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lxx_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lxx_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lxy_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64cim_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64cim_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y', lyy_s0_x'] : lyy_s0_x' > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lyy_s0_y'; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -389 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y', grad_x_unclamp_s1_x'] : grad_x_unclamp_s1_x' > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64grad_x_unclamp_s1_y'; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lxy_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64cim_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 391 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64cim_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64cim_output_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lxy_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 391 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y', lgxx_s1_x'] : lgxx_s1_x' > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgxx_s1_y'; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lyy_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lxy_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64cim_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lxx_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgxy_s1_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lyy_s0_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y', lgyy_s1_x'] : lgyy_s1_x' > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgyy_s1_y'; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lxy_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64cim_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y', cim_s0_x'] : cim_s0_x' > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64cim_s0_y'; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lxy_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lxy_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lxx_s0_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lxy_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y', grad_x_unclamp_s1_x'] : grad_x_unclamp_s1_x' > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64grad_x_unclamp_s1_y'; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgxy_s1_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 391 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgxy_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y', lgxx_s0_x'] : lgxx_s0_x' > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgxx_s0_y'; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y', cim_output_s0_x'] : cim_output_s0_x' > 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64cim_output_s0_y'; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64cim_s0_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y', lgxy_s0_x'] : lgxy_s0_x' > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgxy_s0_y'; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lxy_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lxx_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgxy_s1_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64cim_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y', lgxy_s1_x'] : lgxy_s1_x' > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgxy_s1_y'; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64cim_s0_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x > 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lyy_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lxx_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lxx_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y', padded16_global_wrapper_s0_x'] : padded16_global_wrapper_s0_x' > 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64padded16_global_wrapper_s0_y'; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lxy_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64cim_s0_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgyy_s1_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgyy_s1_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y', cim_s0_x'] : cim_s0_x' > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64cim_s0_y'; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y', cim_s0_x'] : cim_s0_x' > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64cim_s0_y'; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lxx_s0_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64cim_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgxx_s0_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y', lgxx_s0_x'] : lgxx_s0_x' > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgxx_s0_y'; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -259 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lgxx_s1_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lxx_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64cim_s0_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lyy_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lxx_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 261 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y', lxx_s0_x'] : lxx_s0_x' > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lxx_s0_y'; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x > 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_lxx_stencil[root', lxx_s0_y, lxx_s0_x] : lxx_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lxx_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64cim_s0_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x > 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y', lxy_s0_x'] : lxy_s0_x' > 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lxy_s0_y'; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -259 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64grad_y_unclamp_s1_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64cim_output_s0_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgxy_s1_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64grad_x_unclamp_s0_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgxy_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lyy_s0_y; start_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -389 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64cim_output_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lyy_s0_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x > 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x > 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64cim_s0_y + cim_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lxy_s0_y; start_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y', grad_x_unclamp_s0_x'] : grad_x_unclamp_s0_x' > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64grad_x_unclamp_s0_y'; start_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= 131 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64grad_y_unclamp_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_cim_output_stencil[root', cim_output_s0_y, cim_output_s0_x] : cim_output_s0_x >= -129 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64cim_output_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 391 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64padded16_global_wrapper_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lyy_s0_y; start_op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> end_op_hcompute_grad_y_unclamp_stencil_1[root', grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : grad_y_unclamp_s1_x >= 131 + 4096root + 64lgxy_s1_y + lgxy_s1_x - 4096root' - 64grad_y_unclamp_s1_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> end_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x >= -129 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y', grad_x_unclamp_s0_x'] : grad_x_unclamp_s0_x' > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64grad_x_unclamp_s0_y'; end_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x > 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64lgxx_s0_y; end_op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> end_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 261 + 4096root + 64cim_output_s0_y + cim_output_s0_x - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> start_op_hcompute_padded16_global_wrapper_stencil[root', padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : padded16_global_wrapper_s0_x >= 131 + 4096root + 64lyy_s0_y + lyy_s0_x - 4096root' - 64padded16_global_wrapper_s0_y; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> end_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= -129 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64lxy_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_lxy_stencil[root', lxy_s0_y, lxy_s0_x] : lxy_s0_x >= 131 + 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lxy_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_grad_y_unclamp_stencil[root', grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : grad_y_unclamp_s0_x >= 261 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64grad_y_unclamp_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgyy_s0_y; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64lgyy_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -389 + 4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_lgxx_stencil[root', lgxx_s0_y, lgxx_s0_x] : lgxx_s0_x >= 131 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64lgxx_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> start_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64grad_x_unclamp_s1_y; start_op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> start_op_hcompute_grad_x_unclamp_stencil[root', grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : grad_x_unclamp_s0_x >= 131 + 4096root + 64lgxx_s1_y + lgxx_s1_x - 4096root' - 64grad_x_unclamp_s0_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lyy_stencil[root', lyy_s0_y, lyy_s0_x] : lyy_s0_x >= 131 + 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lyy_s0_y; start_op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> end_op_hcompute_grad_x_unclamp_stencil_1[root', grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : grad_x_unclamp_s1_x > 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x - 4096root' - 64grad_x_unclamp_s1_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y', lgyy_s0_x'] : lgyy_s0_x' > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgyy_s0_y'; start_op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64lxy_s0_y + lxy_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> start_op_hcompute_lgyy_stencil_1[root', lgyy_s1_y, lgyy_s1_x] : lgyy_s1_x > 4096root + 64lgxy_s0_y + lgxy_s0_x - 4096root' - 64lgyy_s1_y; end_op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> end_op_hcompute_lgxx_stencil_1[root', lgxx_s1_y, lgxx_s1_x] : lgxx_s1_x > 4096root + 64lgyy_s0_y + lgyy_s0_x - 4096root' - 64lgxx_s1_y; end_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> end_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgxy_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_lgxy_stencil[root', lgxy_s0_y, lgxy_s0_x] : lgxy_s0_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64lgxy_s0_y; start_op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> start_op_hcompute_lgxy_stencil_1[root', lgxy_s1_y, lgxy_s1_x] : lgxy_s1_x > 4096root + 64lgyy_s1_y + lgyy_s1_x - 4096root' - 64lgxy_s1_y; end_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> end_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64cim_s0_y; start_op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> start_op_hcompute_lgyy_stencil[root', lgyy_s0_y, lgyy_s0_x] : lgyy_s0_x >= -129 + 4096root + 64lxx_s0_y + lxx_s0_x - 4096root' - 64lgyy_s0_y; end_op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> start_op_hcompute_cim_stencil[root', cim_s0_y, cim_s0_x] : cim_s0_x > 4096root + 64lgxx_s0_y + lgxx_s0_x - 4096root' - 64cim_s0_y }
  Violated deps: {  }
schedule for n: { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedmap = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x] }
schedmap = { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x] }
schedule for n: { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] }
schedule for n: { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x] }
schedule for n: { op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] }
schedmap = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 4096root + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x]; op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> [260 + 4096root + 64lgyy_s0_y + lgyy_s0_x]; op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> [260 + 4096root + 64lgyy_s1_y + lgyy_s1_x]; op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> [260 + 4096root + 64lgxx_s1_y + lgxx_s1_x]; op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> [260 + 4096root + 64lgxy_s1_y + lgxy_s1_x]; op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> [260 + 4096root + 64cim_s0_y + cim_s0_x]; op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 4096root + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x]; op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> [390 + 4096root + 64cim_output_s0_y + cim_output_s0_x]; op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> [260 + 4096root + 64lgxy_s0_y + lgxy_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> [130 + 4096root + 64lxy_s0_y + lxy_s0_x]; op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [4096root + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x]; op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> [260 + 4096root + 64lgxx_s0_y + lgxx_s0_x]; op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> [130 + 4096root + 64lxx_s0_y + lxx_s0_x]; op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 4096root + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x]; op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 4096root + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x]; op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> [130 + 4096root + 64lyy_s0_y + lyy_s0_x] }
result schedule: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Creating ports for op: padded16_global_wrapper_stencil
cond = { op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[((padded16_global_wrapper_s0_y + -3) + 3)+0,    ((padded16_global_wrapper_s0_x + -3) + 3)+0] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
		Consumed: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
Creating ports for op: padded16_stencil
cond = { op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_stencil[(padded16_global_wrapper_s0_y + -3)+3,    (padded16_global_wrapper_s0_x + -3)+3] }
	Adding output port: padded16_stencil_op_hcompute_padded16_global_wrapper_stencil_1
		Consumed: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_padded16_global_wrapper_stencil
  other_dspace_id = op_hcompute_padded16_global_wrapper_stencil
  Schedule domain set: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  Domain set from prg: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  ITS: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
ITS      : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
current out port name: 
	padded16_stencil_op_hcompute_padded16_global_wrapper_stencil_1
Creating ports for op: lyy_stencil
cond = { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> lyy_stencil[((lyy_s0_y + -2) + 2)+0,    ((lyy_s0_x + -2) + 2)+0] }
	Adding output port: lyy_stencil_op_hcompute_lyy_stencil_2
		Consumed: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
current out port name: 
	lyy_stencil_op_hcompute_lyy_stencil_2
Creating ports for op: grad_y_unclamp_stencil
cond = { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] -> grad_y_unclamp_stencil[((lyy_s0_y + -2) + 2)+0,    ((lyy_s0_x + -2) + 2)+0] }
	Adding output port: grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3
		Consumed: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> grad_y_unclamp_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lyy_stencil
  other_dspace_id = op_hcompute_lyy_stencil
  Schedule domain set: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
  Domain set from prg: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
  ITS: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
ITS      : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
current out port name: 
	grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3
Creating ports for op: lxy_stencil
cond = { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> lxy_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0] }
	Adding output port: lxy_stencil_op_hcompute_lxy_stencil_4
		Consumed: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
current out port name: 
	lxy_stencil_op_hcompute_lxy_stencil_4
Creating ports for op: grad_x_unclamp_stencil
cond = { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> grad_x_unclamp_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0] }
	Adding output port: grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5
		Consumed: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> grad_x_unclamp_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lxy_stencil
  other_dspace_id = op_hcompute_lxy_stencil
  Schedule domain set: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  Domain set from prg: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  ITS: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
ITS      : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
current out port name: 
	grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5
cond = { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] -> grad_y_unclamp_stencil[((lxy_s0_y + -2) + 2)+0,    ((lxy_s0_x + -2) + 2)+0] }
	Adding output port: grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6
		Consumed: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> grad_y_unclamp_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lxy_stencil
  other_dspace_id = op_hcompute_lxy_stencil
  Schedule domain set: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  Domain set from prg: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  ITS: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
ITS      : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
current out port name: 
	grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6	grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3
Creating ports for op: lxx_stencil
cond = { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> lxx_stencil[((lxx_s0_y + -2) + 2)+0,    ((lxx_s0_x + -2) + 2)+0] }
	Adding output port: lxx_stencil_op_hcompute_lxx_stencil_7
		Consumed: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
current out port name: 
	lxx_stencil_op_hcompute_lxx_stencil_7
cond = { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] -> grad_x_unclamp_stencil[((lxx_s0_y + -2) + 2)+0,    ((lxx_s0_x + -2) + 2)+0] }
	Adding output port: grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8
		Consumed: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> grad_x_unclamp_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lxx_stencil
  other_dspace_id = op_hcompute_lxx_stencil
  Schedule domain set: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  Domain set from prg: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  ITS: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
ITS      : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
current out port name: 
	grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8	grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5
Creating ports for op: lgyy_stencil
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0] }
	Adding output port: lgyy_stencil_op_hcompute_lgyy_stencil_1_9
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
current out port name: 
	lgyy_stencil_op_hcompute_lgyy_stencil_1_9
Creating ports for op: lgyy_stencil_clkwrk_dsa4
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil_clkwrk_dsa4[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0] }
	Adding output port: lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil_clkwrk_dsa4[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
current out port name: 
	lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 1)+0] }
	Adding output port: lyy_stencil_op_hcompute_lgyy_stencil_1_11
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
current out port name: 
	lyy_stencil_op_hcompute_lgyy_stencil_1_11
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 2)+0] }
	Adding output port: lyy_stencil_op_hcompute_lgyy_stencil_1_12
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[lgyy_s1_y, 1 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
current out port name: 
	lyy_stencil_op_hcompute_lgyy_stencil_1_11	lyy_stencil_op_hcompute_lgyy_stencil_1_12
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[((lgyy_s1_y + -1) + 1)+0,    ((lgyy_s1_x + -1) + 3)+0] }
	Adding output port: lyy_stencil_op_hcompute_lgyy_stencil_1_13
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[lgyy_s1_y, 2 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
current out port name: 
	lyy_stencil_op_hcompute_lgyy_stencil_1_11	lyy_stencil_op_hcompute_lgyy_stencil_1_12	lyy_stencil_op_hcompute_lgyy_stencil_1_13
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 1)+0] }
	Adding output port: lyy_stencil_op_hcompute_lgyy_stencil_1_14
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
current out port name: 
	lyy_stencil_op_hcompute_lgyy_stencil_1_11	lyy_stencil_op_hcompute_lgyy_stencil_1_12	lyy_stencil_op_hcompute_lgyy_stencil_1_13	lyy_stencil_op_hcompute_lgyy_stencil_1_14
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 2)+0] }
	Adding output port: lyy_stencil_op_hcompute_lgyy_stencil_1_15
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, 1 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
current out port name: 
	lyy_stencil_op_hcompute_lgyy_stencil_1_11	lyy_stencil_op_hcompute_lgyy_stencil_1_12	lyy_stencil_op_hcompute_lgyy_stencil_1_13	lyy_stencil_op_hcompute_lgyy_stencil_1_14	lyy_stencil_op_hcompute_lgyy_stencil_1_15
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[((lgyy_s1_y + -1) + 2)+0,    ((lgyy_s1_x + -1) + 3)+0] }
	Adding output port: lyy_stencil_op_hcompute_lgyy_stencil_1_16
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, 2 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
current out port name: 
	lyy_stencil_op_hcompute_lgyy_stencil_1_11	lyy_stencil_op_hcompute_lgyy_stencil_1_12	lyy_stencil_op_hcompute_lgyy_stencil_1_13	lyy_stencil_op_hcompute_lgyy_stencil_1_14	lyy_stencil_op_hcompute_lgyy_stencil_1_15	lyy_stencil_op_hcompute_lgyy_stencil_1_16
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 1)+0] }
	Adding output port: lyy_stencil_op_hcompute_lgyy_stencil_1_17
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
current out port name: 
	lyy_stencil_op_hcompute_lgyy_stencil_1_11	lyy_stencil_op_hcompute_lgyy_stencil_1_12	lyy_stencil_op_hcompute_lgyy_stencil_1_13	lyy_stencil_op_hcompute_lgyy_stencil_1_14	lyy_stencil_op_hcompute_lgyy_stencil_1_15	lyy_stencil_op_hcompute_lgyy_stencil_1_16	lyy_stencil_op_hcompute_lgyy_stencil_1_17
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 3)+0] }
	Adding output port: lyy_stencil_op_hcompute_lgyy_stencil_1_18
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, 2 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
current out port name: 
	lyy_stencil_op_hcompute_lgyy_stencil_1_11	lyy_stencil_op_hcompute_lgyy_stencil_1_12	lyy_stencil_op_hcompute_lgyy_stencil_1_13	lyy_stencil_op_hcompute_lgyy_stencil_1_14	lyy_stencil_op_hcompute_lgyy_stencil_1_15	lyy_stencil_op_hcompute_lgyy_stencil_1_16	lyy_stencil_op_hcompute_lgyy_stencil_1_17	lyy_stencil_op_hcompute_lgyy_stencil_1_18
cond = { op_hcompute_lgyy_stencil_1[root, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[((lgyy_s1_y + -1) + 3)+0,    ((lgyy_s1_x + -1) + 2)+0] }
	Adding output port: lyy_stencil_op_hcompute_lgyy_stencil_1_19
		Consumed: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, 1 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgyy_stencil_1
  other_dspace_id = op_hcompute_lgyy_stencil_1
  Schedule domain set: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  ITS: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
ITS      : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
current out port name: 
	lyy_stencil_op_hcompute_lgyy_stencil_1_11	lyy_stencil_op_hcompute_lgyy_stencil_1_12	lyy_stencil_op_hcompute_lgyy_stencil_1_13	lyy_stencil_op_hcompute_lgyy_stencil_1_14	lyy_stencil_op_hcompute_lgyy_stencil_1_15	lyy_stencil_op_hcompute_lgyy_stencil_1_16	lyy_stencil_op_hcompute_lgyy_stencil_1_17	lyy_stencil_op_hcompute_lgyy_stencil_1_18	lyy_stencil_op_hcompute_lgyy_stencil_1_19
cond = { op_hcompute_lgyy_stencil[root, lgyy_s0_y, lgyy_s0_x] -> lgyy_stencil_clkwrk_dsa4[((lgyy_s0_y + -1) + 1)+0,    ((lgyy_s0_x + -1) + 1)+0] }
	Adding output port: lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
		Consumed: { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> lgyy_stencil_clkwrk_dsa4[lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
current out port name: 
	lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
Creating ports for op: lgxy_stencil
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0] }
	Adding output port: lgxy_stencil_op_hcompute_lgxy_stencil_1_21
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
current out port name: 
	lgxy_stencil_op_hcompute_lgxy_stencil_1_21
Creating ports for op: lgxy_stencil_clkwrk_dsa3
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil_clkwrk_dsa3[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0] }
	Adding output port: lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil_clkwrk_dsa3[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
current out port name: 
	lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 1)+0] }
	Adding output port: lxy_stencil_op_hcompute_lgxy_stencil_1_23
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
current out port name: 
	lxy_stencil_op_hcompute_lgxy_stencil_1_23
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 2)+0] }
	Adding output port: lxy_stencil_op_hcompute_lgxy_stencil_1_24
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[lgxy_s1_y, 1 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
current out port name: 
	lxy_stencil_op_hcompute_lgxy_stencil_1_23	lxy_stencil_op_hcompute_lgxy_stencil_1_24
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[((lgxy_s1_y + -1) + 1)+0,    ((lgxy_s1_x + -1) + 3)+0] }
	Adding output port: lxy_stencil_op_hcompute_lgxy_stencil_1_25
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[lgxy_s1_y, 2 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
current out port name: 
	lxy_stencil_op_hcompute_lgxy_stencil_1_23	lxy_stencil_op_hcompute_lgxy_stencil_1_24	lxy_stencil_op_hcompute_lgxy_stencil_1_25
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 1)+0] }
	Adding output port: lxy_stencil_op_hcompute_lgxy_stencil_1_26
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
current out port name: 
	lxy_stencil_op_hcompute_lgxy_stencil_1_23	lxy_stencil_op_hcompute_lgxy_stencil_1_24	lxy_stencil_op_hcompute_lgxy_stencil_1_25	lxy_stencil_op_hcompute_lgxy_stencil_1_26
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 2)+0] }
	Adding output port: lxy_stencil_op_hcompute_lgxy_stencil_1_27
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, 1 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
current out port name: 
	lxy_stencil_op_hcompute_lgxy_stencil_1_23	lxy_stencil_op_hcompute_lgxy_stencil_1_24	lxy_stencil_op_hcompute_lgxy_stencil_1_25	lxy_stencil_op_hcompute_lgxy_stencil_1_26	lxy_stencil_op_hcompute_lgxy_stencil_1_27
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[((lgxy_s1_y + -1) + 2)+0,    ((lgxy_s1_x + -1) + 3)+0] }
	Adding output port: lxy_stencil_op_hcompute_lgxy_stencil_1_28
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, 2 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
current out port name: 
	lxy_stencil_op_hcompute_lgxy_stencil_1_23	lxy_stencil_op_hcompute_lgxy_stencil_1_24	lxy_stencil_op_hcompute_lgxy_stencil_1_25	lxy_stencil_op_hcompute_lgxy_stencil_1_26	lxy_stencil_op_hcompute_lgxy_stencil_1_27	lxy_stencil_op_hcompute_lgxy_stencil_1_28
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 1)+0] }
	Adding output port: lxy_stencil_op_hcompute_lgxy_stencil_1_29
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
current out port name: 
	lxy_stencil_op_hcompute_lgxy_stencil_1_23	lxy_stencil_op_hcompute_lgxy_stencil_1_24	lxy_stencil_op_hcompute_lgxy_stencil_1_25	lxy_stencil_op_hcompute_lgxy_stencil_1_26	lxy_stencil_op_hcompute_lgxy_stencil_1_27	lxy_stencil_op_hcompute_lgxy_stencil_1_28	lxy_stencil_op_hcompute_lgxy_stencil_1_29
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 3)+0] }
	Adding output port: lxy_stencil_op_hcompute_lgxy_stencil_1_30
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, 2 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
current out port name: 
	lxy_stencil_op_hcompute_lgxy_stencil_1_23	lxy_stencil_op_hcompute_lgxy_stencil_1_24	lxy_stencil_op_hcompute_lgxy_stencil_1_25	lxy_stencil_op_hcompute_lgxy_stencil_1_26	lxy_stencil_op_hcompute_lgxy_stencil_1_27	lxy_stencil_op_hcompute_lgxy_stencil_1_28	lxy_stencil_op_hcompute_lgxy_stencil_1_29	lxy_stencil_op_hcompute_lgxy_stencil_1_30
cond = { op_hcompute_lgxy_stencil_1[root, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[((lgxy_s1_y + -1) + 3)+0,    ((lgxy_s1_x + -1) + 2)+0] }
	Adding output port: lxy_stencil_op_hcompute_lgxy_stencil_1_31
		Consumed: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, 1 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxy_stencil_1
  other_dspace_id = op_hcompute_lgxy_stencil_1
  Schedule domain set: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  ITS: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
ITS      : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
current out port name: 
	lxy_stencil_op_hcompute_lgxy_stencil_1_23	lxy_stencil_op_hcompute_lgxy_stencil_1_24	lxy_stencil_op_hcompute_lgxy_stencil_1_25	lxy_stencil_op_hcompute_lgxy_stencil_1_26	lxy_stencil_op_hcompute_lgxy_stencil_1_27	lxy_stencil_op_hcompute_lgxy_stencil_1_28	lxy_stencil_op_hcompute_lgxy_stencil_1_29	lxy_stencil_op_hcompute_lgxy_stencil_1_30	lxy_stencil_op_hcompute_lgxy_stencil_1_31
cond = { op_hcompute_lgxy_stencil[root, lgxy_s0_y, lgxy_s0_x] -> lgxy_stencil_clkwrk_dsa3[((lgxy_s0_y + -1) + 1)+0,    ((lgxy_s0_x + -1) + 1)+0] }
	Adding output port: lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
		Consumed: { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> lgxy_stencil_clkwrk_dsa3[lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
current out port name: 
	lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
Creating ports for op: lgxx_stencil
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0] }
	Adding output port: lgxx_stencil_op_hcompute_lgxx_stencil_1_33
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
current out port name: 
	lgxx_stencil_op_hcompute_lgxx_stencil_1_33
Creating ports for op: lgxx_stencil_clkwrk_dsa2
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil_clkwrk_dsa2[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0] }
	Adding output port: lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil_clkwrk_dsa2[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
current out port name: 
	lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 1)+0] }
	Adding output port: lxx_stencil_op_hcompute_lgxx_stencil_1_35
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
current out port name: 
	lxx_stencil_op_hcompute_lgxx_stencil_1_35
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 2)+0] }
	Adding output port: lxx_stencil_op_hcompute_lgxx_stencil_1_36
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[lgxx_s1_y, 1 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
current out port name: 
	lxx_stencil_op_hcompute_lgxx_stencil_1_35	lxx_stencil_op_hcompute_lgxx_stencil_1_36
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[((lgxx_s1_y + -1) + 1)+0,    ((lgxx_s1_x + -1) + 3)+0] }
	Adding output port: lxx_stencil_op_hcompute_lgxx_stencil_1_37
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[lgxx_s1_y, 2 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
current out port name: 
	lxx_stencil_op_hcompute_lgxx_stencil_1_35	lxx_stencil_op_hcompute_lgxx_stencil_1_36	lxx_stencil_op_hcompute_lgxx_stencil_1_37
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 1)+0] }
	Adding output port: lxx_stencil_op_hcompute_lgxx_stencil_1_38
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
current out port name: 
	lxx_stencil_op_hcompute_lgxx_stencil_1_35	lxx_stencil_op_hcompute_lgxx_stencil_1_36	lxx_stencil_op_hcompute_lgxx_stencil_1_37	lxx_stencil_op_hcompute_lgxx_stencil_1_38
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 2)+0] }
	Adding output port: lxx_stencil_op_hcompute_lgxx_stencil_1_39
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, 1 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
current out port name: 
	lxx_stencil_op_hcompute_lgxx_stencil_1_35	lxx_stencil_op_hcompute_lgxx_stencil_1_36	lxx_stencil_op_hcompute_lgxx_stencil_1_37	lxx_stencil_op_hcompute_lgxx_stencil_1_38	lxx_stencil_op_hcompute_lgxx_stencil_1_39
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[((lgxx_s1_y + -1) + 2)+0,    ((lgxx_s1_x + -1) + 3)+0] }
	Adding output port: lxx_stencil_op_hcompute_lgxx_stencil_1_40
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, 2 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
current out port name: 
	lxx_stencil_op_hcompute_lgxx_stencil_1_35	lxx_stencil_op_hcompute_lgxx_stencil_1_36	lxx_stencil_op_hcompute_lgxx_stencil_1_37	lxx_stencil_op_hcompute_lgxx_stencil_1_38	lxx_stencil_op_hcompute_lgxx_stencil_1_39	lxx_stencil_op_hcompute_lgxx_stencil_1_40
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 1)+0] }
	Adding output port: lxx_stencil_op_hcompute_lgxx_stencil_1_41
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
current out port name: 
	lxx_stencil_op_hcompute_lgxx_stencil_1_35	lxx_stencil_op_hcompute_lgxx_stencil_1_36	lxx_stencil_op_hcompute_lgxx_stencil_1_37	lxx_stencil_op_hcompute_lgxx_stencil_1_38	lxx_stencil_op_hcompute_lgxx_stencil_1_39	lxx_stencil_op_hcompute_lgxx_stencil_1_40	lxx_stencil_op_hcompute_lgxx_stencil_1_41
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 3)+0] }
	Adding output port: lxx_stencil_op_hcompute_lgxx_stencil_1_42
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, 2 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
current out port name: 
	lxx_stencil_op_hcompute_lgxx_stencil_1_35	lxx_stencil_op_hcompute_lgxx_stencil_1_36	lxx_stencil_op_hcompute_lgxx_stencil_1_37	lxx_stencil_op_hcompute_lgxx_stencil_1_38	lxx_stencil_op_hcompute_lgxx_stencil_1_39	lxx_stencil_op_hcompute_lgxx_stencil_1_40	lxx_stencil_op_hcompute_lgxx_stencil_1_41	lxx_stencil_op_hcompute_lgxx_stencil_1_42
cond = { op_hcompute_lgxx_stencil_1[root, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[((lgxx_s1_y + -1) + 3)+0,    ((lgxx_s1_x + -1) + 2)+0] }
	Adding output port: lxx_stencil_op_hcompute_lgxx_stencil_1_43
		Consumed: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, 1 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_lgxx_stencil_1
  other_dspace_id = op_hcompute_lgxx_stencil_1
  Schedule domain set: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  Domain set from prg: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  ITS: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
ITS      : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
current out port name: 
	lxx_stencil_op_hcompute_lgxx_stencil_1_35	lxx_stencil_op_hcompute_lgxx_stencil_1_36	lxx_stencil_op_hcompute_lgxx_stencil_1_37	lxx_stencil_op_hcompute_lgxx_stencil_1_38	lxx_stencil_op_hcompute_lgxx_stencil_1_39	lxx_stencil_op_hcompute_lgxx_stencil_1_40	lxx_stencil_op_hcompute_lgxx_stencil_1_41	lxx_stencil_op_hcompute_lgxx_stencil_1_42	lxx_stencil_op_hcompute_lgxx_stencil_1_43
cond = { op_hcompute_lgxx_stencil[root, lgxx_s0_y, lgxx_s0_x] -> lgxx_stencil_clkwrk_dsa2[((lgxx_s0_y + -1) + 1)+0,    ((lgxx_s0_x + -1) + 1)+0] }
	Adding output port: lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
		Consumed: { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> lgxx_stencil_clkwrk_dsa2[lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
current out port name: 
	lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
Creating ports for op: hw_output_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] }
	Adding output port: hw_output_stencil_op_hcompute_hw_output_stencil_45
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
current out port name: 
	hw_output_stencil_op_hcompute_hw_output_stencil_45
Creating ports for op: cim_output_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> cim_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] }
	Adding output port: cim_output_stencil_op_hcompute_hw_output_stencil_46
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_hw_output_stencil
  other_dspace_id = op_hcompute_hw_output_stencil
  Schedule domain set: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  Domain set from prg: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  ITS: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
ITS      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
current out port name: 
	cim_output_stencil_op_hcompute_hw_output_stencil_46
cond = { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0] }
	Adding output port: grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
		Consumed: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
current out port name: 
	grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
Creating ports for op: grad_y_unclamp_stencil_clkwrk_dsa1
cond = { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0] }
	Adding output port: grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48
		Consumed: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_y_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_y_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  Domain set from prg: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  ITS: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
ITS      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
current out port name: 
	grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48
cond = { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49
		Consumed: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_y_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_y_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  Domain set from prg: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  ITS: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
ITS      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49
cond = { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 3)+0] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50
		Consumed: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_y_unclamp_s1_y, 1 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_y_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_y_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  Domain set from prg: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  ITS: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
ITS      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50
cond = { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 2)+0,    ((grad_y_unclamp_s1_x + -2) + 4)+0] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51
		Consumed: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_y_unclamp_s1_y, 2 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_y_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_y_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  Domain set from prg: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  ITS: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
ITS      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51
cond = { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 2)+0] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52
		Consumed: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_y_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_y_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  Domain set from prg: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  ITS: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
ITS      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52
cond = { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 4)+0] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53
		Consumed: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, 2 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_y_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_y_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  Domain set from prg: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  ITS: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
ITS      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53
cond = { op_hcompute_grad_y_unclamp_stencil_1[root, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[((grad_y_unclamp_s1_y + -2) + 4)+0,    ((grad_y_unclamp_s1_x + -2) + 3)+0] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
		Consumed: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, 1 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_y_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_y_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  Domain set from prg: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  ITS: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
ITS      : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
cond = { op_hcompute_grad_y_unclamp_stencil[root, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[((grad_y_unclamp_s0_y + -2) + 2)+0,    ((grad_y_unclamp_s0_x + -2) + 2)+0] }
	Adding output port: grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
		Consumed: { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
current out port name: 
	grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
cond = { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0] }
	Adding output port: grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
		Consumed: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
current out port name: 
	grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
Creating ports for op: grad_x_unclamp_stencil_clkwrk_dsa0
cond = { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0] }
	Adding output port: grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57
		Consumed: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_x_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_x_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  Domain set from prg: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  ITS: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
ITS      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
current out port name: 
	grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57
cond = { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
		Consumed: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_x_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_x_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  Domain set from prg: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  ITS: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
ITS      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
cond = { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 4)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59
		Consumed: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_x_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_x_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  Domain set from prg: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  ITS: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
ITS      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
cond = { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 3)+0,    ((grad_x_unclamp_s1_x + -2) + 4)+0] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
		Consumed: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[1 + grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_x_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_x_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  Domain set from prg: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  ITS: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
ITS      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
cond = { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 2)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61
		Consumed: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_x_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_x_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  Domain set from prg: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  ITS: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
ITS      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
cond = { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 3)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62
		Consumed: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[1 + grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_x_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_x_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  Domain set from prg: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  ITS: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
ITS      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
cond = { op_hcompute_grad_x_unclamp_stencil_1[root, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[((grad_x_unclamp_s1_y + -2) + 4)+0,    ((grad_x_unclamp_s1_x + -2) + 2)+0] }
	Adding output port: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63
		Consumed: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_grad_x_unclamp_stencil_1
  other_dspace_id = op_hcompute_grad_x_unclamp_stencil_1
  Schedule domain set: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  Domain set from prg: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
  ITS: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
ITS      : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
current out port name: 
	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62	padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53	padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
cond = { op_hcompute_grad_x_unclamp_stencil[root, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[((grad_x_unclamp_s0_y + -2) + 2)+0,    ((grad_x_unclamp_s0_x + -2) + 2)+0] }
	Adding output port: grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
		Consumed: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
current out port name: 
	grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
Creating ports for op: cim_stencil
cond = { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> cim_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0] }
	Adding output port: cim_stencil_op_hcompute_cim_stencil_65
		Consumed: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
current out port name: 
	cim_stencil_op_hcompute_cim_stencil_65
cond = { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> lgxx_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0] }
	Adding output port: lgxx_stencil_op_hcompute_cim_stencil_66
		Consumed: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgxx_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_stencil
  other_dspace_id = op_hcompute_cim_stencil
  Schedule domain set: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  Domain set from prg: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  ITS: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
ITS      : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
current out port name: 
	lgxx_stencil_op_hcompute_cim_stencil_66
cond = { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> lgxy_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0] }
	Adding output port: lgxy_stencil_op_hcompute_cim_stencil_67
		Consumed: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgxy_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_stencil
  other_dspace_id = op_hcompute_cim_stencil
  Schedule domain set: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  Domain set from prg: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  ITS: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
ITS      : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
current out port name: 
	lgxy_stencil_op_hcompute_cim_stencil_67
cond = { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] -> lgyy_stencil[((cim_s0_y + -1) + 1)+0,    ((cim_s0_x + -1) + 1)+0] }
	Adding output port: lgyy_stencil_op_hcompute_cim_stencil_68
		Consumed: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgyy_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_stencil
  other_dspace_id = op_hcompute_cim_stencil
  Schedule domain set: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  Domain set from prg: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  ITS: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
ITS      : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
current out port name: 
	lgyy_stencil_op_hcompute_cim_stencil_68
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_output_stencil[cim_output_s0_y+0,  cim_output_s0_x+0] }
	Adding output port: cim_output_stencil_op_hcompute_cim_output_stencil_69
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_output_stencil[cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_output_stencil_op_hcompute_cim_output_stencil_69
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y+0,  cim_output_s0_x+0] }
	Adding output port: cim_stencil_op_hcompute_cim_output_stencil_70
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_output_stencil
  other_dspace_id = op_hcompute_cim_output_stencil
  Schedule domain set: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Domain set from prg: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  ITS: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
ITS      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_stencil_op_hcompute_cim_output_stencil_70
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[(cim_output_s0_y + 1)+0,  (cim_output_s0_x + 1)+0] }
	Adding output port: cim_stencil_op_hcompute_cim_output_stencil_71
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[1 + cim_output_s0_y, 1 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_output_stencil
  other_dspace_id = op_hcompute_cim_output_stencil
  Schedule domain set: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Domain set from prg: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  ITS: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
ITS      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_stencil_op_hcompute_cim_output_stencil_70	cim_stencil_op_hcompute_cim_output_stencil_71
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y+0,  (cim_output_s0_x + 1)+0] }
	Adding output port: cim_stencil_op_hcompute_cim_output_stencil_72
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, 1 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_output_stencil
  other_dspace_id = op_hcompute_cim_output_stencil
  Schedule domain set: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Domain set from prg: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  ITS: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
ITS      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_stencil_op_hcompute_cim_output_stencil_70	cim_stencil_op_hcompute_cim_output_stencil_71	cim_stencil_op_hcompute_cim_output_stencil_72
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y+0,  (cim_output_s0_x + 2)+0] }
	Adding output port: cim_stencil_op_hcompute_cim_output_stencil_73
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, 2 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_output_stencil
  other_dspace_id = op_hcompute_cim_output_stencil
  Schedule domain set: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Domain set from prg: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  ITS: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
ITS      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_stencil_op_hcompute_cim_output_stencil_70	cim_stencil_op_hcompute_cim_output_stencil_71	cim_stencil_op_hcompute_cim_output_stencil_72	cim_stencil_op_hcompute_cim_output_stencil_73
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[(cim_output_s0_y + 1)+0,  cim_output_s0_x+0] }
	Adding output port: cim_stencil_op_hcompute_cim_output_stencil_74
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[1 + cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_output_stencil
  other_dspace_id = op_hcompute_cim_output_stencil
  Schedule domain set: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Domain set from prg: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  ITS: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
ITS      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_stencil_op_hcompute_cim_output_stencil_70	cim_stencil_op_hcompute_cim_output_stencil_71	cim_stencil_op_hcompute_cim_output_stencil_72	cim_stencil_op_hcompute_cim_output_stencil_73	cim_stencil_op_hcompute_cim_output_stencil_74
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[(cim_output_s0_y + 1)+0,  (cim_output_s0_x + 2)+0] }
	Adding output port: cim_stencil_op_hcompute_cim_output_stencil_75
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[1 + cim_output_s0_y, 2 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_output_stencil
  other_dspace_id = op_hcompute_cim_output_stencil
  Schedule domain set: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Domain set from prg: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  ITS: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
ITS      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_stencil_op_hcompute_cim_output_stencil_70	cim_stencil_op_hcompute_cim_output_stencil_71	cim_stencil_op_hcompute_cim_output_stencil_72	cim_stencil_op_hcompute_cim_output_stencil_73	cim_stencil_op_hcompute_cim_output_stencil_74	cim_stencil_op_hcompute_cim_output_stencil_75
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[(cim_output_s0_y + 2)+0,  cim_output_s0_x+0] }
	Adding output port: cim_stencil_op_hcompute_cim_output_stencil_76
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[2 + cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_output_stencil
  other_dspace_id = op_hcompute_cim_output_stencil
  Schedule domain set: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Domain set from prg: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  ITS: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
ITS      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_stencil_op_hcompute_cim_output_stencil_70	cim_stencil_op_hcompute_cim_output_stencil_71	cim_stencil_op_hcompute_cim_output_stencil_72	cim_stencil_op_hcompute_cim_output_stencil_73	cim_stencil_op_hcompute_cim_output_stencil_74	cim_stencil_op_hcompute_cim_output_stencil_75	cim_stencil_op_hcompute_cim_output_stencil_76
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[(cim_output_s0_y + 2)+0,  (cim_output_s0_x + 1)+0] }
	Adding output port: cim_stencil_op_hcompute_cim_output_stencil_77
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[2 + cim_output_s0_y, 1 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_output_stencil
  other_dspace_id = op_hcompute_cim_output_stencil
  Schedule domain set: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Domain set from prg: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  ITS: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
ITS      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_stencil_op_hcompute_cim_output_stencil_70	cim_stencil_op_hcompute_cim_output_stencil_71	cim_stencil_op_hcompute_cim_output_stencil_72	cim_stencil_op_hcompute_cim_output_stencil_73	cim_stencil_op_hcompute_cim_output_stencil_74	cim_stencil_op_hcompute_cim_output_stencil_75	cim_stencil_op_hcompute_cim_output_stencil_76	cim_stencil_op_hcompute_cim_output_stencil_77
cond = { op_hcompute_cim_output_stencil[root, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[(cim_output_s0_y + 2)+0,  (cim_output_s0_x + 2)+0] }
	Adding output port: cim_stencil_op_hcompute_cim_output_stencil_78
		Consumed: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[2 + cim_output_s0_y, 2 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Opt sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Dom      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
SDom     : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Dom ITS  : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Dom UNN  : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Per group...
  dspace_id       = op_hcompute_cim_output_stencil
  other_dspace_id = op_hcompute_cim_output_stencil
  Schedule domain set: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  Domain set from prg: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  ITS: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
ITS      : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
current out port name: 
	cim_stencil_op_hcompute_cim_output_stencil_70	cim_stencil_op_hcompute_cim_output_stencil_71	cim_stencil_op_hcompute_cim_output_stencil_72	cim_stencil_op_hcompute_cim_output_stencil_73	cim_stencil_op_hcompute_cim_output_stencil_74	cim_stencil_op_hcompute_cim_output_stencil_75	cim_stencil_op_hcompute_cim_output_stencil_76	cim_stencil_op_hcompute_cim_output_stencil_77	cim_stencil_op_hcompute_cim_output_stencil_78
Latency of application is: { [4095] }
Global schedule: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59; op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59; op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61; op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59; op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59; op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61; op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59; op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57; op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57; op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59; op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61; op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61; op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
# in bundles: 1
Generating compute unit for op_hcompute_padded16_global_wrapper_stencil
getting incoming buffers to op_hcompute_padded16_global_wrapper_stencil
  consumed: padded16_stencil
Found compute file for harris
getting incoming buffers to op_hcompute_padded16_global_wrapper_stencil
  consumed: padded16_stencil
Looking for connection for padded16_stencil.op_hcompute_padded16_global_wrapper_stencil_read
# of selects = 0
inner_compute() : global.hcompute_padded16_global_wrapper_stencil
name = in0_padded16_stencil
More than oune outgoing bundle
# of selects = 1
inner_compute() : global.hcompute_padded16_global_wrapper_stencil
  name = in0_padded16_stencil
  bundle.first = padded16_global_wrapper_stencil
  after split  = padded16_global_wrapper_stencil
  name = out_padded16_global_wrapper_stencil
  bundle.first = padded16_global_wrapper_stencil
  after split  = padded16_global_wrapper_stencil
Generating compute unit for op_hcompute_grad_x_unclamp_stencil
getting incoming buffers to op_hcompute_grad_x_unclamp_stencil
Found compute file for harris
getting incoming buffers to op_hcompute_grad_x_unclamp_stencil
More than oune outgoing bundle
# of selects = 0
inner_compute() : global.hcompute_grad_x_unclamp_stencil
  name = out_grad_x_unclamp_stencil
  bundle.first = grad_x_unclamp_stencil_clkwrk_dsa0
  after split  = grad_x_unclamp_stencil
Generating compute unit for op_hcompute_grad_x_unclamp_stencil_1
getting incoming buffers to op_hcompute_grad_x_unclamp_stencil_1
  consumed: grad_x_unclamp_stencil_clkwrk_dsa0
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
Found compute file for harris
getting incoming buffers to op_hcompute_grad_x_unclamp_stencil_1
  consumed: grad_x_unclamp_stencil_clkwrk_dsa0
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
Looking for connection for grad_x_unclamp_stencil_clkwrk_dsa0.op_hcompute_grad_x_unclamp_stencil_1_read
# of selects = 0
inner_compute() : global.hcompute_grad_x_unclamp_stencil_1
name = in0_grad_x_unclamp_stencil
Looking for connection for padded16_global_wrapper_stencil.op_hcompute_grad_x_unclamp_stencil_1_read
# of selects = 1
inner_compute() : global.hcompute_grad_x_unclamp_stencil_1
name = in0_grad_x_unclamp_stencil
name = in1_padded16_global_wrapper_stencil
More than oune outgoing bundle
# of selects = 2
inner_compute() : global.hcompute_grad_x_unclamp_stencil_1
  name = in0_grad_x_unclamp_stencil
  bundle.first = grad_x_unclamp_stencil
  after split  = grad_x_unclamp_stencil
  name = in1_padded16_global_wrapper_stencil
  bundle.first = grad_x_unclamp_stencil
  after split  = grad_x_unclamp_stencil
  name = out_grad_x_unclamp_stencil
  bundle.first = grad_x_unclamp_stencil
  after split  = grad_x_unclamp_stencil
Generating compute unit for op_hcompute_lxx_stencil
getting incoming buffers to op_hcompute_lxx_stencil
  consumed: grad_x_unclamp_stencil
Found compute file for harris
getting incoming buffers to op_hcompute_lxx_stencil
  consumed: grad_x_unclamp_stencil
Looking for connection for grad_x_unclamp_stencil.op_hcompute_lxx_stencil_read
# of selects = 0
inner_compute() : global.hcompute_lxx_stencil
name = in0_grad_x_unclamp_stencil
More than oune outgoing bundle
# of selects = 1
inner_compute() : global.hcompute_lxx_stencil
  name = in0_grad_x_unclamp_stencil
  bundle.first = lxx_stencil
  after split  = lxx_stencil
  name = out_lxx_stencil
  bundle.first = lxx_stencil
  after split  = lxx_stencil
Generating compute unit for op_hcompute_lgxx_stencil
getting incoming buffers to op_hcompute_lgxx_stencil
Found compute file for harris
getting incoming buffers to op_hcompute_lgxx_stencil
More than oune outgoing bundle
# of selects = 0
inner_compute() : global.hcompute_lgxx_stencil
  name = out_lgxx_stencil
  bundle.first = lgxx_stencil_clkwrk_dsa2
  after split  = lgxx_stencil
Generating compute unit for op_hcompute_lgxx_stencil_1
getting incoming buffers to op_hcompute_lgxx_stencil_1
  consumed: lgxx_stencil_clkwrk_dsa2
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
Found compute file for harris
getting incoming buffers to op_hcompute_lgxx_stencil_1
  consumed: lgxx_stencil_clkwrk_dsa2
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
Looking for connection for lgxx_stencil_clkwrk_dsa2.op_hcompute_lgxx_stencil_1_read
# of selects = 0
inner_compute() : global.hcompute_lgxx_stencil_1
name = in0_lgxx_stencil
Looking for connection for lxx_stencil.op_hcompute_lgxx_stencil_1_read
# of selects = 1
inner_compute() : global.hcompute_lgxx_stencil_1
name = in0_lgxx_stencil
name = in1_lxx_stencil
More than oune outgoing bundle
# of selects = 2
inner_compute() : global.hcompute_lgxx_stencil_1
  name = in0_lgxx_stencil
  bundle.first = lgxx_stencil
  after split  = lgxx_stencil
  name = in1_lxx_stencil
  bundle.first = lgxx_stencil
  after split  = lgxx_stencil
  name = out_lgxx_stencil
  bundle.first = lgxx_stencil
  after split  = lgxx_stencil
Generating compute unit for op_hcompute_grad_y_unclamp_stencil
getting incoming buffers to op_hcompute_grad_y_unclamp_stencil
Found compute file for harris
getting incoming buffers to op_hcompute_grad_y_unclamp_stencil
More than oune outgoing bundle
# of selects = 0
inner_compute() : global.hcompute_grad_y_unclamp_stencil
  name = out_grad_y_unclamp_stencil
  bundle.first = grad_y_unclamp_stencil_clkwrk_dsa1
  after split  = grad_y_unclamp_stencil
Generating compute unit for op_hcompute_grad_y_unclamp_stencil_1
getting incoming buffers to op_hcompute_grad_y_unclamp_stencil_1
  consumed: grad_y_unclamp_stencil_clkwrk_dsa1
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
Found compute file for harris
getting incoming buffers to op_hcompute_grad_y_unclamp_stencil_1
  consumed: grad_y_unclamp_stencil_clkwrk_dsa1
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
Looking for connection for grad_y_unclamp_stencil_clkwrk_dsa1.op_hcompute_grad_y_unclamp_stencil_1_read
# of selects = 0
inner_compute() : global.hcompute_grad_y_unclamp_stencil_1
name = in0_grad_y_unclamp_stencil
Looking for connection for padded16_global_wrapper_stencil.op_hcompute_grad_y_unclamp_stencil_1_read
# of selects = 1
inner_compute() : global.hcompute_grad_y_unclamp_stencil_1
name = in0_grad_y_unclamp_stencil
name = in1_padded16_global_wrapper_stencil
More than oune outgoing bundle
# of selects = 2
inner_compute() : global.hcompute_grad_y_unclamp_stencil_1
  name = in0_grad_y_unclamp_stencil
  bundle.first = grad_y_unclamp_stencil
  after split  = grad_y_unclamp_stencil
  name = in1_padded16_global_wrapper_stencil
  bundle.first = grad_y_unclamp_stencil
  after split  = grad_y_unclamp_stencil
  name = out_grad_y_unclamp_stencil
  bundle.first = grad_y_unclamp_stencil
  after split  = grad_y_unclamp_stencil
Generating compute unit for op_hcompute_lxy_stencil
getting incoming buffers to op_hcompute_lxy_stencil
  consumed: grad_x_unclamp_stencil
  consumed: grad_y_unclamp_stencil
Found compute file for harris
getting incoming buffers to op_hcompute_lxy_stencil
  consumed: grad_x_unclamp_stencil
  consumed: grad_y_unclamp_stencil
Looking for connection for grad_x_unclamp_stencil.op_hcompute_lxy_stencil_read
# of selects = 0
inner_compute() : global.hcompute_lxy_stencil
name = in0_grad_x_unclamp_stencil
Looking for connection for grad_y_unclamp_stencil.op_hcompute_lxy_stencil_read
# of selects = 1
inner_compute() : global.hcompute_lxy_stencil
name = in0_grad_x_unclamp_stencil
name = in1_grad_y_unclamp_stencil
More than oune outgoing bundle
# of selects = 2
inner_compute() : global.hcompute_lxy_stencil
  name = in0_grad_x_unclamp_stencil
  bundle.first = lxy_stencil
  after split  = lxy_stencil
  name = in1_grad_y_unclamp_stencil
  bundle.first = lxy_stencil
  after split  = lxy_stencil
  name = out_lxy_stencil
  bundle.first = lxy_stencil
  after split  = lxy_stencil
Generating compute unit for op_hcompute_lgxy_stencil
getting incoming buffers to op_hcompute_lgxy_stencil
Found compute file for harris
getting incoming buffers to op_hcompute_lgxy_stencil
More than oune outgoing bundle
# of selects = 0
inner_compute() : global.hcompute_lgxy_stencil
  name = out_lgxy_stencil
  bundle.first = lgxy_stencil_clkwrk_dsa3
  after split  = lgxy_stencil
Generating compute unit for op_hcompute_lgxy_stencil_1
getting incoming buffers to op_hcompute_lgxy_stencil_1
  consumed: lgxy_stencil_clkwrk_dsa3
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
Found compute file for harris
getting incoming buffers to op_hcompute_lgxy_stencil_1
  consumed: lgxy_stencil_clkwrk_dsa3
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
Looking for connection for lgxy_stencil_clkwrk_dsa3.op_hcompute_lgxy_stencil_1_read
# of selects = 0
inner_compute() : global.hcompute_lgxy_stencil_1
name = in0_lgxy_stencil
Looking for connection for lxy_stencil.op_hcompute_lgxy_stencil_1_read
# of selects = 1
inner_compute() : global.hcompute_lgxy_stencil_1
name = in0_lgxy_stencil
name = in1_lxy_stencil
More than oune outgoing bundle
# of selects = 2
inner_compute() : global.hcompute_lgxy_stencil_1
  name = in0_lgxy_stencil
  bundle.first = lgxy_stencil
  after split  = lgxy_stencil
  name = in1_lxy_stencil
  bundle.first = lgxy_stencil
  after split  = lgxy_stencil
  name = out_lgxy_stencil
  bundle.first = lgxy_stencil
  after split  = lgxy_stencil
Generating compute unit for op_hcompute_lyy_stencil
getting incoming buffers to op_hcompute_lyy_stencil
  consumed: grad_y_unclamp_stencil
Found compute file for harris
getting incoming buffers to op_hcompute_lyy_stencil
  consumed: grad_y_unclamp_stencil
Looking for connection for grad_y_unclamp_stencil.op_hcompute_lyy_stencil_read
# of selects = 0
inner_compute() : global.hcompute_lyy_stencil
name = in0_grad_y_unclamp_stencil
More than oune outgoing bundle
# of selects = 1
inner_compute() : global.hcompute_lyy_stencil
  name = in0_grad_y_unclamp_stencil
  bundle.first = lyy_stencil
  after split  = lyy_stencil
  name = out_lyy_stencil
  bundle.first = lyy_stencil
  after split  = lyy_stencil
Generating compute unit for op_hcompute_lgyy_stencil
getting incoming buffers to op_hcompute_lgyy_stencil
Found compute file for harris
getting incoming buffers to op_hcompute_lgyy_stencil
More than oune outgoing bundle
# of selects = 0
inner_compute() : global.hcompute_lgyy_stencil
  name = out_lgyy_stencil
  bundle.first = lgyy_stencil_clkwrk_dsa4
  after split  = lgyy_stencil
Generating compute unit for op_hcompute_lgyy_stencil_1
getting incoming buffers to op_hcompute_lgyy_stencil_1
  consumed: lgyy_stencil_clkwrk_dsa4
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
Found compute file for harris
getting incoming buffers to op_hcompute_lgyy_stencil_1
  consumed: lgyy_stencil_clkwrk_dsa4
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
Looking for connection for lgyy_stencil_clkwrk_dsa4.op_hcompute_lgyy_stencil_1_read
# of selects = 0
inner_compute() : global.hcompute_lgyy_stencil_1
name = in0_lgyy_stencil
Looking for connection for lyy_stencil.op_hcompute_lgyy_stencil_1_read
# of selects = 1
inner_compute() : global.hcompute_lgyy_stencil_1
name = in0_lgyy_stencil
name = in1_lyy_stencil
More than oune outgoing bundle
# of selects = 2
inner_compute() : global.hcompute_lgyy_stencil_1
  name = in0_lgyy_stencil
  bundle.first = lgyy_stencil
  after split  = lgyy_stencil
  name = in1_lyy_stencil
  bundle.first = lgyy_stencil
  after split  = lgyy_stencil
  name = out_lgyy_stencil
  bundle.first = lgyy_stencil
  after split  = lgyy_stencil
Generating compute unit for op_hcompute_cim_stencil
getting incoming buffers to op_hcompute_cim_stencil
  consumed: lgxx_stencil
  consumed: lgxy_stencil
  consumed: lgyy_stencil
Found compute file for harris
getting incoming buffers to op_hcompute_cim_stencil
  consumed: lgxx_stencil
  consumed: lgxy_stencil
  consumed: lgyy_stencil
Looking for connection for lgxx_stencil.op_hcompute_cim_stencil_read
# of selects = 0
inner_compute() : global.hcompute_cim_stencil
name = in0_lgxx_stencil
Looking for connection for lgxy_stencil.op_hcompute_cim_stencil_read
# of selects = 1
inner_compute() : global.hcompute_cim_stencil
name = in0_lgxx_stencil
name = in1_lgxy_stencil
Looking for connection for lgyy_stencil.op_hcompute_cim_stencil_read
# of selects = 2
inner_compute() : global.hcompute_cim_stencil
name = in0_lgxx_stencil
name = in1_lgxy_stencil
name = in2_lgyy_stencil
More than oune outgoing bundle
# of selects = 3
inner_compute() : global.hcompute_cim_stencil
  name = in0_lgxx_stencil
  bundle.first = cim_stencil
  after split  = cim_stencil
  name = in1_lgxy_stencil
  bundle.first = cim_stencil
  after split  = cim_stencil
  name = in2_lgyy_stencil
  bundle.first = cim_stencil
  after split  = cim_stencil
  name = out_cim_stencil
  bundle.first = cim_stencil
  after split  = cim_stencil
Generating compute unit for op_hcompute_cim_output_stencil
getting incoming buffers to op_hcompute_cim_output_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
Found compute file for harris
getting incoming buffers to op_hcompute_cim_output_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
Looking for connection for cim_stencil.op_hcompute_cim_output_stencil_read
# of selects = 0
inner_compute() : global.hcompute_cim_output_stencil
name = in0_cim_stencil
More than oune outgoing bundle
# of selects = 1
inner_compute() : global.hcompute_cim_output_stencil
  name = in0_cim_stencil
  bundle.first = cim_output_stencil
  after split  = cim_output_stencil
  name = out_cim_output_stencil
  bundle.first = cim_output_stencil
  after split  = cim_output_stencil
Generating compute unit for op_hcompute_hw_output_stencil
getting incoming buffers to op_hcompute_hw_output_stencil
  consumed: cim_output_stencil
Found compute file for harris
getting incoming buffers to op_hcompute_hw_output_stencil
  consumed: cim_output_stencil
Looking for connection for cim_output_stencil.op_hcompute_hw_output_stencil_read
# of selects = 0
inner_compute() : global.hcompute_hw_output_stencil
name = in0_cim_output_stencil
More than oune outgoing bundle
# of selects = 1
inner_compute() : global.hcompute_hw_output_stencil
  name = in0_cim_output_stencil
  bundle.first = hw_output_stencil
  after split  = hw_output_stencil
  name = out_hw_output_stencil
  bundle.first = hw_output_stencil
  after split  = hw_output_stencil
create shift register for --- cim_output_stencil
	---- 1 in ports
		cim_output_stencil_op_hcompute_cim_output_stencil_69
			dom : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			acc : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_output_stencil[cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			sched: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			min location: { cim_output_stencil[0, 0] }
			max location: { cim_output_stencil[57, 57] }

	---- 1 out ports:
		cim_output_stencil_op_hcompute_hw_output_stencil_46
			dom : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
			acc : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
			sched: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
			min location: { cim_output_stencil[0, 0] }
			max location: { cim_output_stencil[57, 57] }

	---- Input Bundles
		op_hcompute_cim_output_stencil_write
		---- Ports...
			cim_output_stencil_op_hcompute_cim_output_stencil_69
	---- Output Bundles
		op_hcompute_hw_output_stencil_read
		---- Ports...
			cim_output_stencil_op_hcompute_hw_output_stencil_46

==== No reduce ops on this buffer
Writer name: op_hcompute_cim_output_stencil
read_op read: {cim_output_stencil}
read_op write: {hw_output_stencil, }
write_op write: {hw_output_stencil}
write_op read: {cim_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_output_stencil[cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
reads : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> cim_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Schedule...
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
Time to write: { [i0] -> cim_output_stencil[o0, -390 + i0 - 64o0] : 0 <= o0 <= 57 and -447 + i0 <= 64o0 <= -390 + i0 }
Time to read : { [i0] -> cim_output_stencil[o0, -390 + i0 - 64o0] : 0 <= o0 <= 57 and -447 + i0 <= 64o0 <= -390 + i0 }
PC times     : { [i0] -> [i0] : 384 <= i0 <= 4095 and 64*floor((i0)/64) <= -6 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_cim_output_stencil
DG: ...
# nodes: 2
# edges: 1
Group:     cim_output_stencil_op_hcompute_cim_output_stencil_69
        cim_output_stencil_op_hcompute_cim_output_stencil_69 -> (0) cim_output_stencil_op_hcompute_hw_output_stencil_46
Fanin Group:     cim_output_stencil_op_hcompute_cim_output_stencil_69
        cim_output_stencil_op_hcompute_hw_output_stencil_46 -> (-1) cim_output_stencil_op_hcompute_cim_output_stencil_69

Naive Shift registers...
# nodes: 2
# edges: 1
Group:     cim_output_stencil_op_hcompute_cim_output_stencil_69
        cim_output_stencil_op_hcompute_cim_output_stencil_69 -> (0) cim_output_stencil_op_hcompute_hw_output_stencil_46
Fanin Group:     cim_output_stencil_op_hcompute_cim_output_stencil_69
        cim_output_stencil_op_hcompute_hw_output_stencil_46 -> (-1) cim_output_stencil_op_hcompute_cim_output_stencil_69

inpt: cim_output_stencil_op_hcompute_cim_output_stencil_69
  cim_output_stencil_op_hcompute_hw_output_stencil_46 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     cim_output_stencil_op_hcompute_cim_output_stencil_69
        cim_output_stencil_op_hcompute_cim_output_stencil_69 -> (0) cim_output_stencil_op_hcompute_hw_output_stencil_46
Fanin Group:     cim_output_stencil_op_hcompute_cim_output_stencil_69
        cim_output_stencil_op_hcompute_hw_output_stencil_46 -> (-1) cim_output_stencil_op_hcompute_cim_output_stencil_69

edge: cim_output_stencil_op_hcompute_cim_output_stencil_69=>cim_output_stencil_op_hcompute_hw_output_stencil_46, w=0
after sort: outpt->cim_output_stencil_op_hcompute_hw_output_stencil_46, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     cim_output_stencil_op_hcompute_cim_output_stencil_69
        cim_output_stencil_op_hcompute_cim_output_stencil_69 -> (0) cim_output_stencil_op_hcompute_hw_output_stencil_46
Fanin Group:     cim_output_stencil_op_hcompute_cim_output_stencil_69
        cim_output_stencil_op_hcompute_hw_output_stencil_46 -> (-1) cim_output_stencil_op_hcompute_cim_output_stencil_69
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 cim_output_stencil_op_hcompute_cim_output_stencil_69->cim_output_stencil_op_hcompute_hw_output_stencil_46, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 cim_output_stencil_op_hcompute_cim_output_stencil_69->cim_output_stencil_op_hcompute_hw_output_stencil_46, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 cim_output_stencil_op_hcompute_cim_output_stencil_69->cim_output_stencil_op_hcompute_hw_output_stencil_46, delay = 0
	register IO:: 

Done ports: {cim_output_stencil_op_hcompute_hw_output_stencil_46}
reduced buffer: --- cim_output_stencil
	---- 1 in ports
		cim_output_stencil_op_hcompute_cim_output_stencil_69
			dom : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			acc : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_output_stencil[cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			sched: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			min location: { cim_output_stencil[0, 0] }
			max location: { cim_output_stencil[57, 57] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_cim_output_stencil_write
		---- Ports...
			cim_output_stencil_op_hcompute_cim_output_stencil_69
	---- Output Bundles

SR outputs: {cim_output_stencil_op_hcompute_hw_output_stencil_46}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 cim_output_stencil_op_hcompute_cim_output_stencil_69->cim_output_stencil_op_hcompute_hw_output_stencil_46, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 cim_output_stencil_op_hcompute_cim_output_stencil_69->cim_output_stencil_op_hcompute_hw_output_stencil_46, delay = 0
	register IO:: 

add input: cim_output_stencil_op_hcompute_cim_output_stencil_69 to pt2wire
add output: cim_output_stencil_op_hcompute_hw_output_stencil_46 to pt2wire
create shift register for --- cim_stencil
	---- 1 in ports
		cim_stencil_op_hcompute_cim_stencil_65
			dom : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil[0, 0] }
			max location: { cim_stencil[59, 59] }

	---- 9 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_70
			dom : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			acc : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			sched: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			min location: { cim_stencil[0, 0] }
			max location: { cim_stencil[57, 57] }

		cim_stencil_op_hcompute_cim_output_stencil_71
			dom : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			acc : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[1 + cim_output_s0_y, 1 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			sched: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			min location: { cim_stencil[1, 1] }
			max location: { cim_stencil[58, 58] }

		cim_stencil_op_hcompute_cim_output_stencil_72
			dom : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			acc : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, 1 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			sched: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			min location: { cim_stencil[0, 1] }
			max location: { cim_stencil[57, 58] }

		cim_stencil_op_hcompute_cim_output_stencil_73
			dom : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			acc : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, 2 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			sched: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			min location: { cim_stencil[0, 2] }
			max location: { cim_stencil[57, 59] }

		cim_stencil_op_hcompute_cim_output_stencil_74
			dom : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			acc : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[1 + cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			sched: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			min location: { cim_stencil[1, 0] }
			max location: { cim_stencil[58, 57] }

		cim_stencil_op_hcompute_cim_output_stencil_75
			dom : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			acc : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[1 + cim_output_s0_y, 2 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			sched: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			min location: { cim_stencil[1, 2] }
			max location: { cim_stencil[58, 59] }

		cim_stencil_op_hcompute_cim_output_stencil_76
			dom : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			acc : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[2 + cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			sched: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			min location: { cim_stencil[2, 0] }
			max location: { cim_stencil[59, 57] }

		cim_stencil_op_hcompute_cim_output_stencil_77
			dom : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			acc : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[2 + cim_output_s0_y, 1 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			sched: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			min location: { cim_stencil[2, 1] }
			max location: { cim_stencil[59, 58] }

		cim_stencil_op_hcompute_cim_output_stencil_78
			dom : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			acc : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[2 + cim_output_s0_y, 2 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			sched: { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
			min location: { cim_stencil[2, 2] }
			max location: { cim_stencil[59, 59] }

	---- Input Bundles
		op_hcompute_cim_stencil_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65
	---- Output Bundles
		op_hcompute_cim_output_stencil_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_70
			cim_stencil_op_hcompute_cim_output_stencil_71
			cim_stencil_op_hcompute_cim_output_stencil_72
			cim_stencil_op_hcompute_cim_output_stencil_73
			cim_stencil_op_hcompute_cim_output_stencil_74
			cim_stencil_op_hcompute_cim_output_stencil_75
			cim_stencil_op_hcompute_cim_output_stencil_76
			cim_stencil_op_hcompute_cim_output_stencil_77
			cim_stencil_op_hcompute_cim_output_stencil_78

==== No reduce ops on this buffer
Writer name: op_hcompute_cim_stencil
read_op read: {cim_stencil}
read_op write: {cim_output_stencil, }
write_op write: {cim_output_stencil}
write_op read: {lgxx_stencil, lgxy_stencil, lgyy_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
reads : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Schedule...
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Time to write: { [i0] -> cim_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> cim_stencil[o0, -390 + i0 - 64o0] : 0 <= o0 <= 57 and -447 + i0 <= 64o0 <= -390 + i0 }
PC times     : { [i0] -> [130 + i0] : 254 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= -4 + i0 }
DDs          : { [130] }
DD           : 130
writer op    : op_hcompute_cim_stencil
Writer name: op_hcompute_cim_stencil
read_op read: {cim_stencil}
read_op write: {cim_output_stencil, }
write_op write: {cim_output_stencil}
write_op read: {lgxx_stencil, lgxy_stencil, lgyy_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
reads : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[1 + cim_output_s0_y, 1 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Schedule...
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Time to write: { [i0] -> cim_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> cim_stencil[o0, -325 + i0 - 64o0] : 0 < o0 <= 58 and -383 + i0 <= 64o0 <= -326 + i0 }
PC times     : { [i0] -> [65 + i0] : 319 <= i0 <= 4030 and 64*floor((1 + i0)/64) <= -5 + i0 }
DDs          : { [65] }
DD           : 65
writer op    : op_hcompute_cim_stencil
Writer name: op_hcompute_cim_stencil
read_op read: {cim_stencil}
read_op write: {cim_output_stencil, }
write_op write: {cim_output_stencil}
write_op read: {lgxx_stencil, lgxy_stencil, lgyy_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
reads : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, 1 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Schedule...
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Time to write: { [i0] -> cim_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> cim_stencil[o0, -389 + i0 - 64o0] : 0 <= o0 <= 57 and -447 + i0 <= 64o0 <= -390 + i0 }
PC times     : { [i0] -> [129 + i0] : 255 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -5 + i0 }
DDs          : { [129] }
DD           : 129
writer op    : op_hcompute_cim_stencil
Writer name: op_hcompute_cim_stencil
read_op read: {cim_stencil}
read_op write: {cim_output_stencil, }
write_op write: {cim_output_stencil}
write_op read: {lgxx_stencil, lgxy_stencil, lgyy_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
reads : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[cim_output_s0_y, 2 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Schedule...
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Time to write: { [i0] -> cim_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> cim_stencil[o0, -388 + i0 - 64o0] : 0 <= o0 <= 57 and -447 + i0 <= 64o0 <= -390 + i0 }
PC times     : { [i0] -> [128 + i0] : 256 <= i0 <= 3967 and 64*floor((i0)/64) <= -6 + i0 }
DDs          : { [128] }
DD           : 128
writer op    : op_hcompute_cim_stencil
Writer name: op_hcompute_cim_stencil
read_op read: {cim_stencil}
read_op write: {cim_output_stencil, }
write_op write: {cim_output_stencil}
write_op read: {lgxx_stencil, lgxy_stencil, lgyy_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
reads : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[1 + cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Schedule...
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Time to write: { [i0] -> cim_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> cim_stencil[o0, -326 + i0 - 64o0] : 0 < o0 <= 58 and -383 + i0 <= 64o0 <= -326 + i0 }
PC times     : { [i0] -> [66 + i0] : 318 <= i0 <= 4029 and 64*floor((2 + i0)/64) <= -4 + i0 }
DDs          : { [66] }
DD           : 66
writer op    : op_hcompute_cim_stencil
Writer name: op_hcompute_cim_stencil
read_op read: {cim_stencil}
read_op write: {cim_output_stencil, }
write_op write: {cim_output_stencil}
write_op read: {lgxx_stencil, lgxy_stencil, lgyy_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
reads : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[1 + cim_output_s0_y, 2 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Schedule...
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Time to write: { [i0] -> cim_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> cim_stencil[o0, -324 + i0 - 64o0] : 0 < o0 <= 58 and -383 + i0 <= 64o0 <= -326 + i0 }
PC times     : { [i0] -> [64 + i0] : 320 <= i0 <= 4031 and 64*floor((i0)/64) <= -6 + i0 }
DDs          : { [64] }
DD           : 64
writer op    : op_hcompute_cim_stencil
Writer name: op_hcompute_cim_stencil
read_op read: {cim_stencil}
read_op write: {cim_output_stencil, }
write_op write: {cim_output_stencil}
write_op read: {lgxx_stencil, lgxy_stencil, lgyy_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
reads : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[2 + cim_output_s0_y, cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Schedule...
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Time to write: { [i0] -> cim_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> cim_stencil[o0, -262 + i0 - 64o0] : 2 <= o0 <= 59 and -319 + i0 <= 64o0 <= -262 + i0 }
PC times     : { [i0] -> [2 + i0] : 382 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= -4 + i0 }
DDs          : { [2] }
DD           : 2
writer op    : op_hcompute_cim_stencil
Writer name: op_hcompute_cim_stencil
read_op read: {cim_stencil}
read_op write: {cim_output_stencil, }
write_op write: {cim_output_stencil}
write_op read: {lgxx_stencil, lgxy_stencil, lgyy_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
reads : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[2 + cim_output_s0_y, 1 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Schedule...
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Time to write: { [i0] -> cim_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> cim_stencil[o0, -261 + i0 - 64o0] : 2 <= o0 <= 59 and -319 + i0 <= 64o0 <= -262 + i0 }
PC times     : { [i0] -> [1 + i0] : 383 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -5 + i0 }
DDs          : { [1] }
DD           : 1
writer op    : op_hcompute_cim_stencil
Writer name: op_hcompute_cim_stencil
read_op read: {cim_stencil}
read_op write: {cim_output_stencil, }
write_op write: {cim_output_stencil}
write_op read: {lgxx_stencil, lgxy_stencil, lgyy_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
reads : { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> cim_stencil[2 + cim_output_s0_y, 2 + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Schedule...
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
  { op_hcompute_cim_output_stencil[root = 0, cim_output_s0_y, cim_output_s0_x] -> [390 + 64cim_output_s0_y + cim_output_s0_x] : 0 <= cim_output_s0_y <= 57 and 0 <= cim_output_s0_x <= 57 }
Time to write: { [i0] -> cim_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> cim_stencil[o0, -260 + i0 - 64o0] : 2 <= o0 <= 59 and -319 + i0 <= 64o0 <= -262 + i0 }
PC times     : { [i0] -> [i0] : 384 <= i0 <= 4095 and 64*floor((i0)/64) <= -6 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_cim_stencil
DG: ...
# nodes: 10
# edges: 9
Group:     cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_stencil_65 -> (130) cim_stencil_op_hcompute_cim_output_stencil_70
        cim_stencil_op_hcompute_cim_stencil_65 -> (65) cim_stencil_op_hcompute_cim_output_stencil_71
        cim_stencil_op_hcompute_cim_stencil_65 -> (129) cim_stencil_op_hcompute_cim_output_stencil_72
        cim_stencil_op_hcompute_cim_stencil_65 -> (128) cim_stencil_op_hcompute_cim_output_stencil_73
        cim_stencil_op_hcompute_cim_stencil_65 -> (66) cim_stencil_op_hcompute_cim_output_stencil_74
        cim_stencil_op_hcompute_cim_stencil_65 -> (64) cim_stencil_op_hcompute_cim_output_stencil_75
        cim_stencil_op_hcompute_cim_stencil_65 -> (2) cim_stencil_op_hcompute_cim_output_stencil_76
        cim_stencil_op_hcompute_cim_stencil_65 -> (1) cim_stencil_op_hcompute_cim_output_stencil_77
        cim_stencil_op_hcompute_cim_stencil_65 -> (0) cim_stencil_op_hcompute_cim_output_stencil_78
Fanin Group:     cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_70 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_71 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_72 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_73 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_74 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_75 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_76 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_77 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_78 -> (-1) cim_stencil_op_hcompute_cim_stencil_65

Naive Shift registers...
# nodes: 10
# edges: 9
Group:     cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_stencil_65 -> (130) cim_stencil_op_hcompute_cim_output_stencil_70
        cim_stencil_op_hcompute_cim_stencil_65 -> (65) cim_stencil_op_hcompute_cim_output_stencil_71
        cim_stencil_op_hcompute_cim_stencil_65 -> (129) cim_stencil_op_hcompute_cim_output_stencil_72
        cim_stencil_op_hcompute_cim_stencil_65 -> (128) cim_stencil_op_hcompute_cim_output_stencil_73
        cim_stencil_op_hcompute_cim_stencil_65 -> (66) cim_stencil_op_hcompute_cim_output_stencil_74
        cim_stencil_op_hcompute_cim_stencil_65 -> (64) cim_stencil_op_hcompute_cim_output_stencil_75
        cim_stencil_op_hcompute_cim_stencil_65 -> (2) cim_stencil_op_hcompute_cim_output_stencil_76
        cim_stencil_op_hcompute_cim_stencil_65 -> (1) cim_stencil_op_hcompute_cim_output_stencil_77
        cim_stencil_op_hcompute_cim_stencil_65 -> (0) cim_stencil_op_hcompute_cim_output_stencil_78
Fanin Group:     cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_70 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_71 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_72 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_73 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_74 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_75 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_76 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_77 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_78 -> (-1) cim_stencil_op_hcompute_cim_stencil_65

inpt: cim_stencil_op_hcompute_cim_stencil_65
  cim_stencil_op_hcompute_cim_output_stencil_78 -(0)-> 0
  cim_stencil_op_hcompute_cim_output_stencil_77 -(1)-> 1
  cim_stencil_op_hcompute_cim_output_stencil_76 -(2)-> 2
  cim_stencil_op_hcompute_cim_output_stencil_75 -(64)-> 64
  cim_stencil_op_hcompute_cim_output_stencil_71 -(65)-> 65
  cim_stencil_op_hcompute_cim_output_stencil_74 -(66)-> 66
  cim_stencil_op_hcompute_cim_output_stencil_73 -(128)-> 128
  cim_stencil_op_hcompute_cim_output_stencil_72 -(129)-> 129
  cim_stencil_op_hcompute_cim_output_stencil_70 -(130)-> 130
Groups...
  Group...
  Group...
  Group...
# nodes: 10
# edges: 9
Group:     cim_stencil_op_hcompute_cim_output_stencil_71
        cim_stencil_op_hcompute_cim_output_stencil_71 -> (1) cim_stencil_op_hcompute_cim_output_stencil_74
Group:     cim_stencil_op_hcompute_cim_output_stencil_72
        cim_stencil_op_hcompute_cim_output_stencil_72 -> (1) cim_stencil_op_hcompute_cim_output_stencil_70
Group:     cim_stencil_op_hcompute_cim_output_stencil_73
        cim_stencil_op_hcompute_cim_output_stencil_73 -> (1) cim_stencil_op_hcompute_cim_output_stencil_72
Group:     cim_stencil_op_hcompute_cim_output_stencil_75
        cim_stencil_op_hcompute_cim_output_stencil_75 -> (1) cim_stencil_op_hcompute_cim_output_stencil_71
Group:     cim_stencil_op_hcompute_cim_output_stencil_77
        cim_stencil_op_hcompute_cim_output_stencil_77 -> (1) cim_stencil_op_hcompute_cim_output_stencil_76
Group:     cim_stencil_op_hcompute_cim_output_stencil_78
        cim_stencil_op_hcompute_cim_output_stencil_78 -> (1) cim_stencil_op_hcompute_cim_output_stencil_77
Group:     cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_stencil_65 -> (128) cim_stencil_op_hcompute_cim_output_stencil_73
        cim_stencil_op_hcompute_cim_stencil_65 -> (64) cim_stencil_op_hcompute_cim_output_stencil_75
        cim_stencil_op_hcompute_cim_stencil_65 -> (0) cim_stencil_op_hcompute_cim_output_stencil_78
Fanin Group:     cim_stencil_op_hcompute_cim_output_stencil_71
        cim_stencil_op_hcompute_cim_output_stencil_74 -> (-1) cim_stencil_op_hcompute_cim_output_stencil_71
Fanin Group:     cim_stencil_op_hcompute_cim_output_stencil_72
        cim_stencil_op_hcompute_cim_output_stencil_70 -> (-1) cim_stencil_op_hcompute_cim_output_stencil_72
Fanin Group:     cim_stencil_op_hcompute_cim_output_stencil_73
        cim_stencil_op_hcompute_cim_output_stencil_72 -> (-1) cim_stencil_op_hcompute_cim_output_stencil_73
Fanin Group:     cim_stencil_op_hcompute_cim_output_stencil_75
        cim_stencil_op_hcompute_cim_output_stencil_71 -> (-1) cim_stencil_op_hcompute_cim_output_stencil_75
Fanin Group:     cim_stencil_op_hcompute_cim_output_stencil_77
        cim_stencil_op_hcompute_cim_output_stencil_76 -> (-1) cim_stencil_op_hcompute_cim_output_stencil_77
Fanin Group:     cim_stencil_op_hcompute_cim_output_stencil_78
        cim_stencil_op_hcompute_cim_output_stencil_77 -> (-1) cim_stencil_op_hcompute_cim_output_stencil_78
Fanin Group:     cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_73 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_75 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_78 -> (-1) cim_stencil_op_hcompute_cim_stencil_65

edge: cim_stencil_op_hcompute_cim_stencil_65=>cim_stencil_op_hcompute_cim_output_stencil_73, w=128
edge: cim_stencil_op_hcompute_cim_stencil_65=>cim_stencil_op_hcompute_cim_output_stencil_75, w=64
edge: cim_stencil_op_hcompute_cim_stencil_65=>cim_stencil_op_hcompute_cim_output_stencil_78, w=0
after sort: outpt->cim_stencil_op_hcompute_cim_output_stencil_73, w=128
after sort: outpt->cim_stencil_op_hcompute_cim_output_stencil_75, w=64
after sort: outpt->cim_stencil_op_hcompute_cim_output_stencil_78, w=0
	delay of cim_stencil_op_hcompute_cim_output_stencil_77 = 1
	delay of cim_stencil_op_hcompute_cim_output_stencil_78 = 2
	subbranch size: 2
	delay of cim_stencil_op_hcompute_cim_output_stencil_71 = 1
	delay of cim_stencil_op_hcompute_cim_output_stencil_75 = 2
	subbranch size: 2
	delay of cim_stencil_op_hcompute_cim_output_stencil_72 = 1
	delay of cim_stencil_op_hcompute_cim_output_stencil_73 = 2
	subbranch size: 2
# nodes: 10
# edges: 9
Group:     cim_stencil_op_hcompute_cim_output_stencil_71
        cim_stencil_op_hcompute_cim_output_stencil_71 -> (1) cim_stencil_op_hcompute_cim_output_stencil_74
Group:     cim_stencil_op_hcompute_cim_output_stencil_72
        cim_stencil_op_hcompute_cim_output_stencil_72 -> (1) cim_stencil_op_hcompute_cim_output_stencil_70
Group:     cim_stencil_op_hcompute_cim_output_stencil_73
        cim_stencil_op_hcompute_cim_output_stencil_73 -> (1) cim_stencil_op_hcompute_cim_output_stencil_72
Group:     cim_stencil_op_hcompute_cim_output_stencil_75
        cim_stencil_op_hcompute_cim_output_stencil_75 -> (1) cim_stencil_op_hcompute_cim_output_stencil_71
Group:     cim_stencil_op_hcompute_cim_output_stencil_77
        cim_stencil_op_hcompute_cim_output_stencil_77 -> (1) cim_stencil_op_hcompute_cim_output_stencil_76
Group:     cim_stencil_op_hcompute_cim_output_stencil_78
        cim_stencil_op_hcompute_cim_output_stencil_78 -> (1) cim_stencil_op_hcompute_cim_output_stencil_77
Group:     cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_stencil_65 -> (128) cim_stencil_op_hcompute_cim_output_stencil_73
        cim_stencil_op_hcompute_cim_stencil_65 -> (64) cim_stencil_op_hcompute_cim_output_stencil_75
        cim_stencil_op_hcompute_cim_stencil_65 -> (0) cim_stencil_op_hcompute_cim_output_stencil_78
Fanin Group:     cim_stencil_op_hcompute_cim_output_stencil_71
        cim_stencil_op_hcompute_cim_output_stencil_74 -> (-1) cim_stencil_op_hcompute_cim_output_stencil_71
Fanin Group:     cim_stencil_op_hcompute_cim_output_stencil_72
        cim_stencil_op_hcompute_cim_output_stencil_70 -> (-1) cim_stencil_op_hcompute_cim_output_stencil_72
Fanin Group:     cim_stencil_op_hcompute_cim_output_stencil_73
        cim_stencil_op_hcompute_cim_output_stencil_72 -> (-1) cim_stencil_op_hcompute_cim_output_stencil_73
Fanin Group:     cim_stencil_op_hcompute_cim_output_stencil_75
        cim_stencil_op_hcompute_cim_output_stencil_71 -> (-1) cim_stencil_op_hcompute_cim_output_stencil_75
Fanin Group:     cim_stencil_op_hcompute_cim_output_stencil_77
        cim_stencil_op_hcompute_cim_output_stencil_76 -> (-1) cim_stencil_op_hcompute_cim_output_stencil_77
Fanin Group:     cim_stencil_op_hcompute_cim_output_stencil_78
        cim_stencil_op_hcompute_cim_output_stencil_77 -> (-1) cim_stencil_op_hcompute_cim_output_stencil_78
Fanin Group:     cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_73 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_75 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
        cim_stencil_op_hcompute_cim_output_stencil_78 -> (-1) cim_stencil_op_hcompute_cim_stencil_65
Bank writers: 
	 bank NO.0
		writers: {cim_stencil_op_hcompute_cim_stencil_65}
	 bank NO.1
		writers: {cim_stencil_op_hcompute_cim_stencil_65}
Bank readers: 
	 bank NO.0
		readers: {cim_stencil_op_hcompute_cim_output_stencil_75}
	 bank NO.1
		readers: {cim_stencil_op_hcompute_cim_output_stencil_73}
Shift Register Output: 
	memtiles IO:: 
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_73, delay = 128
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_75, delay = 64
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_78, delay = 0
	register IO:: 
		 cim_stencil_op_hcompute_cim_output_stencil_78->cim_stencil_op_hcompute_cim_output_stencil_77, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_77->cim_stencil_op_hcompute_cim_output_stencil_76, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_75->cim_stencil_op_hcompute_cim_output_stencil_71, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_71->cim_stencil_op_hcompute_cim_output_stencil_74, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_73->cim_stencil_op_hcompute_cim_output_stencil_72, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_72->cim_stencil_op_hcompute_cim_output_stencil_70, delay = 1
Bank writers: 
	 bank NO.0
		writers: {cim_stencil_op_hcompute_cim_stencil_65}
	 bank NO.1
		writers: {cim_stencil_op_hcompute_cim_stencil_65}
Bank readers: 
	 bank NO.0
		readers: {cim_stencil_op_hcompute_cim_output_stencil_75}
	 bank NO.1
		readers: {cim_stencil_op_hcompute_cim_output_stencil_73}
Shift Register Output: 
	memtiles IO:: 
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_73, delay = 128
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_75, delay = 64
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_78, delay = 0
	register IO:: 
		 cim_stencil_op_hcompute_cim_output_stencil_78->cim_stencil_op_hcompute_cim_output_stencil_77, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_77->cim_stencil_op_hcompute_cim_output_stencil_76, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_75->cim_stencil_op_hcompute_cim_output_stencil_71, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_71->cim_stencil_op_hcompute_cim_output_stencil_74, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_73->cim_stencil_op_hcompute_cim_output_stencil_72, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_72->cim_stencil_op_hcompute_cim_output_stencil_70, delay = 1

After shift register optimization: Bank writers: 
	 bank NO.0
		writers: {cim_stencil_op_hcompute_cim_stencil_65}
	 bank NO.1
		writers: {cim_stencil_op_hcompute_cim_stencil_65}
Bank readers: 
	 bank NO.0
		readers: {cim_stencil_op_hcompute_cim_output_stencil_75}
	 bank NO.1
		readers: {cim_stencil_op_hcompute_cim_output_stencil_73}
Shift Register Output: 
	memtiles IO:: 
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_73, delay = 128
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_75, delay = 64
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_78, delay = 0
	register IO:: 
		 cim_stencil_op_hcompute_cim_output_stencil_78->cim_stencil_op_hcompute_cim_output_stencil_77, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_77->cim_stencil_op_hcompute_cim_output_stencil_76, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_75->cim_stencil_op_hcompute_cim_output_stencil_71, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_71->cim_stencil_op_hcompute_cim_output_stencil_74, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_73->cim_stencil_op_hcompute_cim_output_stencil_72, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_72->cim_stencil_op_hcompute_cim_output_stencil_70, delay = 1

Done ports: {cim_stencil_op_hcompute_cim_output_stencil_70, cim_stencil_op_hcompute_cim_output_stencil_71, cim_stencil_op_hcompute_cim_output_stencil_72, cim_stencil_op_hcompute_cim_output_stencil_73, cim_stencil_op_hcompute_cim_output_stencil_74, cim_stencil_op_hcompute_cim_output_stencil_75, cim_stencil_op_hcompute_cim_output_stencil_76, cim_stencil_op_hcompute_cim_output_stencil_77, cim_stencil_op_hcompute_cim_output_stencil_78}
reduced buffer: --- cim_stencil
	---- 1 in ports
		cim_stencil_op_hcompute_cim_stencil_65
			dom : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil[0, 0] }
			max location: { cim_stencil[59, 59] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_cim_stencil_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65
	---- Output Bundles

SR outputs: {cim_stencil_op_hcompute_cim_output_stencil_70, cim_stencil_op_hcompute_cim_output_stencil_71, cim_stencil_op_hcompute_cim_output_stencil_72, cim_stencil_op_hcompute_cim_output_stencil_73, cim_stencil_op_hcompute_cim_output_stencil_74, cim_stencil_op_hcompute_cim_output_stencil_75, cim_stencil_op_hcompute_cim_output_stencil_76, cim_stencil_op_hcompute_cim_output_stencil_77, cim_stencil_op_hcompute_cim_output_stencil_78}
BUF outputs: {}
After banking optimization: Bank writers: 
	 bank NO.0
		writers: {cim_stencil_op_hcompute_cim_stencil_65}
	 bank NO.1
		writers: {cim_stencil_op_hcompute_cim_stencil_65}
Bank readers: 
	 bank NO.0
		readers: {cim_stencil_op_hcompute_cim_output_stencil_75}
	 bank NO.1
		readers: {cim_stencil_op_hcompute_cim_output_stencil_73}
Shift Register Output: 
	memtiles IO:: 
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_73, delay = 128
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_75, delay = 64
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_78, delay = 0
	register IO:: 
		 cim_stencil_op_hcompute_cim_output_stencil_78->cim_stencil_op_hcompute_cim_output_stencil_77, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_77->cim_stencil_op_hcompute_cim_output_stencil_76, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_75->cim_stencil_op_hcompute_cim_output_stencil_71, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_71->cim_stencil_op_hcompute_cim_output_stencil_74, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_73->cim_stencil_op_hcompute_cim_output_stencil_72, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_72->cim_stencil_op_hcompute_cim_output_stencil_70, delay = 1

After bank merging: Bank writers: 
	 bank NO.0
		writers: {cim_stencil_op_hcompute_cim_stencil_65}
	 bank NO.1
		writers: {cim_stencil_op_hcompute_cim_stencil_65}
Bank readers: 
	 bank NO.0
		readers: {cim_stencil_op_hcompute_cim_output_stencil_75}
	 bank NO.1
		readers: {cim_stencil_op_hcompute_cim_output_stencil_73}
Shift Register Output: 
	memtiles IO:: 
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_73, delay = 128
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_75, delay = 64
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_78, delay = 0
	register IO:: 
		 cim_stencil_op_hcompute_cim_output_stencil_78->cim_stencil_op_hcompute_cim_output_stencil_77, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_77->cim_stencil_op_hcompute_cim_output_stencil_76, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_75->cim_stencil_op_hcompute_cim_output_stencil_71, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_71->cim_stencil_op_hcompute_cim_output_stencil_74, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_73->cim_stencil_op_hcompute_cim_output_stencil_72, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_72->cim_stencil_op_hcompute_cim_output_stencil_70, delay = 1

CGPL level :0
impl inputs: {cim_stencil_op_hcompute_cim_stencil_65}
impl outpts: {cim_stencil_op_hcompute_cim_output_stencil_75}
rddom: { cim_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
ls = { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] }
v = 0
Bank writers: 
	 bank NO.0
		writers: {cim_stencil_op_hcompute_cim_stencil_65}
	 bank NO.1
		writers: {cim_stencil_op_hcompute_cim_stencil_65}
Bank readers: 
	 bank NO.0
		readers: {cim_stencil_op_hcompute_cim_output_stencil_75}
	 bank NO.1
		readers: {cim_stencil_op_hcompute_cim_output_stencil_73}
Shift Register Output: 
	memtiles IO:: 
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_73, delay = 128
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_75, delay = 64
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_78, delay = 0
	register IO:: 
		 cim_stencil_op_hcompute_cim_output_stencil_78->cim_stencil_op_hcompute_cim_output_stencil_77, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_77->cim_stencil_op_hcompute_cim_output_stencil_76, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_75->cim_stencil_op_hcompute_cim_output_stencil_71, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_71->cim_stencil_op_hcompute_cim_output_stencil_74, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_73->cim_stencil_op_hcompute_cim_output_stencil_72, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_72->cim_stencil_op_hcompute_cim_output_stencil_70, delay = 1

--- cim_stencil_BANK_0
	---- 1 in ports
		cim_stencil_op_hcompute_cim_stencil_65
			dom : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_0[0, 0] }
			max location: { cim_stencil_BANK_0[59, 59] }

	---- 1 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_75
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] -> [324 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_0[0, 0] }
			max location: { cim_stencil_BANK_0[59, 59] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_75_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_75

Stride inner most:  1
{cim_stencil[d0, d1] -> cim_stencil[floor((1*d1 + 60*d0)/1)] }
reduce map: { cim_stencil_BANK_0[d0, d1] -> cim_stencil_BANK_0[60d0 + d1] }
linear map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
linear map: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
after ubuffer regen: --- cim_stencil_BANK_0
	---- 1 in ports
		cim_stencil_op_hcompute_cim_stencil_65
			dom : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_0[0] }
			max location: { cim_stencil_BANK_0[3599] }

	---- 1 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_75
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] -> [324 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_0[0] }
			max location: { cim_stencil_BANK_0[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_75_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_75

addr need tight: {}
before dim id set :{ op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
After dim id set: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
before dim id set :{ op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
After dim id set: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] -> [324 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] -> [324 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }

	UBuffer after address tighten--- cim_stencil_BANK_0
	---- 1 in ports
		cim_stencil_op_hcompute_cim_stencil_65
			dom : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_0[0] }
			max location: { cim_stencil_BANK_0[3599] }

	---- 1 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_75
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] -> [324 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_0[0] }
			max location: { cim_stencil_BANK_0[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_75_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_75

getting rddom
rddom = { cim_stencil_BANK_0[i0] : 0 <= i0 <= 3599 }
Vectorization buffer capacity: 3600

	UBuffer after cgpl optimization--- cim_stencil_BANK_0
	---- 1 in ports
		cim_stencil_op_hcompute_cim_stencil_65
			dom : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_0[0] }
			max location: { cim_stencil_BANK_0[3599] }

	---- 1 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_75
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] -> [324 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_0[0] }
			max location: { cim_stencil_BANK_0[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_75_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_75

find bd for op :op_hcompute_cim_stencil
	find candidate: cim_stencil_op_hcompute_cim_stencil_65_write
find bd for op :op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64
	find candidate: cim_stencil_op_hcompute_cim_output_stencil_75_read
	aff : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root, cim_s0_y, cim_s0_x] -> [(60cim_s0_y + cim_s0_x)] }
	div dim: 0
getting rddom
rddom = { cim_stencil_BANK_0[i0] : 0 <= i0 <= 3599 }
vectorization buffer capacity: 3600
vectorization buf name: cim_stencil_BANK_0
	 original range input access map: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
	 dim id: 2
Ext by dim: {3600}
  buffer_vectorization Vectorizing: cim_stencil_BANK_0
   On addr dim: 0, fetch_width: 4
--- cim_stencil_BANK_0
	---- 1 in ports
		cim_stencil_op_hcompute_cim_stencil_65
			dom : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_0[0] }
			max location: { cim_stencil_BANK_0[3599] }

	---- 1 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_75
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] -> [324 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_0[0] }
			max location: { cim_stencil_BANK_0[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_75_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_75

in bundle  = 1
out bundle = 1
Vectorize input port bundle: cim_stencil_op_hcompute_cim_stencil_65_write
	vectorize input port: cim_stencil_op_hcompute_cim_stencil_65
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 59]
Domain space on <i2> is: [0, 59]
Stride : 1	Origin: 1
ADDR dim <0> range: 3600, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 60, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 60, 60, ]
	---- Out range: [3600, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 60, 1, ]
		]

origin: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }, transform: { cim_stencil_BANK_0[d0] -> cim_stencil_BANK_0_0_agg[d0] }
access map : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_cim_stencil[i0, i1, i2] -> op_hcompute_cim_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_cim_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_cim_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
	sched after trans: { op_hcompute_cim_stencil[i0 = 0, i1, i2] -> [260 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
Fetch_ii: 4
	final sched: { op_hcompute_cim_stencil[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
Autogen slice:{ cim_stencil_BANK_0[i0] -> cim_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
trans max: 899 , origin max: 899
agg2sram sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0_0_agg[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
After dim id set: { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0_0_agg[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
before dim id set :{ op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
After dim id set: { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_0_agg[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_0_agg[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_0_agg[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_0_agg[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_0_agg[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_0_agg[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_0_agg[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_0_agg[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
AGG : --- cim_stencil_BANK_0_0_agg
	---- 1 in ports
		cim_stencil_op_hcompute_cim_stencil_65_in
			dom : { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0_0_agg[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_0_0_agg[0] }
			max location: { cim_stencil_BANK_0_0_agg[3599] }

	---- 4 out ports:
		cim_stencil_op_hcompute_cim_stencil_65_out_0
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_0_agg[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_0_agg[0] }
			max location: { cim_stencil_BANK_0_0_agg[3596] }

		cim_stencil_op_hcompute_cim_stencil_65_out_1
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_0_agg[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_0_agg[1] }
			max location: { cim_stencil_BANK_0_0_agg[3597] }

		cim_stencil_op_hcompute_cim_stencil_65_out_2
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_0_agg[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_0_agg[2] }
			max location: { cim_stencil_BANK_0_0_agg[3598] }

		cim_stencil_op_hcompute_cim_stencil_65_out_3
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_0_agg[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_0_agg[3] }
			max location: { cim_stencil_BANK_0_0_agg[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write_agg_in
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65_in
	---- Output Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write_agg_out
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65_out_0
			cim_stencil_op_hcompute_cim_stencil_65_out_1
			cim_stencil_op_hcompute_cim_stencil_65_out_2
			cim_stencil_op_hcompute_cim_stencil_65_out_3

AGG Schedule: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14; op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
Vectorize output port bundle: cim_stencil_op_hcompute_cim_output_stencil_75_read
	Vectorize output port: cim_stencil_op_hcompute_cim_output_stencil_75
Autogen slice:{ cim_stencil_BANK_0[i0] -> cim_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
Range slice: { cim_stencil_BANK_0[i0] -> cim_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
after slice{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root, cim_s0_y, cim_s0_x] -> [(15cim_s0_y + floor((cim_s0_x)/4))] }
	aff : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root, cim_s0_y, cim_s0_x] -> [(15cim_s0_y + floor((cim_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root, cim_s0_y, cim_s0_x] -> [(cim_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 2 denom: 4
	Trans str{op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[d0, d1, d2]->op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[d0, d1, floor(d2/4), d2%4]}
{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[d0, d1, d2] -> op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[d0, d1, o2, o3] : (-d2 + o3) mod 4 = 0 and -3 + d2 <= 4o2 <= d2 and 0 <= o3 <= 3 }
access map : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[0, i1, i2, i3] -> cim_stencil_BANK_0[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 and 0 <= i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Preliminary vectorization dim: 2
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[i0, i1, i2, i3] -> [(15i1 + i2)] }
after removal: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[i0, i1, i2, i3] -> [(15i1 + i2)] }
new: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[0, i1, i2, i3] -> cim_stencil_BANK_0[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 and 0 <= i3 <= 3 }
remove: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[0, i1, i2, i3] -> cim_stencil_BANK_0[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 and 0 <= i3 <= 3 }
access map : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[0, i1, i2, i3] -> cim_stencil_BANK_0[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 and 0 <= i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Vectorization dimension: 2
	aff : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[i0, i1, i2, i3] -> [(15i1 + i2)] }
	div dim: 0
rem: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[0, i1, i2, i3] -> cim_stencil_BANK_0[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 and 0 <= i3 <= 3 }
new: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[0, i1, i2, i3] -> cim_stencil_BANK_0[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 and 0 <= i3 <= 3 }
base_str : {op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[i0=0, i1=0, i2=0, i3]}
base_str : {op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[i0=0, i1=0, i2=0, i3]}
	new: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[i0 = 0, i1 = 0, i2 = 0, i3] }
	rem: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[i0 = 0, i1 = 0, i2 = 0, i3] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[i0, i1, i2, i3 = 0] }
sched domain: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[i0, i1, i2, i3 = 0] }
remove dimension: {3}
before:{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[0, i1, i2, i3] -> cim_stencil_BANK_0[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 and 0 <= i3 <= 3 }
after:{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[0, i1, i2, 0] -> cim_stencil_BANK_0[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
remove dimension: {3}
sched before projection: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[0, i1, i2] -> [324 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
access: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[0, i1, i2] -> cim_stencil_BANK_0[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
access map : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[0, i1, i2] -> cim_stencil_BANK_0[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vectorization dimension after irrelevant dimension removal: 2
sched before adjust: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[0, i1, i2] -> [324 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[0, i1, i2] -> [324 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
vectorized dim: 2
	 temp sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
final schedule: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
final access: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[0, i1, i2] -> cim_stencil_BANK_0[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 59]
Domain space on <i2> is: [0, 59]
Stride : 1	Origin: 1
ADDR dim <0> range: 3600, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 60, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 60, 60, ]
	---- Out range: [3600, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 60, 1, ]
		]

Autogen slice:{ cim_stencil_BANK_0[i0] -> cim_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root, cim_s0_y, cim_s0_x] -> [(15cim_s0_y + floor((cim_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root, cim_s0_y, cim_s0_x] -> [(cim_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[0, i1, i2] -> cim_stencil_BANK_0[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 59]
Domain space on <i2> is: [0, 14]
Stride : 4	Origin: 4
ADDR dim <0> range: 900, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 60, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[60*i1+4*i2]
domain: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[60i1 + 4i2] }
	 rewrite access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[0, i1, i2] -> cim_stencil_BANK_0[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 59]
Domain space on <i2> is: [0, 14]
Stride : 4	Origin: 4
ADDR dim <0> range: 900, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 60, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[60*i1+4*i2+1]
domain: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[1 + 60i1 + 4i2] }
	 rewrite access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[0, i1, i2] -> cim_stencil_BANK_0[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 59]
Domain space on <i2> is: [0, 14]
Stride : 4	Origin: 4
ADDR dim <0> range: 900, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 60, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[60*i1+4*i2+2]
domain: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[2 + 60i1 + 4i2] }
	 rewrite access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[0, i1, i2] -> cim_stencil_BANK_0[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 59]
Domain space on <i2> is: [0, 14]
Stride : 4	Origin: 4
ADDR dim <0> range: 900, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 60, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[60*i1+4*i2+3]
domain: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[3 + 60i1 + 4i2] }
	Add TB output port: cim_stencil_op_hcompute_cim_output_stencil_75
Autogen slice:{ cim_stencil_BANK_0[i0] -> cim_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root, cim_s0_y, cim_s0_x] -> [(15cim_s0_y + floor((cim_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root, cim_s0_y, cim_s0_x] -> [(cim_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 59]
Domain space on <i2> is: [0, 59]
Stride : 1	Origin: 1
ADDR dim <0> range: 3600, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 60, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
access map expr:[60*i1+i2]
domain: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, i1, i2] -> cim_stencil_BANK_0[60i1 + i2] }
tb output access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, i1, i2] -> cim_stencil_BANK_0[60i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
	Access map decouple reuse: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[60i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[60i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[60i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_0[root = 0, cim_s0_y, cim_s0_x] -> [324 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_0[root = 0, cim_s0_y, cim_s0_x] -> [324 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
TB  : --- cim_stencil_BANK_0_0_tb
	---- 4 in ports
		cim_stencil_op_hcompute_cim_output_stencil_75_out_0
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_0_tb[0] }
			max location: { cim_stencil_BANK_0_0_tb[3596] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_1
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_0_tb[1] }
			max location: { cim_stencil_BANK_0_0_tb[3597] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_2
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_0_tb[2] }
			max location: { cim_stencil_BANK_0_0_tb[3598] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_3
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_0_tb[3] }
			max location: { cim_stencil_BANK_0_0_tb[3599] }

	---- 1 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_75_out
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[60i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_0[root = 0, cim_s0_y, cim_s0_x] -> [324 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_0_0_tb[0] }
			max location: { cim_stencil_BANK_0_0_tb[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_output_stencil_75_read_tb_in
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_75_out_0
			cim_stencil_op_hcompute_cim_output_stencil_75_out_1
			cim_stencil_op_hcompute_cim_output_stencil_75_out_2
			cim_stencil_op_hcompute_cim_output_stencil_75_out_3
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_75_read_tb_out
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_75_out

TB Schedule: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_0[root = 0, cim_s0_y, cim_s0_x] -> [324 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59; op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[0, i1, i2] -> cim_stencil_BANK_0_sram[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_0_sram[60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[0, i1, i2] -> cim_stencil_BANK_0_sram[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_0_sram[1 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[0, i1, i2] -> cim_stencil_BANK_0_sram[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_0_sram[2 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[0, i1, i2] -> cim_stencil_BANK_0_sram[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_0_sram[3 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
SRAM: --- cim_stencil_BANK_0_sram
	---- 4 in ports
		cim_stencil_op_hcompute_cim_stencil_65_in_0
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[0] }
			max location: { cim_stencil_BANK_0_sram[3596] }

		cim_stencil_op_hcompute_cim_stencil_65_in_1
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[1] }
			max location: { cim_stencil_BANK_0_sram[3597] }

		cim_stencil_op_hcompute_cim_stencil_65_in_2
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[2] }
			max location: { cim_stencil_BANK_0_sram[3598] }

		cim_stencil_op_hcompute_cim_stencil_65_in_3
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[3] }
			max location: { cim_stencil_BANK_0_sram[3599] }

	---- 4 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_75_out_0
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_0_sram[60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[0] }
			max location: { cim_stencil_BANK_0_sram[3596] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_1
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_0_sram[1 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[1] }
			max location: { cim_stencil_BANK_0_sram[3597] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_2
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_0_sram[2 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[2] }
			max location: { cim_stencil_BANK_0_sram[3598] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_3
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_0_sram[3 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[3] }
			max location: { cim_stencil_BANK_0_sram[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65_in_0
			cim_stencil_op_hcompute_cim_stencil_65_in_1
			cim_stencil_op_hcompute_cim_stencil_65_in_2
			cim_stencil_op_hcompute_cim_stencil_65_in_3
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_75_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_75_out_0
			cim_stencil_op_hcompute_cim_output_stencil_75_out_1
			cim_stencil_op_hcompute_cim_output_stencil_75_out_2
			cim_stencil_op_hcompute_cim_output_stencil_75_out_3

SRAM Schedule: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14; op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
after vectorization codegen: cim_stencil_BANK_0_0_agg
--- cim_stencil_BANK_0_0_agg
	---- 1 in ports
		cim_stencil_op_hcompute_cim_stencil_65_in
			dom : { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_0_0_agg[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_0_0_agg[0] }
			max location: { cim_stencil_BANK_0_0_agg[3599] }

	---- 4 out ports:
		cim_stencil_op_hcompute_cim_stencil_65_out_0
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_0_agg[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_0_agg[0] }
			max location: { cim_stencil_BANK_0_0_agg[3596] }

		cim_stencil_op_hcompute_cim_stencil_65_out_1
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_0_agg[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_0_agg[1] }
			max location: { cim_stencil_BANK_0_0_agg[3597] }

		cim_stencil_op_hcompute_cim_stencil_65_out_2
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_0_agg[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_0_agg[2] }
			max location: { cim_stencil_BANK_0_0_agg[3598] }

		cim_stencil_op_hcompute_cim_stencil_65_out_3
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_0_agg[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_0_agg[3] }
			max location: { cim_stencil_BANK_0_0_agg[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write_agg_in
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65_in
	---- Output Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write_agg_out
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65_out_0
			cim_stencil_op_hcompute_cim_stencil_65_out_1
			cim_stencil_op_hcompute_cim_stencil_65_out_2
			cim_stencil_op_hcompute_cim_stencil_65_out_3

after vectorization codegen: cim_stencil_BANK_0_0_tb
--- cim_stencil_BANK_0_0_tb
	---- 4 in ports
		cim_stencil_op_hcompute_cim_output_stencil_75_out_0
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_0_tb[0] }
			max location: { cim_stencil_BANK_0_0_tb[3596] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_1
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_0_tb[1] }
			max location: { cim_stencil_BANK_0_0_tb[3597] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_2
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_0_tb[2] }
			max location: { cim_stencil_BANK_0_0_tb[3598] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_3
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_0_tb[3] }
			max location: { cim_stencil_BANK_0_0_tb[3599] }

	---- 1 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_75_out
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> cim_stencil_BANK_0_0_tb[60i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_0[root = 0, cim_s0_y, cim_s0_x] -> [324 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_0_0_tb[0] }
			max location: { cim_stencil_BANK_0_0_tb[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_output_stencil_75_read_tb_in
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_75_out_0
			cim_stencil_op_hcompute_cim_output_stencil_75_out_1
			cim_stencil_op_hcompute_cim_output_stencil_75_out_2
			cim_stencil_op_hcompute_cim_output_stencil_75_out_3
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_75_read_tb_out
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_75_out

after vectorization codegen: cim_stencil_BANK_0_sram
--- cim_stencil_BANK_0_sram
	---- 4 in ports
		cim_stencil_op_hcompute_cim_stencil_65_in_0
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[0] }
			max location: { cim_stencil_BANK_0_sram[3596] }

		cim_stencil_op_hcompute_cim_stencil_65_in_1
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[1] }
			max location: { cim_stencil_BANK_0_sram[3597] }

		cim_stencil_op_hcompute_cim_stencil_65_in_2
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[2] }
			max location: { cim_stencil_BANK_0_sram[3598] }

		cim_stencil_op_hcompute_cim_stencil_65_in_3
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[3] }
			max location: { cim_stencil_BANK_0_sram[3599] }

	---- 4 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_75_out_0
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_0_sram[60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[0] }
			max location: { cim_stencil_BANK_0_sram[3596] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_1
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_0_sram[1 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[1] }
			max location: { cim_stencil_BANK_0_sram[3597] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_2
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_0_sram[2 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[2] }
			max location: { cim_stencil_BANK_0_sram[3598] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_3
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_0_sram[3 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[3] }
			max location: { cim_stencil_BANK_0_sram[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65_in_0
			cim_stencil_op_hcompute_cim_stencil_65_in_1
			cim_stencil_op_hcompute_cim_stencil_65_in_2
			cim_stencil_op_hcompute_cim_stencil_65_in_3
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_75_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_75_out_0
			cim_stencil_op_hcompute_cim_output_stencil_75_out_1
			cim_stencil_op_hcompute_cim_output_stencil_75_out_2
			cim_stencil_op_hcompute_cim_output_stencil_75_out_3

CGPL level :0
impl inputs: {cim_stencil_op_hcompute_cim_stencil_65}
impl outpts: {cim_stencil_op_hcompute_cim_output_stencil_73}
rddom: { cim_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
ls = { op_hcompute_cim_stencil[root, cim_s0_y, cim_s0_x] }
v = 0
Bank writers: 
	 bank NO.0
		writers: {cim_stencil_op_hcompute_cim_stencil_65}
	 bank NO.1
		writers: {cim_stencil_op_hcompute_cim_stencil_65}
Bank readers: 
	 bank NO.0
		readers: {cim_stencil_op_hcompute_cim_output_stencil_75}
	 bank NO.1
		readers: {cim_stencil_op_hcompute_cim_output_stencil_73}
Shift Register Output: 
	memtiles IO:: 
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_73, delay = 128
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_75, delay = 64
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_78, delay = 0
	register IO:: 
		 cim_stencil_op_hcompute_cim_output_stencil_78->cim_stencil_op_hcompute_cim_output_stencil_77, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_77->cim_stencil_op_hcompute_cim_output_stencil_76, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_75->cim_stencil_op_hcompute_cim_output_stencil_71, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_71->cim_stencil_op_hcompute_cim_output_stencil_74, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_73->cim_stencil_op_hcompute_cim_output_stencil_72, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_72->cim_stencil_op_hcompute_cim_output_stencil_70, delay = 1

--- cim_stencil_BANK_1
	---- 1 in ports
		cim_stencil_op_hcompute_cim_stencil_65
			dom : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_1[0, 0] }
			max location: { cim_stencil_BANK_1[59, 59] }

	---- 1 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_73
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] -> [388 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_1[0, 0] }
			max location: { cim_stencil_BANK_1[59, 59] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_73_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_73

Stride inner most:  1
{cim_stencil[d0, d1] -> cim_stencil[floor((1*d1 + 60*d0)/1)] }
reduce map: { cim_stencil_BANK_1[d0, d1] -> cim_stencil_BANK_1[60d0 + d1] }
linear map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
linear map: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
after ubuffer regen: --- cim_stencil_BANK_1
	---- 1 in ports
		cim_stencil_op_hcompute_cim_stencil_65
			dom : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_1[0] }
			max location: { cim_stencil_BANK_1[3599] }

	---- 1 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_73
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] -> [388 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_1[0] }
			max location: { cim_stencil_BANK_1[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_73_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_73

addr need tight: {}
before dim id set :{ op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
After dim id set: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
before dim id set :{ op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
After dim id set: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] -> [388 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] -> [388 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }

	UBuffer after address tighten--- cim_stencil_BANK_1
	---- 1 in ports
		cim_stencil_op_hcompute_cim_stencil_65
			dom : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_1[0] }
			max location: { cim_stencil_BANK_1[3599] }

	---- 1 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_73
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] -> [388 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_1[0] }
			max location: { cim_stencil_BANK_1[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_73_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_73

getting rddom
rddom = { cim_stencil_BANK_1[i0] : 0 <= i0 <= 3599 }
Vectorization buffer capacity: 3600

	UBuffer after cgpl optimization--- cim_stencil_BANK_1
	---- 1 in ports
		cim_stencil_op_hcompute_cim_stencil_65
			dom : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_1[0] }
			max location: { cim_stencil_BANK_1[3599] }

	---- 1 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_73
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] -> [388 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_1[0] }
			max location: { cim_stencil_BANK_1[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_73_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_73

find bd for op :op_hcompute_cim_stencil
	find candidate: cim_stencil_op_hcompute_cim_stencil_65_write
find bd for op :op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128
	find candidate: cim_stencil_op_hcompute_cim_output_stencil_73_read
	aff : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root, cim_s0_y, cim_s0_x] -> [(60cim_s0_y + cim_s0_x)] }
	div dim: 0
getting rddom
rddom = { cim_stencil_BANK_1[i0] : 0 <= i0 <= 3599 }
vectorization buffer capacity: 3600
vectorization buf name: cim_stencil_BANK_1
	 original range input access map: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
	 dim id: 2
Ext by dim: {3600}
  buffer_vectorization Vectorizing: cim_stencil_BANK_1
   On addr dim: 0, fetch_width: 4
--- cim_stencil_BANK_1
	---- 1 in ports
		cim_stencil_op_hcompute_cim_stencil_65
			dom : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_1[0] }
			max location: { cim_stencil_BANK_1[3599] }

	---- 1 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_73
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] -> [388 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_1[0] }
			max location: { cim_stencil_BANK_1[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_73_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_73

in bundle  = 1
out bundle = 1
Vectorize input port bundle: cim_stencil_op_hcompute_cim_stencil_65_write
	vectorize input port: cim_stencil_op_hcompute_cim_stencil_65
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 59]
Domain space on <i2> is: [0, 59]
Stride : 1	Origin: 1
ADDR dim <0> range: 3600, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 60, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 60, 60, ]
	---- Out range: [3600, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 60, 1, ]
		]

origin: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }, transform: { cim_stencil_BANK_1[d0] -> cim_stencil_BANK_1_0_agg[d0] }
access map : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_cim_stencil[i0, i1, i2] -> op_hcompute_cim_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_cim_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_cim_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
	sched after trans: { op_hcompute_cim_stencil[i0 = 0, i1, i2] -> [260 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
Fetch_ii: 4
	final sched: { op_hcompute_cim_stencil[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
Autogen slice:{ cim_stencil_BANK_1[i0] -> cim_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
trans max: 899 , origin max: 899
agg2sram sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1_0_agg[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
After dim id set: { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1_0_agg[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
before dim id set :{ op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
After dim id set: { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_0_agg[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_0_agg[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_0_agg[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_0_agg[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_0_agg[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_0_agg[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_0_agg[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_0_agg[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
AGG : --- cim_stencil_BANK_1_0_agg
	---- 1 in ports
		cim_stencil_op_hcompute_cim_stencil_65_in
			dom : { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1_0_agg[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_1_0_agg[0] }
			max location: { cim_stencil_BANK_1_0_agg[3599] }

	---- 4 out ports:
		cim_stencil_op_hcompute_cim_stencil_65_out_0
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_0_agg[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_0_agg[0] }
			max location: { cim_stencil_BANK_1_0_agg[3596] }

		cim_stencil_op_hcompute_cim_stencil_65_out_1
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_0_agg[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_0_agg[1] }
			max location: { cim_stencil_BANK_1_0_agg[3597] }

		cim_stencil_op_hcompute_cim_stencil_65_out_2
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_0_agg[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_0_agg[2] }
			max location: { cim_stencil_BANK_1_0_agg[3598] }

		cim_stencil_op_hcompute_cim_stencil_65_out_3
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_0_agg[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_0_agg[3] }
			max location: { cim_stencil_BANK_1_0_agg[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write_agg_in
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65_in
	---- Output Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write_agg_out
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65_out_0
			cim_stencil_op_hcompute_cim_stencil_65_out_1
			cim_stencil_op_hcompute_cim_stencil_65_out_2
			cim_stencil_op_hcompute_cim_stencil_65_out_3

AGG Schedule: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14; op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
Vectorize output port bundle: cim_stencil_op_hcompute_cim_output_stencil_73_read
	Vectorize output port: cim_stencil_op_hcompute_cim_output_stencil_73
Autogen slice:{ cim_stencil_BANK_1[i0] -> cim_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
Range slice: { cim_stencil_BANK_1[i0] -> cim_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
after slice{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root, cim_s0_y, cim_s0_x] -> [(15cim_s0_y + floor((cim_s0_x)/4))] }
	aff : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root, cim_s0_y, cim_s0_x] -> [(15cim_s0_y + floor((cim_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root, cim_s0_y, cim_s0_x] -> [(cim_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 2 denom: 4
	Trans str{op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[d0, d1, d2]->op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[d0, d1, floor(d2/4), d2%4]}
{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[d0, d1, d2] -> op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[d0, d1, o2, o3] : (-d2 + o3) mod 4 = 0 and -3 + d2 <= 4o2 <= d2 and 0 <= o3 <= 3 }
access map : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[0, i1, i2, i3] -> cim_stencil_BANK_1[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 and 0 <= i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Preliminary vectorization dim: 2
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[i0, i1, i2, i3] -> [(15i1 + i2)] }
after removal: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[i0, i1, i2, i3] -> [(15i1 + i2)] }
new: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[0, i1, i2, i3] -> cim_stencil_BANK_1[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 and 0 <= i3 <= 3 }
remove: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[0, i1, i2, i3] -> cim_stencil_BANK_1[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 and 0 <= i3 <= 3 }
access map : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[0, i1, i2, i3] -> cim_stencil_BANK_1[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 and 0 <= i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Vectorization dimension: 2
	aff : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[i0, i1, i2, i3] -> [(15i1 + i2)] }
	div dim: 0
rem: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[0, i1, i2, i3] -> cim_stencil_BANK_1[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 and 0 <= i3 <= 3 }
new: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[0, i1, i2, i3] -> cim_stencil_BANK_1[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 and 0 <= i3 <= 3 }
base_str : {op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[i0=0, i1=0, i2=0, i3]}
base_str : {op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[i0=0, i1=0, i2=0, i3]}
	new: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[i0 = 0, i1 = 0, i2 = 0, i3] }
	rem: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[i0 = 0, i1 = 0, i2 = 0, i3] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[i0, i1, i2, i3 = 0] }
sched domain: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[i0, i1, i2, i3 = 0] }
remove dimension: {3}
before:{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[0, i1, i2, i3] -> cim_stencil_BANK_1[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 and 0 <= i3 <= 3 }
after:{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[0, i1, i2, 0] -> cim_stencil_BANK_1[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
remove dimension: {3}
sched before projection: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[0, i1, i2] -> [388 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
access: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[0, i1, i2] -> cim_stencil_BANK_1[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
access map : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[0, i1, i2] -> cim_stencil_BANK_1[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vectorization dimension after irrelevant dimension removal: 2
sched before adjust: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[0, i1, i2] -> [388 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[0, i1, i2] -> [388 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
vectorized dim: 2
	 temp sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
final schedule: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
final access: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[0, i1, i2] -> cim_stencil_BANK_1[15i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 59]
Domain space on <i2> is: [0, 59]
Stride : 1	Origin: 1
ADDR dim <0> range: 3600, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 60, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 60, 60, ]
	---- Out range: [3600, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 60, 1, ]
		]

Autogen slice:{ cim_stencil_BANK_1[i0] -> cim_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root, cim_s0_y, cim_s0_x] -> [(15cim_s0_y + floor((cim_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root, cim_s0_y, cim_s0_x] -> [(cim_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[0, i1, i2] -> cim_stencil_BANK_1[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 59]
Domain space on <i2> is: [0, 14]
Stride : 4	Origin: 4
ADDR dim <0> range: 900, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 60, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[60*i1+4*i2]
domain: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[60i1 + 4i2] }
	 rewrite access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[0, i1, i2] -> cim_stencil_BANK_1[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 59]
Domain space on <i2> is: [0, 14]
Stride : 4	Origin: 4
ADDR dim <0> range: 900, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 60, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[60*i1+4*i2+1]
domain: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[1 + 60i1 + 4i2] }
	 rewrite access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[0, i1, i2] -> cim_stencil_BANK_1[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 59]
Domain space on <i2> is: [0, 14]
Stride : 4	Origin: 4
ADDR dim <0> range: 900, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 60, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[60*i1+4*i2+2]
domain: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[2 + 60i1 + 4i2] }
	 rewrite access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[0, i1, i2] -> cim_stencil_BANK_1[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 59]
Domain space on <i2> is: [0, 14]
Stride : 4	Origin: 4
ADDR dim <0> range: 900, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 60, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[60*i1+4*i2+3]
domain: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[3 + 60i1 + 4i2] }
	Add TB output port: cim_stencil_op_hcompute_cim_output_stencil_73
Autogen slice:{ cim_stencil_BANK_1[i0] -> cim_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root, cim_s0_y, cim_s0_x] -> [(15cim_s0_y + floor((cim_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root, cim_s0_y, cim_s0_x] -> [(cim_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 59]
Domain space on <i2> is: [0, 59]
Stride : 1	Origin: 1
ADDR dim <0> range: 3600, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 60, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
access map expr:[60*i1+i2]
domain: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, i1, i2] -> cim_stencil_BANK_1[60i1 + i2] }
tb output access map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, i1, i2] -> cim_stencil_BANK_1[60i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
	Access map decouple reuse: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[60i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[60i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[60i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0[root = 0, cim_s0_y, cim_s0_x] -> [388 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0[root = 0, cim_s0_y, cim_s0_x] -> [388 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
TB  : --- cim_stencil_BANK_1_0_tb
	---- 4 in ports
		cim_stencil_op_hcompute_cim_output_stencil_73_out_0
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_0_tb[0] }
			max location: { cim_stencil_BANK_1_0_tb[3596] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_1
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_0_tb[1] }
			max location: { cim_stencil_BANK_1_0_tb[3597] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_2
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_0_tb[2] }
			max location: { cim_stencil_BANK_1_0_tb[3598] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_3
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_0_tb[3] }
			max location: { cim_stencil_BANK_1_0_tb[3599] }

	---- 1 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_73_out
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[60i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0[root = 0, cim_s0_y, cim_s0_x] -> [388 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_1_0_tb[0] }
			max location: { cim_stencil_BANK_1_0_tb[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_output_stencil_73_read_tb_in
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_73_out_0
			cim_stencil_op_hcompute_cim_output_stencil_73_out_1
			cim_stencil_op_hcompute_cim_output_stencil_73_out_2
			cim_stencil_op_hcompute_cim_output_stencil_73_out_3
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_73_read_tb_out
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_73_out

TB Schedule: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14; op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0[root = 0, cim_s0_y, cim_s0_x] -> [388 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[0, i1, i2] -> cim_stencil_BANK_1_sram[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_1_sram[60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[0, i1, i2] -> cim_stencil_BANK_1_sram[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_1_sram[1 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[0, i1, i2] -> cim_stencil_BANK_1_sram[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_1_sram[2 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[0, i1, i2] -> cim_stencil_BANK_1_sram[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_1_sram[3 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
before dim id set :{ op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
After dim id set: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
SRAM: --- cim_stencil_BANK_1_sram
	---- 4 in ports
		cim_stencil_op_hcompute_cim_stencil_65_in_0
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[0] }
			max location: { cim_stencil_BANK_1_sram[3596] }

		cim_stencil_op_hcompute_cim_stencil_65_in_1
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[1] }
			max location: { cim_stencil_BANK_1_sram[3597] }

		cim_stencil_op_hcompute_cim_stencil_65_in_2
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[2] }
			max location: { cim_stencil_BANK_1_sram[3598] }

		cim_stencil_op_hcompute_cim_stencil_65_in_3
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[3] }
			max location: { cim_stencil_BANK_1_sram[3599] }

	---- 4 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_73_out_0
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_1_sram[60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[0] }
			max location: { cim_stencil_BANK_1_sram[3596] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_1
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_1_sram[1 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[1] }
			max location: { cim_stencil_BANK_1_sram[3597] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_2
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_1_sram[2 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[2] }
			max location: { cim_stencil_BANK_1_sram[3598] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_3
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_1_sram[3 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[3] }
			max location: { cim_stencil_BANK_1_sram[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65_in_0
			cim_stencil_op_hcompute_cim_stencil_65_in_1
			cim_stencil_op_hcompute_cim_stencil_65_in_2
			cim_stencil_op_hcompute_cim_stencil_65_in_3
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_73_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_73_out_0
			cim_stencil_op_hcompute_cim_output_stencil_73_out_1
			cim_stencil_op_hcompute_cim_output_stencil_73_out_2
			cim_stencil_op_hcompute_cim_output_stencil_73_out_3

SRAM Schedule: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14; op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
after vectorization codegen: cim_stencil_BANK_1_0_agg
--- cim_stencil_BANK_1_0_agg
	---- 1 in ports
		cim_stencil_op_hcompute_cim_stencil_65_in
			dom : { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_BANK_1_0_agg[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_1_0_agg[0] }
			max location: { cim_stencil_BANK_1_0_agg[3599] }

	---- 4 out ports:
		cim_stencil_op_hcompute_cim_stencil_65_out_0
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_0_agg[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_0_agg[0] }
			max location: { cim_stencil_BANK_1_0_agg[3596] }

		cim_stencil_op_hcompute_cim_stencil_65_out_1
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_0_agg[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_0_agg[1] }
			max location: { cim_stencil_BANK_1_0_agg[3597] }

		cim_stencil_op_hcompute_cim_stencil_65_out_2
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_0_agg[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_0_agg[2] }
			max location: { cim_stencil_BANK_1_0_agg[3598] }

		cim_stencil_op_hcompute_cim_stencil_65_out_3
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_0_agg[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_0_agg[3] }
			max location: { cim_stencil_BANK_1_0_agg[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write_agg_in
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65_in
	---- Output Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write_agg_out
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65_out_0
			cim_stencil_op_hcompute_cim_stencil_65_out_1
			cim_stencil_op_hcompute_cim_stencil_65_out_2
			cim_stencil_op_hcompute_cim_stencil_65_out_3

after vectorization codegen: cim_stencil_BANK_1_0_tb
--- cim_stencil_BANK_1_0_tb
	---- 4 in ports
		cim_stencil_op_hcompute_cim_output_stencil_73_out_0
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_0_tb[0] }
			max location: { cim_stencil_BANK_1_0_tb[3596] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_1
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_0_tb[1] }
			max location: { cim_stencil_BANK_1_0_tb[3597] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_2
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_0_tb[2] }
			max location: { cim_stencil_BANK_1_0_tb[3598] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_3
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_0_tb[3] }
			max location: { cim_stencil_BANK_1_0_tb[3599] }

	---- 1 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_73_out
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> cim_stencil_BANK_1_0_tb[60i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0[root = 0, cim_s0_y, cim_s0_x] -> [388 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_BANK_1_0_tb[0] }
			max location: { cim_stencil_BANK_1_0_tb[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_output_stencil_73_read_tb_in
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_73_out_0
			cim_stencil_op_hcompute_cim_output_stencil_73_out_1
			cim_stencil_op_hcompute_cim_output_stencil_73_out_2
			cim_stencil_op_hcompute_cim_output_stencil_73_out_3
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_73_read_tb_out
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_73_out

after vectorization codegen: cim_stencil_BANK_1_sram
--- cim_stencil_BANK_1_sram
	---- 4 in ports
		cim_stencil_op_hcompute_cim_stencil_65_in_0
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[0] }
			max location: { cim_stencil_BANK_1_sram[3596] }

		cim_stencil_op_hcompute_cim_stencil_65_in_1
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[1] }
			max location: { cim_stencil_BANK_1_sram[3597] }

		cim_stencil_op_hcompute_cim_stencil_65_in_2
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[2] }
			max location: { cim_stencil_BANK_1_sram[3598] }

		cim_stencil_op_hcompute_cim_stencil_65_in_3
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[3] }
			max location: { cim_stencil_BANK_1_sram[3599] }

	---- 4 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_73_out_0
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_1_sram[60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[0] }
			max location: { cim_stencil_BANK_1_sram[3596] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_1
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_1_sram[1 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[1] }
			max location: { cim_stencil_BANK_1_sram[3597] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_2
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_1_sram[2 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[2] }
			max location: { cim_stencil_BANK_1_sram[3598] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_3
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_1_sram[3 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[3] }
			max location: { cim_stencil_BANK_1_sram[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65_in_0
			cim_stencil_op_hcompute_cim_stencil_65_in_1
			cim_stencil_op_hcompute_cim_stencil_65_in_2
			cim_stencil_op_hcompute_cim_stencil_65_in_3
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_73_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_73_out_0
			cim_stencil_op_hcompute_cim_output_stencil_73_out_1
			cim_stencil_op_hcompute_cim_output_stencil_73_out_2
			cim_stencil_op_hcompute_cim_output_stencil_73_out_3

bank id: 0
rd dom: { cim_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
	rel map: {0, 1, 1}
	rel dim: 2
	rel dim stride: 4
out_fetch_ii: 4
bank id: 1
rd dom: { cim_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
	rel map: {0, 1, 1}
	rel dim: 2
	rel dim stride: 4
out_fetch_ii: 4
bank id: 0, to be merged: {0, 1}
	Group: 0: {0, 1}
	Perform bank merging!
	subcomponent keys:cim_stencil_BANK_1_0_agg
	subcomponent keys:cim_stencil_BANK_1_0_tb
	subcomponent keys:cim_stencil_BANK_1_sram
--- cim_stencil_BANK_1_sram
	---- 4 in ports
		cim_stencil_op_hcompute_cim_stencil_65_in_0
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[0] }
			max location: { cim_stencil_BANK_1_sram[3596] }

		cim_stencil_op_hcompute_cim_stencil_65_in_1
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[1] }
			max location: { cim_stencil_BANK_1_sram[3597] }

		cim_stencil_op_hcompute_cim_stencil_65_in_2
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[2] }
			max location: { cim_stencil_BANK_1_sram[3598] }

		cim_stencil_op_hcompute_cim_stencil_65_in_3
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_1_sram[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[3] }
			max location: { cim_stencil_BANK_1_sram[3599] }

	---- 4 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_73_out_0
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_1_sram[60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[0] }
			max location: { cim_stencil_BANK_1_sram[3596] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_1
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_1_sram[1 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[1] }
			max location: { cim_stencil_BANK_1_sram[3597] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_2
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_1_sram[2 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[2] }
			max location: { cim_stencil_BANK_1_sram[3598] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_3
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_1_sram[3 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_1_sram[3] }
			max location: { cim_stencil_BANK_1_sram[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65_in_0
			cim_stencil_op_hcompute_cim_stencil_65_in_1
			cim_stencil_op_hcompute_cim_stencil_65_in_2
			cim_stencil_op_hcompute_cim_stencil_65_in_3
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_73_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_73_out_0
			cim_stencil_op_hcompute_cim_output_stencil_73_out_1
			cim_stencil_op_hcompute_cim_output_stencil_73_out_2
			cim_stencil_op_hcompute_cim_output_stencil_73_out_3

	subcomponent keys:cim_stencil_BANK_0_0_agg
	subcomponent keys:cim_stencil_BANK_0_0_tb
	subcomponent keys:cim_stencil_BANK_0_sram
--- cim_stencil_BANK_0_sram
	---- 4 in ports
		cim_stencil_op_hcompute_cim_stencil_65_in_0
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[0] }
			max location: { cim_stencil_BANK_0_sram[3596] }

		cim_stencil_op_hcompute_cim_stencil_65_in_1
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[1] }
			max location: { cim_stencil_BANK_0_sram[3597] }

		cim_stencil_op_hcompute_cim_stencil_65_in_2
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[2] }
			max location: { cim_stencil_BANK_0_sram[3598] }

		cim_stencil_op_hcompute_cim_stencil_65_in_3
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_BANK_0_sram[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[3] }
			max location: { cim_stencil_BANK_0_sram[3599] }

	---- 4 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_75_out_0
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_0_sram[60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[0] }
			max location: { cim_stencil_BANK_0_sram[3596] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_1
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_0_sram[1 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[1] }
			max location: { cim_stencil_BANK_0_sram[3597] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_2
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_0_sram[2 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[2] }
			max location: { cim_stencil_BANK_0_sram[3598] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_3
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_BANK_0_sram[3 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_BANK_0_sram[3] }
			max location: { cim_stencil_BANK_0_sram[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65_in_0
			cim_stencil_op_hcompute_cim_stencil_65_in_1
			cim_stencil_op_hcompute_cim_stencil_65_in_2
			cim_stencil_op_hcompute_cim_stencil_65_in_3
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_75_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_75_out_0
			cim_stencil_op_hcompute_cim_output_stencil_75_out_1
			cim_stencil_op_hcompute_cim_output_stencil_75_out_2
			cim_stencil_op_hcompute_cim_output_stencil_75_out_3

new banks id: 2
get SRAM port schedule: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
get SRAM port schedule: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
get SRAM port schedule: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
	 output sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
vectorized dim: 2
	 temp sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [322 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
	adjust temp sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [321 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
--- cim_stencil_bank_2_sram
	---- 4 in ports
		cim_stencil_op_hcompute_cim_stencil_65_in_0
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_bank_2_sram[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_sram[0] }
			max location: { cim_stencil_bank_2_sram[3596] }

		cim_stencil_op_hcompute_cim_stencil_65_in_1
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_bank_2_sram[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_sram[1] }
			max location: { cim_stencil_bank_2_sram[3597] }

		cim_stencil_op_hcompute_cim_stencil_65_in_2
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_bank_2_sram[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_sram[2] }
			max location: { cim_stencil_bank_2_sram[3598] }

		cim_stencil_op_hcompute_cim_stencil_65_in_3
			dom : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_bank_2_sram[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_sram[3] }
			max location: { cim_stencil_bank_2_sram[3599] }

	---- 8 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_73_out_0
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_bank_2_sram[60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_sram[0] }
			max location: { cim_stencil_bank_2_sram[3596] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_1
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_bank_2_sram[1 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_sram[1] }
			max location: { cim_stencil_bank_2_sram[3597] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_2
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_bank_2_sram[2 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_sram[2] }
			max location: { cim_stencil_bank_2_sram[3598] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_3
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_bank_2_sram[3 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_sram[3] }
			max location: { cim_stencil_bank_2_sram[3599] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_0
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> cim_stencil_bank_2_sram[60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [321 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_sram[0] }
			max location: { cim_stencil_bank_2_sram[3596] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_1
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> cim_stencil_bank_2_sram[1 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [321 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_sram[1] }
			max location: { cim_stencil_bank_2_sram[3597] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_2
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> cim_stencil_bank_2_sram[2 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [321 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_sram[2] }
			max location: { cim_stencil_bank_2_sram[3598] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_3
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> cim_stencil_bank_2_sram[3 + 60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [321 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_sram[3] }
			max location: { cim_stencil_bank_2_sram[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65_in_0
			cim_stencil_op_hcompute_cim_stencil_65_in_1
			cim_stencil_op_hcompute_cim_stencil_65_in_2
			cim_stencil_op_hcompute_cim_stencil_65_in_3
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_73_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_73_out_0
			cim_stencil_op_hcompute_cim_output_stencil_73_out_1
			cim_stencil_op_hcompute_cim_output_stencil_73_out_2
			cim_stencil_op_hcompute_cim_output_stencil_73_out_3
		cim_stencil_op_hcompute_cim_output_stencil_75_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_75_out_0
			cim_stencil_op_hcompute_cim_output_stencil_75_out_1
			cim_stencil_op_hcompute_cim_output_stencil_75_out_2
			cim_stencil_op_hcompute_cim_output_stencil_75_out_3

--- cim_stencil_bank_2
	---- 1 in ports
		cim_stencil_op_hcompute_cim_stencil_65
			dom : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_bank_2[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_bank_2[0] }
			max location: { cim_stencil_bank_2[3599] }

	---- 2 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_73
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_bank_2[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128[root = 0, cim_s0_y, cim_s0_x] -> [388 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_bank_2[0] }
			max location: { cim_stencil_bank_2[3599] }

		cim_stencil_op_hcompute_cim_output_stencil_75
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_bank_2[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64[root = 0, cim_s0_y, cim_s0_x] -> [324 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_bank_2[0] }
			max location: { cim_stencil_bank_2[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_stencil_65_write
		---- Ports...
			cim_stencil_op_hcompute_cim_stencil_65
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_73_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_73
		cim_stencil_op_hcompute_cim_output_stencil_75_read
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_75

sub component buf: agg
sub component buf: tb
sub component buf: sram
sub component buf: agg
sub component buf: tb
sub component buf: sram
micor buf: --- cim_stencil_bank_2_0_tb
	---- 4 in ports
		cim_stencil_op_hcompute_cim_output_stencil_73_out_0
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_bank_2_0_tb[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_0_tb[0] }
			max location: { cim_stencil_bank_2_0_tb[3596] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_1
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_bank_2_0_tb[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_0_tb[1] }
			max location: { cim_stencil_bank_2_0_tb[3597] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_2
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_bank_2_0_tb[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_0_tb[2] }
			max location: { cim_stencil_bank_2_0_tb[3598] }

		cim_stencil_op_hcompute_cim_output_stencil_73_out_3
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_bank_2_0_tb[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_0_tb[3] }
			max location: { cim_stencil_bank_2_0_tb[3599] }

	---- 1 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_73_out
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> cim_stencil_bank_2_0_tb[60i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0[root = 0, cim_s0_y, cim_s0_x] -> [388 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_bank_2_0_tb[0] }
			max location: { cim_stencil_bank_2_0_tb[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_output_stencil_73_read_tb_in
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_73_out_0
			cim_stencil_op_hcompute_cim_output_stencil_73_out_1
			cim_stencil_op_hcompute_cim_output_stencil_73_out_2
			cim_stencil_op_hcompute_cim_output_stencil_73_out_3
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_73_read_tb_out
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_73_out

micor buf: --- cim_stencil_bank_2_1_tb
	---- 4 in ports
		cim_stencil_op_hcompute_cim_output_stencil_75_out_0
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> cim_stencil_bank_2_1_tb[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [321 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_1_tb[0] }
			max location: { cim_stencil_bank_2_1_tb[3596] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_1
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> cim_stencil_bank_2_1_tb[1 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [321 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_1_tb[1] }
			max location: { cim_stencil_bank_2_1_tb[3597] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_2
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> cim_stencil_bank_2_1_tb[2 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [321 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_1_tb[2] }
			max location: { cim_stencil_bank_2_1_tb[3598] }

		cim_stencil_op_hcompute_cim_output_stencil_75_out_3
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> cim_stencil_bank_2_1_tb[3 + 60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [321 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
			min location: { cim_stencil_bank_2_1_tb[3] }
			max location: { cim_stencil_bank_2_1_tb[3599] }

	---- 1 out ports:
		cim_stencil_op_hcompute_cim_output_stencil_75_out
			dom : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_1[root = 0, i1, i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
			acc : { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_1[root = 0, i1, i2] -> cim_stencil_bank_2_1_tb[60i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
			sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_1[root = 0, cim_s0_y, cim_s0_x] -> [324 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { cim_stencil_bank_2_1_tb[0] }
			max location: { cim_stencil_bank_2_1_tb[3599] }

	---- Input Bundles
		cim_stencil_op_hcompute_cim_output_stencil_75_read_tb_in
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_75_out_0
			cim_stencil_op_hcompute_cim_output_stencil_75_out_1
			cim_stencil_op_hcompute_cim_output_stencil_75_out_2
			cim_stencil_op_hcompute_cim_output_stencil_75_out_3
	---- Output Bundles
		cim_stencil_op_hcompute_cim_output_stencil_75_read_tb_out
		---- Ports...
			cim_stencil_op_hcompute_cim_output_stencil_75_out

Bank writers: 
	 bank NO.2
		writers: {cim_stencil_op_hcompute_cim_stencil_65}
Bank readers: 
	 bank NO.2
		readers: {cim_stencil_op_hcompute_cim_output_stencil_73, cim_stencil_op_hcompute_cim_output_stencil_75}
Shift Register Output: 
	memtiles IO:: 
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_73, delay = 128
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_75, delay = 64
		 cim_stencil_op_hcompute_cim_stencil_65->cim_stencil_op_hcompute_cim_output_stencil_78, delay = 0
	register IO:: 
		 cim_stencil_op_hcompute_cim_output_stencil_78->cim_stencil_op_hcompute_cim_output_stencil_77, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_77->cim_stencil_op_hcompute_cim_output_stencil_76, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_75->cim_stencil_op_hcompute_cim_output_stencil_71, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_71->cim_stencil_op_hcompute_cim_output_stencil_74, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_73->cim_stencil_op_hcompute_cim_output_stencil_72, delay = 1
		 cim_stencil_op_hcompute_cim_output_stencil_72->cim_stencil_op_hcompute_cim_output_stencil_70, delay = 1

add input: cim_stencil_op_hcompute_cim_stencil_65 to pt2wire
add output: cim_stencil_op_hcompute_cim_output_stencil_70 to pt2wire
add output: cim_stencil_op_hcompute_cim_output_stencil_71 to pt2wire
add output: cim_stencil_op_hcompute_cim_output_stencil_72 to pt2wire
add output: cim_stencil_op_hcompute_cim_output_stencil_73 to pt2wire
add output: cim_stencil_op_hcompute_cim_output_stencil_74 to pt2wire
add output: cim_stencil_op_hcompute_cim_output_stencil_75 to pt2wire
add output: cim_stencil_op_hcompute_cim_output_stencil_76 to pt2wire
add output: cim_stencil_op_hcompute_cim_output_stencil_77 to pt2wire
add output: cim_stencil_op_hcompute_cim_output_stencil_78 to pt2wire
agg2sram_opt debug start 
sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [321 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
write map: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_bank_2_sram[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
{ cim_stencil_bank_2_sram[i0] : -3 <= i0 <= 3599 and (((2 + i0) mod 4 = 0 and -1 <= i0 <= 3598 and 60*floor((1 + i0)/60) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 60*floor((i0)/60) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3596 and 60*floor((3 + i0)/60) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3597 and 60*floor((2 + i0)/60) < i0)) }
read map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_bank_2_sram[60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
read map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> cim_stencil_bank_2_sram[60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
sched: { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
op_name: op_hcompute_cim_stencil_agg2sram_0, extent_0: 60, stride_0: 1
write map: { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_bank_2_0_agg[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
{ cim_stencil_bank_2_0_agg[i0] : -3 <= i0 <= 3599 and (i0 >= 0 or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 3598 and 60*floor((1 + i0)/60) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 60*floor((i0)/60) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3596 and 60*floor((3 + i0)/60) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3597 and 60*floor((2 + i0)/60) < i0)) }
read map: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_bank_2_0_agg[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0[root = 0, cim_s0_y, cim_s0_x] -> [388 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
write map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_bank_2_0_tb[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
{ cim_stencil_bank_2_0_tb[i0] : -3 <= i0 <= 3599 and (i0 >= 0 or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 3598 and 60*floor((1 + i0)/60) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 60*floor((i0)/60) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3596 and 60*floor((3 + i0)/60) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3597 and 60*floor((2 + i0)/60) < i0)) }
read map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> cim_stencil_bank_2_0_tb[60i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [321 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_1[root = 0, cim_s0_y, cim_s0_x] -> [324 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
write map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> cim_stencil_bank_2_1_tb[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
{ cim_stencil_bank_2_1_tb[i0] : -3 <= i0 <= 3599 and (i0 >= 0 or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 3598 and 60*floor((1 + i0)/60) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 60*floor((i0)/60) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3596 and 60*floor((3 + i0)/60) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3597 and 60*floor((2 + i0)/60) < i0)) }
read map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_1[root = 0, i1, i2] -> cim_stencil_bank_2_1_tb[60i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
	op name: op_hcompute_cim_stencil_agg2sram_0
	Sched: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> [264 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }

"dimensionality",3,0
"cycle_starting_addr",264,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",60,0
"cycle_stride_1",64,0
"extent_0",15,0
"cycle_stride_0",4,0
adding new agg2sram opt cfg for: op_hcompute_cim_stencil_agg2sram_0: mode 0, agg_read_padding 0, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_bank_2_sram[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",15,0
"write_data_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_cim_stencil_agg2sram_0[i0 = 0, i1, i2] -> cim_stencil_bank_2_0_agg[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",3,0
"read_data_stride_0",1,0
	op name: op_hcompute_cim_stencil_in2agg_0
	Sched: { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }

"dimensionality",3,0
"cycle_starting_addr",260,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",60,0
"cycle_stride_1",64,0
"extent_0",60,0
"cycle_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_cim_stencil_in2agg_0[root = 0, cim_s0_y, cim_s0_x] -> cim_stencil_bank_2_0_agg[60cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",12,0
"write_data_stride_0",1,0
	op name: op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0
	Sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [386 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }

"dimensionality",3,0
"cycle_starting_addr",386,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",60,0
"cycle_stride_1",64,0
"extent_0",15,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> cim_stencil_bank_2_0_tb[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",3,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> cim_stencil_bank_2_sram[60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",15,0
"read_data_stride_0",1,0
	op name: op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0
	Sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0[root = 0, cim_s0_y, cim_s0_x] -> [388 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }

"dimensionality",3,0
"cycle_starting_addr",388,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",60,0
"cycle_stride_1",64,0
"extent_0",60,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> cim_stencil_bank_2_0_tb[60i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",12,0
"read_data_stride_0",1,0
	op name: op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1
	Sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [321 + 64i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }

"dimensionality",3,0
"cycle_starting_addr",321,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",60,0
"cycle_stride_1",64,0
"extent_0",15,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> cim_stencil_bank_2_1_tb[60i1 + 4i2] : 0 <= i1 <= 59 and 0 <= i2 <= 14 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",3,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> cim_stencil_bank_2_sram[60d1 + 4d2] : 0 <= d1 <= 59 and 0 <= d2 <= 14 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",15,0
"read_data_stride_0",1,0
	op name: op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_1
	Sched: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_1[root = 0, cim_s0_y, cim_s0_x] -> [324 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }

"dimensionality",3,0
"cycle_starting_addr",324,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",60,0
"cycle_stride_1",64,0
"extent_0",60,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_cim_stencilop_hcompute_cim_stencil_delay_64_tb2out_1[root = 0, i1, i2] -> cim_stencil_bank_2_1_tb[60i1 + i2] : 0 <= i1 <= 59 and 0 <= i2 <= 59 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",12,0
"read_data_stride_0",1,0
{"agg2sram_0":{"agg_read_padding":[0],"cycle_starting_addr":[264],"cycle_stride":[4,64],"delay":[0],"dimensionality":2,"extent":[15,60],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[1,3],"write_data_starting_addr":[0],"write_data_stride":[1,15]},"in2agg_0":{"cycle_starting_addr":[260],"cycle_stride":[1,64],"dimensionality":2,"extent":[60,60],"write_data_starting_addr":[0],"write_data_stride":[1,12]},"sram2tb_0":{"cycle_starting_addr":[386],"cycle_stride":[4,64],"dimensionality":2,"extent":[15,60],"read_data_starting_addr":[0],"read_data_stride":[1,15],"write_data_starting_addr":[0],"write_data_stride":[1,3]},"sram2tb_1":{"cycle_starting_addr":[321],"cycle_stride":[4,64],"dimensionality":2,"extent":[15,60],"read_data_starting_addr":[0],"read_data_stride":[1,15],"write_data_starting_addr":[0],"write_data_stride":[1,3]},"tb2out_0":{"cycle_starting_addr":[388],"cycle_stride":[1,64],"dimensionality":2,"extent":[60,60],"read_data_starting_addr":[0],"read_data_stride":[1,12]},"tb2out_1":{"cycle_starting_addr":[324],"cycle_stride":[1,64],"dimensionality":2,"extent":[60,60],"read_data_starting_addr":[0],"read_data_stride":[1,12]}}
Add lake node:ub_cim_stencil_bank_2 with input_num = 1, output_num = 2
Config mode: lake
Generating Verilog Testing Collateral for: ub_cim_stencil_bank_2
Module: cgralib.Mem_amber(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'data_out_1':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U0__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs2__use_prebuilt_memTrue__width16
create shift register for --- grad_x_unclamp_stencil
	---- 1 in ports
		grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
			dom : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			acc : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			sched: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			min location: { grad_x_unclamp_stencil[0, 0] }
			max location: { grad_x_unclamp_stencil[61, 61] }

	---- 2 out ports:
		grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8
			dom : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> grad_x_unclamp_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { grad_x_unclamp_stencil[0, 0] }
			max location: { grad_x_unclamp_stencil[61, 61] }

		grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5
			dom : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> grad_x_unclamp_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { grad_x_unclamp_stencil[0, 0] }
			max location: { grad_x_unclamp_stencil[61, 61] }

	---- Input Bundles
		op_hcompute_grad_x_unclamp_stencil_1_write
		---- Ports...
			grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
	---- Output Bundles
		op_hcompute_lxx_stencil_read
		---- Ports...
			grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8
		op_hcompute_lxy_stencil_read
		---- Ports...
			grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5

==== No reduce ops on this buffer
Writer name: op_hcompute_grad_x_unclamp_stencil_1
read_op read: {grad_x_unclamp_stencil}
read_op write: {lxx_stencil, }
write_op write: {lxx_stencil}
write_op read: {grad_x_unclamp_stencil_clkwrk_dsa0, padded16_global_wrapper_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
reads : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> grad_x_unclamp_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
Schedule...
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Time to write: { [i0] -> grad_x_unclamp_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> grad_x_unclamp_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_grad_x_unclamp_stencil_1
Writer name: op_hcompute_grad_x_unclamp_stencil_1
read_op read: {grad_x_unclamp_stencil, grad_y_unclamp_stencil}
read_op write: {lxy_stencil, }
write_op write: {lxy_stencil}
write_op read: {grad_x_unclamp_stencil_clkwrk_dsa0, padded16_global_wrapper_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
reads : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> grad_x_unclamp_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
Schedule...
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Time to write: { [i0] -> grad_x_unclamp_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> grad_x_unclamp_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_grad_x_unclamp_stencil_1
DG: ...
# nodes: 3
# edges: 2
Group:     grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
        grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56 -> (0) grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8
        grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56 -> (0) grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5
Fanin Group:     grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
        grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8 -> (-1) grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
        grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5 -> (-1) grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56

Naive Shift registers...
# nodes: 3
# edges: 2
Group:     grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
        grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56 -> (0) grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8
        grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56 -> (0) grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5
Fanin Group:     grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
        grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8 -> (-1) grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
        grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5 -> (-1) grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56

inpt: grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
  grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8 -(0)-> 0
  grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5 -(0)-> 0
Groups...
  Group...
# nodes: 3
# edges: 2
Group:     grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
        grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56 -> (0) grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8
Group:     grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8
        grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8 -> (0) grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5
Fanin Group:     grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
        grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8 -> (-1) grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
Fanin Group:     grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8
        grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5 -> (-1) grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8

edge: grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56=>grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8, w=0
after sort: outpt->grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8, w=0
	delay of grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8 = 0
	subbranch size: 1
# nodes: 3
# edges: 2
Group:     grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
        grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56 -> (0) grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8
Group:     grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8
        grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8 -> (0) grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5
Fanin Group:     grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
        grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8 -> (-1) grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
Fanin Group:     grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8
        grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5 -> (-1) grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56->grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8, delay = 0
	register IO:: 
		 grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56->grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5, delay = 0
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56->grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8, delay = 0
	register IO:: 
		 grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56->grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5, delay = 0

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56->grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8, delay = 0
	register IO:: 
		 grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56->grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5, delay = 0

Done ports: {grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8, grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5}
reduced buffer: --- grad_x_unclamp_stencil
	---- 1 in ports
		grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
			dom : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			acc : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			sched: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			min location: { grad_x_unclamp_stencil[0, 0] }
			max location: { grad_x_unclamp_stencil[61, 61] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_grad_x_unclamp_stencil_1_write
		---- Ports...
			grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56
	---- Output Bundles

SR outputs: {grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8, grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56->grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8, delay = 0
	register IO:: 
		 grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56->grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5, delay = 0

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56->grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8, delay = 0
	register IO:: 
		 grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56->grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5, delay = 0

add input: grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_56 to pt2wire
add output: grad_x_unclamp_stencil_op_hcompute_lxx_stencil_8 to pt2wire
add output: grad_x_unclamp_stencil_op_hcompute_lxy_stencil_5 to pt2wire
create shift register for --- grad_x_unclamp_stencil_clkwrk_dsa0
	---- 1 in ports
		grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
			dom : { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
			acc : { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
			sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
			min location: { grad_x_unclamp_stencil_clkwrk_dsa0[0, 0] }
			max location: { grad_x_unclamp_stencil_clkwrk_dsa0[61, 61] }

	---- 1 out ports:
		grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57
			dom : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			acc : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			sched: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			min location: { grad_x_unclamp_stencil_clkwrk_dsa0[0, 0] }
			max location: { grad_x_unclamp_stencil_clkwrk_dsa0[61, 61] }

	---- Input Bundles
		op_hcompute_grad_x_unclamp_stencil_write
		---- Ports...
			grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
	---- Output Bundles
		op_hcompute_grad_x_unclamp_stencil_1_read
		---- Ports...
			grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57

==== No reduce ops on this buffer
Writer name: op_hcompute_grad_x_unclamp_stencil
read_op read: {grad_x_unclamp_stencil_clkwrk_dsa0, padded16_global_wrapper_stencil}
read_op write: {grad_x_unclamp_stencil, }
write_op write: {grad_x_unclamp_stencil}
write_op read: 
Calculate DDs for creating shift registers.
writes: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
reads : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Schedule...
  { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Time to write: { [i0] -> grad_x_unclamp_stencil_clkwrk_dsa0[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> grad_x_unclamp_stencil_clkwrk_dsa0[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_grad_x_unclamp_stencil
DG: ...
# nodes: 2
# edges: 1
Group:     grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
        grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64 -> (0) grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57
Fanin Group:     grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
        grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57 -> (-1) grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64

Naive Shift registers...
# nodes: 2
# edges: 1
Group:     grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
        grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64 -> (0) grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57
Fanin Group:     grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
        grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57 -> (-1) grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64

inpt: grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
  grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
        grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64 -> (0) grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57
Fanin Group:     grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
        grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57 -> (-1) grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64

edge: grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64=>grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57, w=0
after sort: outpt->grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
        grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64 -> (0) grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57
Fanin Group:     grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
        grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57 -> (-1) grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64->grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64->grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64->grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57, delay = 0
	register IO:: 

Done ports: {grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57}
reduced buffer: --- grad_x_unclamp_stencil_clkwrk_dsa0
	---- 1 in ports
		grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
			dom : { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
			acc : { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> grad_x_unclamp_stencil_clkwrk_dsa0[grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
			sched: { op_hcompute_grad_x_unclamp_stencil[root = 0, grad_x_unclamp_s0_y, grad_x_unclamp_s0_x] -> [130 + 64grad_x_unclamp_s0_y + grad_x_unclamp_s0_x] : 0 <= grad_x_unclamp_s0_y <= 61 and 0 <= grad_x_unclamp_s0_x <= 61 }
			min location: { grad_x_unclamp_stencil_clkwrk_dsa0[0, 0] }
			max location: { grad_x_unclamp_stencil_clkwrk_dsa0[61, 61] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_grad_x_unclamp_stencil_write
		---- Ports...
			grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64
	---- Output Bundles

SR outputs: {grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64->grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64->grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57, delay = 0
	register IO:: 

add input: grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_64 to pt2wire
add output: grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_57 to pt2wire
create shift register for --- grad_y_unclamp_stencil
	---- 1 in ports
		grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
			dom : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			acc : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			min location: { grad_y_unclamp_stencil[0, 0] }
			max location: { grad_y_unclamp_stencil[61, 61] }

	---- 2 out ports:
		grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6
			dom : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> grad_y_unclamp_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { grad_y_unclamp_stencil[0, 0] }
			max location: { grad_y_unclamp_stencil[61, 61] }

		grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3
			dom : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> grad_y_unclamp_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { grad_y_unclamp_stencil[0, 0] }
			max location: { grad_y_unclamp_stencil[61, 61] }

	---- Input Bundles
		op_hcompute_grad_y_unclamp_stencil_1_write
		---- Ports...
			grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
	---- Output Bundles
		op_hcompute_lxy_stencil_read
		---- Ports...
			grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6
		op_hcompute_lyy_stencil_read
		---- Ports...
			grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3

==== No reduce ops on this buffer
Writer name: op_hcompute_grad_y_unclamp_stencil_1
read_op read: {grad_x_unclamp_stencil, grad_y_unclamp_stencil}
read_op write: {lxy_stencil, }
write_op write: {lxy_stencil}
write_op read: {grad_y_unclamp_stencil_clkwrk_dsa1, padded16_global_wrapper_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
reads : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> grad_y_unclamp_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
Schedule...
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> grad_y_unclamp_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> grad_y_unclamp_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_grad_y_unclamp_stencil_1
Writer name: op_hcompute_grad_y_unclamp_stencil_1
read_op read: {grad_y_unclamp_stencil}
read_op write: {lyy_stencil, }
write_op write: {lyy_stencil}
write_op read: {grad_y_unclamp_stencil_clkwrk_dsa1, padded16_global_wrapper_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
reads : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> grad_y_unclamp_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Schedule...
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> grad_y_unclamp_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> grad_y_unclamp_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_grad_y_unclamp_stencil_1
DG: ...
# nodes: 3
# edges: 2
Group:     grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
        grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47 -> (0) grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6
        grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47 -> (0) grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3
Fanin Group:     grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
        grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6 -> (-1) grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
        grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3 -> (-1) grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47

Naive Shift registers...
# nodes: 3
# edges: 2
Group:     grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
        grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47 -> (0) grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6
        grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47 -> (0) grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3
Fanin Group:     grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
        grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6 -> (-1) grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
        grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3 -> (-1) grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47

inpt: grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
  grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6 -(0)-> 0
  grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3 -(0)-> 0
Groups...
  Group...
# nodes: 3
# edges: 2
Group:     grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
        grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47 -> (0) grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6
Group:     grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6
        grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6 -> (0) grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3
Fanin Group:     grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
        grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6 -> (-1) grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
Fanin Group:     grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6
        grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3 -> (-1) grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6

edge: grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47=>grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6, w=0
after sort: outpt->grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6, w=0
	delay of grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6 = 0
	subbranch size: 1
# nodes: 3
# edges: 2
Group:     grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
        grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47 -> (0) grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6
Group:     grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6
        grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6 -> (0) grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3
Fanin Group:     grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
        grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6 -> (-1) grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
Fanin Group:     grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6
        grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3 -> (-1) grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47->grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6, delay = 0
	register IO:: 
		 grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47->grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3, delay = 0
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47->grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6, delay = 0
	register IO:: 
		 grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47->grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3, delay = 0

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47->grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6, delay = 0
	register IO:: 
		 grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47->grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3, delay = 0

Done ports: {grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6, grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3}
reduced buffer: --- grad_y_unclamp_stencil
	---- 1 in ports
		grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
			dom : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			acc : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			min location: { grad_y_unclamp_stencil[0, 0] }
			max location: { grad_y_unclamp_stencil[61, 61] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_grad_y_unclamp_stencil_1_write
		---- Ports...
			grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47
	---- Output Bundles

SR outputs: {grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6, grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47->grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6, delay = 0
	register IO:: 
		 grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47->grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3, delay = 0

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47->grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6, delay = 0
	register IO:: 
		 grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47->grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3, delay = 0

add input: grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_47 to pt2wire
add output: grad_y_unclamp_stencil_op_hcompute_lxy_stencil_6 to pt2wire
add output: grad_y_unclamp_stencil_op_hcompute_lyy_stencil_3 to pt2wire
create shift register for --- grad_y_unclamp_stencil_clkwrk_dsa1
	---- 1 in ports
		grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
			dom : { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
			acc : { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
			sched: { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
			min location: { grad_y_unclamp_stencil_clkwrk_dsa1[0, 0] }
			max location: { grad_y_unclamp_stencil_clkwrk_dsa1[61, 61] }

	---- 1 out ports:
		grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48
			dom : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			acc : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			min location: { grad_y_unclamp_stencil_clkwrk_dsa1[0, 0] }
			max location: { grad_y_unclamp_stencil_clkwrk_dsa1[61, 61] }

	---- Input Bundles
		op_hcompute_grad_y_unclamp_stencil_write
		---- Ports...
			grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
	---- Output Bundles
		op_hcompute_grad_y_unclamp_stencil_1_read
		---- Ports...
			grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48

==== No reduce ops on this buffer
Writer name: op_hcompute_grad_y_unclamp_stencil
read_op read: {grad_y_unclamp_stencil_clkwrk_dsa1, padded16_global_wrapper_stencil}
read_op write: {grad_y_unclamp_stencil, }
write_op write: {grad_y_unclamp_stencil}
write_op read: 
Calculate DDs for creating shift registers.
writes: { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
reads : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Schedule...
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
Time to write: { [i0] -> grad_y_unclamp_stencil_clkwrk_dsa1[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> grad_y_unclamp_stencil_clkwrk_dsa1[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_grad_y_unclamp_stencil
DG: ...
# nodes: 2
# edges: 1
Group:     grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
        grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55 -> (0) grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48
Fanin Group:     grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
        grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48 -> (-1) grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55

Naive Shift registers...
# nodes: 2
# edges: 1
Group:     grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
        grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55 -> (0) grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48
Fanin Group:     grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
        grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48 -> (-1) grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55

inpt: grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
  grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
        grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55 -> (0) grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48
Fanin Group:     grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
        grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48 -> (-1) grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55

edge: grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55=>grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48, w=0
after sort: outpt->grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
        grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55 -> (0) grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48
Fanin Group:     grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
        grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48 -> (-1) grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55->grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55->grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55->grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48, delay = 0
	register IO:: 

Done ports: {grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48}
reduced buffer: --- grad_y_unclamp_stencil_clkwrk_dsa1
	---- 1 in ports
		grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
			dom : { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
			acc : { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> grad_y_unclamp_stencil_clkwrk_dsa1[grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
			sched: { op_hcompute_grad_y_unclamp_stencil[root = 0, grad_y_unclamp_s0_y, grad_y_unclamp_s0_x] -> [130 + 64grad_y_unclamp_s0_y + grad_y_unclamp_s0_x] : 0 <= grad_y_unclamp_s0_y <= 61 and 0 <= grad_y_unclamp_s0_x <= 61 }
			min location: { grad_y_unclamp_stencil_clkwrk_dsa1[0, 0] }
			max location: { grad_y_unclamp_stencil_clkwrk_dsa1[61, 61] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_grad_y_unclamp_stencil_write
		---- Ports...
			grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55
	---- Output Bundles

SR outputs: {grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55->grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55->grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48, delay = 0
	register IO:: 

add input: grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_55 to pt2wire
add output: grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_48 to pt2wire
addr need tight: {}
Global range: { hw_output_stencil[i0, i1] : 0 <= i0 <= 57 and 0 <= i1 <= 57 }
Sorted ops: {op_hcompute_hw_output_stencil}
  Before Merge: 
    acc map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
    sched: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
    reduce_map: { hw_output_stencil[d0, d1] -> hw_output_stencil[58d0 + d1] }
    1d acc map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[58hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
  Dim: 2
    Schedule dom range: 58, current_level_stride : 1, up_level_stride : 64
    Address dom range: 58, current_level_stride : 1, up_level_stride : 58
Find dim: 2 pad = 6
span range: 58, up_level_stride : 58
span range: 58, up_level_stride : 64
	access map merge pair: {{0, 1} }
	schedule merge pair: {}
  After Merge: 
    schedule: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
"dimensionality",3,0
"cycle_starting_addr",390,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",58,0
"cycle_stride_1",64,0
"extent_0",58,0
"cycle_stride_0",1,0
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",58,0
"write_data_stride_0",1,0
	Write map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
{"in2glb_0":{"cycle_starting_addr":[390],"cycle_stride":[1,64],"dimensionality":2,"extent":[58,58],"write_data_starting_addr":[0],"write_data_stride":[1,58]}}
create shift register for --- lgxx_stencil
	---- 1 in ports
		lgxx_stencil_op_hcompute_lgxx_stencil_1_33
			dom : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			acc : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			sched: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			min location: { lgxx_stencil[0, 0] }
			max location: { lgxx_stencil[59, 59] }

	---- 1 out ports:
		lgxx_stencil_op_hcompute_cim_stencil_66
			dom : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgxx_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { lgxx_stencil[0, 0] }
			max location: { lgxx_stencil[59, 59] }

	---- Input Bundles
		op_hcompute_lgxx_stencil_1_write
		---- Ports...
			lgxx_stencil_op_hcompute_lgxx_stencil_1_33
	---- Output Bundles
		op_hcompute_cim_stencil_read
		---- Ports...
			lgxx_stencil_op_hcompute_cim_stencil_66

==== No reduce ops on this buffer
Writer name: op_hcompute_lgxx_stencil_1
read_op read: {lgxx_stencil, lgxy_stencil, lgyy_stencil}
read_op write: {cim_stencil, }
write_op write: {cim_stencil}
write_op read: {lgxx_stencil_clkwrk_dsa2, lxx_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
reads : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgxx_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
Schedule...
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
Time to write: { [i0] -> lgxx_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> lgxx_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_lgxx_stencil_1
DG: ...
# nodes: 2
# edges: 1
Group:     lgxx_stencil_op_hcompute_lgxx_stencil_1_33
        lgxx_stencil_op_hcompute_lgxx_stencil_1_33 -> (0) lgxx_stencil_op_hcompute_cim_stencil_66
Fanin Group:     lgxx_stencil_op_hcompute_lgxx_stencil_1_33
        lgxx_stencil_op_hcompute_cim_stencil_66 -> (-1) lgxx_stencil_op_hcompute_lgxx_stencil_1_33

Naive Shift registers...
# nodes: 2
# edges: 1
Group:     lgxx_stencil_op_hcompute_lgxx_stencil_1_33
        lgxx_stencil_op_hcompute_lgxx_stencil_1_33 -> (0) lgxx_stencil_op_hcompute_cim_stencil_66
Fanin Group:     lgxx_stencil_op_hcompute_lgxx_stencil_1_33
        lgxx_stencil_op_hcompute_cim_stencil_66 -> (-1) lgxx_stencil_op_hcompute_lgxx_stencil_1_33

inpt: lgxx_stencil_op_hcompute_lgxx_stencil_1_33
  lgxx_stencil_op_hcompute_cim_stencil_66 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     lgxx_stencil_op_hcompute_lgxx_stencil_1_33
        lgxx_stencil_op_hcompute_lgxx_stencil_1_33 -> (0) lgxx_stencil_op_hcompute_cim_stencil_66
Fanin Group:     lgxx_stencil_op_hcompute_lgxx_stencil_1_33
        lgxx_stencil_op_hcompute_cim_stencil_66 -> (-1) lgxx_stencil_op_hcompute_lgxx_stencil_1_33

edge: lgxx_stencil_op_hcompute_lgxx_stencil_1_33=>lgxx_stencil_op_hcompute_cim_stencil_66, w=0
after sort: outpt->lgxx_stencil_op_hcompute_cim_stencil_66, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     lgxx_stencil_op_hcompute_lgxx_stencil_1_33
        lgxx_stencil_op_hcompute_lgxx_stencil_1_33 -> (0) lgxx_stencil_op_hcompute_cim_stencil_66
Fanin Group:     lgxx_stencil_op_hcompute_lgxx_stencil_1_33
        lgxx_stencil_op_hcompute_cim_stencil_66 -> (-1) lgxx_stencil_op_hcompute_lgxx_stencil_1_33
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxx_stencil_op_hcompute_lgxx_stencil_1_33->lgxx_stencil_op_hcompute_cim_stencil_66, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxx_stencil_op_hcompute_lgxx_stencil_1_33->lgxx_stencil_op_hcompute_cim_stencil_66, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxx_stencil_op_hcompute_lgxx_stencil_1_33->lgxx_stencil_op_hcompute_cim_stencil_66, delay = 0
	register IO:: 

Done ports: {lgxx_stencil_op_hcompute_cim_stencil_66}
reduced buffer: --- lgxx_stencil
	---- 1 in ports
		lgxx_stencil_op_hcompute_lgxx_stencil_1_33
			dom : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			acc : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			sched: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			min location: { lgxx_stencil[0, 0] }
			max location: { lgxx_stencil[59, 59] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_lgxx_stencil_1_write
		---- Ports...
			lgxx_stencil_op_hcompute_lgxx_stencil_1_33
	---- Output Bundles

SR outputs: {lgxx_stencil_op_hcompute_cim_stencil_66}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxx_stencil_op_hcompute_lgxx_stencil_1_33->lgxx_stencil_op_hcompute_cim_stencil_66, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxx_stencil_op_hcompute_lgxx_stencil_1_33->lgxx_stencil_op_hcompute_cim_stencil_66, delay = 0
	register IO:: 

add input: lgxx_stencil_op_hcompute_lgxx_stencil_1_33 to pt2wire
add output: lgxx_stencil_op_hcompute_cim_stencil_66 to pt2wire
create shift register for --- lgxx_stencil_clkwrk_dsa2
	---- 1 in ports
		lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
			dom : { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
			acc : { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> lgxx_stencil_clkwrk_dsa2[lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
			sched: { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
			min location: { lgxx_stencil_clkwrk_dsa2[0, 0] }
			max location: { lgxx_stencil_clkwrk_dsa2[59, 59] }

	---- 1 out ports:
		lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34
			dom : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			acc : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil_clkwrk_dsa2[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			sched: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			min location: { lgxx_stencil_clkwrk_dsa2[0, 0] }
			max location: { lgxx_stencil_clkwrk_dsa2[59, 59] }

	---- Input Bundles
		op_hcompute_lgxx_stencil_write
		---- Ports...
			lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
	---- Output Bundles
		op_hcompute_lgxx_stencil_1_read
		---- Ports...
			lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34

==== No reduce ops on this buffer
Writer name: op_hcompute_lgxx_stencil
read_op read: {lgxx_stencil_clkwrk_dsa2, lxx_stencil}
read_op write: {lgxx_stencil, }
write_op write: {lgxx_stencil}
write_op read: 
Calculate DDs for creating shift registers.
writes: { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> lgxx_stencil_clkwrk_dsa2[lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
reads : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lgxx_stencil_clkwrk_dsa2[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
Time to write: { [i0] -> lgxx_stencil_clkwrk_dsa2[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> lgxx_stencil_clkwrk_dsa2[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_lgxx_stencil
DG: ...
# nodes: 2
# edges: 1
Group:     lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
        lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44 -> (0) lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34
Fanin Group:     lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
        lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34 -> (-1) lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44

Naive Shift registers...
# nodes: 2
# edges: 1
Group:     lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
        lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44 -> (0) lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34
Fanin Group:     lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
        lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34 -> (-1) lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44

inpt: lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
  lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
        lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44 -> (0) lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34
Fanin Group:     lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
        lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34 -> (-1) lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44

edge: lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44=>lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34, w=0
after sort: outpt->lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
        lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44 -> (0) lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34
Fanin Group:     lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
        lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34 -> (-1) lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44->lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44->lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44->lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34, delay = 0
	register IO:: 

Done ports: {lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34}
reduced buffer: --- lgxx_stencil_clkwrk_dsa2
	---- 1 in ports
		lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
			dom : { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
			acc : { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> lgxx_stencil_clkwrk_dsa2[lgxx_s0_y, lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
			sched: { op_hcompute_lgxx_stencil[root = 0, lgxx_s0_y, lgxx_s0_x] -> [260 + 64lgxx_s0_y + lgxx_s0_x] : 0 <= lgxx_s0_y <= 59 and 0 <= lgxx_s0_x <= 59 }
			min location: { lgxx_stencil_clkwrk_dsa2[0, 0] }
			max location: { lgxx_stencil_clkwrk_dsa2[59, 59] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_lgxx_stencil_write
		---- Ports...
			lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44
	---- Output Bundles

SR outputs: {lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44->lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44->lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34, delay = 0
	register IO:: 

add input: lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_44 to pt2wire
add output: lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_34 to pt2wire
create shift register for --- lgxy_stencil
	---- 1 in ports
		lgxy_stencil_op_hcompute_lgxy_stencil_1_21
			dom : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			acc : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			sched: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			min location: { lgxy_stencil[0, 0] }
			max location: { lgxy_stencil[59, 59] }

	---- 1 out ports:
		lgxy_stencil_op_hcompute_cim_stencil_67
			dom : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgxy_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { lgxy_stencil[0, 0] }
			max location: { lgxy_stencil[59, 59] }

	---- Input Bundles
		op_hcompute_lgxy_stencil_1_write
		---- Ports...
			lgxy_stencil_op_hcompute_lgxy_stencil_1_21
	---- Output Bundles
		op_hcompute_cim_stencil_read
		---- Ports...
			lgxy_stencil_op_hcompute_cim_stencil_67

==== No reduce ops on this buffer
Writer name: op_hcompute_lgxy_stencil_1
read_op read: {lgxx_stencil, lgxy_stencil, lgyy_stencil}
read_op write: {cim_stencil, }
write_op write: {cim_stencil}
write_op read: {lgxy_stencil_clkwrk_dsa3, lxy_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
reads : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgxy_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
Schedule...
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
Time to write: { [i0] -> lgxy_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> lgxy_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_lgxy_stencil_1
DG: ...
# nodes: 2
# edges: 1
Group:     lgxy_stencil_op_hcompute_lgxy_stencil_1_21
        lgxy_stencil_op_hcompute_lgxy_stencil_1_21 -> (0) lgxy_stencil_op_hcompute_cim_stencil_67
Fanin Group:     lgxy_stencil_op_hcompute_lgxy_stencil_1_21
        lgxy_stencil_op_hcompute_cim_stencil_67 -> (-1) lgxy_stencil_op_hcompute_lgxy_stencil_1_21

Naive Shift registers...
# nodes: 2
# edges: 1
Group:     lgxy_stencil_op_hcompute_lgxy_stencil_1_21
        lgxy_stencil_op_hcompute_lgxy_stencil_1_21 -> (0) lgxy_stencil_op_hcompute_cim_stencil_67
Fanin Group:     lgxy_stencil_op_hcompute_lgxy_stencil_1_21
        lgxy_stencil_op_hcompute_cim_stencil_67 -> (-1) lgxy_stencil_op_hcompute_lgxy_stencil_1_21

inpt: lgxy_stencil_op_hcompute_lgxy_stencil_1_21
  lgxy_stencil_op_hcompute_cim_stencil_67 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     lgxy_stencil_op_hcompute_lgxy_stencil_1_21
        lgxy_stencil_op_hcompute_lgxy_stencil_1_21 -> (0) lgxy_stencil_op_hcompute_cim_stencil_67
Fanin Group:     lgxy_stencil_op_hcompute_lgxy_stencil_1_21
        lgxy_stencil_op_hcompute_cim_stencil_67 -> (-1) lgxy_stencil_op_hcompute_lgxy_stencil_1_21

edge: lgxy_stencil_op_hcompute_lgxy_stencil_1_21=>lgxy_stencil_op_hcompute_cim_stencil_67, w=0
after sort: outpt->lgxy_stencil_op_hcompute_cim_stencil_67, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     lgxy_stencil_op_hcompute_lgxy_stencil_1_21
        lgxy_stencil_op_hcompute_lgxy_stencil_1_21 -> (0) lgxy_stencil_op_hcompute_cim_stencil_67
Fanin Group:     lgxy_stencil_op_hcompute_lgxy_stencil_1_21
        lgxy_stencil_op_hcompute_cim_stencil_67 -> (-1) lgxy_stencil_op_hcompute_lgxy_stencil_1_21
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxy_stencil_op_hcompute_lgxy_stencil_1_21->lgxy_stencil_op_hcompute_cim_stencil_67, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxy_stencil_op_hcompute_lgxy_stencil_1_21->lgxy_stencil_op_hcompute_cim_stencil_67, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxy_stencil_op_hcompute_lgxy_stencil_1_21->lgxy_stencil_op_hcompute_cim_stencil_67, delay = 0
	register IO:: 

Done ports: {lgxy_stencil_op_hcompute_cim_stencil_67}
reduced buffer: --- lgxy_stencil
	---- 1 in ports
		lgxy_stencil_op_hcompute_lgxy_stencil_1_21
			dom : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			acc : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			sched: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			min location: { lgxy_stencil[0, 0] }
			max location: { lgxy_stencil[59, 59] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_lgxy_stencil_1_write
		---- Ports...
			lgxy_stencil_op_hcompute_lgxy_stencil_1_21
	---- Output Bundles

SR outputs: {lgxy_stencil_op_hcompute_cim_stencil_67}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxy_stencil_op_hcompute_lgxy_stencil_1_21->lgxy_stencil_op_hcompute_cim_stencil_67, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxy_stencil_op_hcompute_lgxy_stencil_1_21->lgxy_stencil_op_hcompute_cim_stencil_67, delay = 0
	register IO:: 

add input: lgxy_stencil_op_hcompute_lgxy_stencil_1_21 to pt2wire
add output: lgxy_stencil_op_hcompute_cim_stencil_67 to pt2wire
create shift register for --- lgxy_stencil_clkwrk_dsa3
	---- 1 in ports
		lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
			dom : { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
			acc : { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> lgxy_stencil_clkwrk_dsa3[lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
			sched: { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
			min location: { lgxy_stencil_clkwrk_dsa3[0, 0] }
			max location: { lgxy_stencil_clkwrk_dsa3[59, 59] }

	---- 1 out ports:
		lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22
			dom : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			acc : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil_clkwrk_dsa3[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			sched: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			min location: { lgxy_stencil_clkwrk_dsa3[0, 0] }
			max location: { lgxy_stencil_clkwrk_dsa3[59, 59] }

	---- Input Bundles
		op_hcompute_lgxy_stencil_write
		---- Ports...
			lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
	---- Output Bundles
		op_hcompute_lgxy_stencil_1_read
		---- Ports...
			lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22

==== No reduce ops on this buffer
Writer name: op_hcompute_lgxy_stencil
read_op read: {lgxy_stencil_clkwrk_dsa3, lxy_stencil}
read_op write: {lgxy_stencil, }
write_op write: {lgxy_stencil}
write_op read: 
Calculate DDs for creating shift registers.
writes: { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> lgxy_stencil_clkwrk_dsa3[lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
reads : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lgxy_stencil_clkwrk_dsa3[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
Time to write: { [i0] -> lgxy_stencil_clkwrk_dsa3[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> lgxy_stencil_clkwrk_dsa3[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_lgxy_stencil
DG: ...
# nodes: 2
# edges: 1
Group:     lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
        lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32 -> (0) lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22
Fanin Group:     lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
        lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22 -> (-1) lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32

Naive Shift registers...
# nodes: 2
# edges: 1
Group:     lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
        lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32 -> (0) lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22
Fanin Group:     lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
        lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22 -> (-1) lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32

inpt: lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
  lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
        lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32 -> (0) lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22
Fanin Group:     lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
        lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22 -> (-1) lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32

edge: lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32=>lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22, w=0
after sort: outpt->lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
        lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32 -> (0) lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22
Fanin Group:     lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
        lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22 -> (-1) lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32->lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32->lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32->lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22, delay = 0
	register IO:: 

Done ports: {lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22}
reduced buffer: --- lgxy_stencil_clkwrk_dsa3
	---- 1 in ports
		lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
			dom : { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
			acc : { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> lgxy_stencil_clkwrk_dsa3[lgxy_s0_y, lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
			sched: { op_hcompute_lgxy_stencil[root = 0, lgxy_s0_y, lgxy_s0_x] -> [260 + 64lgxy_s0_y + lgxy_s0_x] : 0 <= lgxy_s0_y <= 59 and 0 <= lgxy_s0_x <= 59 }
			min location: { lgxy_stencil_clkwrk_dsa3[0, 0] }
			max location: { lgxy_stencil_clkwrk_dsa3[59, 59] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_lgxy_stencil_write
		---- Ports...
			lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32
	---- Output Bundles

SR outputs: {lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32->lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32->lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22, delay = 0
	register IO:: 

add input: lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_32 to pt2wire
add output: lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_22 to pt2wire
create shift register for --- lgyy_stencil
	---- 1 in ports
		lgyy_stencil_op_hcompute_lgyy_stencil_1_9
			dom : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			acc : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			sched: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			min location: { lgyy_stencil[0, 0] }
			max location: { lgyy_stencil[59, 59] }

	---- 1 out ports:
		lgyy_stencil_op_hcompute_cim_stencil_68
			dom : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			acc : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgyy_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			sched: { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
			min location: { lgyy_stencil[0, 0] }
			max location: { lgyy_stencil[59, 59] }

	---- Input Bundles
		op_hcompute_lgyy_stencil_1_write
		---- Ports...
			lgyy_stencil_op_hcompute_lgyy_stencil_1_9
	---- Output Bundles
		op_hcompute_cim_stencil_read
		---- Ports...
			lgyy_stencil_op_hcompute_cim_stencil_68

==== No reduce ops on this buffer
Writer name: op_hcompute_lgyy_stencil_1
read_op read: {lgxx_stencil, lgxy_stencil, lgyy_stencil}
read_op write: {cim_stencil, }
write_op write: {cim_stencil}
write_op read: {lgyy_stencil_clkwrk_dsa4, lyy_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
reads : { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> lgyy_stencil[cim_s0_y, cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
Schedule...
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_cim_stencil[root = 0, cim_s0_y, cim_s0_x] -> [260 + 64cim_s0_y + cim_s0_x] : 0 <= cim_s0_y <= 59 and 0 <= cim_s0_x <= 59 }
Time to write: { [i0] -> lgyy_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> lgyy_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_lgyy_stencil_1
DG: ...
# nodes: 2
# edges: 1
Group:     lgyy_stencil_op_hcompute_lgyy_stencil_1_9
        lgyy_stencil_op_hcompute_lgyy_stencil_1_9 -> (0) lgyy_stencil_op_hcompute_cim_stencil_68
Fanin Group:     lgyy_stencil_op_hcompute_lgyy_stencil_1_9
        lgyy_stencil_op_hcompute_cim_stencil_68 -> (-1) lgyy_stencil_op_hcompute_lgyy_stencil_1_9

Naive Shift registers...
# nodes: 2
# edges: 1
Group:     lgyy_stencil_op_hcompute_lgyy_stencil_1_9
        lgyy_stencil_op_hcompute_lgyy_stencil_1_9 -> (0) lgyy_stencil_op_hcompute_cim_stencil_68
Fanin Group:     lgyy_stencil_op_hcompute_lgyy_stencil_1_9
        lgyy_stencil_op_hcompute_cim_stencil_68 -> (-1) lgyy_stencil_op_hcompute_lgyy_stencil_1_9

inpt: lgyy_stencil_op_hcompute_lgyy_stencil_1_9
  lgyy_stencil_op_hcompute_cim_stencil_68 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     lgyy_stencil_op_hcompute_lgyy_stencil_1_9
        lgyy_stencil_op_hcompute_lgyy_stencil_1_9 -> (0) lgyy_stencil_op_hcompute_cim_stencil_68
Fanin Group:     lgyy_stencil_op_hcompute_lgyy_stencil_1_9
        lgyy_stencil_op_hcompute_cim_stencil_68 -> (-1) lgyy_stencil_op_hcompute_lgyy_stencil_1_9

edge: lgyy_stencil_op_hcompute_lgyy_stencil_1_9=>lgyy_stencil_op_hcompute_cim_stencil_68, w=0
after sort: outpt->lgyy_stencil_op_hcompute_cim_stencil_68, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     lgyy_stencil_op_hcompute_lgyy_stencil_1_9
        lgyy_stencil_op_hcompute_lgyy_stencil_1_9 -> (0) lgyy_stencil_op_hcompute_cim_stencil_68
Fanin Group:     lgyy_stencil_op_hcompute_lgyy_stencil_1_9
        lgyy_stencil_op_hcompute_cim_stencil_68 -> (-1) lgyy_stencil_op_hcompute_lgyy_stencil_1_9
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgyy_stencil_op_hcompute_lgyy_stencil_1_9->lgyy_stencil_op_hcompute_cim_stencil_68, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgyy_stencil_op_hcompute_lgyy_stencil_1_9->lgyy_stencil_op_hcompute_cim_stencil_68, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgyy_stencil_op_hcompute_lgyy_stencil_1_9->lgyy_stencil_op_hcompute_cim_stencil_68, delay = 0
	register IO:: 

Done ports: {lgyy_stencil_op_hcompute_cim_stencil_68}
reduced buffer: --- lgyy_stencil
	---- 1 in ports
		lgyy_stencil_op_hcompute_lgyy_stencil_1_9
			dom : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			acc : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			sched: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			min location: { lgyy_stencil[0, 0] }
			max location: { lgyy_stencil[59, 59] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_lgyy_stencil_1_write
		---- Ports...
			lgyy_stencil_op_hcompute_lgyy_stencil_1_9
	---- Output Bundles

SR outputs: {lgyy_stencil_op_hcompute_cim_stencil_68}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgyy_stencil_op_hcompute_lgyy_stencil_1_9->lgyy_stencil_op_hcompute_cim_stencil_68, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgyy_stencil_op_hcompute_lgyy_stencil_1_9->lgyy_stencil_op_hcompute_cim_stencil_68, delay = 0
	register IO:: 

add input: lgyy_stencil_op_hcompute_lgyy_stencil_1_9 to pt2wire
add output: lgyy_stencil_op_hcompute_cim_stencil_68 to pt2wire
create shift register for --- lgyy_stencil_clkwrk_dsa4
	---- 1 in ports
		lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
			dom : { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
			acc : { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> lgyy_stencil_clkwrk_dsa4[lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
			sched: { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
			min location: { lgyy_stencil_clkwrk_dsa4[0, 0] }
			max location: { lgyy_stencil_clkwrk_dsa4[59, 59] }

	---- 1 out ports:
		lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10
			dom : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			acc : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil_clkwrk_dsa4[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			sched: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			min location: { lgyy_stencil_clkwrk_dsa4[0, 0] }
			max location: { lgyy_stencil_clkwrk_dsa4[59, 59] }

	---- Input Bundles
		op_hcompute_lgyy_stencil_write
		---- Ports...
			lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
	---- Output Bundles
		op_hcompute_lgyy_stencil_1_read
		---- Ports...
			lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10

==== No reduce ops on this buffer
Writer name: op_hcompute_lgyy_stencil
read_op read: {lgyy_stencil_clkwrk_dsa4, lyy_stencil}
read_op write: {lgyy_stencil, }
write_op write: {lgyy_stencil}
write_op read: 
Calculate DDs for creating shift registers.
writes: { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> lgyy_stencil_clkwrk_dsa4[lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
reads : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lgyy_stencil_clkwrk_dsa4[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
Time to write: { [i0] -> lgyy_stencil_clkwrk_dsa4[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> lgyy_stencil_clkwrk_dsa4[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_lgyy_stencil
DG: ...
# nodes: 2
# edges: 1
Group:     lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
        lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20 -> (0) lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10
Fanin Group:     lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
        lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10 -> (-1) lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20

Naive Shift registers...
# nodes: 2
# edges: 1
Group:     lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
        lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20 -> (0) lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10
Fanin Group:     lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
        lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10 -> (-1) lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20

inpt: lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
  lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
        lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20 -> (0) lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10
Fanin Group:     lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
        lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10 -> (-1) lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20

edge: lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20=>lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10, w=0
after sort: outpt->lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
        lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20 -> (0) lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10
Fanin Group:     lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
        lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10 -> (-1) lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20->lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20->lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20->lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10, delay = 0
	register IO:: 

Done ports: {lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10}
reduced buffer: --- lgyy_stencil_clkwrk_dsa4
	---- 1 in ports
		lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
			dom : { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
			acc : { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> lgyy_stencil_clkwrk_dsa4[lgyy_s0_y, lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
			sched: { op_hcompute_lgyy_stencil[root = 0, lgyy_s0_y, lgyy_s0_x] -> [260 + 64lgyy_s0_y + lgyy_s0_x] : 0 <= lgyy_s0_y <= 59 and 0 <= lgyy_s0_x <= 59 }
			min location: { lgyy_stencil_clkwrk_dsa4[0, 0] }
			max location: { lgyy_stencil_clkwrk_dsa4[59, 59] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_lgyy_stencil_write
		---- Ports...
			lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20
	---- Output Bundles

SR outputs: {lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20->lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20->lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10, delay = 0
	register IO:: 

add input: lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_20 to pt2wire
add output: lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_10 to pt2wire
create shift register for --- lxx_stencil
	---- 1 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7
			dom : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil[0, 0] }
			max location: { lxx_stencil[61, 61] }

	---- 9 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_35
			dom : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			acc : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			sched: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			min location: { lxx_stencil[0, 0] }
			max location: { lxx_stencil[59, 59] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_36
			dom : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			acc : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[lgxx_s1_y, 1 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			sched: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			min location: { lxx_stencil[0, 1] }
			max location: { lxx_stencil[59, 60] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37
			dom : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			acc : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[lgxx_s1_y, 2 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			sched: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			min location: { lxx_stencil[0, 2] }
			max location: { lxx_stencil[59, 61] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_38
			dom : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			acc : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			sched: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			min location: { lxx_stencil[1, 0] }
			max location: { lxx_stencil[60, 59] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_39
			dom : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			acc : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, 1 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			sched: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			min location: { lxx_stencil[1, 1] }
			max location: { lxx_stencil[60, 60] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40
			dom : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			acc : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, 2 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			sched: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			min location: { lxx_stencil[1, 2] }
			max location: { lxx_stencil[60, 61] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_41
			dom : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			acc : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			sched: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			min location: { lxx_stencil[2, 0] }
			max location: { lxx_stencil[61, 59] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_42
			dom : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			acc : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, 2 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			sched: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			min location: { lxx_stencil[2, 2] }
			max location: { lxx_stencil[61, 61] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_43
			dom : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			acc : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, 1 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			sched: { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
			min location: { lxx_stencil[2, 1] }
			max location: { lxx_stencil[61, 60] }

	---- Input Bundles
		op_hcompute_lxx_stencil_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7
	---- Output Bundles
		op_hcompute_lgxx_stencil_1_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_35
			lxx_stencil_op_hcompute_lgxx_stencil_1_36
			lxx_stencil_op_hcompute_lgxx_stencil_1_37
			lxx_stencil_op_hcompute_lgxx_stencil_1_38
			lxx_stencil_op_hcompute_lgxx_stencil_1_39
			lxx_stencil_op_hcompute_lgxx_stencil_1_40
			lxx_stencil_op_hcompute_lgxx_stencil_1_41
			lxx_stencil_op_hcompute_lgxx_stencil_1_42
			lxx_stencil_op_hcompute_lgxx_stencil_1_43

==== No reduce ops on this buffer
Writer name: op_hcompute_lxx_stencil
read_op read: {lgxx_stencil_clkwrk_dsa2, lxx_stencil}
read_op write: {lgxx_stencil, }
write_op write: {lgxx_stencil}
write_op read: {grad_x_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
reads : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
Time to write: { [i0] -> lxx_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lxx_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [130 + i0] : 126 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= -2 + i0 }
DDs          : { [130] }
DD           : 130
writer op    : op_hcompute_lxx_stencil
Writer name: op_hcompute_lxx_stencil
read_op read: {lgxx_stencil_clkwrk_dsa2, lxx_stencil}
read_op write: {lgxx_stencil, }
write_op write: {lgxx_stencil}
write_op read: {grad_x_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
reads : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[lgxx_s1_y, 1 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
Time to write: { [i0] -> lxx_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lxx_stencil[o0, -259 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [129 + i0] : 127 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -3 + i0 }
DDs          : { [129] }
DD           : 129
writer op    : op_hcompute_lxx_stencil
Writer name: op_hcompute_lxx_stencil
read_op read: {lgxx_stencil_clkwrk_dsa2, lxx_stencil}
read_op write: {lgxx_stencil, }
write_op write: {lgxx_stencil}
write_op read: {grad_x_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
reads : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[lgxx_s1_y, 2 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
Time to write: { [i0] -> lxx_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lxx_stencil[o0, -258 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [128 + i0] : 128 <= i0 <= 3967 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [128] }
DD           : 128
writer op    : op_hcompute_lxx_stencil
Writer name: op_hcompute_lxx_stencil
read_op read: {lgxx_stencil_clkwrk_dsa2, lxx_stencil}
read_op write: {lgxx_stencil, }
write_op write: {lgxx_stencil}
write_op read: {grad_x_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
reads : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
Time to write: { [i0] -> lxx_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lxx_stencil[o0, -196 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0 }
PC times     : { [i0] -> [66 + i0] : 190 <= i0 <= 4029 and 64*floor((2 + i0)/64) <= -2 + i0 }
DDs          : { [66] }
DD           : 66
writer op    : op_hcompute_lxx_stencil
Writer name: op_hcompute_lxx_stencil
read_op read: {lgxx_stencil_clkwrk_dsa2, lxx_stencil}
read_op write: {lgxx_stencil, }
write_op write: {lgxx_stencil}
write_op read: {grad_x_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
reads : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, 1 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
Time to write: { [i0] -> lxx_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lxx_stencil[o0, -195 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0 }
PC times     : { [i0] -> [65 + i0] : 191 <= i0 <= 4030 and 64*floor((1 + i0)/64) <= -3 + i0 }
DDs          : { [65] }
DD           : 65
writer op    : op_hcompute_lxx_stencil
Writer name: op_hcompute_lxx_stencil
read_op read: {lgxx_stencil_clkwrk_dsa2, lxx_stencil}
read_op write: {lgxx_stencil, }
write_op write: {lgxx_stencil}
write_op read: {grad_x_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
reads : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[1 + lgxx_s1_y, 2 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
Time to write: { [i0] -> lxx_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lxx_stencil[o0, -194 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0 }
PC times     : { [i0] -> [64 + i0] : 192 <= i0 <= 4031 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [64] }
DD           : 64
writer op    : op_hcompute_lxx_stencil
Writer name: op_hcompute_lxx_stencil
read_op read: {lgxx_stencil_clkwrk_dsa2, lxx_stencil}
read_op write: {lgxx_stencil, }
write_op write: {lgxx_stencil}
write_op read: {grad_x_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
reads : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
Time to write: { [i0] -> lxx_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lxx_stencil[o0, -132 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0 }
PC times     : { [i0] -> [2 + i0] : 254 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= -2 + i0 }
DDs          : { [2] }
DD           : 2
writer op    : op_hcompute_lxx_stencil
Writer name: op_hcompute_lxx_stencil
read_op read: {lgxx_stencil_clkwrk_dsa2, lxx_stencil}
read_op write: {lgxx_stencil, }
write_op write: {lgxx_stencil}
write_op read: {grad_x_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
reads : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, 2 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
Time to write: { [i0] -> lxx_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lxx_stencil[o0, -130 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_lxx_stencil
Writer name: op_hcompute_lxx_stencil
read_op read: {lgxx_stencil_clkwrk_dsa2, lxx_stencil}
read_op write: {lgxx_stencil, }
write_op write: {lgxx_stencil}
write_op read: {grad_x_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
reads : { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> lxx_stencil[2 + lgxx_s1_y, 1 + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxx_stencil_1[root = 0, lgxx_s1_y, lgxx_s1_x] -> [260 + 64lgxx_s1_y + lgxx_s1_x] : 0 <= lgxx_s1_y <= 59 and 0 <= lgxx_s1_x <= 59 }
  { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
Time to write: { [i0] -> lxx_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lxx_stencil[o0, -131 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0 }
PC times     : { [i0] -> [1 + i0] : 255 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -3 + i0 }
DDs          : { [1] }
DD           : 1
writer op    : op_hcompute_lxx_stencil
DG: ...
# nodes: 10
# edges: 9
Group:     lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (130) lxx_stencil_op_hcompute_lgxx_stencil_1_35
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (129) lxx_stencil_op_hcompute_lgxx_stencil_1_36
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (128) lxx_stencil_op_hcompute_lgxx_stencil_1_37
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (66) lxx_stencil_op_hcompute_lgxx_stencil_1_38
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (65) lxx_stencil_op_hcompute_lgxx_stencil_1_39
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (64) lxx_stencil_op_hcompute_lgxx_stencil_1_40
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (2) lxx_stencil_op_hcompute_lgxx_stencil_1_41
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (0) lxx_stencil_op_hcompute_lgxx_stencil_1_42
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (1) lxx_stencil_op_hcompute_lgxx_stencil_1_43
Fanin Group:     lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_35 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_36 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_37 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_38 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_39 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_40 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_41 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_42 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_43 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7

Naive Shift registers...
# nodes: 10
# edges: 9
Group:     lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (130) lxx_stencil_op_hcompute_lgxx_stencil_1_35
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (129) lxx_stencil_op_hcompute_lgxx_stencil_1_36
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (128) lxx_stencil_op_hcompute_lgxx_stencil_1_37
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (66) lxx_stencil_op_hcompute_lgxx_stencil_1_38
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (65) lxx_stencil_op_hcompute_lgxx_stencil_1_39
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (64) lxx_stencil_op_hcompute_lgxx_stencil_1_40
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (2) lxx_stencil_op_hcompute_lgxx_stencil_1_41
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (0) lxx_stencil_op_hcompute_lgxx_stencil_1_42
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (1) lxx_stencil_op_hcompute_lgxx_stencil_1_43
Fanin Group:     lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_35 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_36 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_37 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_38 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_39 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_40 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_41 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_42 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_43 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7

inpt: lxx_stencil_op_hcompute_lxx_stencil_7
  lxx_stencil_op_hcompute_lgxx_stencil_1_42 -(0)-> 0
  lxx_stencil_op_hcompute_lgxx_stencil_1_43 -(1)-> 1
  lxx_stencil_op_hcompute_lgxx_stencil_1_41 -(2)-> 2
  lxx_stencil_op_hcompute_lgxx_stencil_1_40 -(64)-> 64
  lxx_stencil_op_hcompute_lgxx_stencil_1_39 -(65)-> 65
  lxx_stencil_op_hcompute_lgxx_stencil_1_38 -(66)-> 66
  lxx_stencil_op_hcompute_lgxx_stencil_1_37 -(128)-> 128
  lxx_stencil_op_hcompute_lgxx_stencil_1_36 -(129)-> 129
  lxx_stencil_op_hcompute_lgxx_stencil_1_35 -(130)-> 130
Groups...
  Group...
  Group...
  Group...
# nodes: 10
# edges: 9
Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_36
        lxx_stencil_op_hcompute_lgxx_stencil_1_36 -> (1) lxx_stencil_op_hcompute_lgxx_stencil_1_35
Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_37
        lxx_stencil_op_hcompute_lgxx_stencil_1_37 -> (1) lxx_stencil_op_hcompute_lgxx_stencil_1_36
Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_39
        lxx_stencil_op_hcompute_lgxx_stencil_1_39 -> (1) lxx_stencil_op_hcompute_lgxx_stencil_1_38
Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_40
        lxx_stencil_op_hcompute_lgxx_stencil_1_40 -> (1) lxx_stencil_op_hcompute_lgxx_stencil_1_39
Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_42
        lxx_stencil_op_hcompute_lgxx_stencil_1_42 -> (1) lxx_stencil_op_hcompute_lgxx_stencil_1_43
Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_43
        lxx_stencil_op_hcompute_lgxx_stencil_1_43 -> (1) lxx_stencil_op_hcompute_lgxx_stencil_1_41
Group:     lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (128) lxx_stencil_op_hcompute_lgxx_stencil_1_37
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (64) lxx_stencil_op_hcompute_lgxx_stencil_1_40
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (0) lxx_stencil_op_hcompute_lgxx_stencil_1_42
Fanin Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_36
        lxx_stencil_op_hcompute_lgxx_stencil_1_35 -> (-1) lxx_stencil_op_hcompute_lgxx_stencil_1_36
Fanin Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_37
        lxx_stencil_op_hcompute_lgxx_stencil_1_36 -> (-1) lxx_stencil_op_hcompute_lgxx_stencil_1_37
Fanin Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_39
        lxx_stencil_op_hcompute_lgxx_stencil_1_38 -> (-1) lxx_stencil_op_hcompute_lgxx_stencil_1_39
Fanin Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_40
        lxx_stencil_op_hcompute_lgxx_stencil_1_39 -> (-1) lxx_stencil_op_hcompute_lgxx_stencil_1_40
Fanin Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_42
        lxx_stencil_op_hcompute_lgxx_stencil_1_43 -> (-1) lxx_stencil_op_hcompute_lgxx_stencil_1_42
Fanin Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_43
        lxx_stencil_op_hcompute_lgxx_stencil_1_41 -> (-1) lxx_stencil_op_hcompute_lgxx_stencil_1_43
Fanin Group:     lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_37 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_40 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_42 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7

edge: lxx_stencil_op_hcompute_lxx_stencil_7=>lxx_stencil_op_hcompute_lgxx_stencil_1_37, w=128
edge: lxx_stencil_op_hcompute_lxx_stencil_7=>lxx_stencil_op_hcompute_lgxx_stencil_1_40, w=64
edge: lxx_stencil_op_hcompute_lxx_stencil_7=>lxx_stencil_op_hcompute_lgxx_stencil_1_42, w=0
after sort: outpt->lxx_stencil_op_hcompute_lgxx_stencil_1_37, w=128
after sort: outpt->lxx_stencil_op_hcompute_lgxx_stencil_1_40, w=64
after sort: outpt->lxx_stencil_op_hcompute_lgxx_stencil_1_42, w=0
	delay of lxx_stencil_op_hcompute_lgxx_stencil_1_43 = 1
	delay of lxx_stencil_op_hcompute_lgxx_stencil_1_42 = 2
	subbranch size: 2
	delay of lxx_stencil_op_hcompute_lgxx_stencil_1_39 = 1
	delay of lxx_stencil_op_hcompute_lgxx_stencil_1_40 = 2
	subbranch size: 2
	delay of lxx_stencil_op_hcompute_lgxx_stencil_1_36 = 1
	delay of lxx_stencil_op_hcompute_lgxx_stencil_1_37 = 2
	subbranch size: 2
# nodes: 10
# edges: 9
Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_36
        lxx_stencil_op_hcompute_lgxx_stencil_1_36 -> (1) lxx_stencil_op_hcompute_lgxx_stencil_1_35
Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_37
        lxx_stencil_op_hcompute_lgxx_stencil_1_37 -> (1) lxx_stencil_op_hcompute_lgxx_stencil_1_36
Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_39
        lxx_stencil_op_hcompute_lgxx_stencil_1_39 -> (1) lxx_stencil_op_hcompute_lgxx_stencil_1_38
Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_40
        lxx_stencil_op_hcompute_lgxx_stencil_1_40 -> (1) lxx_stencil_op_hcompute_lgxx_stencil_1_39
Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_42
        lxx_stencil_op_hcompute_lgxx_stencil_1_42 -> (1) lxx_stencil_op_hcompute_lgxx_stencil_1_43
Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_43
        lxx_stencil_op_hcompute_lgxx_stencil_1_43 -> (1) lxx_stencil_op_hcompute_lgxx_stencil_1_41
Group:     lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (128) lxx_stencil_op_hcompute_lgxx_stencil_1_37
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (64) lxx_stencil_op_hcompute_lgxx_stencil_1_40
        lxx_stencil_op_hcompute_lxx_stencil_7 -> (0) lxx_stencil_op_hcompute_lgxx_stencil_1_42
Fanin Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_36
        lxx_stencil_op_hcompute_lgxx_stencil_1_35 -> (-1) lxx_stencil_op_hcompute_lgxx_stencil_1_36
Fanin Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_37
        lxx_stencil_op_hcompute_lgxx_stencil_1_36 -> (-1) lxx_stencil_op_hcompute_lgxx_stencil_1_37
Fanin Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_39
        lxx_stencil_op_hcompute_lgxx_stencil_1_38 -> (-1) lxx_stencil_op_hcompute_lgxx_stencil_1_39
Fanin Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_40
        lxx_stencil_op_hcompute_lgxx_stencil_1_39 -> (-1) lxx_stencil_op_hcompute_lgxx_stencil_1_40
Fanin Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_42
        lxx_stencil_op_hcompute_lgxx_stencil_1_43 -> (-1) lxx_stencil_op_hcompute_lgxx_stencil_1_42
Fanin Group:     lxx_stencil_op_hcompute_lgxx_stencil_1_43
        lxx_stencil_op_hcompute_lgxx_stencil_1_41 -> (-1) lxx_stencil_op_hcompute_lgxx_stencil_1_43
Fanin Group:     lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_37 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_40 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
        lxx_stencil_op_hcompute_lgxx_stencil_1_42 -> (-1) lxx_stencil_op_hcompute_lxx_stencil_7
Bank writers: 
	 bank NO.0
		writers: {lxx_stencil_op_hcompute_lxx_stencil_7}
	 bank NO.1
		writers: {lxx_stencil_op_hcompute_lxx_stencil_7}
Bank readers: 
	 bank NO.0
		readers: {lxx_stencil_op_hcompute_lgxx_stencil_1_40}
	 bank NO.1
		readers: {lxx_stencil_op_hcompute_lgxx_stencil_1_37}
Shift Register Output: 
	memtiles IO:: 
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_37, delay = 128
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_40, delay = 64
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_42, delay = 0
	register IO:: 
		 lxx_stencil_op_hcompute_lgxx_stencil_1_42->lxx_stencil_op_hcompute_lgxx_stencil_1_43, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_43->lxx_stencil_op_hcompute_lgxx_stencil_1_41, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_40->lxx_stencil_op_hcompute_lgxx_stencil_1_39, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_39->lxx_stencil_op_hcompute_lgxx_stencil_1_38, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_37->lxx_stencil_op_hcompute_lgxx_stencil_1_36, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_36->lxx_stencil_op_hcompute_lgxx_stencil_1_35, delay = 1
Bank writers: 
	 bank NO.0
		writers: {lxx_stencil_op_hcompute_lxx_stencil_7}
	 bank NO.1
		writers: {lxx_stencil_op_hcompute_lxx_stencil_7}
Bank readers: 
	 bank NO.0
		readers: {lxx_stencil_op_hcompute_lgxx_stencil_1_40}
	 bank NO.1
		readers: {lxx_stencil_op_hcompute_lgxx_stencil_1_37}
Shift Register Output: 
	memtiles IO:: 
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_37, delay = 128
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_40, delay = 64
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_42, delay = 0
	register IO:: 
		 lxx_stencil_op_hcompute_lgxx_stencil_1_42->lxx_stencil_op_hcompute_lgxx_stencil_1_43, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_43->lxx_stencil_op_hcompute_lgxx_stencil_1_41, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_40->lxx_stencil_op_hcompute_lgxx_stencil_1_39, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_39->lxx_stencil_op_hcompute_lgxx_stencil_1_38, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_37->lxx_stencil_op_hcompute_lgxx_stencil_1_36, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_36->lxx_stencil_op_hcompute_lgxx_stencil_1_35, delay = 1

After shift register optimization: Bank writers: 
	 bank NO.0
		writers: {lxx_stencil_op_hcompute_lxx_stencil_7}
	 bank NO.1
		writers: {lxx_stencil_op_hcompute_lxx_stencil_7}
Bank readers: 
	 bank NO.0
		readers: {lxx_stencil_op_hcompute_lgxx_stencil_1_40}
	 bank NO.1
		readers: {lxx_stencil_op_hcompute_lgxx_stencil_1_37}
Shift Register Output: 
	memtiles IO:: 
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_37, delay = 128
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_40, delay = 64
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_42, delay = 0
	register IO:: 
		 lxx_stencil_op_hcompute_lgxx_stencil_1_42->lxx_stencil_op_hcompute_lgxx_stencil_1_43, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_43->lxx_stencil_op_hcompute_lgxx_stencil_1_41, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_40->lxx_stencil_op_hcompute_lgxx_stencil_1_39, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_39->lxx_stencil_op_hcompute_lgxx_stencil_1_38, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_37->lxx_stencil_op_hcompute_lgxx_stencil_1_36, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_36->lxx_stencil_op_hcompute_lgxx_stencil_1_35, delay = 1

Done ports: {lxx_stencil_op_hcompute_lgxx_stencil_1_35, lxx_stencil_op_hcompute_lgxx_stencil_1_36, lxx_stencil_op_hcompute_lgxx_stencil_1_37, lxx_stencil_op_hcompute_lgxx_stencil_1_38, lxx_stencil_op_hcompute_lgxx_stencil_1_39, lxx_stencil_op_hcompute_lgxx_stencil_1_40, lxx_stencil_op_hcompute_lgxx_stencil_1_41, lxx_stencil_op_hcompute_lgxx_stencil_1_42, lxx_stencil_op_hcompute_lgxx_stencil_1_43}
reduced buffer: --- lxx_stencil
	---- 1 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7
			dom : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil[0, 0] }
			max location: { lxx_stencil[61, 61] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_lxx_stencil_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7
	---- Output Bundles

SR outputs: {lxx_stencil_op_hcompute_lgxx_stencil_1_35, lxx_stencil_op_hcompute_lgxx_stencil_1_36, lxx_stencil_op_hcompute_lgxx_stencil_1_37, lxx_stencil_op_hcompute_lgxx_stencil_1_38, lxx_stencil_op_hcompute_lgxx_stencil_1_39, lxx_stencil_op_hcompute_lgxx_stencil_1_40, lxx_stencil_op_hcompute_lgxx_stencil_1_41, lxx_stencil_op_hcompute_lgxx_stencil_1_42, lxx_stencil_op_hcompute_lgxx_stencil_1_43}
BUF outputs: {}
After banking optimization: Bank writers: 
	 bank NO.0
		writers: {lxx_stencil_op_hcompute_lxx_stencil_7}
	 bank NO.1
		writers: {lxx_stencil_op_hcompute_lxx_stencil_7}
Bank readers: 
	 bank NO.0
		readers: {lxx_stencil_op_hcompute_lgxx_stencil_1_40}
	 bank NO.1
		readers: {lxx_stencil_op_hcompute_lgxx_stencil_1_37}
Shift Register Output: 
	memtiles IO:: 
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_37, delay = 128
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_40, delay = 64
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_42, delay = 0
	register IO:: 
		 lxx_stencil_op_hcompute_lgxx_stencil_1_42->lxx_stencil_op_hcompute_lgxx_stencil_1_43, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_43->lxx_stencil_op_hcompute_lgxx_stencil_1_41, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_40->lxx_stencil_op_hcompute_lgxx_stencil_1_39, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_39->lxx_stencil_op_hcompute_lgxx_stencil_1_38, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_37->lxx_stencil_op_hcompute_lgxx_stencil_1_36, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_36->lxx_stencil_op_hcompute_lgxx_stencil_1_35, delay = 1

After bank merging: Bank writers: 
	 bank NO.0
		writers: {lxx_stencil_op_hcompute_lxx_stencil_7}
	 bank NO.1
		writers: {lxx_stencil_op_hcompute_lxx_stencil_7}
Bank readers: 
	 bank NO.0
		readers: {lxx_stencil_op_hcompute_lgxx_stencil_1_40}
	 bank NO.1
		readers: {lxx_stencil_op_hcompute_lgxx_stencil_1_37}
Shift Register Output: 
	memtiles IO:: 
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_37, delay = 128
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_40, delay = 64
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_42, delay = 0
	register IO:: 
		 lxx_stencil_op_hcompute_lgxx_stencil_1_42->lxx_stencil_op_hcompute_lgxx_stencil_1_43, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_43->lxx_stencil_op_hcompute_lgxx_stencil_1_41, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_40->lxx_stencil_op_hcompute_lgxx_stencil_1_39, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_39->lxx_stencil_op_hcompute_lgxx_stencil_1_38, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_37->lxx_stencil_op_hcompute_lgxx_stencil_1_36, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_36->lxx_stencil_op_hcompute_lgxx_stencil_1_35, delay = 1

CGPL level :0
impl inputs: {lxx_stencil_op_hcompute_lxx_stencil_7}
impl outpts: {lxx_stencil_op_hcompute_lgxx_stencil_1_40}
rddom: { lxx_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
ls = { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] }
v = 0
Bank writers: 
	 bank NO.0
		writers: {lxx_stencil_op_hcompute_lxx_stencil_7}
	 bank NO.1
		writers: {lxx_stencil_op_hcompute_lxx_stencil_7}
Bank readers: 
	 bank NO.0
		readers: {lxx_stencil_op_hcompute_lgxx_stencil_1_40}
	 bank NO.1
		readers: {lxx_stencil_op_hcompute_lgxx_stencil_1_37}
Shift Register Output: 
	memtiles IO:: 
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_37, delay = 128
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_40, delay = 64
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_42, delay = 0
	register IO:: 
		 lxx_stencil_op_hcompute_lgxx_stencil_1_42->lxx_stencil_op_hcompute_lgxx_stencil_1_43, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_43->lxx_stencil_op_hcompute_lgxx_stencil_1_41, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_40->lxx_stencil_op_hcompute_lgxx_stencil_1_39, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_39->lxx_stencil_op_hcompute_lgxx_stencil_1_38, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_37->lxx_stencil_op_hcompute_lgxx_stencil_1_36, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_36->lxx_stencil_op_hcompute_lgxx_stencil_1_35, delay = 1

--- lxx_stencil_BANK_0
	---- 1 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7
			dom : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_0[0, 0] }
			max location: { lxx_stencil_BANK_0[61, 61] }

	---- 1 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_40
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] -> [194 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_0[0, 0] }
			max location: { lxx_stencil_BANK_0[61, 61] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_40

Stride inner most:  1
{lxx_stencil[d0, d1] -> lxx_stencil[floor((1*d1 + 64*d0)/1)] }
reduce map: { lxx_stencil_BANK_0[d0, d1] -> lxx_stencil_BANK_0[64d0 + d1] }
linear map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
linear map: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
after ubuffer regen: --- lxx_stencil_BANK_0
	---- 1 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7
			dom : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_0[0] }
			max location: { lxx_stencil_BANK_0[3965] }

	---- 1 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_40
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] -> [194 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_0[0] }
			max location: { lxx_stencil_BANK_0[3965] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_40

addr need tight: {}
before dim id set :{ op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
After dim id set: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
before dim id set :{ op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
After dim id set: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] -> [194 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] -> [194 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }

	UBuffer after address tighten--- lxx_stencil_BANK_0
	---- 1 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7
			dom : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_0[0] }
			max location: { lxx_stencil_BANK_0[3965] }

	---- 1 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_40
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] -> [194 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_0[0] }
			max location: { lxx_stencil_BANK_0[3965] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_40

getting rddom
rddom = { lxx_stencil_BANK_0[i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
Vectorization buffer capacity: 3966

	UBuffer after cgpl optimization--- lxx_stencil_BANK_0
	---- 1 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7
			dom : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_0[0] }
			max location: { lxx_stencil_BANK_0[3965] }

	---- 1 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_40
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] -> [194 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_0[0] }
			max location: { lxx_stencil_BANK_0[3965] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_40

find bd for op :op_hcompute_lxx_stencil
	find candidate: lxx_stencil_op_hcompute_lxx_stencil_7_write
find bd for op :op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64
	find candidate: lxx_stencil_op_hcompute_lgxx_stencil_1_40_read
	aff : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root, lxx_s0_y, lxx_s0_x] -> [(64lxx_s0_y + lxx_s0_x)] }
	div dim: 0
getting rddom
rddom = { lxx_stencil_BANK_0[i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
vectorization buffer capacity: 3966
vectorization buf name: lxx_stencil_BANK_0
	 original range input access map: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
	 dim id: 2
Ext by dim: {3966}
  buffer_vectorization Vectorizing: lxx_stencil_BANK_0
   On addr dim: 0, fetch_width: 4
--- lxx_stencil_BANK_0
	---- 1 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7
			dom : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_0[0] }
			max location: { lxx_stencil_BANK_0[3965] }

	---- 1 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_40
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] -> [194 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_0[0] }
			max location: { lxx_stencil_BANK_0[3965] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_40

in bundle  = 1
out bundle = 1
Vectorize input port bundle: lxx_stencil_op_hcompute_lxx_stencil_7_write
	vectorize input port: lxx_stencil_op_hcompute_lxx_stencil_7
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 62, 62, ]
	---- Out range: [3844, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

origin: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }, transform: { lxx_stencil_BANK_0[d0] -> lxx_stencil_BANK_0_0_agg[d0] }
access map : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_lxx_stencil[i0, i1, i2] -> op_hcompute_lxx_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_lxx_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_lxx_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
	sched after trans: { op_hcompute_lxx_stencil[i0 = 0, i1, i2] -> [130 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_lxx_stencil[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Autogen slice:{ lxx_stencil_BANK_0[i0] -> lxx_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
trans max: 991 , origin max: 991
agg2sram sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0_0_agg[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
After dim id set: { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0_0_agg[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
before dim id set :{ op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
After dim id set: { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
AGG : --- lxx_stencil_BANK_0_0_agg
	---- 1 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7_in
			dom : { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0_0_agg[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_0_0_agg[0] }
			max location: { lxx_stencil_BANK_0_0_agg[3965] }

	---- 4 out ports:
		lxx_stencil_op_hcompute_lxx_stencil_7_out_0
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_0_agg[0] }
			max location: { lxx_stencil_BANK_0_0_agg[3964] }

		lxx_stencil_op_hcompute_lxx_stencil_7_out_1
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_0_agg[1] }
			max location: { lxx_stencil_BANK_0_0_agg[3965] }

		lxx_stencil_op_hcompute_lxx_stencil_7_out_2
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_0_agg[2] }
			max location: { lxx_stencil_BANK_0_0_agg[3966] }

		lxx_stencil_op_hcompute_lxx_stencil_7_out_3
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_0_agg[3] }
			max location: { lxx_stencil_BANK_0_0_agg[3967] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write_agg_in
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7_in
	---- Output Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write_agg_out
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7_out_0
			lxx_stencil_op_hcompute_lxx_stencil_7_out_1
			lxx_stencil_op_hcompute_lxx_stencil_7_out_2
			lxx_stencil_op_hcompute_lxx_stencil_7_out_3

AGG Schedule: { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Vectorize output port bundle: lxx_stencil_op_hcompute_lgxx_stencil_1_40_read
	Vectorize output port: lxx_stencil_op_hcompute_lgxx_stencil_1_40
Autogen slice:{ lxx_stencil_BANK_0[i0] -> lxx_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
Range slice: { lxx_stencil_BANK_0[i0] -> lxx_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
after slice{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root, lxx_s0_y, lxx_s0_x] -> [(16lxx_s0_y + floor((lxx_s0_x)/4))] }
	aff : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root, lxx_s0_y, lxx_s0_x] -> [(16lxx_s0_y + floor((lxx_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root, lxx_s0_y, lxx_s0_x] -> [(lxx_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 2 denom: 4
	Trans str{op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[d0, d1, d2]->op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[d0, d1, floor(d2/4), d2%4]}
{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[d0, d1, d2] -> op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[d0, d1, o2, o3] : (-d2 + o3) mod 4 = 0 and -3 + d2 <= 4o2 <= d2 and 0 <= o3 <= 3 }
access map : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[0, i1, i2, i3] -> lxx_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Preliminary vectorization dim: 2
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
after removal: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
new: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[0, i1, i2, i3] -> lxx_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
remove: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[0, i1, i2, i3] -> lxx_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
access map : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[0, i1, i2, i3] -> lxx_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Vectorization dimension: 2
	aff : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
	div dim: 0
rem: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[0, i1, i2, i3] -> lxx_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
new: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[0, i1, i2, i3] -> lxx_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
base_str : {op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[i0=0, i1=0, i2=0, i3]}
base_str : {op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[i0=0, i1=0, i2=0, i3]}
	new: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[i0 = 0, i1 = 0, i2 = 0, i3] }
	rem: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[i0 = 0, i1 = 0, i2 = 0, i3] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[i0, i1, i2, i3 = 0] }
sched domain: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[i0, i1, i2, i3 = 0] }
remove dimension: {3}
before:{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[0, i1, i2, i3] -> lxx_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
after:{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[0, i1, i2, 0] -> lxx_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
remove dimension: {3}
sched before projection: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[0, i1, i2] -> [194 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[0, i1, i2] -> lxx_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[0, i1, i2] -> lxx_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vectorization dimension after irrelevant dimension removal: 2
sched before adjust: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[0, i1, i2] -> [194 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[0, i1, i2] -> [194 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
final schedule: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
final access: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[0, i1, i2] -> lxx_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 62, 62, ]
	---- Out range: [3844, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

Autogen slice:{ lxx_stencil_BANK_0[i0] -> lxx_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root, lxx_s0_y, lxx_s0_x] -> [(16lxx_s0_y + floor((lxx_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root, lxx_s0_y, lxx_s0_x] -> [(lxx_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[0, i1, i2] -> lxx_stencil_BANK_0[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2]
domain: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[64i1 + 4i2] }
	 rewrite access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[0, i1, i2] -> lxx_stencil_BANK_0[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+1]
domain: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[0, i1, i2] -> lxx_stencil_BANK_0[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+2]
domain: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[0, i1, i2] -> lxx_stencil_BANK_0[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+3]
domain: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] }
	Add TB output port: lxx_stencil_op_hcompute_lgxx_stencil_1_40
Autogen slice:{ lxx_stencil_BANK_0[i0] -> lxx_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root, lxx_s0_y, lxx_s0_x] -> [(16lxx_s0_y + floor((lxx_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root, lxx_s0_y, lxx_s0_x] -> [(lxx_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
access map expr:[64*i1+i2]
domain: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, i1, i2] -> lxx_stencil_BANK_0[64i1 + i2] }
tb output access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, i1, i2] -> lxx_stencil_BANK_0[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
	Access map decouple reuse: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_0[root = 0, lxx_s0_y, lxx_s0_x] -> [194 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_0[root = 0, lxx_s0_y, lxx_s0_x] -> [194 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
TB  : --- lxx_stencil_BANK_0_0_tb
	---- 4 in ports
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_0
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_0_tb[0] }
			max location: { lxx_stencil_BANK_0_0_tb[3964] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_1
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_0_tb[1] }
			max location: { lxx_stencil_BANK_0_0_tb[3965] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_2
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_0_tb[2] }
			max location: { lxx_stencil_BANK_0_0_tb[3966] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_3
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_0_tb[3] }
			max location: { lxx_stencil_BANK_0_0_tb[3967] }

	---- 1 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_0[root = 0, lxx_s0_y, lxx_s0_x] -> [194 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_0_0_tb[0] }
			max location: { lxx_stencil_BANK_0_0_tb[3965] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_read_tb_in
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_0
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_1
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_2
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_3
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_read_tb_out
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out

TB Schedule: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15; op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_0[root = 0, lxx_s0_y, lxx_s0_x] -> [194 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[0, i1, i2] -> lxx_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[0, i1, i2] -> lxx_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[0, i1, i2] -> lxx_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[0, i1, i2] -> lxx_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
SRAM: --- lxx_stencil_BANK_0_sram
	---- 4 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7_in_0
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[0] }
			max location: { lxx_stencil_BANK_0_sram[3964] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_1
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[1] }
			max location: { lxx_stencil_BANK_0_sram[3965] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_2
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[2] }
			max location: { lxx_stencil_BANK_0_sram[3966] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_3
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[3] }
			max location: { lxx_stencil_BANK_0_sram[3967] }

	---- 4 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_0
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[0] }
			max location: { lxx_stencil_BANK_0_sram[3964] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_1
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[1] }
			max location: { lxx_stencil_BANK_0_sram[3965] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_2
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[2] }
			max location: { lxx_stencil_BANK_0_sram[3966] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_3
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[3] }
			max location: { lxx_stencil_BANK_0_sram[3967] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7_in_0
			lxx_stencil_op_hcompute_lxx_stencil_7_in_1
			lxx_stencil_op_hcompute_lxx_stencil_7_in_2
			lxx_stencil_op_hcompute_lxx_stencil_7_in_3
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_0
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_1
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_2
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_3

SRAM Schedule: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15; op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
after vectorization codegen: lxx_stencil_BANK_0_0_agg
--- lxx_stencil_BANK_0_0_agg
	---- 1 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7_in
			dom : { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_0_0_agg[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_0_0_agg[0] }
			max location: { lxx_stencil_BANK_0_0_agg[3965] }

	---- 4 out ports:
		lxx_stencil_op_hcompute_lxx_stencil_7_out_0
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_0_agg[0] }
			max location: { lxx_stencil_BANK_0_0_agg[3964] }

		lxx_stencil_op_hcompute_lxx_stencil_7_out_1
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_0_agg[1] }
			max location: { lxx_stencil_BANK_0_0_agg[3965] }

		lxx_stencil_op_hcompute_lxx_stencil_7_out_2
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_0_agg[2] }
			max location: { lxx_stencil_BANK_0_0_agg[3966] }

		lxx_stencil_op_hcompute_lxx_stencil_7_out_3
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_0_agg[3] }
			max location: { lxx_stencil_BANK_0_0_agg[3967] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write_agg_in
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7_in
	---- Output Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write_agg_out
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7_out_0
			lxx_stencil_op_hcompute_lxx_stencil_7_out_1
			lxx_stencil_op_hcompute_lxx_stencil_7_out_2
			lxx_stencil_op_hcompute_lxx_stencil_7_out_3

after vectorization codegen: lxx_stencil_BANK_0_0_tb
--- lxx_stencil_BANK_0_0_tb
	---- 4 in ports
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_0
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_0_tb[0] }
			max location: { lxx_stencil_BANK_0_0_tb[3964] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_1
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_0_tb[1] }
			max location: { lxx_stencil_BANK_0_0_tb[3965] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_2
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_0_tb[2] }
			max location: { lxx_stencil_BANK_0_0_tb[3966] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_3
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_0_tb[3] }
			max location: { lxx_stencil_BANK_0_0_tb[3967] }

	---- 1 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> lxx_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_0[root = 0, lxx_s0_y, lxx_s0_x] -> [194 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_0_0_tb[0] }
			max location: { lxx_stencil_BANK_0_0_tb[3965] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_read_tb_in
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_0
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_1
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_2
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_3
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_read_tb_out
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out

after vectorization codegen: lxx_stencil_BANK_0_sram
--- lxx_stencil_BANK_0_sram
	---- 4 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7_in_0
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[0] }
			max location: { lxx_stencil_BANK_0_sram[3964] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_1
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[1] }
			max location: { lxx_stencil_BANK_0_sram[3965] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_2
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[2] }
			max location: { lxx_stencil_BANK_0_sram[3966] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_3
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[3] }
			max location: { lxx_stencil_BANK_0_sram[3967] }

	---- 4 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_0
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[0] }
			max location: { lxx_stencil_BANK_0_sram[3964] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_1
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[1] }
			max location: { lxx_stencil_BANK_0_sram[3965] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_2
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[2] }
			max location: { lxx_stencil_BANK_0_sram[3966] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_3
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[3] }
			max location: { lxx_stencil_BANK_0_sram[3967] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7_in_0
			lxx_stencil_op_hcompute_lxx_stencil_7_in_1
			lxx_stencil_op_hcompute_lxx_stencil_7_in_2
			lxx_stencil_op_hcompute_lxx_stencil_7_in_3
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_0
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_1
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_2
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_3

CGPL level :0
impl inputs: {lxx_stencil_op_hcompute_lxx_stencil_7}
impl outpts: {lxx_stencil_op_hcompute_lgxx_stencil_1_37}
rddom: { lxx_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
ls = { op_hcompute_lxx_stencil[root, lxx_s0_y, lxx_s0_x] }
v = 0
Bank writers: 
	 bank NO.0
		writers: {lxx_stencil_op_hcompute_lxx_stencil_7}
	 bank NO.1
		writers: {lxx_stencil_op_hcompute_lxx_stencil_7}
Bank readers: 
	 bank NO.0
		readers: {lxx_stencil_op_hcompute_lgxx_stencil_1_40}
	 bank NO.1
		readers: {lxx_stencil_op_hcompute_lgxx_stencil_1_37}
Shift Register Output: 
	memtiles IO:: 
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_37, delay = 128
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_40, delay = 64
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_42, delay = 0
	register IO:: 
		 lxx_stencil_op_hcompute_lgxx_stencil_1_42->lxx_stencil_op_hcompute_lgxx_stencil_1_43, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_43->lxx_stencil_op_hcompute_lgxx_stencil_1_41, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_40->lxx_stencil_op_hcompute_lgxx_stencil_1_39, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_39->lxx_stencil_op_hcompute_lgxx_stencil_1_38, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_37->lxx_stencil_op_hcompute_lgxx_stencil_1_36, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_36->lxx_stencil_op_hcompute_lgxx_stencil_1_35, delay = 1

--- lxx_stencil_BANK_1
	---- 1 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7
			dom : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_1[0, 0] }
			max location: { lxx_stencil_BANK_1[61, 61] }

	---- 1 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_37
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] -> [258 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_1[0, 0] }
			max location: { lxx_stencil_BANK_1[61, 61] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_37

Stride inner most:  1
{lxx_stencil[d0, d1] -> lxx_stencil[floor((1*d1 + 64*d0)/1)] }
reduce map: { lxx_stencil_BANK_1[d0, d1] -> lxx_stencil_BANK_1[64d0 + d1] }
linear map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
linear map: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
after ubuffer regen: --- lxx_stencil_BANK_1
	---- 1 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7
			dom : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_1[0] }
			max location: { lxx_stencil_BANK_1[3965] }

	---- 1 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_37
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] -> [258 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_1[0] }
			max location: { lxx_stencil_BANK_1[3965] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_37

addr need tight: {}
before dim id set :{ op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
After dim id set: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
before dim id set :{ op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
After dim id set: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] -> [258 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] -> [258 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }

	UBuffer after address tighten--- lxx_stencil_BANK_1
	---- 1 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7
			dom : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_1[0] }
			max location: { lxx_stencil_BANK_1[3965] }

	---- 1 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_37
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] -> [258 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_1[0] }
			max location: { lxx_stencil_BANK_1[3965] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_37

getting rddom
rddom = { lxx_stencil_BANK_1[i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
Vectorization buffer capacity: 3966

	UBuffer after cgpl optimization--- lxx_stencil_BANK_1
	---- 1 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7
			dom : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_1[0] }
			max location: { lxx_stencil_BANK_1[3965] }

	---- 1 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_37
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] -> [258 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_1[0] }
			max location: { lxx_stencil_BANK_1[3965] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_37

find bd for op :op_hcompute_lxx_stencil
	find candidate: lxx_stencil_op_hcompute_lxx_stencil_7_write
find bd for op :op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128
	find candidate: lxx_stencil_op_hcompute_lgxx_stencil_1_37_read
	aff : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root, lxx_s0_y, lxx_s0_x] -> [(64lxx_s0_y + lxx_s0_x)] }
	div dim: 0
getting rddom
rddom = { lxx_stencil_BANK_1[i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
vectorization buffer capacity: 3966
vectorization buf name: lxx_stencil_BANK_1
	 original range input access map: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
	 dim id: 2
Ext by dim: {3966}
  buffer_vectorization Vectorizing: lxx_stencil_BANK_1
   On addr dim: 0, fetch_width: 4
--- lxx_stencil_BANK_1
	---- 1 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7
			dom : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_1[0] }
			max location: { lxx_stencil_BANK_1[3965] }

	---- 1 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_37
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] -> [258 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_1[0] }
			max location: { lxx_stencil_BANK_1[3965] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_37

in bundle  = 1
out bundle = 1
Vectorize input port bundle: lxx_stencil_op_hcompute_lxx_stencil_7_write
	vectorize input port: lxx_stencil_op_hcompute_lxx_stencil_7
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 62, 62, ]
	---- Out range: [3844, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

origin: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }, transform: { lxx_stencil_BANK_1[d0] -> lxx_stencil_BANK_1_0_agg[d0] }
access map : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_lxx_stencil[i0, i1, i2] -> op_hcompute_lxx_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_lxx_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_lxx_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
	sched after trans: { op_hcompute_lxx_stencil[i0 = 0, i1, i2] -> [130 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_lxx_stencil[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Autogen slice:{ lxx_stencil_BANK_1[i0] -> lxx_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
trans max: 991 , origin max: 991
agg2sram sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1_0_agg[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
After dim id set: { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1_0_agg[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
before dim id set :{ op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
After dim id set: { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
AGG : --- lxx_stencil_BANK_1_0_agg
	---- 1 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7_in
			dom : { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1_0_agg[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_1_0_agg[0] }
			max location: { lxx_stencil_BANK_1_0_agg[3965] }

	---- 4 out ports:
		lxx_stencil_op_hcompute_lxx_stencil_7_out_0
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_0_agg[0] }
			max location: { lxx_stencil_BANK_1_0_agg[3964] }

		lxx_stencil_op_hcompute_lxx_stencil_7_out_1
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_0_agg[1] }
			max location: { lxx_stencil_BANK_1_0_agg[3965] }

		lxx_stencil_op_hcompute_lxx_stencil_7_out_2
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_0_agg[2] }
			max location: { lxx_stencil_BANK_1_0_agg[3966] }

		lxx_stencil_op_hcompute_lxx_stencil_7_out_3
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_0_agg[3] }
			max location: { lxx_stencil_BANK_1_0_agg[3967] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write_agg_in
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7_in
	---- Output Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write_agg_out
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7_out_0
			lxx_stencil_op_hcompute_lxx_stencil_7_out_1
			lxx_stencil_op_hcompute_lxx_stencil_7_out_2
			lxx_stencil_op_hcompute_lxx_stencil_7_out_3

AGG Schedule: { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61; op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Vectorize output port bundle: lxx_stencil_op_hcompute_lgxx_stencil_1_37_read
	Vectorize output port: lxx_stencil_op_hcompute_lgxx_stencil_1_37
Autogen slice:{ lxx_stencil_BANK_1[i0] -> lxx_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
Range slice: { lxx_stencil_BANK_1[i0] -> lxx_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
after slice{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root, lxx_s0_y, lxx_s0_x] -> [(16lxx_s0_y + floor((lxx_s0_x)/4))] }
	aff : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root, lxx_s0_y, lxx_s0_x] -> [(16lxx_s0_y + floor((lxx_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root, lxx_s0_y, lxx_s0_x] -> [(lxx_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 2 denom: 4
	Trans str{op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[d0, d1, d2]->op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[d0, d1, floor(d2/4), d2%4]}
{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[d0, d1, d2] -> op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[d0, d1, o2, o3] : (-d2 + o3) mod 4 = 0 and -3 + d2 <= 4o2 <= d2 and 0 <= o3 <= 3 }
access map : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[0, i1, i2, i3] -> lxx_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Preliminary vectorization dim: 2
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[i0, i1, i2, i3] -> [(16i1 + i2)] }
after removal: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[i0, i1, i2, i3] -> [(16i1 + i2)] }
new: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[0, i1, i2, i3] -> lxx_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
remove: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[0, i1, i2, i3] -> lxx_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
access map : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[0, i1, i2, i3] -> lxx_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Vectorization dimension: 2
	aff : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[i0, i1, i2, i3] -> [(16i1 + i2)] }
	div dim: 0
rem: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[0, i1, i2, i3] -> lxx_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
new: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[0, i1, i2, i3] -> lxx_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
base_str : {op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[i0=0, i1=0, i2=0, i3]}
base_str : {op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[i0=0, i1=0, i2=0, i3]}
	new: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[i0 = 0, i1 = 0, i2 = 0, i3] }
	rem: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[i0 = 0, i1 = 0, i2 = 0, i3] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[i0, i1, i2, i3 = 0] }
sched domain: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[i0, i1, i2, i3 = 0] }
remove dimension: {3}
before:{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[0, i1, i2, i3] -> lxx_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
after:{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[0, i1, i2, 0] -> lxx_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
remove dimension: {3}
sched before projection: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[0, i1, i2] -> [258 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[0, i1, i2] -> lxx_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[0, i1, i2] -> lxx_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vectorization dimension after irrelevant dimension removal: 2
sched before adjust: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[0, i1, i2] -> [258 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[0, i1, i2] -> [258 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
final schedule: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
final access: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[0, i1, i2] -> lxx_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 62, 62, ]
	---- Out range: [3844, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

Autogen slice:{ lxx_stencil_BANK_1[i0] -> lxx_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root, lxx_s0_y, lxx_s0_x] -> [(16lxx_s0_y + floor((lxx_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root, lxx_s0_y, lxx_s0_x] -> [(lxx_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[0, i1, i2] -> lxx_stencil_BANK_1[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2]
domain: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[64i1 + 4i2] }
	 rewrite access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[0, i1, i2] -> lxx_stencil_BANK_1[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+1]
domain: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[0, i1, i2] -> lxx_stencil_BANK_1[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+2]
domain: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[0, i1, i2] -> lxx_stencil_BANK_1[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+3]
domain: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] }
	Add TB output port: lxx_stencil_op_hcompute_lgxx_stencil_1_37
Autogen slice:{ lxx_stencil_BANK_1[i0] -> lxx_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root, lxx_s0_y, lxx_s0_x] -> [(16lxx_s0_y + floor((lxx_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root, lxx_s0_y, lxx_s0_x] -> [(lxx_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
access map expr:[64*i1+i2]
domain: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, i1, i2] -> lxx_stencil_BANK_1[64i1 + i2] }
tb output access map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, i1, i2] -> lxx_stencil_BANK_1[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
	Access map decouple reuse: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0[root = 0, lxx_s0_y, lxx_s0_x] -> [258 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0[root = 0, lxx_s0_y, lxx_s0_x] -> [258 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
TB  : --- lxx_stencil_BANK_1_0_tb
	---- 4 in ports
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_0
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_0_tb[0] }
			max location: { lxx_stencil_BANK_1_0_tb[3964] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_1
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_0_tb[1] }
			max location: { lxx_stencil_BANK_1_0_tb[3965] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_2
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_0_tb[2] }
			max location: { lxx_stencil_BANK_1_0_tb[3966] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_3
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_0_tb[3] }
			max location: { lxx_stencil_BANK_1_0_tb[3967] }

	---- 1 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0[root = 0, lxx_s0_y, lxx_s0_x] -> [258 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_1_0_tb[0] }
			max location: { lxx_stencil_BANK_1_0_tb[3965] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_read_tb_in
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_0
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_1
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_2
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_3
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_read_tb_out
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out

TB Schedule: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15; op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0[root = 0, lxx_s0_y, lxx_s0_x] -> [258 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[0, i1, i2] -> lxx_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[0, i1, i2] -> lxx_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[0, i1, i2] -> lxx_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[0, i1, i2] -> lxx_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
SRAM: --- lxx_stencil_BANK_1_sram
	---- 4 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7_in_0
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[0] }
			max location: { lxx_stencil_BANK_1_sram[3964] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_1
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[1] }
			max location: { lxx_stencil_BANK_1_sram[3965] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_2
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[2] }
			max location: { lxx_stencil_BANK_1_sram[3966] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_3
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[3] }
			max location: { lxx_stencil_BANK_1_sram[3967] }

	---- 4 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_0
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[0] }
			max location: { lxx_stencil_BANK_1_sram[3964] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_1
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[1] }
			max location: { lxx_stencil_BANK_1_sram[3965] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_2
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[2] }
			max location: { lxx_stencil_BANK_1_sram[3966] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_3
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[3] }
			max location: { lxx_stencil_BANK_1_sram[3967] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7_in_0
			lxx_stencil_op_hcompute_lxx_stencil_7_in_1
			lxx_stencil_op_hcompute_lxx_stencil_7_in_2
			lxx_stencil_op_hcompute_lxx_stencil_7_in_3
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_0
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_1
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_2
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_3

SRAM Schedule: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15; op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
after vectorization codegen: lxx_stencil_BANK_1_0_agg
--- lxx_stencil_BANK_1_0_agg
	---- 1 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7_in
			dom : { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_BANK_1_0_agg[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_1_0_agg[0] }
			max location: { lxx_stencil_BANK_1_0_agg[3965] }

	---- 4 out ports:
		lxx_stencil_op_hcompute_lxx_stencil_7_out_0
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_0_agg[0] }
			max location: { lxx_stencil_BANK_1_0_agg[3964] }

		lxx_stencil_op_hcompute_lxx_stencil_7_out_1
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_0_agg[1] }
			max location: { lxx_stencil_BANK_1_0_agg[3965] }

		lxx_stencil_op_hcompute_lxx_stencil_7_out_2
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_0_agg[2] }
			max location: { lxx_stencil_BANK_1_0_agg[3966] }

		lxx_stencil_op_hcompute_lxx_stencil_7_out_3
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_0_agg[3] }
			max location: { lxx_stencil_BANK_1_0_agg[3967] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write_agg_in
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7_in
	---- Output Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write_agg_out
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7_out_0
			lxx_stencil_op_hcompute_lxx_stencil_7_out_1
			lxx_stencil_op_hcompute_lxx_stencil_7_out_2
			lxx_stencil_op_hcompute_lxx_stencil_7_out_3

after vectorization codegen: lxx_stencil_BANK_1_0_tb
--- lxx_stencil_BANK_1_0_tb
	---- 4 in ports
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_0
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_0_tb[0] }
			max location: { lxx_stencil_BANK_1_0_tb[3964] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_1
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_0_tb[1] }
			max location: { lxx_stencil_BANK_1_0_tb[3965] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_2
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_0_tb[2] }
			max location: { lxx_stencil_BANK_1_0_tb[3966] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_3
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_0_tb[3] }
			max location: { lxx_stencil_BANK_1_0_tb[3967] }

	---- 1 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lxx_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0[root = 0, lxx_s0_y, lxx_s0_x] -> [258 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_BANK_1_0_tb[0] }
			max location: { lxx_stencil_BANK_1_0_tb[3965] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_read_tb_in
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_0
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_1
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_2
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_3
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_read_tb_out
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out

after vectorization codegen: lxx_stencil_BANK_1_sram
--- lxx_stencil_BANK_1_sram
	---- 4 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7_in_0
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[0] }
			max location: { lxx_stencil_BANK_1_sram[3964] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_1
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[1] }
			max location: { lxx_stencil_BANK_1_sram[3965] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_2
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[2] }
			max location: { lxx_stencil_BANK_1_sram[3966] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_3
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[3] }
			max location: { lxx_stencil_BANK_1_sram[3967] }

	---- 4 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_0
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[0] }
			max location: { lxx_stencil_BANK_1_sram[3964] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_1
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[1] }
			max location: { lxx_stencil_BANK_1_sram[3965] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_2
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[2] }
			max location: { lxx_stencil_BANK_1_sram[3966] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_3
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[3] }
			max location: { lxx_stencil_BANK_1_sram[3967] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7_in_0
			lxx_stencil_op_hcompute_lxx_stencil_7_in_1
			lxx_stencil_op_hcompute_lxx_stencil_7_in_2
			lxx_stencil_op_hcompute_lxx_stencil_7_in_3
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_0
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_1
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_2
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_3

bank id: 0
rd dom: { lxx_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
	rel map: {0, 1, 1}
	rel dim: 2
	rel dim stride: 4
out_fetch_ii: 4
bank id: 1
rd dom: { lxx_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
	rel map: {0, 1, 1}
	rel dim: 2
	rel dim stride: 4
out_fetch_ii: 4
bank id: 0, to be merged: {0, 1}
	Group: 0: {0, 1}
	Perform bank merging!
	subcomponent keys:lxx_stencil_BANK_1_0_agg
	subcomponent keys:lxx_stencil_BANK_1_0_tb
	subcomponent keys:lxx_stencil_BANK_1_sram
--- lxx_stencil_BANK_1_sram
	---- 4 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7_in_0
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[0] }
			max location: { lxx_stencil_BANK_1_sram[3964] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_1
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[1] }
			max location: { lxx_stencil_BANK_1_sram[3965] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_2
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[2] }
			max location: { lxx_stencil_BANK_1_sram[3966] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_3
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[3] }
			max location: { lxx_stencil_BANK_1_sram[3967] }

	---- 4 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_0
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[0] }
			max location: { lxx_stencil_BANK_1_sram[3964] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_1
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[1] }
			max location: { lxx_stencil_BANK_1_sram[3965] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_2
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[2] }
			max location: { lxx_stencil_BANK_1_sram[3966] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_3
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_1_sram[3] }
			max location: { lxx_stencil_BANK_1_sram[3967] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7_in_0
			lxx_stencil_op_hcompute_lxx_stencil_7_in_1
			lxx_stencil_op_hcompute_lxx_stencil_7_in_2
			lxx_stencil_op_hcompute_lxx_stencil_7_in_3
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_0
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_1
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_2
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_3

	subcomponent keys:lxx_stencil_BANK_0_0_agg
	subcomponent keys:lxx_stencil_BANK_0_0_tb
	subcomponent keys:lxx_stencil_BANK_0_sram
--- lxx_stencil_BANK_0_sram
	---- 4 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7_in_0
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[0] }
			max location: { lxx_stencil_BANK_0_sram[3964] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_1
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[1] }
			max location: { lxx_stencil_BANK_0_sram[3965] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_2
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[2] }
			max location: { lxx_stencil_BANK_0_sram[3966] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_3
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[3] }
			max location: { lxx_stencil_BANK_0_sram[3967] }

	---- 4 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_0
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[0] }
			max location: { lxx_stencil_BANK_0_sram[3964] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_1
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[1] }
			max location: { lxx_stencil_BANK_0_sram[3965] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_2
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[2] }
			max location: { lxx_stencil_BANK_0_sram[3966] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_3
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_BANK_0_sram[3] }
			max location: { lxx_stencil_BANK_0_sram[3967] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7_in_0
			lxx_stencil_op_hcompute_lxx_stencil_7_in_1
			lxx_stencil_op_hcompute_lxx_stencil_7_in_2
			lxx_stencil_op_hcompute_lxx_stencil_7_in_3
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_0
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_1
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_2
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_3

new banks id: 2
get SRAM port schedule: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
get SRAM port schedule: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
get SRAM port schedule: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
	 output sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
	adjust temp sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
--- lxx_stencil_bank_2_sram
	---- 4 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7_in_0
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_sram[0] }
			max location: { lxx_stencil_bank_2_sram[3964] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_1
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_bank_2_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_sram[1] }
			max location: { lxx_stencil_bank_2_sram[3965] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_2
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_bank_2_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_sram[2] }
			max location: { lxx_stencil_bank_2_sram[3966] }

		lxx_stencil_op_hcompute_lxx_stencil_7_in_3
			dom : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_bank_2_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_sram[3] }
			max location: { lxx_stencil_bank_2_sram[3967] }

	---- 8 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_0
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_sram[0] }
			max location: { lxx_stencil_bank_2_sram[3964] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_1
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_bank_2_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_sram[1] }
			max location: { lxx_stencil_bank_2_sram[3965] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_2
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_bank_2_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_sram[2] }
			max location: { lxx_stencil_bank_2_sram[3966] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_3
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_bank_2_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_sram[3] }
			max location: { lxx_stencil_bank_2_sram[3967] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_0
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> lxx_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_sram[0] }
			max location: { lxx_stencil_bank_2_sram[3964] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_1
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> lxx_stencil_bank_2_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_sram[1] }
			max location: { lxx_stencil_bank_2_sram[3965] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_2
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> lxx_stencil_bank_2_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_sram[2] }
			max location: { lxx_stencil_bank_2_sram[3966] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_3
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> lxx_stencil_bank_2_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_sram[3] }
			max location: { lxx_stencil_bank_2_sram[3967] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7_in_0
			lxx_stencil_op_hcompute_lxx_stencil_7_in_1
			lxx_stencil_op_hcompute_lxx_stencil_7_in_2
			lxx_stencil_op_hcompute_lxx_stencil_7_in_3
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_0
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_1
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_2
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_3
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_0
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_1
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_2
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_3

--- lxx_stencil_bank_2
	---- 1 in ports
		lxx_stencil_op_hcompute_lxx_stencil_7
			dom : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_bank_2[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencil[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_bank_2[0] }
			max location: { lxx_stencil_bank_2[3965] }

	---- 2 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_37
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_bank_2[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128[root = 0, lxx_s0_y, lxx_s0_x] -> [258 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_bank_2[0] }
			max location: { lxx_stencil_bank_2[3965] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_bank_2[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64[root = 0, lxx_s0_y, lxx_s0_x] -> [194 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_bank_2[0] }
			max location: { lxx_stencil_bank_2[3965] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lxx_stencil_7_write
		---- Ports...
			lxx_stencil_op_hcompute_lxx_stencil_7
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_37
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_read
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_40

sub component buf: agg
sub component buf: tb
sub component buf: sram
sub component buf: agg
sub component buf: tb
sub component buf: sram
micor buf: --- lxx_stencil_bank_2_0_tb
	---- 4 in ports
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_0
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_0_tb[0] }
			max location: { lxx_stencil_bank_2_0_tb[3964] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_1
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_bank_2_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_0_tb[1] }
			max location: { lxx_stencil_bank_2_0_tb[3965] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_2
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_bank_2_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_0_tb[2] }
			max location: { lxx_stencil_bank_2_0_tb[3966] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_3
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_bank_2_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_0_tb[3] }
			max location: { lxx_stencil_bank_2_0_tb[3967] }

	---- 1 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_out
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lxx_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0[root = 0, lxx_s0_y, lxx_s0_x] -> [258 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_bank_2_0_tb[0] }
			max location: { lxx_stencil_bank_2_0_tb[3965] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_read_tb_in
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_0
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_1
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_2
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out_3
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_37_read_tb_out
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_37_out

micor buf: --- lxx_stencil_bank_2_1_tb
	---- 4 in ports
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_0
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> lxx_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_1_tb[0] }
			max location: { lxx_stencil_bank_2_1_tb[3964] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_1
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> lxx_stencil_bank_2_1_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_1_tb[1] }
			max location: { lxx_stencil_bank_2_1_tb[3965] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_2
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> lxx_stencil_bank_2_1_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_1_tb[2] }
			max location: { lxx_stencil_bank_2_1_tb[3966] }

		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_3
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> lxx_stencil_bank_2_1_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxx_stencil_bank_2_1_tb[3] }
			max location: { lxx_stencil_bank_2_1_tb[3967] }

	---- 1 out ports:
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_out
			dom : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_1[root = 0, i1, i2] -> lxx_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_1[root = 0, lxx_s0_y, lxx_s0_x] -> [194 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
			min location: { lxx_stencil_bank_2_1_tb[0] }
			max location: { lxx_stencil_bank_2_1_tb[3965] }

	---- Input Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_read_tb_in
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_0
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_1
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_2
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out_3
	---- Output Bundles
		lxx_stencil_op_hcompute_lgxx_stencil_1_40_read_tb_out
		---- Ports...
			lxx_stencil_op_hcompute_lgxx_stencil_1_40_out

Bank writers: 
	 bank NO.2
		writers: {lxx_stencil_op_hcompute_lxx_stencil_7}
Bank readers: 
	 bank NO.2
		readers: {lxx_stencil_op_hcompute_lgxx_stencil_1_37, lxx_stencil_op_hcompute_lgxx_stencil_1_40}
Shift Register Output: 
	memtiles IO:: 
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_37, delay = 128
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_40, delay = 64
		 lxx_stencil_op_hcompute_lxx_stencil_7->lxx_stencil_op_hcompute_lgxx_stencil_1_42, delay = 0
	register IO:: 
		 lxx_stencil_op_hcompute_lgxx_stencil_1_42->lxx_stencil_op_hcompute_lgxx_stencil_1_43, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_43->lxx_stencil_op_hcompute_lgxx_stencil_1_41, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_40->lxx_stencil_op_hcompute_lgxx_stencil_1_39, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_39->lxx_stencil_op_hcompute_lgxx_stencil_1_38, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_37->lxx_stencil_op_hcompute_lgxx_stencil_1_36, delay = 1
		 lxx_stencil_op_hcompute_lgxx_stencil_1_36->lxx_stencil_op_hcompute_lgxx_stencil_1_35, delay = 1

add input: lxx_stencil_op_hcompute_lxx_stencil_7 to pt2wire
add output: lxx_stencil_op_hcompute_lgxx_stencil_1_35 to pt2wire
add output: lxx_stencil_op_hcompute_lgxx_stencil_1_36 to pt2wire
add output: lxx_stencil_op_hcompute_lgxx_stencil_1_37 to pt2wire
add output: lxx_stencil_op_hcompute_lgxx_stencil_1_38 to pt2wire
add output: lxx_stencil_op_hcompute_lgxx_stencil_1_39 to pt2wire
add output: lxx_stencil_op_hcompute_lgxx_stencil_1_40 to pt2wire
add output: lxx_stencil_op_hcompute_lgxx_stencil_1_41 to pt2wire
add output: lxx_stencil_op_hcompute_lgxx_stencil_1_42 to pt2wire
add output: lxx_stencil_op_hcompute_lgxx_stencil_1_43 to pt2wire
agg2sram_opt debug start 
sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
write map: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
{ lxx_stencil_bank_2_sram[i0] : -3 <= i0 <= 3967 and (((2 + i0) mod 4 = 0 and -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3964 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
read map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> lxx_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
sched: { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
op_name: op_hcompute_lxx_stencil_agg2sram_0, extent_0: 62, stride_0: 1
sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
write map: { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_bank_2_0_agg[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
{ lxx_stencil_bank_2_0_agg[i0] : -3 <= i0 <= 3967 and ((-2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0) or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3964 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_bank_2_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0[root = 0, lxx_s0_y, lxx_s0_x] -> [258 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
write map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
{ lxx_stencil_bank_2_0_tb[i0] : -3 <= i0 <= 3967 and ((-2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0) or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3964 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lxx_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_1[root = 0, lxx_s0_y, lxx_s0_x] -> [194 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
write map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> lxx_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
{ lxx_stencil_bank_2_1_tb[i0] : -3 <= i0 <= 3967 and ((-2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0) or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3964 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_1[root = 0, i1, i2] -> lxx_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
	op name: op_hcompute_lxx_stencil_agg2sram_0
	Sched: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",134,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
adding new agg2sram opt cfg for: op_hcompute_lxx_stencil_agg2sram_0: mode 0, agg_read_padding 3, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",16,0
"write_data_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_lxx_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxx_stencil_bank_2_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_lxx_stencil_in2agg_0
	Sched: { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> [130 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",130,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_lxx_stencil_in2agg_0[root = 0, lxx_s0_y, lxx_s0_x] -> lxx_stencil_bank_2_0_agg[64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	op name: op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0
	Sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",256,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxx_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxx_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0
	Sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0[root = 0, lxx_s0_y, lxx_s0_x] -> [258 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",258,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lxx_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1
	Sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",191,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> lxx_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> lxx_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_1
	Sched: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_1[root = 0, lxx_s0_y, lxx_s0_x] -> [194 + 64lxx_s0_y + lxx_s0_x] : 0 <= lxx_s0_y <= 61 and 0 <= lxx_s0_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",194,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_lxx_stencilop_hcompute_lxx_stencil_delay_64_tb2out_1[root = 0, i1, i2] -> lxx_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
{"agg2sram_0":{"agg_read_padding":[3],"cycle_starting_addr":[134],"cycle_stride":[4,64],"delay":[0],"dimensionality":2,"extent":[16,62],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[1,0],"write_data_starting_addr":[0],"write_data_stride":[1,16]},"in2agg_0":{"cycle_starting_addr":[130],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_0":{"cycle_starting_addr":[256],"cycle_stride":[4,64],"dimensionality":2,"extent":[16,62],"read_data_starting_addr":[0],"read_data_stride":[1,16],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_1":{"cycle_starting_addr":[191],"cycle_stride":[4,64],"dimensionality":2,"extent":[16,62],"read_data_starting_addr":[0],"read_data_stride":[1,16],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"tb2out_0":{"cycle_starting_addr":[258],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"read_data_starting_addr":[0],"read_data_stride":[1,0]},"tb2out_1":{"cycle_starting_addr":[194],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"read_data_starting_addr":[0],"read_data_stride":[1,0]}}
Add lake node:ub_lxx_stencil_bank_2 with input_num = 1, output_num = 2
Config mode: lake
Generating Verilog Testing Collateral for: ub_lxx_stencil_bank_2
Module: cgralib.Mem_amber(ID:_U7, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'data_out_1':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U7__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs2__use_prebuilt_memTrue__width16
create shift register for --- lxy_stencil
	---- 1 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4
			dom : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil[0, 0] }
			max location: { lxy_stencil[61, 61] }

	---- 9 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_23
			dom : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			acc : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			sched: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			min location: { lxy_stencil[0, 0] }
			max location: { lxy_stencil[59, 59] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_24
			dom : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			acc : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[lgxy_s1_y, 1 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			sched: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			min location: { lxy_stencil[0, 1] }
			max location: { lxy_stencil[59, 60] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25
			dom : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			acc : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[lgxy_s1_y, 2 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			sched: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			min location: { lxy_stencil[0, 2] }
			max location: { lxy_stencil[59, 61] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_26
			dom : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			acc : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			sched: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			min location: { lxy_stencil[1, 0] }
			max location: { lxy_stencil[60, 59] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_27
			dom : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			acc : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, 1 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			sched: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			min location: { lxy_stencil[1, 1] }
			max location: { lxy_stencil[60, 60] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28
			dom : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			acc : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, 2 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			sched: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			min location: { lxy_stencil[1, 2] }
			max location: { lxy_stencil[60, 61] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_29
			dom : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			acc : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			sched: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			min location: { lxy_stencil[2, 0] }
			max location: { lxy_stencil[61, 59] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_30
			dom : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			acc : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, 2 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			sched: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			min location: { lxy_stencil[2, 2] }
			max location: { lxy_stencil[61, 61] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_31
			dom : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			acc : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, 1 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			sched: { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
			min location: { lxy_stencil[2, 1] }
			max location: { lxy_stencil[61, 60] }

	---- Input Bundles
		op_hcompute_lxy_stencil_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4
	---- Output Bundles
		op_hcompute_lgxy_stencil_1_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_23
			lxy_stencil_op_hcompute_lgxy_stencil_1_24
			lxy_stencil_op_hcompute_lgxy_stencil_1_25
			lxy_stencil_op_hcompute_lgxy_stencil_1_26
			lxy_stencil_op_hcompute_lgxy_stencil_1_27
			lxy_stencil_op_hcompute_lgxy_stencil_1_28
			lxy_stencil_op_hcompute_lgxy_stencil_1_29
			lxy_stencil_op_hcompute_lgxy_stencil_1_30
			lxy_stencil_op_hcompute_lgxy_stencil_1_31

==== No reduce ops on this buffer
Writer name: op_hcompute_lxy_stencil
read_op read: {lgxy_stencil_clkwrk_dsa3, lxy_stencil}
read_op write: {lgxy_stencil, }
write_op write: {lgxy_stencil}
write_op read: {grad_x_unclamp_stencil, grad_y_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
reads : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
Time to write: { [i0] -> lxy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lxy_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [130 + i0] : 126 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= -2 + i0 }
DDs          : { [130] }
DD           : 130
writer op    : op_hcompute_lxy_stencil
Writer name: op_hcompute_lxy_stencil
read_op read: {lgxy_stencil_clkwrk_dsa3, lxy_stencil}
read_op write: {lgxy_stencil, }
write_op write: {lgxy_stencil}
write_op read: {grad_x_unclamp_stencil, grad_y_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
reads : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[lgxy_s1_y, 1 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
Time to write: { [i0] -> lxy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lxy_stencil[o0, -259 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [129 + i0] : 127 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -3 + i0 }
DDs          : { [129] }
DD           : 129
writer op    : op_hcompute_lxy_stencil
Writer name: op_hcompute_lxy_stencil
read_op read: {lgxy_stencil_clkwrk_dsa3, lxy_stencil}
read_op write: {lgxy_stencil, }
write_op write: {lgxy_stencil}
write_op read: {grad_x_unclamp_stencil, grad_y_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
reads : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[lgxy_s1_y, 2 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
Time to write: { [i0] -> lxy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lxy_stencil[o0, -258 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [128 + i0] : 128 <= i0 <= 3967 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [128] }
DD           : 128
writer op    : op_hcompute_lxy_stencil
Writer name: op_hcompute_lxy_stencil
read_op read: {lgxy_stencil_clkwrk_dsa3, lxy_stencil}
read_op write: {lgxy_stencil, }
write_op write: {lgxy_stencil}
write_op read: {grad_x_unclamp_stencil, grad_y_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
reads : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
Time to write: { [i0] -> lxy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lxy_stencil[o0, -196 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0 }
PC times     : { [i0] -> [66 + i0] : 190 <= i0 <= 4029 and 64*floor((2 + i0)/64) <= -2 + i0 }
DDs          : { [66] }
DD           : 66
writer op    : op_hcompute_lxy_stencil
Writer name: op_hcompute_lxy_stencil
read_op read: {lgxy_stencil_clkwrk_dsa3, lxy_stencil}
read_op write: {lgxy_stencil, }
write_op write: {lgxy_stencil}
write_op read: {grad_x_unclamp_stencil, grad_y_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
reads : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, 1 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
Time to write: { [i0] -> lxy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lxy_stencil[o0, -195 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0 }
PC times     : { [i0] -> [65 + i0] : 191 <= i0 <= 4030 and 64*floor((1 + i0)/64) <= -3 + i0 }
DDs          : { [65] }
DD           : 65
writer op    : op_hcompute_lxy_stencil
Writer name: op_hcompute_lxy_stencil
read_op read: {lgxy_stencil_clkwrk_dsa3, lxy_stencil}
read_op write: {lgxy_stencil, }
write_op write: {lgxy_stencil}
write_op read: {grad_x_unclamp_stencil, grad_y_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
reads : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[1 + lgxy_s1_y, 2 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
Time to write: { [i0] -> lxy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lxy_stencil[o0, -194 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0 }
PC times     : { [i0] -> [64 + i0] : 192 <= i0 <= 4031 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [64] }
DD           : 64
writer op    : op_hcompute_lxy_stencil
Writer name: op_hcompute_lxy_stencil
read_op read: {lgxy_stencil_clkwrk_dsa3, lxy_stencil}
read_op write: {lgxy_stencil, }
write_op write: {lgxy_stencil}
write_op read: {grad_x_unclamp_stencil, grad_y_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
reads : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
Time to write: { [i0] -> lxy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lxy_stencil[o0, -132 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0 }
PC times     : { [i0] -> [2 + i0] : 254 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= -2 + i0 }
DDs          : { [2] }
DD           : 2
writer op    : op_hcompute_lxy_stencil
Writer name: op_hcompute_lxy_stencil
read_op read: {lgxy_stencil_clkwrk_dsa3, lxy_stencil}
read_op write: {lgxy_stencil, }
write_op write: {lgxy_stencil}
write_op read: {grad_x_unclamp_stencil, grad_y_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
reads : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, 2 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
Time to write: { [i0] -> lxy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lxy_stencil[o0, -130 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_lxy_stencil
Writer name: op_hcompute_lxy_stencil
read_op read: {lgxy_stencil_clkwrk_dsa3, lxy_stencil}
read_op write: {lgxy_stencil, }
write_op write: {lgxy_stencil}
write_op read: {grad_x_unclamp_stencil, grad_y_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
reads : { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> lxy_stencil[2 + lgxy_s1_y, 1 + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgxy_stencil_1[root = 0, lgxy_s1_y, lgxy_s1_x] -> [260 + 64lgxy_s1_y + lgxy_s1_x] : 0 <= lgxy_s1_y <= 59 and 0 <= lgxy_s1_x <= 59 }
  { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
Time to write: { [i0] -> lxy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lxy_stencil[o0, -131 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0 }
PC times     : { [i0] -> [1 + i0] : 255 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -3 + i0 }
DDs          : { [1] }
DD           : 1
writer op    : op_hcompute_lxy_stencil
DG: ...
# nodes: 10
# edges: 9
Group:     lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (130) lxy_stencil_op_hcompute_lgxy_stencil_1_23
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (129) lxy_stencil_op_hcompute_lgxy_stencil_1_24
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (128) lxy_stencil_op_hcompute_lgxy_stencil_1_25
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (66) lxy_stencil_op_hcompute_lgxy_stencil_1_26
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (65) lxy_stencil_op_hcompute_lgxy_stencil_1_27
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (64) lxy_stencil_op_hcompute_lgxy_stencil_1_28
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (2) lxy_stencil_op_hcompute_lgxy_stencil_1_29
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (0) lxy_stencil_op_hcompute_lgxy_stencil_1_30
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (1) lxy_stencil_op_hcompute_lgxy_stencil_1_31
Fanin Group:     lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_23 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_24 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_25 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_26 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_27 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_28 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_29 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_30 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_31 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4

Naive Shift registers...
# nodes: 10
# edges: 9
Group:     lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (130) lxy_stencil_op_hcompute_lgxy_stencil_1_23
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (129) lxy_stencil_op_hcompute_lgxy_stencil_1_24
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (128) lxy_stencil_op_hcompute_lgxy_stencil_1_25
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (66) lxy_stencil_op_hcompute_lgxy_stencil_1_26
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (65) lxy_stencil_op_hcompute_lgxy_stencil_1_27
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (64) lxy_stencil_op_hcompute_lgxy_stencil_1_28
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (2) lxy_stencil_op_hcompute_lgxy_stencil_1_29
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (0) lxy_stencil_op_hcompute_lgxy_stencil_1_30
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (1) lxy_stencil_op_hcompute_lgxy_stencil_1_31
Fanin Group:     lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_23 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_24 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_25 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_26 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_27 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_28 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_29 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_30 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_31 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4

inpt: lxy_stencil_op_hcompute_lxy_stencil_4
  lxy_stencil_op_hcompute_lgxy_stencil_1_30 -(0)-> 0
  lxy_stencil_op_hcompute_lgxy_stencil_1_31 -(1)-> 1
  lxy_stencil_op_hcompute_lgxy_stencil_1_29 -(2)-> 2
  lxy_stencil_op_hcompute_lgxy_stencil_1_28 -(64)-> 64
  lxy_stencil_op_hcompute_lgxy_stencil_1_27 -(65)-> 65
  lxy_stencil_op_hcompute_lgxy_stencil_1_26 -(66)-> 66
  lxy_stencil_op_hcompute_lgxy_stencil_1_25 -(128)-> 128
  lxy_stencil_op_hcompute_lgxy_stencil_1_24 -(129)-> 129
  lxy_stencil_op_hcompute_lgxy_stencil_1_23 -(130)-> 130
Groups...
  Group...
  Group...
  Group...
# nodes: 10
# edges: 9
Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_24
        lxy_stencil_op_hcompute_lgxy_stencil_1_24 -> (1) lxy_stencil_op_hcompute_lgxy_stencil_1_23
Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_25
        lxy_stencil_op_hcompute_lgxy_stencil_1_25 -> (1) lxy_stencil_op_hcompute_lgxy_stencil_1_24
Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_27
        lxy_stencil_op_hcompute_lgxy_stencil_1_27 -> (1) lxy_stencil_op_hcompute_lgxy_stencil_1_26
Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_28
        lxy_stencil_op_hcompute_lgxy_stencil_1_28 -> (1) lxy_stencil_op_hcompute_lgxy_stencil_1_27
Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_30
        lxy_stencil_op_hcompute_lgxy_stencil_1_30 -> (1) lxy_stencil_op_hcompute_lgxy_stencil_1_31
Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_31
        lxy_stencil_op_hcompute_lgxy_stencil_1_31 -> (1) lxy_stencil_op_hcompute_lgxy_stencil_1_29
Group:     lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (128) lxy_stencil_op_hcompute_lgxy_stencil_1_25
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (64) lxy_stencil_op_hcompute_lgxy_stencil_1_28
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (0) lxy_stencil_op_hcompute_lgxy_stencil_1_30
Fanin Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_24
        lxy_stencil_op_hcompute_lgxy_stencil_1_23 -> (-1) lxy_stencil_op_hcompute_lgxy_stencil_1_24
Fanin Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_25
        lxy_stencil_op_hcompute_lgxy_stencil_1_24 -> (-1) lxy_stencil_op_hcompute_lgxy_stencil_1_25
Fanin Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_27
        lxy_stencil_op_hcompute_lgxy_stencil_1_26 -> (-1) lxy_stencil_op_hcompute_lgxy_stencil_1_27
Fanin Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_28
        lxy_stencil_op_hcompute_lgxy_stencil_1_27 -> (-1) lxy_stencil_op_hcompute_lgxy_stencil_1_28
Fanin Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_30
        lxy_stencil_op_hcompute_lgxy_stencil_1_31 -> (-1) lxy_stencil_op_hcompute_lgxy_stencil_1_30
Fanin Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_31
        lxy_stencil_op_hcompute_lgxy_stencil_1_29 -> (-1) lxy_stencil_op_hcompute_lgxy_stencil_1_31
Fanin Group:     lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_25 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_28 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_30 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4

edge: lxy_stencil_op_hcompute_lxy_stencil_4=>lxy_stencil_op_hcompute_lgxy_stencil_1_25, w=128
edge: lxy_stencil_op_hcompute_lxy_stencil_4=>lxy_stencil_op_hcompute_lgxy_stencil_1_28, w=64
edge: lxy_stencil_op_hcompute_lxy_stencil_4=>lxy_stencil_op_hcompute_lgxy_stencil_1_30, w=0
after sort: outpt->lxy_stencil_op_hcompute_lgxy_stencil_1_25, w=128
after sort: outpt->lxy_stencil_op_hcompute_lgxy_stencil_1_28, w=64
after sort: outpt->lxy_stencil_op_hcompute_lgxy_stencil_1_30, w=0
	delay of lxy_stencil_op_hcompute_lgxy_stencil_1_31 = 1
	delay of lxy_stencil_op_hcompute_lgxy_stencil_1_30 = 2
	subbranch size: 2
	delay of lxy_stencil_op_hcompute_lgxy_stencil_1_27 = 1
	delay of lxy_stencil_op_hcompute_lgxy_stencil_1_28 = 2
	subbranch size: 2
	delay of lxy_stencil_op_hcompute_lgxy_stencil_1_24 = 1
	delay of lxy_stencil_op_hcompute_lgxy_stencil_1_25 = 2
	subbranch size: 2
# nodes: 10
# edges: 9
Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_24
        lxy_stencil_op_hcompute_lgxy_stencil_1_24 -> (1) lxy_stencil_op_hcompute_lgxy_stencil_1_23
Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_25
        lxy_stencil_op_hcompute_lgxy_stencil_1_25 -> (1) lxy_stencil_op_hcompute_lgxy_stencil_1_24
Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_27
        lxy_stencil_op_hcompute_lgxy_stencil_1_27 -> (1) lxy_stencil_op_hcompute_lgxy_stencil_1_26
Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_28
        lxy_stencil_op_hcompute_lgxy_stencil_1_28 -> (1) lxy_stencil_op_hcompute_lgxy_stencil_1_27
Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_30
        lxy_stencil_op_hcompute_lgxy_stencil_1_30 -> (1) lxy_stencil_op_hcompute_lgxy_stencil_1_31
Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_31
        lxy_stencil_op_hcompute_lgxy_stencil_1_31 -> (1) lxy_stencil_op_hcompute_lgxy_stencil_1_29
Group:     lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (128) lxy_stencil_op_hcompute_lgxy_stencil_1_25
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (64) lxy_stencil_op_hcompute_lgxy_stencil_1_28
        lxy_stencil_op_hcompute_lxy_stencil_4 -> (0) lxy_stencil_op_hcompute_lgxy_stencil_1_30
Fanin Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_24
        lxy_stencil_op_hcompute_lgxy_stencil_1_23 -> (-1) lxy_stencil_op_hcompute_lgxy_stencil_1_24
Fanin Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_25
        lxy_stencil_op_hcompute_lgxy_stencil_1_24 -> (-1) lxy_stencil_op_hcompute_lgxy_stencil_1_25
Fanin Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_27
        lxy_stencil_op_hcompute_lgxy_stencil_1_26 -> (-1) lxy_stencil_op_hcompute_lgxy_stencil_1_27
Fanin Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_28
        lxy_stencil_op_hcompute_lgxy_stencil_1_27 -> (-1) lxy_stencil_op_hcompute_lgxy_stencil_1_28
Fanin Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_30
        lxy_stencil_op_hcompute_lgxy_stencil_1_31 -> (-1) lxy_stencil_op_hcompute_lgxy_stencil_1_30
Fanin Group:     lxy_stencil_op_hcompute_lgxy_stencil_1_31
        lxy_stencil_op_hcompute_lgxy_stencil_1_29 -> (-1) lxy_stencil_op_hcompute_lgxy_stencil_1_31
Fanin Group:     lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_25 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_28 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
        lxy_stencil_op_hcompute_lgxy_stencil_1_30 -> (-1) lxy_stencil_op_hcompute_lxy_stencil_4
Bank writers: 
	 bank NO.0
		writers: {lxy_stencil_op_hcompute_lxy_stencil_4}
	 bank NO.1
		writers: {lxy_stencil_op_hcompute_lxy_stencil_4}
Bank readers: 
	 bank NO.0
		readers: {lxy_stencil_op_hcompute_lgxy_stencil_1_28}
	 bank NO.1
		readers: {lxy_stencil_op_hcompute_lgxy_stencil_1_25}
Shift Register Output: 
	memtiles IO:: 
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_25, delay = 128
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_28, delay = 64
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_30, delay = 0
	register IO:: 
		 lxy_stencil_op_hcompute_lgxy_stencil_1_30->lxy_stencil_op_hcompute_lgxy_stencil_1_31, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_31->lxy_stencil_op_hcompute_lgxy_stencil_1_29, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_28->lxy_stencil_op_hcompute_lgxy_stencil_1_27, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_27->lxy_stencil_op_hcompute_lgxy_stencil_1_26, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_25->lxy_stencil_op_hcompute_lgxy_stencil_1_24, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_24->lxy_stencil_op_hcompute_lgxy_stencil_1_23, delay = 1
Bank writers: 
	 bank NO.0
		writers: {lxy_stencil_op_hcompute_lxy_stencil_4}
	 bank NO.1
		writers: {lxy_stencil_op_hcompute_lxy_stencil_4}
Bank readers: 
	 bank NO.0
		readers: {lxy_stencil_op_hcompute_lgxy_stencil_1_28}
	 bank NO.1
		readers: {lxy_stencil_op_hcompute_lgxy_stencil_1_25}
Shift Register Output: 
	memtiles IO:: 
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_25, delay = 128
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_28, delay = 64
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_30, delay = 0
	register IO:: 
		 lxy_stencil_op_hcompute_lgxy_stencil_1_30->lxy_stencil_op_hcompute_lgxy_stencil_1_31, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_31->lxy_stencil_op_hcompute_lgxy_stencil_1_29, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_28->lxy_stencil_op_hcompute_lgxy_stencil_1_27, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_27->lxy_stencil_op_hcompute_lgxy_stencil_1_26, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_25->lxy_stencil_op_hcompute_lgxy_stencil_1_24, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_24->lxy_stencil_op_hcompute_lgxy_stencil_1_23, delay = 1

After shift register optimization: Bank writers: 
	 bank NO.0
		writers: {lxy_stencil_op_hcompute_lxy_stencil_4}
	 bank NO.1
		writers: {lxy_stencil_op_hcompute_lxy_stencil_4}
Bank readers: 
	 bank NO.0
		readers: {lxy_stencil_op_hcompute_lgxy_stencil_1_28}
	 bank NO.1
		readers: {lxy_stencil_op_hcompute_lgxy_stencil_1_25}
Shift Register Output: 
	memtiles IO:: 
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_25, delay = 128
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_28, delay = 64
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_30, delay = 0
	register IO:: 
		 lxy_stencil_op_hcompute_lgxy_stencil_1_30->lxy_stencil_op_hcompute_lgxy_stencil_1_31, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_31->lxy_stencil_op_hcompute_lgxy_stencil_1_29, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_28->lxy_stencil_op_hcompute_lgxy_stencil_1_27, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_27->lxy_stencil_op_hcompute_lgxy_stencil_1_26, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_25->lxy_stencil_op_hcompute_lgxy_stencil_1_24, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_24->lxy_stencil_op_hcompute_lgxy_stencil_1_23, delay = 1

Done ports: {lxy_stencil_op_hcompute_lgxy_stencil_1_23, lxy_stencil_op_hcompute_lgxy_stencil_1_24, lxy_stencil_op_hcompute_lgxy_stencil_1_25, lxy_stencil_op_hcompute_lgxy_stencil_1_26, lxy_stencil_op_hcompute_lgxy_stencil_1_27, lxy_stencil_op_hcompute_lgxy_stencil_1_28, lxy_stencil_op_hcompute_lgxy_stencil_1_29, lxy_stencil_op_hcompute_lgxy_stencil_1_30, lxy_stencil_op_hcompute_lgxy_stencil_1_31}
reduced buffer: --- lxy_stencil
	---- 1 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4
			dom : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil[0, 0] }
			max location: { lxy_stencil[61, 61] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_lxy_stencil_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4
	---- Output Bundles

SR outputs: {lxy_stencil_op_hcompute_lgxy_stencil_1_23, lxy_stencil_op_hcompute_lgxy_stencil_1_24, lxy_stencil_op_hcompute_lgxy_stencil_1_25, lxy_stencil_op_hcompute_lgxy_stencil_1_26, lxy_stencil_op_hcompute_lgxy_stencil_1_27, lxy_stencil_op_hcompute_lgxy_stencil_1_28, lxy_stencil_op_hcompute_lgxy_stencil_1_29, lxy_stencil_op_hcompute_lgxy_stencil_1_30, lxy_stencil_op_hcompute_lgxy_stencil_1_31}
BUF outputs: {}
After banking optimization: Bank writers: 
	 bank NO.0
		writers: {lxy_stencil_op_hcompute_lxy_stencil_4}
	 bank NO.1
		writers: {lxy_stencil_op_hcompute_lxy_stencil_4}
Bank readers: 
	 bank NO.0
		readers: {lxy_stencil_op_hcompute_lgxy_stencil_1_28}
	 bank NO.1
		readers: {lxy_stencil_op_hcompute_lgxy_stencil_1_25}
Shift Register Output: 
	memtiles IO:: 
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_25, delay = 128
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_28, delay = 64
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_30, delay = 0
	register IO:: 
		 lxy_stencil_op_hcompute_lgxy_stencil_1_30->lxy_stencil_op_hcompute_lgxy_stencil_1_31, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_31->lxy_stencil_op_hcompute_lgxy_stencil_1_29, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_28->lxy_stencil_op_hcompute_lgxy_stencil_1_27, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_27->lxy_stencil_op_hcompute_lgxy_stencil_1_26, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_25->lxy_stencil_op_hcompute_lgxy_stencil_1_24, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_24->lxy_stencil_op_hcompute_lgxy_stencil_1_23, delay = 1

After bank merging: Bank writers: 
	 bank NO.0
		writers: {lxy_stencil_op_hcompute_lxy_stencil_4}
	 bank NO.1
		writers: {lxy_stencil_op_hcompute_lxy_stencil_4}
Bank readers: 
	 bank NO.0
		readers: {lxy_stencil_op_hcompute_lgxy_stencil_1_28}
	 bank NO.1
		readers: {lxy_stencil_op_hcompute_lgxy_stencil_1_25}
Shift Register Output: 
	memtiles IO:: 
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_25, delay = 128
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_28, delay = 64
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_30, delay = 0
	register IO:: 
		 lxy_stencil_op_hcompute_lgxy_stencil_1_30->lxy_stencil_op_hcompute_lgxy_stencil_1_31, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_31->lxy_stencil_op_hcompute_lgxy_stencil_1_29, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_28->lxy_stencil_op_hcompute_lgxy_stencil_1_27, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_27->lxy_stencil_op_hcompute_lgxy_stencil_1_26, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_25->lxy_stencil_op_hcompute_lgxy_stencil_1_24, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_24->lxy_stencil_op_hcompute_lgxy_stencil_1_23, delay = 1

CGPL level :0
impl inputs: {lxy_stencil_op_hcompute_lxy_stencil_4}
impl outpts: {lxy_stencil_op_hcompute_lgxy_stencil_1_28}
rddom: { lxy_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
ls = { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] }
v = 0
Bank writers: 
	 bank NO.0
		writers: {lxy_stencil_op_hcompute_lxy_stencil_4}
	 bank NO.1
		writers: {lxy_stencil_op_hcompute_lxy_stencil_4}
Bank readers: 
	 bank NO.0
		readers: {lxy_stencil_op_hcompute_lgxy_stencil_1_28}
	 bank NO.1
		readers: {lxy_stencil_op_hcompute_lgxy_stencil_1_25}
Shift Register Output: 
	memtiles IO:: 
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_25, delay = 128
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_28, delay = 64
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_30, delay = 0
	register IO:: 
		 lxy_stencil_op_hcompute_lgxy_stencil_1_30->lxy_stencil_op_hcompute_lgxy_stencil_1_31, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_31->lxy_stencil_op_hcompute_lgxy_stencil_1_29, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_28->lxy_stencil_op_hcompute_lgxy_stencil_1_27, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_27->lxy_stencil_op_hcompute_lgxy_stencil_1_26, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_25->lxy_stencil_op_hcompute_lgxy_stencil_1_24, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_24->lxy_stencil_op_hcompute_lgxy_stencil_1_23, delay = 1

--- lxy_stencil_BANK_0
	---- 1 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4
			dom : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_0[0, 0] }
			max location: { lxy_stencil_BANK_0[61, 61] }

	---- 1 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_28
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] -> [194 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_0[0, 0] }
			max location: { lxy_stencil_BANK_0[61, 61] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_28

Stride inner most:  1
{lxy_stencil[d0, d1] -> lxy_stencil[floor((1*d1 + 64*d0)/1)] }
reduce map: { lxy_stencil_BANK_0[d0, d1] -> lxy_stencil_BANK_0[64d0 + d1] }
linear map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
linear map: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
after ubuffer regen: --- lxy_stencil_BANK_0
	---- 1 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4
			dom : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_0[0] }
			max location: { lxy_stencil_BANK_0[3965] }

	---- 1 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_28
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] -> [194 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_0[0] }
			max location: { lxy_stencil_BANK_0[3965] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_28

addr need tight: {}
before dim id set :{ op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
After dim id set: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
before dim id set :{ op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
After dim id set: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] -> [194 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] -> [194 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }

	UBuffer after address tighten--- lxy_stencil_BANK_0
	---- 1 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4
			dom : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_0[0] }
			max location: { lxy_stencil_BANK_0[3965] }

	---- 1 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_28
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] -> [194 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_0[0] }
			max location: { lxy_stencil_BANK_0[3965] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_28

getting rddom
rddom = { lxy_stencil_BANK_0[i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
Vectorization buffer capacity: 3966

	UBuffer after cgpl optimization--- lxy_stencil_BANK_0
	---- 1 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4
			dom : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_0[0] }
			max location: { lxy_stencil_BANK_0[3965] }

	---- 1 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_28
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] -> [194 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_0[0] }
			max location: { lxy_stencil_BANK_0[3965] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_28

find bd for op :op_hcompute_lxy_stencil
	find candidate: lxy_stencil_op_hcompute_lxy_stencil_4_write
find bd for op :op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64
	find candidate: lxy_stencil_op_hcompute_lgxy_stencil_1_28_read
	aff : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root, lxy_s0_y, lxy_s0_x] -> [(64lxy_s0_y + lxy_s0_x)] }
	div dim: 0
getting rddom
rddom = { lxy_stencil_BANK_0[i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
vectorization buffer capacity: 3966
vectorization buf name: lxy_stencil_BANK_0
	 original range input access map: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
	 dim id: 2
Ext by dim: {3966}
  buffer_vectorization Vectorizing: lxy_stencil_BANK_0
   On addr dim: 0, fetch_width: 4
--- lxy_stencil_BANK_0
	---- 1 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4
			dom : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_0[0] }
			max location: { lxy_stencil_BANK_0[3965] }

	---- 1 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_28
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] -> [194 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_0[0] }
			max location: { lxy_stencil_BANK_0[3965] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_28

in bundle  = 1
out bundle = 1
Vectorize input port bundle: lxy_stencil_op_hcompute_lxy_stencil_4_write
	vectorize input port: lxy_stencil_op_hcompute_lxy_stencil_4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 62, 62, ]
	---- Out range: [3844, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

origin: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }, transform: { lxy_stencil_BANK_0[d0] -> lxy_stencil_BANK_0_0_agg[d0] }
access map : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_lxy_stencil[i0, i1, i2] -> op_hcompute_lxy_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_lxy_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_lxy_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
	sched after trans: { op_hcompute_lxy_stencil[i0 = 0, i1, i2] -> [130 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_lxy_stencil[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Autogen slice:{ lxy_stencil_BANK_0[i0] -> lxy_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
trans max: 991 , origin max: 991
agg2sram sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0_0_agg[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
After dim id set: { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0_0_agg[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
before dim id set :{ op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
After dim id set: { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
AGG : --- lxy_stencil_BANK_0_0_agg
	---- 1 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4_in
			dom : { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0_0_agg[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_0_0_agg[0] }
			max location: { lxy_stencil_BANK_0_0_agg[3965] }

	---- 4 out ports:
		lxy_stencil_op_hcompute_lxy_stencil_4_out_0
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_0_agg[0] }
			max location: { lxy_stencil_BANK_0_0_agg[3964] }

		lxy_stencil_op_hcompute_lxy_stencil_4_out_1
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_0_agg[1] }
			max location: { lxy_stencil_BANK_0_0_agg[3965] }

		lxy_stencil_op_hcompute_lxy_stencil_4_out_2
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_0_agg[2] }
			max location: { lxy_stencil_BANK_0_0_agg[3966] }

		lxy_stencil_op_hcompute_lxy_stencil_4_out_3
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_0_agg[3] }
			max location: { lxy_stencil_BANK_0_0_agg[3967] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write_agg_in
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4_in
	---- Output Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write_agg_out
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4_out_0
			lxy_stencil_op_hcompute_lxy_stencil_4_out_1
			lxy_stencil_op_hcompute_lxy_stencil_4_out_2
			lxy_stencil_op_hcompute_lxy_stencil_4_out_3

AGG Schedule: { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Vectorize output port bundle: lxy_stencil_op_hcompute_lgxy_stencil_1_28_read
	Vectorize output port: lxy_stencil_op_hcompute_lgxy_stencil_1_28
Autogen slice:{ lxy_stencil_BANK_0[i0] -> lxy_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
Range slice: { lxy_stencil_BANK_0[i0] -> lxy_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
after slice{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root, lxy_s0_y, lxy_s0_x] -> [(16lxy_s0_y + floor((lxy_s0_x)/4))] }
	aff : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root, lxy_s0_y, lxy_s0_x] -> [(16lxy_s0_y + floor((lxy_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root, lxy_s0_y, lxy_s0_x] -> [(lxy_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 2 denom: 4
	Trans str{op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[d0, d1, d2]->op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[d0, d1, floor(d2/4), d2%4]}
{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[d0, d1, d2] -> op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[d0, d1, o2, o3] : (-d2 + o3) mod 4 = 0 and -3 + d2 <= 4o2 <= d2 and 0 <= o3 <= 3 }
access map : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[0, i1, i2, i3] -> lxy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Preliminary vectorization dim: 2
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
after removal: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
new: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[0, i1, i2, i3] -> lxy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
remove: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[0, i1, i2, i3] -> lxy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
access map : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[0, i1, i2, i3] -> lxy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Vectorization dimension: 2
	aff : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
	div dim: 0
rem: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[0, i1, i2, i3] -> lxy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
new: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[0, i1, i2, i3] -> lxy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
base_str : {op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[i0=0, i1=0, i2=0, i3]}
base_str : {op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[i0=0, i1=0, i2=0, i3]}
	new: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[i0 = 0, i1 = 0, i2 = 0, i3] }
	rem: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[i0 = 0, i1 = 0, i2 = 0, i3] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[i0, i1, i2, i3 = 0] }
sched domain: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[i0, i1, i2, i3 = 0] }
remove dimension: {3}
before:{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[0, i1, i2, i3] -> lxy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
after:{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[0, i1, i2, 0] -> lxy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
remove dimension: {3}
sched before projection: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[0, i1, i2] -> [194 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[0, i1, i2] -> lxy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[0, i1, i2] -> lxy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vectorization dimension after irrelevant dimension removal: 2
sched before adjust: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[0, i1, i2] -> [194 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[0, i1, i2] -> [194 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
final schedule: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
final access: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[0, i1, i2] -> lxy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 62, 62, ]
	---- Out range: [3844, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

Autogen slice:{ lxy_stencil_BANK_0[i0] -> lxy_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root, lxy_s0_y, lxy_s0_x] -> [(16lxy_s0_y + floor((lxy_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root, lxy_s0_y, lxy_s0_x] -> [(lxy_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[0, i1, i2] -> lxy_stencil_BANK_0[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2]
domain: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[64i1 + 4i2] }
	 rewrite access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[0, i1, i2] -> lxy_stencil_BANK_0[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+1]
domain: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[0, i1, i2] -> lxy_stencil_BANK_0[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+2]
domain: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[0, i1, i2] -> lxy_stencil_BANK_0[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+3]
domain: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] }
	Add TB output port: lxy_stencil_op_hcompute_lgxy_stencil_1_28
Autogen slice:{ lxy_stencil_BANK_0[i0] -> lxy_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root, lxy_s0_y, lxy_s0_x] -> [(16lxy_s0_y + floor((lxy_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root, lxy_s0_y, lxy_s0_x] -> [(lxy_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
access map expr:[64*i1+i2]
domain: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, i1, i2] -> lxy_stencil_BANK_0[64i1 + i2] }
tb output access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, i1, i2] -> lxy_stencil_BANK_0[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
	Access map decouple reuse: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_0[root = 0, lxy_s0_y, lxy_s0_x] -> [194 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_0[root = 0, lxy_s0_y, lxy_s0_x] -> [194 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
TB  : --- lxy_stencil_BANK_0_0_tb
	---- 4 in ports
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_0
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_0_tb[0] }
			max location: { lxy_stencil_BANK_0_0_tb[3964] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_1
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_0_tb[1] }
			max location: { lxy_stencil_BANK_0_0_tb[3965] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_2
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_0_tb[2] }
			max location: { lxy_stencil_BANK_0_0_tb[3966] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_3
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_0_tb[3] }
			max location: { lxy_stencil_BANK_0_0_tb[3967] }

	---- 1 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_0[root = 0, lxy_s0_y, lxy_s0_x] -> [194 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_0_0_tb[0] }
			max location: { lxy_stencil_BANK_0_0_tb[3965] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_read_tb_in
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_0
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_1
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_2
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_3
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_read_tb_out
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out

TB Schedule: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15; op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_0[root = 0, lxy_s0_y, lxy_s0_x] -> [194 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[0, i1, i2] -> lxy_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[0, i1, i2] -> lxy_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[0, i1, i2] -> lxy_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[0, i1, i2] -> lxy_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
SRAM: --- lxy_stencil_BANK_0_sram
	---- 4 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4_in_0
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[0] }
			max location: { lxy_stencil_BANK_0_sram[3964] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_1
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[1] }
			max location: { lxy_stencil_BANK_0_sram[3965] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_2
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[2] }
			max location: { lxy_stencil_BANK_0_sram[3966] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_3
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[3] }
			max location: { lxy_stencil_BANK_0_sram[3967] }

	---- 4 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_0
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[0] }
			max location: { lxy_stencil_BANK_0_sram[3964] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_1
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[1] }
			max location: { lxy_stencil_BANK_0_sram[3965] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_2
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[2] }
			max location: { lxy_stencil_BANK_0_sram[3966] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_3
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[3] }
			max location: { lxy_stencil_BANK_0_sram[3967] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4_in_0
			lxy_stencil_op_hcompute_lxy_stencil_4_in_1
			lxy_stencil_op_hcompute_lxy_stencil_4_in_2
			lxy_stencil_op_hcompute_lxy_stencil_4_in_3
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_0
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_1
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_2
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_3

SRAM Schedule: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15; op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
after vectorization codegen: lxy_stencil_BANK_0_0_agg
--- lxy_stencil_BANK_0_0_agg
	---- 1 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4_in
			dom : { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_0_0_agg[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_0_0_agg[0] }
			max location: { lxy_stencil_BANK_0_0_agg[3965] }

	---- 4 out ports:
		lxy_stencil_op_hcompute_lxy_stencil_4_out_0
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_0_agg[0] }
			max location: { lxy_stencil_BANK_0_0_agg[3964] }

		lxy_stencil_op_hcompute_lxy_stencil_4_out_1
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_0_agg[1] }
			max location: { lxy_stencil_BANK_0_0_agg[3965] }

		lxy_stencil_op_hcompute_lxy_stencil_4_out_2
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_0_agg[2] }
			max location: { lxy_stencil_BANK_0_0_agg[3966] }

		lxy_stencil_op_hcompute_lxy_stencil_4_out_3
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_0_agg[3] }
			max location: { lxy_stencil_BANK_0_0_agg[3967] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write_agg_in
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4_in
	---- Output Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write_agg_out
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4_out_0
			lxy_stencil_op_hcompute_lxy_stencil_4_out_1
			lxy_stencil_op_hcompute_lxy_stencil_4_out_2
			lxy_stencil_op_hcompute_lxy_stencil_4_out_3

after vectorization codegen: lxy_stencil_BANK_0_0_tb
--- lxy_stencil_BANK_0_0_tb
	---- 4 in ports
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_0
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_0_tb[0] }
			max location: { lxy_stencil_BANK_0_0_tb[3964] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_1
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_0_tb[1] }
			max location: { lxy_stencil_BANK_0_0_tb[3965] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_2
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_0_tb[2] }
			max location: { lxy_stencil_BANK_0_0_tb[3966] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_3
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_0_tb[3] }
			max location: { lxy_stencil_BANK_0_0_tb[3967] }

	---- 1 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> lxy_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_0[root = 0, lxy_s0_y, lxy_s0_x] -> [194 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_0_0_tb[0] }
			max location: { lxy_stencil_BANK_0_0_tb[3965] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_read_tb_in
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_0
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_1
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_2
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_3
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_read_tb_out
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out

after vectorization codegen: lxy_stencil_BANK_0_sram
--- lxy_stencil_BANK_0_sram
	---- 4 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4_in_0
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[0] }
			max location: { lxy_stencil_BANK_0_sram[3964] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_1
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[1] }
			max location: { lxy_stencil_BANK_0_sram[3965] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_2
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[2] }
			max location: { lxy_stencil_BANK_0_sram[3966] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_3
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[3] }
			max location: { lxy_stencil_BANK_0_sram[3967] }

	---- 4 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_0
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[0] }
			max location: { lxy_stencil_BANK_0_sram[3964] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_1
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[1] }
			max location: { lxy_stencil_BANK_0_sram[3965] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_2
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[2] }
			max location: { lxy_stencil_BANK_0_sram[3966] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_3
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[3] }
			max location: { lxy_stencil_BANK_0_sram[3967] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4_in_0
			lxy_stencil_op_hcompute_lxy_stencil_4_in_1
			lxy_stencil_op_hcompute_lxy_stencil_4_in_2
			lxy_stencil_op_hcompute_lxy_stencil_4_in_3
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_0
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_1
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_2
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_3

CGPL level :0
impl inputs: {lxy_stencil_op_hcompute_lxy_stencil_4}
impl outpts: {lxy_stencil_op_hcompute_lgxy_stencil_1_25}
rddom: { lxy_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
ls = { op_hcompute_lxy_stencil[root, lxy_s0_y, lxy_s0_x] }
v = 0
Bank writers: 
	 bank NO.0
		writers: {lxy_stencil_op_hcompute_lxy_stencil_4}
	 bank NO.1
		writers: {lxy_stencil_op_hcompute_lxy_stencil_4}
Bank readers: 
	 bank NO.0
		readers: {lxy_stencil_op_hcompute_lgxy_stencil_1_28}
	 bank NO.1
		readers: {lxy_stencil_op_hcompute_lgxy_stencil_1_25}
Shift Register Output: 
	memtiles IO:: 
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_25, delay = 128
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_28, delay = 64
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_30, delay = 0
	register IO:: 
		 lxy_stencil_op_hcompute_lgxy_stencil_1_30->lxy_stencil_op_hcompute_lgxy_stencil_1_31, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_31->lxy_stencil_op_hcompute_lgxy_stencil_1_29, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_28->lxy_stencil_op_hcompute_lgxy_stencil_1_27, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_27->lxy_stencil_op_hcompute_lgxy_stencil_1_26, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_25->lxy_stencil_op_hcompute_lgxy_stencil_1_24, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_24->lxy_stencil_op_hcompute_lgxy_stencil_1_23, delay = 1

--- lxy_stencil_BANK_1
	---- 1 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4
			dom : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_1[0, 0] }
			max location: { lxy_stencil_BANK_1[61, 61] }

	---- 1 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_25
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] -> [258 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_1[0, 0] }
			max location: { lxy_stencil_BANK_1[61, 61] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_25

Stride inner most:  1
{lxy_stencil[d0, d1] -> lxy_stencil[floor((1*d1 + 64*d0)/1)] }
reduce map: { lxy_stencil_BANK_1[d0, d1] -> lxy_stencil_BANK_1[64d0 + d1] }
linear map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
linear map: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
after ubuffer regen: --- lxy_stencil_BANK_1
	---- 1 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4
			dom : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_1[0] }
			max location: { lxy_stencil_BANK_1[3965] }

	---- 1 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_25
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] -> [258 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_1[0] }
			max location: { lxy_stencil_BANK_1[3965] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_25

addr need tight: {}
before dim id set :{ op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
After dim id set: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
before dim id set :{ op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
After dim id set: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] -> [258 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] -> [258 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }

	UBuffer after address tighten--- lxy_stencil_BANK_1
	---- 1 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4
			dom : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_1[0] }
			max location: { lxy_stencil_BANK_1[3965] }

	---- 1 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_25
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] -> [258 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_1[0] }
			max location: { lxy_stencil_BANK_1[3965] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_25

getting rddom
rddom = { lxy_stencil_BANK_1[i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
Vectorization buffer capacity: 3966

	UBuffer after cgpl optimization--- lxy_stencil_BANK_1
	---- 1 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4
			dom : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_1[0] }
			max location: { lxy_stencil_BANK_1[3965] }

	---- 1 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_25
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] -> [258 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_1[0] }
			max location: { lxy_stencil_BANK_1[3965] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_25

find bd for op :op_hcompute_lxy_stencil
	find candidate: lxy_stencil_op_hcompute_lxy_stencil_4_write
find bd for op :op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128
	find candidate: lxy_stencil_op_hcompute_lgxy_stencil_1_25_read
	aff : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root, lxy_s0_y, lxy_s0_x] -> [(64lxy_s0_y + lxy_s0_x)] }
	div dim: 0
getting rddom
rddom = { lxy_stencil_BANK_1[i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
vectorization buffer capacity: 3966
vectorization buf name: lxy_stencil_BANK_1
	 original range input access map: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
	 dim id: 2
Ext by dim: {3966}
  buffer_vectorization Vectorizing: lxy_stencil_BANK_1
   On addr dim: 0, fetch_width: 4
--- lxy_stencil_BANK_1
	---- 1 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4
			dom : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_1[0] }
			max location: { lxy_stencil_BANK_1[3965] }

	---- 1 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_25
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] -> [258 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_1[0] }
			max location: { lxy_stencil_BANK_1[3965] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_25

in bundle  = 1
out bundle = 1
Vectorize input port bundle: lxy_stencil_op_hcompute_lxy_stencil_4_write
	vectorize input port: lxy_stencil_op_hcompute_lxy_stencil_4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 62, 62, ]
	---- Out range: [3844, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

origin: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }, transform: { lxy_stencil_BANK_1[d0] -> lxy_stencil_BANK_1_0_agg[d0] }
access map : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_lxy_stencil[i0, i1, i2] -> op_hcompute_lxy_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_lxy_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_lxy_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
	sched after trans: { op_hcompute_lxy_stencil[i0 = 0, i1, i2] -> [130 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_lxy_stencil[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Autogen slice:{ lxy_stencil_BANK_1[i0] -> lxy_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
trans max: 991 , origin max: 991
agg2sram sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1_0_agg[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
After dim id set: { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1_0_agg[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
before dim id set :{ op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
After dim id set: { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
AGG : --- lxy_stencil_BANK_1_0_agg
	---- 1 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4_in
			dom : { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1_0_agg[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_1_0_agg[0] }
			max location: { lxy_stencil_BANK_1_0_agg[3965] }

	---- 4 out ports:
		lxy_stencil_op_hcompute_lxy_stencil_4_out_0
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_0_agg[0] }
			max location: { lxy_stencil_BANK_1_0_agg[3964] }

		lxy_stencil_op_hcompute_lxy_stencil_4_out_1
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_0_agg[1] }
			max location: { lxy_stencil_BANK_1_0_agg[3965] }

		lxy_stencil_op_hcompute_lxy_stencil_4_out_2
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_0_agg[2] }
			max location: { lxy_stencil_BANK_1_0_agg[3966] }

		lxy_stencil_op_hcompute_lxy_stencil_4_out_3
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_0_agg[3] }
			max location: { lxy_stencil_BANK_1_0_agg[3967] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write_agg_in
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4_in
	---- Output Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write_agg_out
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4_out_0
			lxy_stencil_op_hcompute_lxy_stencil_4_out_1
			lxy_stencil_op_hcompute_lxy_stencil_4_out_2
			lxy_stencil_op_hcompute_lxy_stencil_4_out_3

AGG Schedule: { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Vectorize output port bundle: lxy_stencil_op_hcompute_lgxy_stencil_1_25_read
	Vectorize output port: lxy_stencil_op_hcompute_lgxy_stencil_1_25
Autogen slice:{ lxy_stencil_BANK_1[i0] -> lxy_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
Range slice: { lxy_stencil_BANK_1[i0] -> lxy_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
after slice{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root, lxy_s0_y, lxy_s0_x] -> [(16lxy_s0_y + floor((lxy_s0_x)/4))] }
	aff : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root, lxy_s0_y, lxy_s0_x] -> [(16lxy_s0_y + floor((lxy_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root, lxy_s0_y, lxy_s0_x] -> [(lxy_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 2 denom: 4
	Trans str{op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[d0, d1, d2]->op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[d0, d1, floor(d2/4), d2%4]}
{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[d0, d1, d2] -> op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[d0, d1, o2, o3] : (-d2 + o3) mod 4 = 0 and -3 + d2 <= 4o2 <= d2 and 0 <= o3 <= 3 }
access map : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[0, i1, i2, i3] -> lxy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Preliminary vectorization dim: 2
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[i0, i1, i2, i3] -> [(16i1 + i2)] }
after removal: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[i0, i1, i2, i3] -> [(16i1 + i2)] }
new: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[0, i1, i2, i3] -> lxy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
remove: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[0, i1, i2, i3] -> lxy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
access map : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[0, i1, i2, i3] -> lxy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Vectorization dimension: 2
	aff : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[i0, i1, i2, i3] -> [(16i1 + i2)] }
	div dim: 0
rem: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[0, i1, i2, i3] -> lxy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
new: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[0, i1, i2, i3] -> lxy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
base_str : {op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[i0=0, i1=0, i2=0, i3]}
base_str : {op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[i0=0, i1=0, i2=0, i3]}
	new: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[i0 = 0, i1 = 0, i2 = 0, i3] }
	rem: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[i0 = 0, i1 = 0, i2 = 0, i3] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[i0, i1, i2, i3 = 0] }
sched domain: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[i0, i1, i2, i3 = 0] }
remove dimension: {3}
before:{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[0, i1, i2, i3] -> lxy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
after:{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[0, i1, i2, 0] -> lxy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
remove dimension: {3}
sched before projection: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[0, i1, i2] -> [258 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[0, i1, i2] -> lxy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[0, i1, i2] -> lxy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vectorization dimension after irrelevant dimension removal: 2
sched before adjust: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[0, i1, i2] -> [258 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[0, i1, i2] -> [258 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
final schedule: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
final access: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[0, i1, i2] -> lxy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 62, 62, ]
	---- Out range: [3844, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

Autogen slice:{ lxy_stencil_BANK_1[i0] -> lxy_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root, lxy_s0_y, lxy_s0_x] -> [(16lxy_s0_y + floor((lxy_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root, lxy_s0_y, lxy_s0_x] -> [(lxy_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[0, i1, i2] -> lxy_stencil_BANK_1[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2]
domain: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[64i1 + 4i2] }
	 rewrite access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[0, i1, i2] -> lxy_stencil_BANK_1[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+1]
domain: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[0, i1, i2] -> lxy_stencil_BANK_1[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+2]
domain: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[0, i1, i2] -> lxy_stencil_BANK_1[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+3]
domain: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] }
	Add TB output port: lxy_stencil_op_hcompute_lgxy_stencil_1_25
Autogen slice:{ lxy_stencil_BANK_1[i0] -> lxy_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root, lxy_s0_y, lxy_s0_x] -> [(16lxy_s0_y + floor((lxy_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root, lxy_s0_y, lxy_s0_x] -> [(lxy_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
access map expr:[64*i1+i2]
domain: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, i1, i2] -> lxy_stencil_BANK_1[64i1 + i2] }
tb output access map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, i1, i2] -> lxy_stencil_BANK_1[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
	Access map decouple reuse: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0[root = 0, lxy_s0_y, lxy_s0_x] -> [258 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0[root = 0, lxy_s0_y, lxy_s0_x] -> [258 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
TB  : --- lxy_stencil_BANK_1_0_tb
	---- 4 in ports
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_0
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_0_tb[0] }
			max location: { lxy_stencil_BANK_1_0_tb[3964] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_1
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_0_tb[1] }
			max location: { lxy_stencil_BANK_1_0_tb[3965] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_2
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_0_tb[2] }
			max location: { lxy_stencil_BANK_1_0_tb[3966] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_3
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_0_tb[3] }
			max location: { lxy_stencil_BANK_1_0_tb[3967] }

	---- 1 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0[root = 0, lxy_s0_y, lxy_s0_x] -> [258 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_1_0_tb[0] }
			max location: { lxy_stencil_BANK_1_0_tb[3965] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_read_tb_in
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_0
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_1
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_2
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_3
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_read_tb_out
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out

TB Schedule: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0[root = 0, lxy_s0_y, lxy_s0_x] -> [258 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61; op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[0, i1, i2] -> lxy_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[0, i1, i2] -> lxy_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[0, i1, i2] -> lxy_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[0, i1, i2] -> lxy_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
SRAM: --- lxy_stencil_BANK_1_sram
	---- 4 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4_in_0
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[0] }
			max location: { lxy_stencil_BANK_1_sram[3964] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_1
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[1] }
			max location: { lxy_stencil_BANK_1_sram[3965] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_2
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[2] }
			max location: { lxy_stencil_BANK_1_sram[3966] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_3
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[3] }
			max location: { lxy_stencil_BANK_1_sram[3967] }

	---- 4 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_0
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[0] }
			max location: { lxy_stencil_BANK_1_sram[3964] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_1
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[1] }
			max location: { lxy_stencil_BANK_1_sram[3965] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_2
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[2] }
			max location: { lxy_stencil_BANK_1_sram[3966] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_3
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[3] }
			max location: { lxy_stencil_BANK_1_sram[3967] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4_in_0
			lxy_stencil_op_hcompute_lxy_stencil_4_in_1
			lxy_stencil_op_hcompute_lxy_stencil_4_in_2
			lxy_stencil_op_hcompute_lxy_stencil_4_in_3
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_0
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_1
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_2
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_3

SRAM Schedule: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15; op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
after vectorization codegen: lxy_stencil_BANK_1_0_agg
--- lxy_stencil_BANK_1_0_agg
	---- 1 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4_in
			dom : { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_BANK_1_0_agg[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_1_0_agg[0] }
			max location: { lxy_stencil_BANK_1_0_agg[3965] }

	---- 4 out ports:
		lxy_stencil_op_hcompute_lxy_stencil_4_out_0
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_0_agg[0] }
			max location: { lxy_stencil_BANK_1_0_agg[3964] }

		lxy_stencil_op_hcompute_lxy_stencil_4_out_1
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_0_agg[1] }
			max location: { lxy_stencil_BANK_1_0_agg[3965] }

		lxy_stencil_op_hcompute_lxy_stencil_4_out_2
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_0_agg[2] }
			max location: { lxy_stencil_BANK_1_0_agg[3966] }

		lxy_stencil_op_hcompute_lxy_stencil_4_out_3
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_0_agg[3] }
			max location: { lxy_stencil_BANK_1_0_agg[3967] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write_agg_in
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4_in
	---- Output Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write_agg_out
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4_out_0
			lxy_stencil_op_hcompute_lxy_stencil_4_out_1
			lxy_stencil_op_hcompute_lxy_stencil_4_out_2
			lxy_stencil_op_hcompute_lxy_stencil_4_out_3

after vectorization codegen: lxy_stencil_BANK_1_0_tb
--- lxy_stencil_BANK_1_0_tb
	---- 4 in ports
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_0
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_0_tb[0] }
			max location: { lxy_stencil_BANK_1_0_tb[3964] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_1
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_0_tb[1] }
			max location: { lxy_stencil_BANK_1_0_tb[3965] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_2
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_0_tb[2] }
			max location: { lxy_stencil_BANK_1_0_tb[3966] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_3
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_0_tb[3] }
			max location: { lxy_stencil_BANK_1_0_tb[3967] }

	---- 1 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lxy_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0[root = 0, lxy_s0_y, lxy_s0_x] -> [258 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_BANK_1_0_tb[0] }
			max location: { lxy_stencil_BANK_1_0_tb[3965] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_read_tb_in
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_0
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_1
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_2
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_3
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_read_tb_out
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out

after vectorization codegen: lxy_stencil_BANK_1_sram
--- lxy_stencil_BANK_1_sram
	---- 4 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4_in_0
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[0] }
			max location: { lxy_stencil_BANK_1_sram[3964] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_1
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[1] }
			max location: { lxy_stencil_BANK_1_sram[3965] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_2
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[2] }
			max location: { lxy_stencil_BANK_1_sram[3966] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_3
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[3] }
			max location: { lxy_stencil_BANK_1_sram[3967] }

	---- 4 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_0
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[0] }
			max location: { lxy_stencil_BANK_1_sram[3964] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_1
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[1] }
			max location: { lxy_stencil_BANK_1_sram[3965] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_2
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[2] }
			max location: { lxy_stencil_BANK_1_sram[3966] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_3
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[3] }
			max location: { lxy_stencil_BANK_1_sram[3967] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4_in_0
			lxy_stencil_op_hcompute_lxy_stencil_4_in_1
			lxy_stencil_op_hcompute_lxy_stencil_4_in_2
			lxy_stencil_op_hcompute_lxy_stencil_4_in_3
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_0
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_1
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_2
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_3

bank id: 0
rd dom: { lxy_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
	rel map: {0, 1, 1}
	rel dim: 2
	rel dim stride: 4
out_fetch_ii: 4
bank id: 1
rd dom: { lxy_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
	rel map: {0, 1, 1}
	rel dim: 2
	rel dim stride: 4
out_fetch_ii: 4
bank id: 0, to be merged: {0, 1}
	Group: 0: {0, 1}
	Perform bank merging!
	subcomponent keys:lxy_stencil_BANK_1_0_agg
	subcomponent keys:lxy_stencil_BANK_1_0_tb
	subcomponent keys:lxy_stencil_BANK_1_sram
--- lxy_stencil_BANK_1_sram
	---- 4 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4_in_0
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[0] }
			max location: { lxy_stencil_BANK_1_sram[3964] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_1
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[1] }
			max location: { lxy_stencil_BANK_1_sram[3965] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_2
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[2] }
			max location: { lxy_stencil_BANK_1_sram[3966] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_3
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[3] }
			max location: { lxy_stencil_BANK_1_sram[3967] }

	---- 4 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_0
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[0] }
			max location: { lxy_stencil_BANK_1_sram[3964] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_1
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[1] }
			max location: { lxy_stencil_BANK_1_sram[3965] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_2
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[2] }
			max location: { lxy_stencil_BANK_1_sram[3966] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_3
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_1_sram[3] }
			max location: { lxy_stencil_BANK_1_sram[3967] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4_in_0
			lxy_stencil_op_hcompute_lxy_stencil_4_in_1
			lxy_stencil_op_hcompute_lxy_stencil_4_in_2
			lxy_stencil_op_hcompute_lxy_stencil_4_in_3
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_0
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_1
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_2
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_3

	subcomponent keys:lxy_stencil_BANK_0_0_agg
	subcomponent keys:lxy_stencil_BANK_0_0_tb
	subcomponent keys:lxy_stencil_BANK_0_sram
--- lxy_stencil_BANK_0_sram
	---- 4 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4_in_0
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[0] }
			max location: { lxy_stencil_BANK_0_sram[3964] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_1
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[1] }
			max location: { lxy_stencil_BANK_0_sram[3965] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_2
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[2] }
			max location: { lxy_stencil_BANK_0_sram[3966] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_3
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[3] }
			max location: { lxy_stencil_BANK_0_sram[3967] }

	---- 4 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_0
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[0] }
			max location: { lxy_stencil_BANK_0_sram[3964] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_1
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[1] }
			max location: { lxy_stencil_BANK_0_sram[3965] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_2
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[2] }
			max location: { lxy_stencil_BANK_0_sram[3966] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_3
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_BANK_0_sram[3] }
			max location: { lxy_stencil_BANK_0_sram[3967] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4_in_0
			lxy_stencil_op_hcompute_lxy_stencil_4_in_1
			lxy_stencil_op_hcompute_lxy_stencil_4_in_2
			lxy_stencil_op_hcompute_lxy_stencil_4_in_3
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_0
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_1
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_2
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_3

new banks id: 2
get SRAM port schedule: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
get SRAM port schedule: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
get SRAM port schedule: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
	 output sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
	adjust temp sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
--- lxy_stencil_bank_2_sram
	---- 4 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4_in_0
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_sram[0] }
			max location: { lxy_stencil_bank_2_sram[3964] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_1
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_bank_2_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_sram[1] }
			max location: { lxy_stencil_bank_2_sram[3965] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_2
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_bank_2_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_sram[2] }
			max location: { lxy_stencil_bank_2_sram[3966] }

		lxy_stencil_op_hcompute_lxy_stencil_4_in_3
			dom : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_bank_2_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_sram[3] }
			max location: { lxy_stencil_bank_2_sram[3967] }

	---- 8 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_0
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_sram[0] }
			max location: { lxy_stencil_bank_2_sram[3964] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_1
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_bank_2_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_sram[1] }
			max location: { lxy_stencil_bank_2_sram[3965] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_2
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_bank_2_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_sram[2] }
			max location: { lxy_stencil_bank_2_sram[3966] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_3
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_bank_2_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_sram[3] }
			max location: { lxy_stencil_bank_2_sram[3967] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_0
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> lxy_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_sram[0] }
			max location: { lxy_stencil_bank_2_sram[3964] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_1
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> lxy_stencil_bank_2_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_sram[1] }
			max location: { lxy_stencil_bank_2_sram[3965] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_2
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> lxy_stencil_bank_2_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_sram[2] }
			max location: { lxy_stencil_bank_2_sram[3966] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_3
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> lxy_stencil_bank_2_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_sram[3] }
			max location: { lxy_stencil_bank_2_sram[3967] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4_in_0
			lxy_stencil_op_hcompute_lxy_stencil_4_in_1
			lxy_stencil_op_hcompute_lxy_stencil_4_in_2
			lxy_stencil_op_hcompute_lxy_stencil_4_in_3
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_0
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_1
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_2
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_3
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_0
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_1
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_2
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_3

--- lxy_stencil_bank_2
	---- 1 in ports
		lxy_stencil_op_hcompute_lxy_stencil_4
			dom : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_bank_2[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencil[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_bank_2[0] }
			max location: { lxy_stencil_bank_2[3965] }

	---- 2 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_25
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_bank_2[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128[root = 0, lxy_s0_y, lxy_s0_x] -> [258 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_bank_2[0] }
			max location: { lxy_stencil_bank_2[3965] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_bank_2[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64[root = 0, lxy_s0_y, lxy_s0_x] -> [194 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_bank_2[0] }
			max location: { lxy_stencil_bank_2[3965] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lxy_stencil_4_write
		---- Ports...
			lxy_stencil_op_hcompute_lxy_stencil_4
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_25
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_read
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_28

sub component buf: agg
sub component buf: tb
sub component buf: sram
sub component buf: agg
sub component buf: tb
sub component buf: sram
micor buf: --- lxy_stencil_bank_2_0_tb
	---- 4 in ports
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_0
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_0_tb[0] }
			max location: { lxy_stencil_bank_2_0_tb[3964] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_1
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_bank_2_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_0_tb[1] }
			max location: { lxy_stencil_bank_2_0_tb[3965] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_2
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_bank_2_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_0_tb[2] }
			max location: { lxy_stencil_bank_2_0_tb[3966] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_3
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_bank_2_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_0_tb[3] }
			max location: { lxy_stencil_bank_2_0_tb[3967] }

	---- 1 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_out
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lxy_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0[root = 0, lxy_s0_y, lxy_s0_x] -> [258 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_bank_2_0_tb[0] }
			max location: { lxy_stencil_bank_2_0_tb[3965] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_read_tb_in
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_0
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_1
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_2
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out_3
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_25_read_tb_out
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_25_out

micor buf: --- lxy_stencil_bank_2_1_tb
	---- 4 in ports
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_0
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> lxy_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_1_tb[0] }
			max location: { lxy_stencil_bank_2_1_tb[3964] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_1
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> lxy_stencil_bank_2_1_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_1_tb[1] }
			max location: { lxy_stencil_bank_2_1_tb[3965] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_2
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> lxy_stencil_bank_2_1_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_1_tb[2] }
			max location: { lxy_stencil_bank_2_1_tb[3966] }

		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_3
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> lxy_stencil_bank_2_1_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lxy_stencil_bank_2_1_tb[3] }
			max location: { lxy_stencil_bank_2_1_tb[3967] }

	---- 1 out ports:
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_out
			dom : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_1[root = 0, i1, i2] -> lxy_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_1[root = 0, lxy_s0_y, lxy_s0_x] -> [194 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
			min location: { lxy_stencil_bank_2_1_tb[0] }
			max location: { lxy_stencil_bank_2_1_tb[3965] }

	---- Input Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_read_tb_in
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_0
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_1
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_2
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out_3
	---- Output Bundles
		lxy_stencil_op_hcompute_lgxy_stencil_1_28_read_tb_out
		---- Ports...
			lxy_stencil_op_hcompute_lgxy_stencil_1_28_out

Bank writers: 
	 bank NO.2
		writers: {lxy_stencil_op_hcompute_lxy_stencil_4}
Bank readers: 
	 bank NO.2
		readers: {lxy_stencil_op_hcompute_lgxy_stencil_1_25, lxy_stencil_op_hcompute_lgxy_stencil_1_28}
Shift Register Output: 
	memtiles IO:: 
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_25, delay = 128
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_28, delay = 64
		 lxy_stencil_op_hcompute_lxy_stencil_4->lxy_stencil_op_hcompute_lgxy_stencil_1_30, delay = 0
	register IO:: 
		 lxy_stencil_op_hcompute_lgxy_stencil_1_30->lxy_stencil_op_hcompute_lgxy_stencil_1_31, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_31->lxy_stencil_op_hcompute_lgxy_stencil_1_29, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_28->lxy_stencil_op_hcompute_lgxy_stencil_1_27, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_27->lxy_stencil_op_hcompute_lgxy_stencil_1_26, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_25->lxy_stencil_op_hcompute_lgxy_stencil_1_24, delay = 1
		 lxy_stencil_op_hcompute_lgxy_stencil_1_24->lxy_stencil_op_hcompute_lgxy_stencil_1_23, delay = 1

add input: lxy_stencil_op_hcompute_lxy_stencil_4 to pt2wire
add output: lxy_stencil_op_hcompute_lgxy_stencil_1_23 to pt2wire
add output: lxy_stencil_op_hcompute_lgxy_stencil_1_24 to pt2wire
add output: lxy_stencil_op_hcompute_lgxy_stencil_1_25 to pt2wire
add output: lxy_stencil_op_hcompute_lgxy_stencil_1_26 to pt2wire
add output: lxy_stencil_op_hcompute_lgxy_stencil_1_27 to pt2wire
add output: lxy_stencil_op_hcompute_lgxy_stencil_1_28 to pt2wire
add output: lxy_stencil_op_hcompute_lgxy_stencil_1_29 to pt2wire
add output: lxy_stencil_op_hcompute_lgxy_stencil_1_30 to pt2wire
add output: lxy_stencil_op_hcompute_lgxy_stencil_1_31 to pt2wire
agg2sram_opt debug start 
sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
write map: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
{ lxy_stencil_bank_2_sram[i0] : -3 <= i0 <= 3967 and (((2 + i0) mod 4 = 0 and -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3964 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> lxy_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
read map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
sched: { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
op_name: op_hcompute_lxy_stencil_agg2sram_0, extent_0: 62, stride_0: 1
sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
write map: { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_bank_2_0_agg[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
{ lxy_stencil_bank_2_0_agg[i0] : -3 <= i0 <= 3967 and ((-2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0) or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3964 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_bank_2_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0[root = 0, lxy_s0_y, lxy_s0_x] -> [258 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
write map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
{ lxy_stencil_bank_2_0_tb[i0] : -3 <= i0 <= 3967 and ((-2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0) or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3964 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lxy_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_1[root = 0, lxy_s0_y, lxy_s0_x] -> [194 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
write map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> lxy_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
{ lxy_stencil_bank_2_1_tb[i0] : -3 <= i0 <= 3967 and ((-2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0) or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3964 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_1[root = 0, i1, i2] -> lxy_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
	op name: op_hcompute_lxy_stencil_agg2sram_0
	Sched: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",134,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
adding new agg2sram opt cfg for: op_hcompute_lxy_stencil_agg2sram_0: mode 0, agg_read_padding 3, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",16,0
"write_data_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_lxy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lxy_stencil_bank_2_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_lxy_stencil_in2agg_0
	Sched: { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> [130 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",130,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_lxy_stencil_in2agg_0[root = 0, lxy_s0_y, lxy_s0_x] -> lxy_stencil_bank_2_0_agg[64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	op name: op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0
	Sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",256,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lxy_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lxy_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0
	Sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0[root = 0, lxy_s0_y, lxy_s0_x] -> [258 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",258,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lxy_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1
	Sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",191,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> lxy_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> lxy_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_1
	Sched: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_1[root = 0, lxy_s0_y, lxy_s0_x] -> [194 + 64lxy_s0_y + lxy_s0_x] : 0 <= lxy_s0_y <= 61 and 0 <= lxy_s0_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",194,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_lxy_stencilop_hcompute_lxy_stencil_delay_64_tb2out_1[root = 0, i1, i2] -> lxy_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
{"agg2sram_0":{"agg_read_padding":[3],"cycle_starting_addr":[134],"cycle_stride":[4,64],"delay":[0],"dimensionality":2,"extent":[16,62],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[1,0],"write_data_starting_addr":[0],"write_data_stride":[1,16]},"in2agg_0":{"cycle_starting_addr":[130],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_0":{"cycle_starting_addr":[256],"cycle_stride":[4,64],"dimensionality":2,"extent":[16,62],"read_data_starting_addr":[0],"read_data_stride":[1,16],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_1":{"cycle_starting_addr":[191],"cycle_stride":[4,64],"dimensionality":2,"extent":[16,62],"read_data_starting_addr":[0],"read_data_stride":[1,16],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"tb2out_0":{"cycle_starting_addr":[258],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"read_data_starting_addr":[0],"read_data_stride":[1,0]},"tb2out_1":{"cycle_starting_addr":[194],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"read_data_starting_addr":[0],"read_data_stride":[1,0]}}
Add lake node:ub_lxy_stencil_bank_2 with input_num = 1, output_num = 2
Config mode: lake
Generating Verilog Testing Collateral for: ub_lxy_stencil_bank_2
Module: cgralib.Mem_amber(ID:_U14, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'data_out_1':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U14__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs2__use_prebuilt_memTrue__width16
create shift register for --- lyy_stencil
	---- 1 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2
			dom : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil[0, 0] }
			max location: { lyy_stencil[61, 61] }

	---- 9 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_11
			dom : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			acc : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			sched: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			min location: { lyy_stencil[0, 0] }
			max location: { lyy_stencil[59, 59] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_12
			dom : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			acc : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[lgyy_s1_y, 1 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			sched: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			min location: { lyy_stencil[0, 1] }
			max location: { lyy_stencil[59, 60] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13
			dom : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			acc : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[lgyy_s1_y, 2 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			sched: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			min location: { lyy_stencil[0, 2] }
			max location: { lyy_stencil[59, 61] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_14
			dom : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			acc : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			sched: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			min location: { lyy_stencil[1, 0] }
			max location: { lyy_stencil[60, 59] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_15
			dom : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			acc : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, 1 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			sched: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			min location: { lyy_stencil[1, 1] }
			max location: { lyy_stencil[60, 60] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16
			dom : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			acc : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, 2 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			sched: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			min location: { lyy_stencil[1, 2] }
			max location: { lyy_stencil[60, 61] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_17
			dom : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			acc : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			sched: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			min location: { lyy_stencil[2, 0] }
			max location: { lyy_stencil[61, 59] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_18
			dom : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			acc : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, 2 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			sched: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			min location: { lyy_stencil[2, 2] }
			max location: { lyy_stencil[61, 61] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_19
			dom : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			acc : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, 1 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			sched: { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
			min location: { lyy_stencil[2, 1] }
			max location: { lyy_stencil[61, 60] }

	---- Input Bundles
		op_hcompute_lyy_stencil_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2
	---- Output Bundles
		op_hcompute_lgyy_stencil_1_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_11
			lyy_stencil_op_hcompute_lgyy_stencil_1_12
			lyy_stencil_op_hcompute_lgyy_stencil_1_13
			lyy_stencil_op_hcompute_lgyy_stencil_1_14
			lyy_stencil_op_hcompute_lgyy_stencil_1_15
			lyy_stencil_op_hcompute_lgyy_stencil_1_16
			lyy_stencil_op_hcompute_lgyy_stencil_1_17
			lyy_stencil_op_hcompute_lgyy_stencil_1_18
			lyy_stencil_op_hcompute_lgyy_stencil_1_19

==== No reduce ops on this buffer
Writer name: op_hcompute_lyy_stencil
read_op read: {lgyy_stencil_clkwrk_dsa4, lyy_stencil}
read_op write: {lgyy_stencil, }
write_op write: {lgyy_stencil}
write_op read: {grad_y_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
reads : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> lyy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lyy_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [130 + i0] : 126 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= -2 + i0 }
DDs          : { [130] }
DD           : 130
writer op    : op_hcompute_lyy_stencil
Writer name: op_hcompute_lyy_stencil
read_op read: {lgyy_stencil_clkwrk_dsa4, lyy_stencil}
read_op write: {lgyy_stencil, }
write_op write: {lgyy_stencil}
write_op read: {grad_y_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
reads : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[lgyy_s1_y, 1 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> lyy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lyy_stencil[o0, -259 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [129 + i0] : 127 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -3 + i0 }
DDs          : { [129] }
DD           : 129
writer op    : op_hcompute_lyy_stencil
Writer name: op_hcompute_lyy_stencil
read_op read: {lgyy_stencil_clkwrk_dsa4, lyy_stencil}
read_op write: {lgyy_stencil, }
write_op write: {lgyy_stencil}
write_op read: {grad_y_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
reads : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[lgyy_s1_y, 2 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> lyy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lyy_stencil[o0, -258 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [128 + i0] : 128 <= i0 <= 3967 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [128] }
DD           : 128
writer op    : op_hcompute_lyy_stencil
Writer name: op_hcompute_lyy_stencil
read_op read: {lgyy_stencil_clkwrk_dsa4, lyy_stencil}
read_op write: {lgyy_stencil, }
write_op write: {lgyy_stencil}
write_op read: {grad_y_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
reads : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> lyy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lyy_stencil[o0, -196 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0 }
PC times     : { [i0] -> [66 + i0] : 190 <= i0 <= 4029 and 64*floor((2 + i0)/64) <= -2 + i0 }
DDs          : { [66] }
DD           : 66
writer op    : op_hcompute_lyy_stencil
Writer name: op_hcompute_lyy_stencil
read_op read: {lgyy_stencil_clkwrk_dsa4, lyy_stencil}
read_op write: {lgyy_stencil, }
write_op write: {lgyy_stencil}
write_op read: {grad_y_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
reads : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, 1 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> lyy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lyy_stencil[o0, -195 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0 }
PC times     : { [i0] -> [65 + i0] : 191 <= i0 <= 4030 and 64*floor((1 + i0)/64) <= -3 + i0 }
DDs          : { [65] }
DD           : 65
writer op    : op_hcompute_lyy_stencil
Writer name: op_hcompute_lyy_stencil
read_op read: {lgyy_stencil_clkwrk_dsa4, lyy_stencil}
read_op write: {lgyy_stencil, }
write_op write: {lgyy_stencil}
write_op read: {grad_y_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
reads : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[1 + lgyy_s1_y, 2 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> lyy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lyy_stencil[o0, -194 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0 }
PC times     : { [i0] -> [64 + i0] : 192 <= i0 <= 4031 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [64] }
DD           : 64
writer op    : op_hcompute_lyy_stencil
Writer name: op_hcompute_lyy_stencil
read_op read: {lgyy_stencil_clkwrk_dsa4, lyy_stencil}
read_op write: {lgyy_stencil, }
write_op write: {lgyy_stencil}
write_op read: {grad_y_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
reads : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> lyy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lyy_stencil[o0, -132 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0 }
PC times     : { [i0] -> [2 + i0] : 254 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= -2 + i0 }
DDs          : { [2] }
DD           : 2
writer op    : op_hcompute_lyy_stencil
Writer name: op_hcompute_lyy_stencil
read_op read: {lgyy_stencil_clkwrk_dsa4, lyy_stencil}
read_op write: {lgyy_stencil, }
write_op write: {lgyy_stencil}
write_op read: {grad_y_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
reads : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, 2 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> lyy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lyy_stencil[o0, -130 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_lyy_stencil
Writer name: op_hcompute_lyy_stencil
read_op read: {lgyy_stencil_clkwrk_dsa4, lyy_stencil}
read_op write: {lgyy_stencil, }
write_op write: {lgyy_stencil}
write_op read: {grad_y_unclamp_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
reads : { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> lyy_stencil[2 + lgyy_s1_y, 1 + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
Schedule...
  { op_hcompute_lgyy_stencil_1[root = 0, lgyy_s1_y, lgyy_s1_x] -> [260 + 64lgyy_s1_y + lgyy_s1_x] : 0 <= lgyy_s1_y <= 59 and 0 <= lgyy_s1_x <= 59 }
  { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Time to write: { [i0] -> lyy_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> lyy_stencil[o0, -131 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0 }
PC times     : { [i0] -> [1 + i0] : 255 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -3 + i0 }
DDs          : { [1] }
DD           : 1
writer op    : op_hcompute_lyy_stencil
DG: ...
# nodes: 10
# edges: 9
Group:     lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (130) lyy_stencil_op_hcompute_lgyy_stencil_1_11
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (129) lyy_stencil_op_hcompute_lgyy_stencil_1_12
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (128) lyy_stencil_op_hcompute_lgyy_stencil_1_13
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (66) lyy_stencil_op_hcompute_lgyy_stencil_1_14
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (65) lyy_stencil_op_hcompute_lgyy_stencil_1_15
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (64) lyy_stencil_op_hcompute_lgyy_stencil_1_16
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (2) lyy_stencil_op_hcompute_lgyy_stencil_1_17
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (0) lyy_stencil_op_hcompute_lgyy_stencil_1_18
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (1) lyy_stencil_op_hcompute_lgyy_stencil_1_19
Fanin Group:     lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_11 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_12 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_13 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_14 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_15 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_16 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_17 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_18 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_19 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2

Naive Shift registers...
# nodes: 10
# edges: 9
Group:     lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (130) lyy_stencil_op_hcompute_lgyy_stencil_1_11
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (129) lyy_stencil_op_hcompute_lgyy_stencil_1_12
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (128) lyy_stencil_op_hcompute_lgyy_stencil_1_13
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (66) lyy_stencil_op_hcompute_lgyy_stencil_1_14
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (65) lyy_stencil_op_hcompute_lgyy_stencil_1_15
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (64) lyy_stencil_op_hcompute_lgyy_stencil_1_16
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (2) lyy_stencil_op_hcompute_lgyy_stencil_1_17
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (0) lyy_stencil_op_hcompute_lgyy_stencil_1_18
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (1) lyy_stencil_op_hcompute_lgyy_stencil_1_19
Fanin Group:     lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_11 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_12 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_13 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_14 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_15 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_16 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_17 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_18 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_19 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2

inpt: lyy_stencil_op_hcompute_lyy_stencil_2
  lyy_stencil_op_hcompute_lgyy_stencil_1_18 -(0)-> 0
  lyy_stencil_op_hcompute_lgyy_stencil_1_19 -(1)-> 1
  lyy_stencil_op_hcompute_lgyy_stencil_1_17 -(2)-> 2
  lyy_stencil_op_hcompute_lgyy_stencil_1_16 -(64)-> 64
  lyy_stencil_op_hcompute_lgyy_stencil_1_15 -(65)-> 65
  lyy_stencil_op_hcompute_lgyy_stencil_1_14 -(66)-> 66
  lyy_stencil_op_hcompute_lgyy_stencil_1_13 -(128)-> 128
  lyy_stencil_op_hcompute_lgyy_stencil_1_12 -(129)-> 129
  lyy_stencil_op_hcompute_lgyy_stencil_1_11 -(130)-> 130
Groups...
  Group...
  Group...
  Group...
# nodes: 10
# edges: 9
Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_12
        lyy_stencil_op_hcompute_lgyy_stencil_1_12 -> (1) lyy_stencil_op_hcompute_lgyy_stencil_1_11
Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_13
        lyy_stencil_op_hcompute_lgyy_stencil_1_13 -> (1) lyy_stencil_op_hcompute_lgyy_stencil_1_12
Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_15
        lyy_stencil_op_hcompute_lgyy_stencil_1_15 -> (1) lyy_stencil_op_hcompute_lgyy_stencil_1_14
Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_16
        lyy_stencil_op_hcompute_lgyy_stencil_1_16 -> (1) lyy_stencil_op_hcompute_lgyy_stencil_1_15
Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_18
        lyy_stencil_op_hcompute_lgyy_stencil_1_18 -> (1) lyy_stencil_op_hcompute_lgyy_stencil_1_19
Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_19
        lyy_stencil_op_hcompute_lgyy_stencil_1_19 -> (1) lyy_stencil_op_hcompute_lgyy_stencil_1_17
Group:     lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (128) lyy_stencil_op_hcompute_lgyy_stencil_1_13
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (64) lyy_stencil_op_hcompute_lgyy_stencil_1_16
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (0) lyy_stencil_op_hcompute_lgyy_stencil_1_18
Fanin Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_12
        lyy_stencil_op_hcompute_lgyy_stencil_1_11 -> (-1) lyy_stencil_op_hcompute_lgyy_stencil_1_12
Fanin Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_13
        lyy_stencil_op_hcompute_lgyy_stencil_1_12 -> (-1) lyy_stencil_op_hcompute_lgyy_stencil_1_13
Fanin Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_15
        lyy_stencil_op_hcompute_lgyy_stencil_1_14 -> (-1) lyy_stencil_op_hcompute_lgyy_stencil_1_15
Fanin Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_16
        lyy_stencil_op_hcompute_lgyy_stencil_1_15 -> (-1) lyy_stencil_op_hcompute_lgyy_stencil_1_16
Fanin Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_18
        lyy_stencil_op_hcompute_lgyy_stencil_1_19 -> (-1) lyy_stencil_op_hcompute_lgyy_stencil_1_18
Fanin Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_19
        lyy_stencil_op_hcompute_lgyy_stencil_1_17 -> (-1) lyy_stencil_op_hcompute_lgyy_stencil_1_19
Fanin Group:     lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_13 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_16 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_18 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2

edge: lyy_stencil_op_hcompute_lyy_stencil_2=>lyy_stencil_op_hcompute_lgyy_stencil_1_13, w=128
edge: lyy_stencil_op_hcompute_lyy_stencil_2=>lyy_stencil_op_hcompute_lgyy_stencil_1_16, w=64
edge: lyy_stencil_op_hcompute_lyy_stencil_2=>lyy_stencil_op_hcompute_lgyy_stencil_1_18, w=0
after sort: outpt->lyy_stencil_op_hcompute_lgyy_stencil_1_13, w=128
after sort: outpt->lyy_stencil_op_hcompute_lgyy_stencil_1_16, w=64
after sort: outpt->lyy_stencil_op_hcompute_lgyy_stencil_1_18, w=0
	delay of lyy_stencil_op_hcompute_lgyy_stencil_1_19 = 1
	delay of lyy_stencil_op_hcompute_lgyy_stencil_1_18 = 2
	subbranch size: 2
	delay of lyy_stencil_op_hcompute_lgyy_stencil_1_15 = 1
	delay of lyy_stencil_op_hcompute_lgyy_stencil_1_16 = 2
	subbranch size: 2
	delay of lyy_stencil_op_hcompute_lgyy_stencil_1_12 = 1
	delay of lyy_stencil_op_hcompute_lgyy_stencil_1_13 = 2
	subbranch size: 2
# nodes: 10
# edges: 9
Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_12
        lyy_stencil_op_hcompute_lgyy_stencil_1_12 -> (1) lyy_stencil_op_hcompute_lgyy_stencil_1_11
Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_13
        lyy_stencil_op_hcompute_lgyy_stencil_1_13 -> (1) lyy_stencil_op_hcompute_lgyy_stencil_1_12
Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_15
        lyy_stencil_op_hcompute_lgyy_stencil_1_15 -> (1) lyy_stencil_op_hcompute_lgyy_stencil_1_14
Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_16
        lyy_stencil_op_hcompute_lgyy_stencil_1_16 -> (1) lyy_stencil_op_hcompute_lgyy_stencil_1_15
Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_18
        lyy_stencil_op_hcompute_lgyy_stencil_1_18 -> (1) lyy_stencil_op_hcompute_lgyy_stencil_1_19
Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_19
        lyy_stencil_op_hcompute_lgyy_stencil_1_19 -> (1) lyy_stencil_op_hcompute_lgyy_stencil_1_17
Group:     lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (128) lyy_stencil_op_hcompute_lgyy_stencil_1_13
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (64) lyy_stencil_op_hcompute_lgyy_stencil_1_16
        lyy_stencil_op_hcompute_lyy_stencil_2 -> (0) lyy_stencil_op_hcompute_lgyy_stencil_1_18
Fanin Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_12
        lyy_stencil_op_hcompute_lgyy_stencil_1_11 -> (-1) lyy_stencil_op_hcompute_lgyy_stencil_1_12
Fanin Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_13
        lyy_stencil_op_hcompute_lgyy_stencil_1_12 -> (-1) lyy_stencil_op_hcompute_lgyy_stencil_1_13
Fanin Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_15
        lyy_stencil_op_hcompute_lgyy_stencil_1_14 -> (-1) lyy_stencil_op_hcompute_lgyy_stencil_1_15
Fanin Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_16
        lyy_stencil_op_hcompute_lgyy_stencil_1_15 -> (-1) lyy_stencil_op_hcompute_lgyy_stencil_1_16
Fanin Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_18
        lyy_stencil_op_hcompute_lgyy_stencil_1_19 -> (-1) lyy_stencil_op_hcompute_lgyy_stencil_1_18
Fanin Group:     lyy_stencil_op_hcompute_lgyy_stencil_1_19
        lyy_stencil_op_hcompute_lgyy_stencil_1_17 -> (-1) lyy_stencil_op_hcompute_lgyy_stencil_1_19
Fanin Group:     lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_13 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_16 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
        lyy_stencil_op_hcompute_lgyy_stencil_1_18 -> (-1) lyy_stencil_op_hcompute_lyy_stencil_2
Bank writers: 
	 bank NO.0
		writers: {lyy_stencil_op_hcompute_lyy_stencil_2}
	 bank NO.1
		writers: {lyy_stencil_op_hcompute_lyy_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {lyy_stencil_op_hcompute_lgyy_stencil_1_16}
	 bank NO.1
		readers: {lyy_stencil_op_hcompute_lgyy_stencil_1_13}
Shift Register Output: 
	memtiles IO:: 
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_13, delay = 128
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_16, delay = 64
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_18, delay = 0
	register IO:: 
		 lyy_stencil_op_hcompute_lgyy_stencil_1_18->lyy_stencil_op_hcompute_lgyy_stencil_1_19, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_19->lyy_stencil_op_hcompute_lgyy_stencil_1_17, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_16->lyy_stencil_op_hcompute_lgyy_stencil_1_15, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_15->lyy_stencil_op_hcompute_lgyy_stencil_1_14, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_13->lyy_stencil_op_hcompute_lgyy_stencil_1_12, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_12->lyy_stencil_op_hcompute_lgyy_stencil_1_11, delay = 1
Bank writers: 
	 bank NO.0
		writers: {lyy_stencil_op_hcompute_lyy_stencil_2}
	 bank NO.1
		writers: {lyy_stencil_op_hcompute_lyy_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {lyy_stencil_op_hcompute_lgyy_stencil_1_16}
	 bank NO.1
		readers: {lyy_stencil_op_hcompute_lgyy_stencil_1_13}
Shift Register Output: 
	memtiles IO:: 
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_13, delay = 128
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_16, delay = 64
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_18, delay = 0
	register IO:: 
		 lyy_stencil_op_hcompute_lgyy_stencil_1_18->lyy_stencil_op_hcompute_lgyy_stencil_1_19, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_19->lyy_stencil_op_hcompute_lgyy_stencil_1_17, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_16->lyy_stencil_op_hcompute_lgyy_stencil_1_15, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_15->lyy_stencil_op_hcompute_lgyy_stencil_1_14, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_13->lyy_stencil_op_hcompute_lgyy_stencil_1_12, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_12->lyy_stencil_op_hcompute_lgyy_stencil_1_11, delay = 1

After shift register optimization: Bank writers: 
	 bank NO.0
		writers: {lyy_stencil_op_hcompute_lyy_stencil_2}
	 bank NO.1
		writers: {lyy_stencil_op_hcompute_lyy_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {lyy_stencil_op_hcompute_lgyy_stencil_1_16}
	 bank NO.1
		readers: {lyy_stencil_op_hcompute_lgyy_stencil_1_13}
Shift Register Output: 
	memtiles IO:: 
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_13, delay = 128
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_16, delay = 64
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_18, delay = 0
	register IO:: 
		 lyy_stencil_op_hcompute_lgyy_stencil_1_18->lyy_stencil_op_hcompute_lgyy_stencil_1_19, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_19->lyy_stencil_op_hcompute_lgyy_stencil_1_17, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_16->lyy_stencil_op_hcompute_lgyy_stencil_1_15, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_15->lyy_stencil_op_hcompute_lgyy_stencil_1_14, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_13->lyy_stencil_op_hcompute_lgyy_stencil_1_12, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_12->lyy_stencil_op_hcompute_lgyy_stencil_1_11, delay = 1

Done ports: {lyy_stencil_op_hcompute_lgyy_stencil_1_11, lyy_stencil_op_hcompute_lgyy_stencil_1_12, lyy_stencil_op_hcompute_lgyy_stencil_1_13, lyy_stencil_op_hcompute_lgyy_stencil_1_14, lyy_stencil_op_hcompute_lgyy_stencil_1_15, lyy_stencil_op_hcompute_lgyy_stencil_1_16, lyy_stencil_op_hcompute_lgyy_stencil_1_17, lyy_stencil_op_hcompute_lgyy_stencil_1_18, lyy_stencil_op_hcompute_lgyy_stencil_1_19}
reduced buffer: --- lyy_stencil
	---- 1 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2
			dom : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil[0, 0] }
			max location: { lyy_stencil[61, 61] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_lyy_stencil_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2
	---- Output Bundles

SR outputs: {lyy_stencil_op_hcompute_lgyy_stencil_1_11, lyy_stencil_op_hcompute_lgyy_stencil_1_12, lyy_stencil_op_hcompute_lgyy_stencil_1_13, lyy_stencil_op_hcompute_lgyy_stencil_1_14, lyy_stencil_op_hcompute_lgyy_stencil_1_15, lyy_stencil_op_hcompute_lgyy_stencil_1_16, lyy_stencil_op_hcompute_lgyy_stencil_1_17, lyy_stencil_op_hcompute_lgyy_stencil_1_18, lyy_stencil_op_hcompute_lgyy_stencil_1_19}
BUF outputs: {}
After banking optimization: Bank writers: 
	 bank NO.0
		writers: {lyy_stencil_op_hcompute_lyy_stencil_2}
	 bank NO.1
		writers: {lyy_stencil_op_hcompute_lyy_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {lyy_stencil_op_hcompute_lgyy_stencil_1_16}
	 bank NO.1
		readers: {lyy_stencil_op_hcompute_lgyy_stencil_1_13}
Shift Register Output: 
	memtiles IO:: 
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_13, delay = 128
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_16, delay = 64
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_18, delay = 0
	register IO:: 
		 lyy_stencil_op_hcompute_lgyy_stencil_1_18->lyy_stencil_op_hcompute_lgyy_stencil_1_19, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_19->lyy_stencil_op_hcompute_lgyy_stencil_1_17, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_16->lyy_stencil_op_hcompute_lgyy_stencil_1_15, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_15->lyy_stencil_op_hcompute_lgyy_stencil_1_14, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_13->lyy_stencil_op_hcompute_lgyy_stencil_1_12, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_12->lyy_stencil_op_hcompute_lgyy_stencil_1_11, delay = 1

After bank merging: Bank writers: 
	 bank NO.0
		writers: {lyy_stencil_op_hcompute_lyy_stencil_2}
	 bank NO.1
		writers: {lyy_stencil_op_hcompute_lyy_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {lyy_stencil_op_hcompute_lgyy_stencil_1_16}
	 bank NO.1
		readers: {lyy_stencil_op_hcompute_lgyy_stencil_1_13}
Shift Register Output: 
	memtiles IO:: 
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_13, delay = 128
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_16, delay = 64
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_18, delay = 0
	register IO:: 
		 lyy_stencil_op_hcompute_lgyy_stencil_1_18->lyy_stencil_op_hcompute_lgyy_stencil_1_19, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_19->lyy_stencil_op_hcompute_lgyy_stencil_1_17, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_16->lyy_stencil_op_hcompute_lgyy_stencil_1_15, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_15->lyy_stencil_op_hcompute_lgyy_stencil_1_14, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_13->lyy_stencil_op_hcompute_lgyy_stencil_1_12, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_12->lyy_stencil_op_hcompute_lgyy_stencil_1_11, delay = 1

CGPL level :0
impl inputs: {lyy_stencil_op_hcompute_lyy_stencil_2}
impl outpts: {lyy_stencil_op_hcompute_lgyy_stencil_1_16}
rddom: { lyy_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
ls = { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] }
v = 0
Bank writers: 
	 bank NO.0
		writers: {lyy_stencil_op_hcompute_lyy_stencil_2}
	 bank NO.1
		writers: {lyy_stencil_op_hcompute_lyy_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {lyy_stencil_op_hcompute_lgyy_stencil_1_16}
	 bank NO.1
		readers: {lyy_stencil_op_hcompute_lgyy_stencil_1_13}
Shift Register Output: 
	memtiles IO:: 
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_13, delay = 128
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_16, delay = 64
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_18, delay = 0
	register IO:: 
		 lyy_stencil_op_hcompute_lgyy_stencil_1_18->lyy_stencil_op_hcompute_lgyy_stencil_1_19, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_19->lyy_stencil_op_hcompute_lgyy_stencil_1_17, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_16->lyy_stencil_op_hcompute_lgyy_stencil_1_15, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_15->lyy_stencil_op_hcompute_lgyy_stencil_1_14, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_13->lyy_stencil_op_hcompute_lgyy_stencil_1_12, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_12->lyy_stencil_op_hcompute_lgyy_stencil_1_11, delay = 1

--- lyy_stencil_BANK_0
	---- 1 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2
			dom : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_0[0, 0] }
			max location: { lyy_stencil_BANK_0[61, 61] }

	---- 1 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_16
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] -> [194 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_0[0, 0] }
			max location: { lyy_stencil_BANK_0[61, 61] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_16

Stride inner most:  1
{lyy_stencil[d0, d1] -> lyy_stencil[floor((1*d1 + 64*d0)/1)] }
reduce map: { lyy_stencil_BANK_0[d0, d1] -> lyy_stencil_BANK_0[64d0 + d1] }
linear map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
linear map: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
after ubuffer regen: --- lyy_stencil_BANK_0
	---- 1 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2
			dom : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_0[0] }
			max location: { lyy_stencil_BANK_0[3965] }

	---- 1 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_16
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] -> [194 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_0[0] }
			max location: { lyy_stencil_BANK_0[3965] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_16

addr need tight: {}
before dim id set :{ op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
After dim id set: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
before dim id set :{ op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
After dim id set: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] -> [194 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] -> [194 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }

	UBuffer after address tighten--- lyy_stencil_BANK_0
	---- 1 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2
			dom : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_0[0] }
			max location: { lyy_stencil_BANK_0[3965] }

	---- 1 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_16
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] -> [194 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_0[0] }
			max location: { lyy_stencil_BANK_0[3965] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_16

getting rddom
rddom = { lyy_stencil_BANK_0[i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
Vectorization buffer capacity: 3966

	UBuffer after cgpl optimization--- lyy_stencil_BANK_0
	---- 1 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2
			dom : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_0[0] }
			max location: { lyy_stencil_BANK_0[3965] }

	---- 1 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_16
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] -> [194 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_0[0] }
			max location: { lyy_stencil_BANK_0[3965] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_16

find bd for op :op_hcompute_lyy_stencil
	find candidate: lyy_stencil_op_hcompute_lyy_stencil_2_write
find bd for op :op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64
	find candidate: lyy_stencil_op_hcompute_lgyy_stencil_1_16_read
	aff : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root, lyy_s0_y, lyy_s0_x] -> [(64lyy_s0_y + lyy_s0_x)] }
	div dim: 0
getting rddom
rddom = { lyy_stencil_BANK_0[i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
vectorization buffer capacity: 3966
vectorization buf name: lyy_stencil_BANK_0
	 original range input access map: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
	 dim id: 2
Ext by dim: {3966}
  buffer_vectorization Vectorizing: lyy_stencil_BANK_0
   On addr dim: 0, fetch_width: 4
--- lyy_stencil_BANK_0
	---- 1 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2
			dom : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_0[0] }
			max location: { lyy_stencil_BANK_0[3965] }

	---- 1 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_16
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] -> [194 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_0[0] }
			max location: { lyy_stencil_BANK_0[3965] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_16

in bundle  = 1
out bundle = 1
Vectorize input port bundle: lyy_stencil_op_hcompute_lyy_stencil_2_write
	vectorize input port: lyy_stencil_op_hcompute_lyy_stencil_2
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 62, 62, ]
	---- Out range: [3844, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

origin: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }, transform: { lyy_stencil_BANK_0[d0] -> lyy_stencil_BANK_0_0_agg[d0] }
access map : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_lyy_stencil[i0, i1, i2] -> op_hcompute_lyy_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_lyy_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_lyy_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
	sched after trans: { op_hcompute_lyy_stencil[i0 = 0, i1, i2] -> [130 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_lyy_stencil[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Autogen slice:{ lyy_stencil_BANK_0[i0] -> lyy_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
trans max: 991 , origin max: 991
agg2sram sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0_0_agg[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
After dim id set: { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0_0_agg[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
before dim id set :{ op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
After dim id set: { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
AGG : --- lyy_stencil_BANK_0_0_agg
	---- 1 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2_in
			dom : { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0_0_agg[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_0_0_agg[0] }
			max location: { lyy_stencil_BANK_0_0_agg[3965] }

	---- 4 out ports:
		lyy_stencil_op_hcompute_lyy_stencil_2_out_0
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_0_agg[0] }
			max location: { lyy_stencil_BANK_0_0_agg[3964] }

		lyy_stencil_op_hcompute_lyy_stencil_2_out_1
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_0_agg[1] }
			max location: { lyy_stencil_BANK_0_0_agg[3965] }

		lyy_stencil_op_hcompute_lyy_stencil_2_out_2
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_0_agg[2] }
			max location: { lyy_stencil_BANK_0_0_agg[3966] }

		lyy_stencil_op_hcompute_lyy_stencil_2_out_3
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_0_agg[3] }
			max location: { lyy_stencil_BANK_0_0_agg[3967] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write_agg_in
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2_in
	---- Output Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write_agg_out
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2_out_0
			lyy_stencil_op_hcompute_lyy_stencil_2_out_1
			lyy_stencil_op_hcompute_lyy_stencil_2_out_2
			lyy_stencil_op_hcompute_lyy_stencil_2_out_3

AGG Schedule: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15; op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Vectorize output port bundle: lyy_stencil_op_hcompute_lgyy_stencil_1_16_read
	Vectorize output port: lyy_stencil_op_hcompute_lgyy_stencil_1_16
Autogen slice:{ lyy_stencil_BANK_0[i0] -> lyy_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
Range slice: { lyy_stencil_BANK_0[i0] -> lyy_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
after slice{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root, lyy_s0_y, lyy_s0_x] -> [(16lyy_s0_y + floor((lyy_s0_x)/4))] }
	aff : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root, lyy_s0_y, lyy_s0_x] -> [(16lyy_s0_y + floor((lyy_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root, lyy_s0_y, lyy_s0_x] -> [(lyy_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 2 denom: 4
	Trans str{op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[d0, d1, d2]->op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[d0, d1, floor(d2/4), d2%4]}
{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[d0, d1, d2] -> op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[d0, d1, o2, o3] : (-d2 + o3) mod 4 = 0 and -3 + d2 <= 4o2 <= d2 and 0 <= o3 <= 3 }
access map : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[0, i1, i2, i3] -> lyy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Preliminary vectorization dim: 2
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
after removal: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
new: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[0, i1, i2, i3] -> lyy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
remove: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[0, i1, i2, i3] -> lyy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
access map : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[0, i1, i2, i3] -> lyy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Vectorization dimension: 2
	aff : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
	div dim: 0
rem: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[0, i1, i2, i3] -> lyy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
new: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[0, i1, i2, i3] -> lyy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
base_str : {op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[i0=0, i1=0, i2=0, i3]}
base_str : {op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[i0=0, i1=0, i2=0, i3]}
	new: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[i0 = 0, i1 = 0, i2 = 0, i3] }
	rem: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[i0 = 0, i1 = 0, i2 = 0, i3] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[i0, i1, i2, i3 = 0] }
sched domain: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[i0, i1, i2, i3 = 0] }
remove dimension: {3}
before:{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[0, i1, i2, i3] -> lyy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
after:{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[0, i1, i2, 0] -> lyy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
remove dimension: {3}
sched before projection: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[0, i1, i2] -> [194 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[0, i1, i2] -> lyy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[0, i1, i2] -> lyy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vectorization dimension after irrelevant dimension removal: 2
sched before adjust: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[0, i1, i2] -> [194 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[0, i1, i2] -> [194 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
final schedule: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
final access: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[0, i1, i2] -> lyy_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 62, 62, ]
	---- Out range: [3844, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

Autogen slice:{ lyy_stencil_BANK_0[i0] -> lyy_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root, lyy_s0_y, lyy_s0_x] -> [(16lyy_s0_y + floor((lyy_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root, lyy_s0_y, lyy_s0_x] -> [(lyy_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[0, i1, i2] -> lyy_stencil_BANK_0[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2]
domain: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[64i1 + 4i2] }
	 rewrite access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[0, i1, i2] -> lyy_stencil_BANK_0[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+1]
domain: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[0, i1, i2] -> lyy_stencil_BANK_0[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+2]
domain: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[0, i1, i2] -> lyy_stencil_BANK_0[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+3]
domain: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] }
	Add TB output port: lyy_stencil_op_hcompute_lgyy_stencil_1_16
Autogen slice:{ lyy_stencil_BANK_0[i0] -> lyy_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root, lyy_s0_y, lyy_s0_x] -> [(16lyy_s0_y + floor((lyy_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root, lyy_s0_y, lyy_s0_x] -> [(lyy_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
access map expr:[64*i1+i2]
domain: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, i1, i2] -> lyy_stencil_BANK_0[64i1 + i2] }
tb output access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, i1, i2] -> lyy_stencil_BANK_0[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
	Access map decouple reuse: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_0[root = 0, lyy_s0_y, lyy_s0_x] -> [194 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_0[root = 0, lyy_s0_y, lyy_s0_x] -> [194 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
TB  : --- lyy_stencil_BANK_0_0_tb
	---- 4 in ports
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_0
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_0_tb[0] }
			max location: { lyy_stencil_BANK_0_0_tb[3964] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_1
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_0_tb[1] }
			max location: { lyy_stencil_BANK_0_0_tb[3965] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_2
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_0_tb[2] }
			max location: { lyy_stencil_BANK_0_0_tb[3966] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_3
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_0_tb[3] }
			max location: { lyy_stencil_BANK_0_0_tb[3967] }

	---- 1 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_0[root = 0, lyy_s0_y, lyy_s0_x] -> [194 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_0_0_tb[0] }
			max location: { lyy_stencil_BANK_0_0_tb[3965] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_read_tb_in
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_0
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_1
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_2
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_3
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_read_tb_out
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out

TB Schedule: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_0[root = 0, lyy_s0_y, lyy_s0_x] -> [194 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[0, i1, i2] -> lyy_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[0, i1, i2] -> lyy_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[0, i1, i2] -> lyy_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[0, i1, i2] -> lyy_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
SRAM: --- lyy_stencil_BANK_0_sram
	---- 4 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2_in_0
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[0] }
			max location: { lyy_stencil_BANK_0_sram[3964] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_1
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[1] }
			max location: { lyy_stencil_BANK_0_sram[3965] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_2
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[2] }
			max location: { lyy_stencil_BANK_0_sram[3966] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_3
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[3] }
			max location: { lyy_stencil_BANK_0_sram[3967] }

	---- 4 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_0
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[0] }
			max location: { lyy_stencil_BANK_0_sram[3964] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_1
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[1] }
			max location: { lyy_stencil_BANK_0_sram[3965] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_2
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[2] }
			max location: { lyy_stencil_BANK_0_sram[3966] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_3
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[3] }
			max location: { lyy_stencil_BANK_0_sram[3967] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2_in_0
			lyy_stencil_op_hcompute_lyy_stencil_2_in_1
			lyy_stencil_op_hcompute_lyy_stencil_2_in_2
			lyy_stencil_op_hcompute_lyy_stencil_2_in_3
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_0
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_1
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_2
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_3

SRAM Schedule: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15; op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
after vectorization codegen: lyy_stencil_BANK_0_0_agg
--- lyy_stencil_BANK_0_0_agg
	---- 1 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2_in
			dom : { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_0_0_agg[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_0_0_agg[0] }
			max location: { lyy_stencil_BANK_0_0_agg[3965] }

	---- 4 out ports:
		lyy_stencil_op_hcompute_lyy_stencil_2_out_0
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_0_agg[0] }
			max location: { lyy_stencil_BANK_0_0_agg[3964] }

		lyy_stencil_op_hcompute_lyy_stencil_2_out_1
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_0_agg[1] }
			max location: { lyy_stencil_BANK_0_0_agg[3965] }

		lyy_stencil_op_hcompute_lyy_stencil_2_out_2
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_0_agg[2] }
			max location: { lyy_stencil_BANK_0_0_agg[3966] }

		lyy_stencil_op_hcompute_lyy_stencil_2_out_3
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_0_agg[3] }
			max location: { lyy_stencil_BANK_0_0_agg[3967] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write_agg_in
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2_in
	---- Output Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write_agg_out
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2_out_0
			lyy_stencil_op_hcompute_lyy_stencil_2_out_1
			lyy_stencil_op_hcompute_lyy_stencil_2_out_2
			lyy_stencil_op_hcompute_lyy_stencil_2_out_3

after vectorization codegen: lyy_stencil_BANK_0_0_tb
--- lyy_stencil_BANK_0_0_tb
	---- 4 in ports
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_0
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_0_tb[0] }
			max location: { lyy_stencil_BANK_0_0_tb[3964] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_1
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_0_tb[1] }
			max location: { lyy_stencil_BANK_0_0_tb[3965] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_2
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_0_tb[2] }
			max location: { lyy_stencil_BANK_0_0_tb[3966] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_3
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_0_tb[3] }
			max location: { lyy_stencil_BANK_0_0_tb[3967] }

	---- 1 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> lyy_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_0[root = 0, lyy_s0_y, lyy_s0_x] -> [194 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_0_0_tb[0] }
			max location: { lyy_stencil_BANK_0_0_tb[3965] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_read_tb_in
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_0
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_1
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_2
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_3
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_read_tb_out
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out

after vectorization codegen: lyy_stencil_BANK_0_sram
--- lyy_stencil_BANK_0_sram
	---- 4 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2_in_0
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[0] }
			max location: { lyy_stencil_BANK_0_sram[3964] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_1
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[1] }
			max location: { lyy_stencil_BANK_0_sram[3965] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_2
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[2] }
			max location: { lyy_stencil_BANK_0_sram[3966] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_3
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[3] }
			max location: { lyy_stencil_BANK_0_sram[3967] }

	---- 4 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_0
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[0] }
			max location: { lyy_stencil_BANK_0_sram[3964] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_1
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[1] }
			max location: { lyy_stencil_BANK_0_sram[3965] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_2
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[2] }
			max location: { lyy_stencil_BANK_0_sram[3966] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_3
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[3] }
			max location: { lyy_stencil_BANK_0_sram[3967] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2_in_0
			lyy_stencil_op_hcompute_lyy_stencil_2_in_1
			lyy_stencil_op_hcompute_lyy_stencil_2_in_2
			lyy_stencil_op_hcompute_lyy_stencil_2_in_3
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_0
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_1
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_2
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_3

CGPL level :0
impl inputs: {lyy_stencil_op_hcompute_lyy_stencil_2}
impl outpts: {lyy_stencil_op_hcompute_lgyy_stencil_1_13}
rddom: { lyy_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
ls = { op_hcompute_lyy_stencil[root, lyy_s0_y, lyy_s0_x] }
v = 0
Bank writers: 
	 bank NO.0
		writers: {lyy_stencil_op_hcompute_lyy_stencil_2}
	 bank NO.1
		writers: {lyy_stencil_op_hcompute_lyy_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {lyy_stencil_op_hcompute_lgyy_stencil_1_16}
	 bank NO.1
		readers: {lyy_stencil_op_hcompute_lgyy_stencil_1_13}
Shift Register Output: 
	memtiles IO:: 
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_13, delay = 128
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_16, delay = 64
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_18, delay = 0
	register IO:: 
		 lyy_stencil_op_hcompute_lgyy_stencil_1_18->lyy_stencil_op_hcompute_lgyy_stencil_1_19, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_19->lyy_stencil_op_hcompute_lgyy_stencil_1_17, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_16->lyy_stencil_op_hcompute_lgyy_stencil_1_15, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_15->lyy_stencil_op_hcompute_lgyy_stencil_1_14, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_13->lyy_stencil_op_hcompute_lgyy_stencil_1_12, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_12->lyy_stencil_op_hcompute_lgyy_stencil_1_11, delay = 1

--- lyy_stencil_BANK_1
	---- 1 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2
			dom : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_1[0, 0] }
			max location: { lyy_stencil_BANK_1[61, 61] }

	---- 1 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_13
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] -> [258 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_1[0, 0] }
			max location: { lyy_stencil_BANK_1[61, 61] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_13

Stride inner most:  1
{lyy_stencil[d0, d1] -> lyy_stencil[floor((1*d1 + 64*d0)/1)] }
reduce map: { lyy_stencil_BANK_1[d0, d1] -> lyy_stencil_BANK_1[64d0 + d1] }
linear map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
linear map: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
after ubuffer regen: --- lyy_stencil_BANK_1
	---- 1 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2
			dom : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_1[0] }
			max location: { lyy_stencil_BANK_1[3965] }

	---- 1 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_13
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] -> [258 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_1[0] }
			max location: { lyy_stencil_BANK_1[3965] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_13

addr need tight: {}
before dim id set :{ op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
After dim id set: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
before dim id set :{ op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
After dim id set: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] -> [258 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] -> [258 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }

	UBuffer after address tighten--- lyy_stencil_BANK_1
	---- 1 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2
			dom : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_1[0] }
			max location: { lyy_stencil_BANK_1[3965] }

	---- 1 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_13
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] -> [258 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_1[0] }
			max location: { lyy_stencil_BANK_1[3965] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_13

getting rddom
rddom = { lyy_stencil_BANK_1[i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
Vectorization buffer capacity: 3966

	UBuffer after cgpl optimization--- lyy_stencil_BANK_1
	---- 1 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2
			dom : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_1[0] }
			max location: { lyy_stencil_BANK_1[3965] }

	---- 1 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_13
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] -> [258 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_1[0] }
			max location: { lyy_stencil_BANK_1[3965] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_13

find bd for op :op_hcompute_lyy_stencil
	find candidate: lyy_stencil_op_hcompute_lyy_stencil_2_write
find bd for op :op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128
	find candidate: lyy_stencil_op_hcompute_lgyy_stencil_1_13_read
	aff : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root, lyy_s0_y, lyy_s0_x] -> [(64lyy_s0_y + lyy_s0_x)] }
	div dim: 0
getting rddom
rddom = { lyy_stencil_BANK_1[i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
vectorization buffer capacity: 3966
vectorization buf name: lyy_stencil_BANK_1
	 original range input access map: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
	 dim id: 2
Ext by dim: {3966}
  buffer_vectorization Vectorizing: lyy_stencil_BANK_1
   On addr dim: 0, fetch_width: 4
--- lyy_stencil_BANK_1
	---- 1 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2
			dom : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_1[0] }
			max location: { lyy_stencil_BANK_1[3965] }

	---- 1 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_13
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] -> [258 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_1[0] }
			max location: { lyy_stencil_BANK_1[3965] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_13

in bundle  = 1
out bundle = 1
Vectorize input port bundle: lyy_stencil_op_hcompute_lyy_stencil_2_write
	vectorize input port: lyy_stencil_op_hcompute_lyy_stencil_2
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 62, 62, ]
	---- Out range: [3844, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

origin: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }, transform: { lyy_stencil_BANK_1[d0] -> lyy_stencil_BANK_1_0_agg[d0] }
access map : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_lyy_stencil[i0, i1, i2] -> op_hcompute_lyy_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_lyy_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_lyy_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
	sched after trans: { op_hcompute_lyy_stencil[i0 = 0, i1, i2] -> [130 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_lyy_stencil[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Autogen slice:{ lyy_stencil_BANK_1[i0] -> lyy_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
trans max: 991 , origin max: 991
agg2sram sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1_0_agg[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
After dim id set: { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1_0_agg[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
before dim id set :{ op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
After dim id set: { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
AGG : --- lyy_stencil_BANK_1_0_agg
	---- 1 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2_in
			dom : { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1_0_agg[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_1_0_agg[0] }
			max location: { lyy_stencil_BANK_1_0_agg[3965] }

	---- 4 out ports:
		lyy_stencil_op_hcompute_lyy_stencil_2_out_0
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_0_agg[0] }
			max location: { lyy_stencil_BANK_1_0_agg[3964] }

		lyy_stencil_op_hcompute_lyy_stencil_2_out_1
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_0_agg[1] }
			max location: { lyy_stencil_BANK_1_0_agg[3965] }

		lyy_stencil_op_hcompute_lyy_stencil_2_out_2
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_0_agg[2] }
			max location: { lyy_stencil_BANK_1_0_agg[3966] }

		lyy_stencil_op_hcompute_lyy_stencil_2_out_3
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_0_agg[3] }
			max location: { lyy_stencil_BANK_1_0_agg[3967] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write_agg_in
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2_in
	---- Output Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write_agg_out
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2_out_0
			lyy_stencil_op_hcompute_lyy_stencil_2_out_1
			lyy_stencil_op_hcompute_lyy_stencil_2_out_2
			lyy_stencil_op_hcompute_lyy_stencil_2_out_3

AGG Schedule: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15; op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
Vectorize output port bundle: lyy_stencil_op_hcompute_lgyy_stencil_1_13_read
	Vectorize output port: lyy_stencil_op_hcompute_lgyy_stencil_1_13
Autogen slice:{ lyy_stencil_BANK_1[i0] -> lyy_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
Range slice: { lyy_stencil_BANK_1[i0] -> lyy_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
after slice{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root, lyy_s0_y, lyy_s0_x] -> [(16lyy_s0_y + floor((lyy_s0_x)/4))] }
	aff : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root, lyy_s0_y, lyy_s0_x] -> [(16lyy_s0_y + floor((lyy_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root, lyy_s0_y, lyy_s0_x] -> [(lyy_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 2 denom: 4
	Trans str{op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[d0, d1, d2]->op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[d0, d1, floor(d2/4), d2%4]}
{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[d0, d1, d2] -> op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[d0, d1, o2, o3] : (-d2 + o3) mod 4 = 0 and -3 + d2 <= 4o2 <= d2 and 0 <= o3 <= 3 }
access map : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[0, i1, i2, i3] -> lyy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Preliminary vectorization dim: 2
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[i0, i1, i2, i3] -> [(16i1 + i2)] }
after removal: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[i0, i1, i2, i3] -> [(16i1 + i2)] }
new: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[0, i1, i2, i3] -> lyy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
remove: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[0, i1, i2, i3] -> lyy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
access map : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[0, i1, i2, i3] -> lyy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Vectorization dimension: 2
	aff : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[i0, i1, i2, i3] -> [(16i1 + i2)] }
	div dim: 0
rem: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[0, i1, i2, i3] -> lyy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
new: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[0, i1, i2, i3] -> lyy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
base_str : {op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[i0=0, i1=0, i2=0, i3]}
base_str : {op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[i0=0, i1=0, i2=0, i3]}
	new: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[i0 = 0, i1 = 0, i2 = 0, i3] }
	rem: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[i0 = 0, i1 = 0, i2 = 0, i3] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[i0, i1, i2, i3 = 0] }
sched domain: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[i0, i1, i2, i3 = 0] }
remove dimension: {3}
before:{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[0, i1, i2, i3] -> lyy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
after:{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[0, i1, i2, 0] -> lyy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
remove dimension: {3}
sched before projection: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[0, i1, i2] -> [258 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[0, i1, i2] -> lyy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[0, i1, i2] -> lyy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vectorization dimension after irrelevant dimension removal: 2
sched before adjust: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[0, i1, i2] -> [258 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[0, i1, i2] -> [258 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
final schedule: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
final access: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[0, i1, i2] -> lyy_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 62, 62, ]
	---- Out range: [3844, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

Autogen slice:{ lyy_stencil_BANK_1[i0] -> lyy_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root, lyy_s0_y, lyy_s0_x] -> [(16lyy_s0_y + floor((lyy_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root, lyy_s0_y, lyy_s0_x] -> [(lyy_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[0, i1, i2] -> lyy_stencil_BANK_1[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2]
domain: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[64i1 + 4i2] }
	 rewrite access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[0, i1, i2] -> lyy_stencil_BANK_1[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+1]
domain: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[0, i1, i2] -> lyy_stencil_BANK_1[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+2]
domain: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[0, i1, i2] -> lyy_stencil_BANK_1[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+3]
domain: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] }
	Add TB output port: lyy_stencil_op_hcompute_lgyy_stencil_1_13
Autogen slice:{ lyy_stencil_BANK_1[i0] -> lyy_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root, lyy_s0_y, lyy_s0_x] -> [(16lyy_s0_y + floor((lyy_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root, lyy_s0_y, lyy_s0_x] -> [(lyy_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
access map expr:[64*i1+i2]
domain: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, i1, i2] -> lyy_stencil_BANK_1[64i1 + i2] }
tb output access map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, i1, i2] -> lyy_stencil_BANK_1[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
	Access map decouple reuse: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0[root = 0, lyy_s0_y, lyy_s0_x] -> [258 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0[root = 0, lyy_s0_y, lyy_s0_x] -> [258 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
TB  : --- lyy_stencil_BANK_1_0_tb
	---- 4 in ports
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_0
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_0_tb[0] }
			max location: { lyy_stencil_BANK_1_0_tb[3964] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_1
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_0_tb[1] }
			max location: { lyy_stencil_BANK_1_0_tb[3965] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_2
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_0_tb[2] }
			max location: { lyy_stencil_BANK_1_0_tb[3966] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_3
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_0_tb[3] }
			max location: { lyy_stencil_BANK_1_0_tb[3967] }

	---- 1 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0[root = 0, lyy_s0_y, lyy_s0_x] -> [258 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_1_0_tb[0] }
			max location: { lyy_stencil_BANK_1_0_tb[3965] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_read_tb_in
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_0
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_1
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_2
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_3
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_read_tb_out
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out

TB Schedule: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0[root = 0, lyy_s0_y, lyy_s0_x] -> [258 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61; op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[0, i1, i2] -> lyy_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[0, i1, i2] -> lyy_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[0, i1, i2] -> lyy_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[0, i1, i2] -> lyy_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
SRAM: --- lyy_stencil_BANK_1_sram
	---- 4 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2_in_0
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[0] }
			max location: { lyy_stencil_BANK_1_sram[3964] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_1
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[1] }
			max location: { lyy_stencil_BANK_1_sram[3965] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_2
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[2] }
			max location: { lyy_stencil_BANK_1_sram[3966] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_3
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[3] }
			max location: { lyy_stencil_BANK_1_sram[3967] }

	---- 4 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_0
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[0] }
			max location: { lyy_stencil_BANK_1_sram[3964] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_1
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[1] }
			max location: { lyy_stencil_BANK_1_sram[3965] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_2
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[2] }
			max location: { lyy_stencil_BANK_1_sram[3966] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_3
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[3] }
			max location: { lyy_stencil_BANK_1_sram[3967] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2_in_0
			lyy_stencil_op_hcompute_lyy_stencil_2_in_1
			lyy_stencil_op_hcompute_lyy_stencil_2_in_2
			lyy_stencil_op_hcompute_lyy_stencil_2_in_3
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_0
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_1
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_2
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_3

SRAM Schedule: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15; op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
after vectorization codegen: lyy_stencil_BANK_1_0_agg
--- lyy_stencil_BANK_1_0_agg
	---- 1 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2_in
			dom : { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_BANK_1_0_agg[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_1_0_agg[0] }
			max location: { lyy_stencil_BANK_1_0_agg[3965] }

	---- 4 out ports:
		lyy_stencil_op_hcompute_lyy_stencil_2_out_0
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_0_agg[0] }
			max location: { lyy_stencil_BANK_1_0_agg[3964] }

		lyy_stencil_op_hcompute_lyy_stencil_2_out_1
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_0_agg[1] }
			max location: { lyy_stencil_BANK_1_0_agg[3965] }

		lyy_stencil_op_hcompute_lyy_stencil_2_out_2
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_0_agg[2] }
			max location: { lyy_stencil_BANK_1_0_agg[3966] }

		lyy_stencil_op_hcompute_lyy_stencil_2_out_3
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_0_agg[3] }
			max location: { lyy_stencil_BANK_1_0_agg[3967] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write_agg_in
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2_in
	---- Output Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write_agg_out
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2_out_0
			lyy_stencil_op_hcompute_lyy_stencil_2_out_1
			lyy_stencil_op_hcompute_lyy_stencil_2_out_2
			lyy_stencil_op_hcompute_lyy_stencil_2_out_3

after vectorization codegen: lyy_stencil_BANK_1_0_tb
--- lyy_stencil_BANK_1_0_tb
	---- 4 in ports
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_0
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_0_tb[0] }
			max location: { lyy_stencil_BANK_1_0_tb[3964] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_1
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_0_tb[1] }
			max location: { lyy_stencil_BANK_1_0_tb[3965] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_2
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_0_tb[2] }
			max location: { lyy_stencil_BANK_1_0_tb[3966] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_3
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_0_tb[3] }
			max location: { lyy_stencil_BANK_1_0_tb[3967] }

	---- 1 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lyy_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0[root = 0, lyy_s0_y, lyy_s0_x] -> [258 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_BANK_1_0_tb[0] }
			max location: { lyy_stencil_BANK_1_0_tb[3965] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_read_tb_in
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_0
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_1
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_2
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_3
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_read_tb_out
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out

after vectorization codegen: lyy_stencil_BANK_1_sram
--- lyy_stencil_BANK_1_sram
	---- 4 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2_in_0
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[0] }
			max location: { lyy_stencil_BANK_1_sram[3964] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_1
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[1] }
			max location: { lyy_stencil_BANK_1_sram[3965] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_2
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[2] }
			max location: { lyy_stencil_BANK_1_sram[3966] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_3
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[3] }
			max location: { lyy_stencil_BANK_1_sram[3967] }

	---- 4 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_0
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[0] }
			max location: { lyy_stencil_BANK_1_sram[3964] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_1
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[1] }
			max location: { lyy_stencil_BANK_1_sram[3965] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_2
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[2] }
			max location: { lyy_stencil_BANK_1_sram[3966] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_3
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[3] }
			max location: { lyy_stencil_BANK_1_sram[3967] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2_in_0
			lyy_stencil_op_hcompute_lyy_stencil_2_in_1
			lyy_stencil_op_hcompute_lyy_stencil_2_in_2
			lyy_stencil_op_hcompute_lyy_stencil_2_in_3
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_0
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_1
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_2
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_3

bank id: 0
rd dom: { lyy_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
	rel map: {0, 1, 1}
	rel dim: 2
	rel dim stride: 4
out_fetch_ii: 4
bank id: 1
rd dom: { lyy_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
	rel map: {0, 1, 1}
	rel dim: 2
	rel dim stride: 4
out_fetch_ii: 4
bank id: 0, to be merged: {0, 1}
	Group: 0: {0, 1}
	Perform bank merging!
	subcomponent keys:lyy_stencil_BANK_1_0_agg
	subcomponent keys:lyy_stencil_BANK_1_0_tb
	subcomponent keys:lyy_stencil_BANK_1_sram
--- lyy_stencil_BANK_1_sram
	---- 4 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2_in_0
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[0] }
			max location: { lyy_stencil_BANK_1_sram[3964] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_1
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[1] }
			max location: { lyy_stencil_BANK_1_sram[3965] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_2
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[2] }
			max location: { lyy_stencil_BANK_1_sram[3966] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_3
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[3] }
			max location: { lyy_stencil_BANK_1_sram[3967] }

	---- 4 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_0
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[0] }
			max location: { lyy_stencil_BANK_1_sram[3964] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_1
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[1] }
			max location: { lyy_stencil_BANK_1_sram[3965] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_2
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[2] }
			max location: { lyy_stencil_BANK_1_sram[3966] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_3
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_1_sram[3] }
			max location: { lyy_stencil_BANK_1_sram[3967] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2_in_0
			lyy_stencil_op_hcompute_lyy_stencil_2_in_1
			lyy_stencil_op_hcompute_lyy_stencil_2_in_2
			lyy_stencil_op_hcompute_lyy_stencil_2_in_3
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_0
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_1
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_2
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_3

	subcomponent keys:lyy_stencil_BANK_0_0_agg
	subcomponent keys:lyy_stencil_BANK_0_0_tb
	subcomponent keys:lyy_stencil_BANK_0_sram
--- lyy_stencil_BANK_0_sram
	---- 4 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2_in_0
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[0] }
			max location: { lyy_stencil_BANK_0_sram[3964] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_1
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[1] }
			max location: { lyy_stencil_BANK_0_sram[3965] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_2
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[2] }
			max location: { lyy_stencil_BANK_0_sram[3966] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_3
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[3] }
			max location: { lyy_stencil_BANK_0_sram[3967] }

	---- 4 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_0
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[0] }
			max location: { lyy_stencil_BANK_0_sram[3964] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_1
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[1] }
			max location: { lyy_stencil_BANK_0_sram[3965] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_2
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[2] }
			max location: { lyy_stencil_BANK_0_sram[3966] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_3
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_BANK_0_sram[3] }
			max location: { lyy_stencil_BANK_0_sram[3967] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2_in_0
			lyy_stencil_op_hcompute_lyy_stencil_2_in_1
			lyy_stencil_op_hcompute_lyy_stencil_2_in_2
			lyy_stencil_op_hcompute_lyy_stencil_2_in_3
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_0
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_1
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_2
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_3

new banks id: 2
get SRAM port schedule: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
get SRAM port schedule: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
get SRAM port schedule: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
	 output sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
	adjust temp sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
--- lyy_stencil_bank_2_sram
	---- 4 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2_in_0
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_sram[0] }
			max location: { lyy_stencil_bank_2_sram[3964] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_1
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_bank_2_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_sram[1] }
			max location: { lyy_stencil_bank_2_sram[3965] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_2
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_bank_2_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_sram[2] }
			max location: { lyy_stencil_bank_2_sram[3966] }

		lyy_stencil_op_hcompute_lyy_stencil_2_in_3
			dom : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_bank_2_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_sram[3] }
			max location: { lyy_stencil_bank_2_sram[3967] }

	---- 8 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_0
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_sram[0] }
			max location: { lyy_stencil_bank_2_sram[3964] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_1
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_bank_2_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_sram[1] }
			max location: { lyy_stencil_bank_2_sram[3965] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_2
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_bank_2_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_sram[2] }
			max location: { lyy_stencil_bank_2_sram[3966] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_3
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_bank_2_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_sram[3] }
			max location: { lyy_stencil_bank_2_sram[3967] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_0
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> lyy_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_sram[0] }
			max location: { lyy_stencil_bank_2_sram[3964] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_1
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> lyy_stencil_bank_2_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_sram[1] }
			max location: { lyy_stencil_bank_2_sram[3965] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_2
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> lyy_stencil_bank_2_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_sram[2] }
			max location: { lyy_stencil_bank_2_sram[3966] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_3
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> lyy_stencil_bank_2_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_sram[3] }
			max location: { lyy_stencil_bank_2_sram[3967] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2_in_0
			lyy_stencil_op_hcompute_lyy_stencil_2_in_1
			lyy_stencil_op_hcompute_lyy_stencil_2_in_2
			lyy_stencil_op_hcompute_lyy_stencil_2_in_3
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_0
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_1
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_2
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_3
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_0
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_1
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_2
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_3

--- lyy_stencil_bank_2
	---- 1 in ports
		lyy_stencil_op_hcompute_lyy_stencil_2
			dom : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_bank_2[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencil[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_bank_2[0] }
			max location: { lyy_stencil_bank_2[3965] }

	---- 2 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_13
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_bank_2[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128[root = 0, lyy_s0_y, lyy_s0_x] -> [258 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_bank_2[0] }
			max location: { lyy_stencil_bank_2[3965] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_bank_2[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64[root = 0, lyy_s0_y, lyy_s0_x] -> [194 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_bank_2[0] }
			max location: { lyy_stencil_bank_2[3965] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lyy_stencil_2_write
		---- Ports...
			lyy_stencil_op_hcompute_lyy_stencil_2
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_13
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_read
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_16

sub component buf: agg
sub component buf: tb
sub component buf: sram
sub component buf: agg
sub component buf: tb
sub component buf: sram
micor buf: --- lyy_stencil_bank_2_0_tb
	---- 4 in ports
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_0
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_0_tb[0] }
			max location: { lyy_stencil_bank_2_0_tb[3964] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_1
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_bank_2_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_0_tb[1] }
			max location: { lyy_stencil_bank_2_0_tb[3965] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_2
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_bank_2_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_0_tb[2] }
			max location: { lyy_stencil_bank_2_0_tb[3966] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_3
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_bank_2_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_0_tb[3] }
			max location: { lyy_stencil_bank_2_0_tb[3967] }

	---- 1 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_out
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lyy_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0[root = 0, lyy_s0_y, lyy_s0_x] -> [258 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_bank_2_0_tb[0] }
			max location: { lyy_stencil_bank_2_0_tb[3965] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_read_tb_in
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_0
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_1
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_2
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out_3
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_13_read_tb_out
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_13_out

micor buf: --- lyy_stencil_bank_2_1_tb
	---- 4 in ports
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_0
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> lyy_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_1_tb[0] }
			max location: { lyy_stencil_bank_2_1_tb[3964] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_1
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> lyy_stencil_bank_2_1_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_1_tb[1] }
			max location: { lyy_stencil_bank_2_1_tb[3965] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_2
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> lyy_stencil_bank_2_1_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_1_tb[2] }
			max location: { lyy_stencil_bank_2_1_tb[3966] }

		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_3
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> lyy_stencil_bank_2_1_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { lyy_stencil_bank_2_1_tb[3] }
			max location: { lyy_stencil_bank_2_1_tb[3967] }

	---- 1 out ports:
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_out
			dom : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_1[root = 0, i1, i2] -> lyy_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_1[root = 0, lyy_s0_y, lyy_s0_x] -> [194 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
			min location: { lyy_stencil_bank_2_1_tb[0] }
			max location: { lyy_stencil_bank_2_1_tb[3965] }

	---- Input Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_read_tb_in
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_0
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_1
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_2
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out_3
	---- Output Bundles
		lyy_stencil_op_hcompute_lgyy_stencil_1_16_read_tb_out
		---- Ports...
			lyy_stencil_op_hcompute_lgyy_stencil_1_16_out

Bank writers: 
	 bank NO.2
		writers: {lyy_stencil_op_hcompute_lyy_stencil_2}
Bank readers: 
	 bank NO.2
		readers: {lyy_stencil_op_hcompute_lgyy_stencil_1_13, lyy_stencil_op_hcompute_lgyy_stencil_1_16}
Shift Register Output: 
	memtiles IO:: 
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_13, delay = 128
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_16, delay = 64
		 lyy_stencil_op_hcompute_lyy_stencil_2->lyy_stencil_op_hcompute_lgyy_stencil_1_18, delay = 0
	register IO:: 
		 lyy_stencil_op_hcompute_lgyy_stencil_1_18->lyy_stencil_op_hcompute_lgyy_stencil_1_19, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_19->lyy_stencil_op_hcompute_lgyy_stencil_1_17, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_16->lyy_stencil_op_hcompute_lgyy_stencil_1_15, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_15->lyy_stencil_op_hcompute_lgyy_stencil_1_14, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_13->lyy_stencil_op_hcompute_lgyy_stencil_1_12, delay = 1
		 lyy_stencil_op_hcompute_lgyy_stencil_1_12->lyy_stencil_op_hcompute_lgyy_stencil_1_11, delay = 1

add input: lyy_stencil_op_hcompute_lyy_stencil_2 to pt2wire
add output: lyy_stencil_op_hcompute_lgyy_stencil_1_11 to pt2wire
add output: lyy_stencil_op_hcompute_lgyy_stencil_1_12 to pt2wire
add output: lyy_stencil_op_hcompute_lgyy_stencil_1_13 to pt2wire
add output: lyy_stencil_op_hcompute_lgyy_stencil_1_14 to pt2wire
add output: lyy_stencil_op_hcompute_lgyy_stencil_1_15 to pt2wire
add output: lyy_stencil_op_hcompute_lgyy_stencil_1_16 to pt2wire
add output: lyy_stencil_op_hcompute_lgyy_stencil_1_17 to pt2wire
add output: lyy_stencil_op_hcompute_lgyy_stencil_1_18 to pt2wire
add output: lyy_stencil_op_hcompute_lgyy_stencil_1_19 to pt2wire
agg2sram_opt debug start 
sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
write map: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
{ lyy_stencil_bank_2_sram[i0] : -3 <= i0 <= 3967 and (((2 + i0) mod 4 = 0 and -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3964 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
read map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> lyy_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
sched: { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
op_name: op_hcompute_lyy_stencil_agg2sram_0, extent_0: 62, stride_0: 1
write map: { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_bank_2_0_agg[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
{ lyy_stencil_bank_2_0_agg[i0] : -3 <= i0 <= 3967 and ((-2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0) or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3964 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_bank_2_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0[root = 0, lyy_s0_y, lyy_s0_x] -> [258 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
write map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
{ lyy_stencil_bank_2_0_tb[i0] : -3 <= i0 <= 3967 and ((-2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0) or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3964 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lyy_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_1[root = 0, lyy_s0_y, lyy_s0_x] -> [194 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
write map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> lyy_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
{ lyy_stencil_bank_2_1_tb[i0] : -3 <= i0 <= 3967 and ((-2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0) or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3964 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_1[root = 0, i1, i2] -> lyy_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
	op name: op_hcompute_lyy_stencil_agg2sram_0
	Sched: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",134,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
adding new agg2sram opt cfg for: op_hcompute_lyy_stencil_agg2sram_0: mode 0, agg_read_padding 3, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",16,0
"write_data_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_lyy_stencil_agg2sram_0[i0 = 0, i1, i2] -> lyy_stencil_bank_2_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_lyy_stencil_in2agg_0
	Sched: { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> [130 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",130,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_lyy_stencil_in2agg_0[root = 0, lyy_s0_y, lyy_s0_x] -> lyy_stencil_bank_2_0_agg[64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	op name: op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0
	Sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",256,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> lyy_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> lyy_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0
	Sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0[root = 0, lyy_s0_y, lyy_s0_x] -> [258 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",258,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> lyy_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1
	Sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",191,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> lyy_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> lyy_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_1
	Sched: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_1[root = 0, lyy_s0_y, lyy_s0_x] -> [194 + 64lyy_s0_y + lyy_s0_x] : 0 <= lyy_s0_y <= 61 and 0 <= lyy_s0_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",194,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_lyy_stencilop_hcompute_lyy_stencil_delay_64_tb2out_1[root = 0, i1, i2] -> lyy_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
{"agg2sram_0":{"agg_read_padding":[3],"cycle_starting_addr":[134],"cycle_stride":[4,64],"delay":[0],"dimensionality":2,"extent":[16,62],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[1,0],"write_data_starting_addr":[0],"write_data_stride":[1,16]},"in2agg_0":{"cycle_starting_addr":[130],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_0":{"cycle_starting_addr":[256],"cycle_stride":[4,64],"dimensionality":2,"extent":[16,62],"read_data_starting_addr":[0],"read_data_stride":[1,16],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_1":{"cycle_starting_addr":[191],"cycle_stride":[4,64],"dimensionality":2,"extent":[16,62],"read_data_starting_addr":[0],"read_data_stride":[1,16],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"tb2out_0":{"cycle_starting_addr":[258],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"read_data_starting_addr":[0],"read_data_stride":[1,0]},"tb2out_1":{"cycle_starting_addr":[194],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"read_data_starting_addr":[0],"read_data_stride":[1,0]}}
Add lake node:ub_lyy_stencil_bank_2 with input_num = 1, output_num = 2
Config mode: lake
Generating Verilog Testing Collateral for: ub_lyy_stencil_bank_2
Module: cgralib.Mem_amber(ID:_U21, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'data_out_1':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U21__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs2__use_prebuilt_memTrue__width16
create shift register for --- padded16_global_wrapper_stencil
	---- 1 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
			dom : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil[0, 0] }
			max location: { padded16_global_wrapper_stencil[63, 63] }

	---- 12 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
			dom : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			acc : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			sched: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			min location: { padded16_global_wrapper_stencil[0, 2] }
			max location: { padded16_global_wrapper_stencil[61, 63] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59
			dom : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			acc : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			sched: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			min location: { padded16_global_wrapper_stencil[2, 2] }
			max location: { padded16_global_wrapper_stencil[63, 63] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
			dom : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			acc : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[1 + grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			sched: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			min location: { padded16_global_wrapper_stencil[1, 2] }
			max location: { padded16_global_wrapper_stencil[62, 63] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61
			dom : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			acc : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			sched: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			min location: { padded16_global_wrapper_stencil[0, 0] }
			max location: { padded16_global_wrapper_stencil[61, 61] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62
			dom : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			acc : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[1 + grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			sched: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			min location: { padded16_global_wrapper_stencil[1, 0] }
			max location: { padded16_global_wrapper_stencil[62, 61] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63
			dom : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			acc : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			sched: { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
			min location: { padded16_global_wrapper_stencil[2, 0] }
			max location: { padded16_global_wrapper_stencil[63, 61] }

		padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49
			dom : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			acc : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			min location: { padded16_global_wrapper_stencil[0, 0] }
			max location: { padded16_global_wrapper_stencil[61, 61] }

		padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50
			dom : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			acc : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_y_unclamp_s1_y, 1 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			min location: { padded16_global_wrapper_stencil[0, 1] }
			max location: { padded16_global_wrapper_stencil[61, 62] }

		padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51
			dom : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			acc : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_y_unclamp_s1_y, 2 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			min location: { padded16_global_wrapper_stencil[0, 2] }
			max location: { padded16_global_wrapper_stencil[61, 63] }

		padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52
			dom : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			acc : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			min location: { padded16_global_wrapper_stencil[2, 0] }
			max location: { padded16_global_wrapper_stencil[63, 61] }

		padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53
			dom : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			acc : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, 2 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			min location: { padded16_global_wrapper_stencil[2, 2] }
			max location: { padded16_global_wrapper_stencil[63, 63] }

		padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
			dom : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			acc : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, 1 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			sched: { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
			min location: { padded16_global_wrapper_stencil[2, 1] }
			max location: { padded16_global_wrapper_stencil[63, 62] }

	---- Input Bundles
		op_hcompute_padded16_global_wrapper_stencil_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
	---- Output Bundles
		op_hcompute_grad_x_unclamp_stencil_1_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63
		op_hcompute_grad_y_unclamp_stencil_1_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49
			padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50
			padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51
			padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52
			padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53
			padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54

==== No reduce ops on this buffer
Writer name: op_hcompute_padded16_global_wrapper_stencil
read_op read: {grad_x_unclamp_stencil_clkwrk_dsa0, padded16_global_wrapper_stencil}
read_op write: {grad_x_unclamp_stencil, }
write_op write: {grad_x_unclamp_stencil}
write_op read: {padded16_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Schedule...
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Time to write: { [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> padded16_global_wrapper_stencil[o0, -128 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [128 + i0] : 0 <= i0 <= 3967 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [128] }
DD           : 128
writer op    : op_hcompute_padded16_global_wrapper_stencil
Writer name: op_hcompute_padded16_global_wrapper_stencil
read_op read: {grad_x_unclamp_stencil_clkwrk_dsa0, padded16_global_wrapper_stencil}
read_op write: {grad_x_unclamp_stencil, }
write_op write: {grad_x_unclamp_stencil}
write_op read: {padded16_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Schedule...
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Time to write: { [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_padded16_global_wrapper_stencil
Writer name: op_hcompute_padded16_global_wrapper_stencil
read_op read: {grad_x_unclamp_stencil_clkwrk_dsa0, padded16_global_wrapper_stencil}
read_op write: {grad_x_unclamp_stencil, }
write_op write: {grad_x_unclamp_stencil}
write_op read: {padded16_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[1 + grad_x_unclamp_s1_y, 2 + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Schedule...
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Time to write: { [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> padded16_global_wrapper_stencil[o0, -64 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0 }
PC times     : { [i0] -> [64 + i0] : 64 <= i0 <= 4031 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [64] }
DD           : 64
writer op    : op_hcompute_padded16_global_wrapper_stencil
Writer name: op_hcompute_padded16_global_wrapper_stencil
read_op read: {grad_x_unclamp_stencil_clkwrk_dsa0, padded16_global_wrapper_stencil}
read_op write: {grad_x_unclamp_stencil, }
write_op write: {grad_x_unclamp_stencil}
write_op read: {padded16_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Schedule...
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Time to write: { [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> padded16_global_wrapper_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [130 + i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
DDs          : { [130] }
DD           : 130
writer op    : op_hcompute_padded16_global_wrapper_stencil
Writer name: op_hcompute_padded16_global_wrapper_stencil
read_op read: {grad_x_unclamp_stencil_clkwrk_dsa0, padded16_global_wrapper_stencil}
read_op write: {grad_x_unclamp_stencil, }
write_op write: {grad_x_unclamp_stencil}
write_op read: {padded16_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[1 + grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Schedule...
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Time to write: { [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> padded16_global_wrapper_stencil[o0, -66 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0 }
PC times     : { [i0] -> [66 + i0] : 62 <= i0 <= 4029 and 64*floor((2 + i0)/64) <= i0 }
DDs          : { [66] }
DD           : 66
writer op    : op_hcompute_padded16_global_wrapper_stencil
Writer name: op_hcompute_padded16_global_wrapper_stencil
read_op read: {grad_x_unclamp_stencil_clkwrk_dsa0, padded16_global_wrapper_stencil}
read_op write: {grad_x_unclamp_stencil, }
write_op write: {grad_x_unclamp_stencil}
write_op read: {padded16_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Schedule...
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Time to write: { [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> padded16_global_wrapper_stencil[o0, -2 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0 }
PC times     : { [i0] -> [2 + i0] : 126 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= i0 }
DDs          : { [2] }
DD           : 2
writer op    : op_hcompute_padded16_global_wrapper_stencil
Writer name: op_hcompute_padded16_global_wrapper_stencil
read_op read: {grad_y_unclamp_stencil_clkwrk_dsa1, padded16_global_wrapper_stencil}
read_op write: {grad_y_unclamp_stencil, }
write_op write: {grad_y_unclamp_stencil}
write_op read: {padded16_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Schedule...
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Time to write: { [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> padded16_global_wrapper_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [130 + i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
DDs          : { [130] }
DD           : 130
writer op    : op_hcompute_padded16_global_wrapper_stencil
Writer name: op_hcompute_padded16_global_wrapper_stencil
read_op read: {grad_y_unclamp_stencil_clkwrk_dsa1, padded16_global_wrapper_stencil}
read_op write: {grad_y_unclamp_stencil, }
write_op write: {grad_y_unclamp_stencil}
write_op read: {padded16_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_y_unclamp_s1_y, 1 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Schedule...
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Time to write: { [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> padded16_global_wrapper_stencil[o0, -129 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [129 + i0] : -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) < i0 }
DDs          : { [129] }
DD           : 129
writer op    : op_hcompute_padded16_global_wrapper_stencil
Writer name: op_hcompute_padded16_global_wrapper_stencil
read_op read: {grad_y_unclamp_stencil_clkwrk_dsa1, padded16_global_wrapper_stencil}
read_op write: {grad_y_unclamp_stencil, }
write_op write: {grad_y_unclamp_stencil}
write_op read: {padded16_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[grad_y_unclamp_s1_y, 2 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Schedule...
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Time to write: { [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> padded16_global_wrapper_stencil[o0, -128 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [128 + i0] : 0 <= i0 <= 3967 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [128] }
DD           : 128
writer op    : op_hcompute_padded16_global_wrapper_stencil
Writer name: op_hcompute_padded16_global_wrapper_stencil
read_op read: {grad_y_unclamp_stencil_clkwrk_dsa1, padded16_global_wrapper_stencil}
read_op write: {grad_y_unclamp_stencil, }
write_op write: {grad_y_unclamp_stencil}
write_op read: {padded16_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Schedule...
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Time to write: { [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> padded16_global_wrapper_stencil[o0, -2 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0 }
PC times     : { [i0] -> [2 + i0] : 126 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= i0 }
DDs          : { [2] }
DD           : 2
writer op    : op_hcompute_padded16_global_wrapper_stencil
Writer name: op_hcompute_padded16_global_wrapper_stencil
read_op read: {grad_y_unclamp_stencil_clkwrk_dsa1, padded16_global_wrapper_stencil}
read_op write: {grad_y_unclamp_stencil, }
write_op write: {grad_y_unclamp_stencil}
write_op read: {padded16_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, 2 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Schedule...
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Time to write: { [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_padded16_global_wrapper_stencil
Writer name: op_hcompute_padded16_global_wrapper_stencil
read_op read: {grad_y_unclamp_stencil_clkwrk_dsa1, padded16_global_wrapper_stencil}
read_op write: {grad_y_unclamp_stencil, }
write_op write: {grad_y_unclamp_stencil}
write_op read: {padded16_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> padded16_global_wrapper_stencil[2 + grad_y_unclamp_s1_y, 1 + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
Schedule...
  { op_hcompute_grad_y_unclamp_stencil_1[root = 0, grad_y_unclamp_s1_y, grad_y_unclamp_s1_x] -> [130 + 64grad_y_unclamp_s1_y + grad_y_unclamp_s1_x] : 0 <= grad_y_unclamp_s1_y <= 61 and 0 <= grad_y_unclamp_s1_x <= 61 }
  { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  { op_hcompute_grad_x_unclamp_stencil_1[root = 0, grad_x_unclamp_s1_y, grad_x_unclamp_s1_x] -> [130 + 64grad_x_unclamp_s1_y + grad_x_unclamp_s1_x] : 0 <= grad_x_unclamp_s1_y <= 61 and 0 <= grad_x_unclamp_s1_x <= 61 }
Time to write: { [i0] -> padded16_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> padded16_global_wrapper_stencil[o0, -1 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0 }
PC times     : { [i0] -> [1 + i0] : 127 <= i0 <= 4094 and 64*floor((1 + i0)/64) < i0 }
DDs          : { [1] }
DD           : 1
writer op    : op_hcompute_padded16_global_wrapper_stencil
DG: ...
# nodes: 13
# edges: 12
Group:     padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (128) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (0) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (64) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (130) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (66) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (2) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (130) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (129) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (128) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (2) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (0) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (1) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0

Naive Shift registers...
# nodes: 13
# edges: 12
Group:     padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (128) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (0) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (64) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (130) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (66) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (2) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (130) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (129) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (128) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (2) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (0) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (1) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0

inpt: padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
  padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59 -(0)-> 0
  padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53 -(0)-> 0
  padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54 -(1)-> 1
  padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63 -(2)-> 2
  padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52 -(2)-> 2
  padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60 -(64)-> 64
  padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62 -(66)-> 66
  padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58 -(128)-> 128
  padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51 -(128)-> 128
  padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50 -(129)-> 129
  padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61 -(130)-> 130
  padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49 -(130)-> 130
Groups...
  Group...
  Group...
  Group...
# nodes: 13
# edges: 12
Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58 -> (0) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51
Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59 -> (0) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53
Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60 -> (2) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62
Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61 -> (0) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49
Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63 -> (0) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52
Group:     padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50 -> (1) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61
Group:     padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51 -> (1) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50
Group:     padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53 -> (1) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
Group:     padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54 -> (1) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63
Group:     padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (128) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (0) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (64) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51 -> (-1) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53 -> (-1) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62 -> (-1) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49 -> (-1) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52 -> (-1) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61 -> (-1) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50 -> (-1) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54 -> (-1) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63 -> (-1) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0

edge: padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0=>padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58, w=128
edge: padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0=>padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59, w=0
edge: padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0=>padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60, w=64
after sort: outpt->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58, w=128
after sort: outpt->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60, w=64
after sort: outpt->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59, w=0
	delay of padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63 = 0
	delay of padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54 = 1
	delay of padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53 = 2
	delay of padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59 = 2
	subbranch size: 4
	delay of padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60 = 2
	subbranch size: 1
	delay of padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61 = 0
	delay of padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50 = 1
	delay of padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51 = 2
	delay of padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58 = 2
	subbranch size: 4
# nodes: 13
# edges: 12
Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58 -> (0) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51
Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59 -> (0) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53
Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60 -> (2) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62
Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61 -> (0) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49
Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63 -> (0) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52
Group:     padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50 -> (1) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61
Group:     padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51 -> (1) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50
Group:     padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53 -> (1) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
Group:     padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54 -> (1) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63
Group:     padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (128) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (0) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59
        padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 -> (64) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51 -> (-1) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53 -> (-1) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62 -> (-1) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49 -> (-1) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52 -> (-1) padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61 -> (-1) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50 -> (-1) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53
        padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54 -> (-1) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63 -> (-1) padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54
Fanin Group:     padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
        padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60 -> (-1) padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
Bank writers: 
	 bank NO.0
		writers: {padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0}
	 bank NO.1
		writers: {padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.0
		readers: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60}
	 bank NO.1
		readers: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58}
Shift Register Output: 
	memtiles IO:: 
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58, delay = 128
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60, delay = 64
	register IO:: 
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62, delay = 2
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49, delay = 0
Bank writers: 
	 bank NO.0
		writers: {padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0}
	 bank NO.1
		writers: {padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.0
		readers: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60}
	 bank NO.1
		readers: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58}
Shift Register Output: 
	memtiles IO:: 
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58, delay = 128
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60, delay = 64
	register IO:: 
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62, delay = 2
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49, delay = 0

After shift register optimization: Bank writers: 
	 bank NO.0
		writers: {padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0}
	 bank NO.1
		writers: {padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.0
		readers: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60}
	 bank NO.1
		readers: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58}
Shift Register Output: 
	memtiles IO:: 
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58, delay = 128
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60, delay = 64
	register IO:: 
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62, delay = 2
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49, delay = 0

Done ports: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58, padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59, padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60, padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61, padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62, padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63, padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49, padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50, padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51, padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52, padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53, padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54}
reduced buffer: --- padded16_global_wrapper_stencil
	---- 1 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
			dom : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil[0, 0] }
			max location: { padded16_global_wrapper_stencil[63, 63] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_padded16_global_wrapper_stencil_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
	---- Output Bundles

SR outputs: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58, padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59, padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60, padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61, padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62, padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63, padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49, padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50, padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51, padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52, padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53, padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54}
BUF outputs: {}
After banking optimization: Bank writers: 
	 bank NO.0
		writers: {padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0}
	 bank NO.1
		writers: {padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.0
		readers: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60}
	 bank NO.1
		readers: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58}
Shift Register Output: 
	memtiles IO:: 
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58, delay = 128
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60, delay = 64
	register IO:: 
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62, delay = 2
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49, delay = 0

After bank merging: Bank writers: 
	 bank NO.0
		writers: {padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0}
	 bank NO.1
		writers: {padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.0
		readers: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60}
	 bank NO.1
		readers: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58}
Shift Register Output: 
	memtiles IO:: 
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58, delay = 128
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60, delay = 64
	register IO:: 
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62, delay = 2
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49, delay = 0

CGPL level :0
impl inputs: {padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0}
impl outpts: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60}
rddom: { padded16_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
ls = { op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] }
v = 0
Bank writers: 
	 bank NO.0
		writers: {padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0}
	 bank NO.1
		writers: {padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.0
		readers: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60}
	 bank NO.1
		readers: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58}
Shift Register Output: 
	memtiles IO:: 
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58, delay = 128
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60, delay = 64
	register IO:: 
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62, delay = 2
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49, delay = 0

--- padded16_global_wrapper_stencil_BANK_0
	---- 1 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
			dom : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_0[0, 0] }
			max location: { padded16_global_wrapper_stencil_BANK_0[63, 63] }

	---- 1 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_0[0, 0] }
			max location: { padded16_global_wrapper_stencil_BANK_0[63, 63] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60

Stride inner most:  1
{padded16_global_wrapper_stencil[d0, d1] -> padded16_global_wrapper_stencil[floor((1*d1 + 64*d0)/1)] }
reduce map: { padded16_global_wrapper_stencil_BANK_0[d0, d1] -> padded16_global_wrapper_stencil_BANK_0[64d0 + d1] }
linear map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
linear map: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
after ubuffer regen: --- padded16_global_wrapper_stencil_BANK_0
	---- 1 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
			dom : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_0[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0[4095] }

	---- 1 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_0[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60

addr need tight: {}
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }

	UBuffer after address tighten--- padded16_global_wrapper_stencil_BANK_0
	---- 1 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
			dom : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_0[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0[4095] }

	---- 1 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_0[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60

getting rddom
rddom = { padded16_global_wrapper_stencil_BANK_0[i0] : 0 <= i0 <= 4095 }
Vectorization buffer capacity: 4096

	UBuffer after cgpl optimization--- padded16_global_wrapper_stencil_BANK_0
	---- 1 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
			dom : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_0[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0[4095] }

	---- 1 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_0[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60

find bd for op :op_hcompute_padded16_global_wrapper_stencil
	find candidate: padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
find bd for op :op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64
	find candidate: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_read
	aff : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x)] }
	div dim: 0
getting rddom
rddom = { padded16_global_wrapper_stencil_BANK_0[i0] : 0 <= i0 <= 4095 }
vectorization buffer capacity: 4096
vectorization buf name: padded16_global_wrapper_stencil_BANK_0
	 original range input access map: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
	 dim id: 2
Ext by dim: {4096}
  buffer_vectorization Vectorizing: padded16_global_wrapper_stencil_BANK_0
   On addr dim: 0, fetch_width: 4
--- padded16_global_wrapper_stencil_BANK_0
	---- 1 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
			dom : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_0[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0[4095] }

	---- 1 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_0[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60

in bundle  = 1
out bundle = 1
Vectorize input port bundle: padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
	vectorize input port: padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [4096, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

origin: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }, transform: { padded16_global_wrapper_stencil_BANK_0[d0] -> padded16_global_wrapper_stencil_BANK_0_0_agg[d0] }
access map : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_padded16_global_wrapper_stencil[i0, i1, i2] -> op_hcompute_padded16_global_wrapper_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_padded16_global_wrapper_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_padded16_global_wrapper_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
	sched after trans: { op_hcompute_padded16_global_wrapper_stencil[i0 = 0, i1, i2] -> [64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_padded16_global_wrapper_stencil[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Autogen slice:{ padded16_global_wrapper_stencil_BANK_0[i0] -> padded16_global_wrapper_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
trans max: 1023 , origin max: 1023
agg2sram sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0_0_agg[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0_0_agg[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
AGG : --- padded16_global_wrapper_stencil_BANK_0_0_agg
	---- 1 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in
			dom : { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0_0_agg[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_agg[4095] }

	---- 4 out ports:
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_0
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_agg[4092] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_1
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_agg[1] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_agg[4093] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_2
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_agg[2] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_agg[4094] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_3
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_agg[3] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_agg[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write_agg_in
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write_agg_out
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_0
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_1
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_2
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_3

AGG Schedule: { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Vectorize output port bundle: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_read
	Vectorize output port: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
Autogen slice:{ padded16_global_wrapper_stencil_BANK_0[i0] -> padded16_global_wrapper_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
Range slice: { padded16_global_wrapper_stencil_BANK_0[i0] -> padded16_global_wrapper_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
after slice{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(16padded16_global_wrapper_s0_y + floor((padded16_global_wrapper_s0_x)/4))] }
	aff : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(16padded16_global_wrapper_s0_y + floor((padded16_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(padded16_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 2 denom: 4
	Trans str{op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[d0, d1, d2]->op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[d0, d1, floor(d2/4), d2%4]}
{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[d0, d1, d2] -> op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[d0, d1, o2, o3] : (-d2 + o3) mod 4 = 0 and -3 + d2 <= 4o2 <= d2 and 0 <= o3 <= 3 }
access map : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[0, i1, i2, i3] -> padded16_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Preliminary vectorization dim: 2
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
after removal: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
new: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[0, i1, i2, i3] -> padded16_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
remove: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[0, i1, i2, i3] -> padded16_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
access map : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[0, i1, i2, i3] -> padded16_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Vectorization dimension: 2
	aff : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
	div dim: 0
rem: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[0, i1, i2, i3] -> padded16_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
new: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[0, i1, i2, i3] -> padded16_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
base_str : {op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[i0=0, i1=0, i2=0, i3]}
base_str : {op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[i0=0, i1=0, i2=0, i3]}
	new: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[i0 = 0, i1 = 0, i2 = 0, i3] }
	rem: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[i0 = 0, i1 = 0, i2 = 0, i3] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[i0, i1, i2, i3 = 0] }
sched domain: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[i0, i1, i2, i3 = 0] }
remove dimension: {3}
before:{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[0, i1, i2, i3] -> padded16_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
after:{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[0, i1, i2, 0] -> padded16_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
remove dimension: {3}
sched before projection: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[0, i1, i2] -> [64 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vectorization dimension after irrelevant dimension removal: 2
sched before adjust: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[0, i1, i2] -> [64 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[0, i1, i2] -> [64 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
final schedule: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
final access: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [4096, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

Autogen slice:{ padded16_global_wrapper_stencil_BANK_0[i0] -> padded16_global_wrapper_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(16padded16_global_wrapper_s0_y + floor((padded16_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(padded16_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2]
domain: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] }
	 rewrite access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+1]
domain: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+2]
domain: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+3]
domain: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] }
	Add TB output port: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
Autogen slice:{ padded16_global_wrapper_stencil_BANK_0[i0] -> padded16_global_wrapper_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(16padded16_global_wrapper_s0_y + floor((padded16_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(padded16_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
access map expr:[64*i1+i2]
domain: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0[64i1 + i2] }
tb output access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
	Access map decouple reuse: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
TB  : --- padded16_global_wrapper_stencil_BANK_0_0_tb
	---- 4 in ports
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_0
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_tb[4092] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_1
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_tb[1] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_tb[4093] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_2
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_tb[2] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_tb[4094] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_3
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_tb[3] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_tb[4095] }

	---- 1 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_tb[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_read_tb_in
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_0
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_1
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_2
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_3
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_read_tb_out
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out

TB Schedule: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15; op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
SRAM: --- padded16_global_wrapper_stencil_BANK_0_sram
	---- 4 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4092] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4093] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4094] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4095] }

	---- 4 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_0
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4092] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_1
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4093] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_2
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4094] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_3
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_0
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_1
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_2
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_3
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_0
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_1
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_2
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_3

SRAM Schedule: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15; op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
after vectorization codegen: padded16_global_wrapper_stencil_BANK_0_0_agg
--- padded16_global_wrapper_stencil_BANK_0_0_agg
	---- 1 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in
			dom : { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_0_0_agg[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_agg[4095] }

	---- 4 out ports:
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_0
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_agg[4092] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_1
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_agg[1] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_agg[4093] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_2
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_agg[2] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_agg[4094] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_3
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_agg[3] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_agg[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write_agg_in
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write_agg_out
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_0
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_1
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_2
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_3

after vectorization codegen: padded16_global_wrapper_stencil_BANK_0_0_tb
--- padded16_global_wrapper_stencil_BANK_0_0_tb
	---- 4 in ports
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_0
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_tb[4092] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_1
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_tb[1] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_tb[4093] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_2
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_tb[2] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_tb[4094] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_3
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_tb[3] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_tb[4095] }

	---- 1 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0_0_tb[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_read_tb_in
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_0
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_1
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_2
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_3
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_read_tb_out
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out

after vectorization codegen: padded16_global_wrapper_stencil_BANK_0_sram
--- padded16_global_wrapper_stencil_BANK_0_sram
	---- 4 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4092] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4093] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4094] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4095] }

	---- 4 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_0
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4092] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_1
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4093] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_2
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4094] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_3
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_0
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_1
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_2
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_3
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_0
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_1
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_2
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_3

CGPL level :0
impl inputs: {padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0}
impl outpts: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58}
rddom: { padded16_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
ls = { op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] }
v = 0
Bank writers: 
	 bank NO.0
		writers: {padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0}
	 bank NO.1
		writers: {padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.0
		readers: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60}
	 bank NO.1
		readers: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58}
Shift Register Output: 
	memtiles IO:: 
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58, delay = 128
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60, delay = 64
	register IO:: 
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62, delay = 2
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49, delay = 0

--- padded16_global_wrapper_stencil_BANK_1
	---- 1 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
			dom : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_1[0, 0] }
			max location: { padded16_global_wrapper_stencil_BANK_1[63, 63] }

	---- 1 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [128 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_1[0, 0] }
			max location: { padded16_global_wrapper_stencil_BANK_1[63, 63] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58

Stride inner most:  1
{padded16_global_wrapper_stencil[d0, d1] -> padded16_global_wrapper_stencil[floor((1*d1 + 64*d0)/1)] }
reduce map: { padded16_global_wrapper_stencil_BANK_1[d0, d1] -> padded16_global_wrapper_stencil_BANK_1[64d0 + d1] }
linear map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
linear map: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
after ubuffer regen: --- padded16_global_wrapper_stencil_BANK_1
	---- 1 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
			dom : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_1[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1[4095] }

	---- 1 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [128 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_1[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58

addr need tight: {}
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [128 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [128 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }

	UBuffer after address tighten--- padded16_global_wrapper_stencil_BANK_1
	---- 1 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
			dom : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_1[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1[4095] }

	---- 1 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [128 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_1[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58

getting rddom
rddom = { padded16_global_wrapper_stencil_BANK_1[i0] : 0 <= i0 <= 4095 }
Vectorization buffer capacity: 4096

	UBuffer after cgpl optimization--- padded16_global_wrapper_stencil_BANK_1
	---- 1 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
			dom : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_1[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1[4095] }

	---- 1 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [128 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_1[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58

find bd for op :op_hcompute_padded16_global_wrapper_stencil
	find candidate: padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
find bd for op :op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128
	find candidate: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_read
	aff : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x)] }
	div dim: 0
getting rddom
rddom = { padded16_global_wrapper_stencil_BANK_1[i0] : 0 <= i0 <= 4095 }
vectorization buffer capacity: 4096
vectorization buf name: padded16_global_wrapper_stencil_BANK_1
	 original range input access map: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
	 dim id: 2
Ext by dim: {4096}
  buffer_vectorization Vectorizing: padded16_global_wrapper_stencil_BANK_1
   On addr dim: 0, fetch_width: 4
--- padded16_global_wrapper_stencil_BANK_1
	---- 1 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
			dom : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_1[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1[4095] }

	---- 1 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [128 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_1[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58

in bundle  = 1
out bundle = 1
Vectorize input port bundle: padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
	vectorize input port: padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [4096, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

origin: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }, transform: { padded16_global_wrapper_stencil_BANK_1[d0] -> padded16_global_wrapper_stencil_BANK_1_0_agg[d0] }
access map : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_padded16_global_wrapper_stencil[i0, i1, i2] -> op_hcompute_padded16_global_wrapper_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_padded16_global_wrapper_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_padded16_global_wrapper_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
	sched after trans: { op_hcompute_padded16_global_wrapper_stencil[i0 = 0, i1, i2] -> [64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_padded16_global_wrapper_stencil[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Autogen slice:{ padded16_global_wrapper_stencil_BANK_1[i0] -> padded16_global_wrapper_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
trans max: 1023 , origin max: 1023
agg2sram sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1_0_agg[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1_0_agg[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
AGG : --- padded16_global_wrapper_stencil_BANK_1_0_agg
	---- 1 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in
			dom : { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1_0_agg[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_agg[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_agg[4095] }

	---- 4 out ports:
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_0
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_agg[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_agg[4092] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_1
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_agg[1] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_agg[4093] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_2
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_agg[2] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_agg[4094] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_3
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_agg[3] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_agg[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write_agg_in
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write_agg_out
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_0
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_1
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_2
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_3

AGG Schedule: { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63; op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Vectorize output port bundle: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_read
	Vectorize output port: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
Autogen slice:{ padded16_global_wrapper_stencil_BANK_1[i0] -> padded16_global_wrapper_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
Range slice: { padded16_global_wrapper_stencil_BANK_1[i0] -> padded16_global_wrapper_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
after slice{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(16padded16_global_wrapper_s0_y + floor((padded16_global_wrapper_s0_x)/4))] }
	aff : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(16padded16_global_wrapper_s0_y + floor((padded16_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(padded16_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 2 denom: 4
	Trans str{op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[d0, d1, d2]->op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[d0, d1, floor(d2/4), d2%4]}
{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[d0, d1, d2] -> op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[d0, d1, o2, o3] : (-d2 + o3) mod 4 = 0 and -3 + d2 <= 4o2 <= d2 and 0 <= o3 <= 3 }
access map : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[0, i1, i2, i3] -> padded16_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Preliminary vectorization dim: 2
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[i0, i1, i2, i3] -> [(16i1 + i2)] }
after removal: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[i0, i1, i2, i3] -> [(16i1 + i2)] }
new: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[0, i1, i2, i3] -> padded16_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
remove: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[0, i1, i2, i3] -> padded16_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
access map : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[0, i1, i2, i3] -> padded16_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Vectorization dimension: 2
	aff : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[i0, i1, i2, i3] -> [(16i1 + i2)] }
	div dim: 0
rem: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[0, i1, i2, i3] -> padded16_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
new: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[0, i1, i2, i3] -> padded16_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
base_str : {op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[i0=0, i1=0, i2=0, i3]}
base_str : {op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[i0=0, i1=0, i2=0, i3]}
	new: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[i0 = 0, i1 = 0, i2 = 0, i3] }
	rem: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[i0 = 0, i1 = 0, i2 = 0, i3] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[i0, i1, i2, i3 = 0] }
sched domain: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[i0, i1, i2, i3 = 0] }
remove dimension: {3}
before:{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[0, i1, i2, i3] -> padded16_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
after:{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[0, i1, i2, 0] -> padded16_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
remove dimension: {3}
sched before projection: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[0, i1, i2] -> [128 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vectorization dimension after irrelevant dimension removal: 2
sched before adjust: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[0, i1, i2] -> [128 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[0, i1, i2] -> [128 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
final schedule: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
final access: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [4096, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

Autogen slice:{ padded16_global_wrapper_stencil_BANK_1[i0] -> padded16_global_wrapper_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(16padded16_global_wrapper_s0_y + floor((padded16_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(padded16_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2]
domain: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[64i1 + 4i2] }
	 rewrite access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+1]
domain: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+2]
domain: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+3]
domain: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] }
	Add TB output port: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
Autogen slice:{ padded16_global_wrapper_stencil_BANK_1[i0] -> padded16_global_wrapper_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(16padded16_global_wrapper_s0_y + floor((padded16_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(padded16_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
access map expr:[64*i1+i2]
domain: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1[64i1 + i2] }
tb output access map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
	Access map decouple reuse: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [128 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [128 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
TB  : --- padded16_global_wrapper_stencil_BANK_1_0_tb
	---- 4 in ports
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_0
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_tb[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_tb[4092] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_1
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_tb[1] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_tb[4093] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_2
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_tb[2] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_tb[4094] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_3
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_tb[3] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_tb[4095] }

	---- 1 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [128 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_tb[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_tb[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_read_tb_in
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_0
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_1
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_2
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_3
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_read_tb_out
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out

TB Schedule: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15; op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [128 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
SRAM: --- padded16_global_wrapper_stencil_BANK_1_sram
	---- 4 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4092] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4093] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4094] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4095] }

	---- 4 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_0
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4092] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_1
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4093] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_2
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4094] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_3
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_0
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_1
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_2
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_3
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_0
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_1
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_2
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_3

SRAM Schedule: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15; op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
after vectorization codegen: padded16_global_wrapper_stencil_BANK_1_0_agg
--- padded16_global_wrapper_stencil_BANK_1_0_agg
	---- 1 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in
			dom : { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_BANK_1_0_agg[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_agg[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_agg[4095] }

	---- 4 out ports:
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_0
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_agg[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_agg[4092] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_1
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_agg[1] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_agg[4093] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_2
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_agg[2] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_agg[4094] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_3
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_agg[3] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_agg[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write_agg_in
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write_agg_out
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_0
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_1
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_2
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_out_3

after vectorization codegen: padded16_global_wrapper_stencil_BANK_1_0_tb
--- padded16_global_wrapper_stencil_BANK_1_0_tb
	---- 4 in ports
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_0
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_tb[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_tb[4092] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_1
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_tb[1] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_tb[4093] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_2
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_tb[2] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_tb[4094] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_3
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_tb[3] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_tb[4095] }

	---- 1 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [128 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_BANK_1_0_tb[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1_0_tb[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_read_tb_in
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_0
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_1
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_2
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_3
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_read_tb_out
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out

after vectorization codegen: padded16_global_wrapper_stencil_BANK_1_sram
--- padded16_global_wrapper_stencil_BANK_1_sram
	---- 4 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4092] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4093] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4094] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4095] }

	---- 4 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_0
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4092] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_1
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4093] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_2
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4094] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_3
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_0
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_1
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_2
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_3
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_0
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_1
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_2
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_3

bank id: 0
rd dom: { padded16_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
	rel map: {0, 1, 1}
	rel dim: 2
	rel dim stride: 4
out_fetch_ii: 4
bank id: 1
rd dom: { padded16_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
	rel map: {0, 1, 1}
	rel dim: 2
	rel dim stride: 4
out_fetch_ii: 4
bank id: 0, to be merged: {0, 1}
	Group: 0: {0, 1}
	Perform bank merging!
	subcomponent keys:padded16_global_wrapper_stencil_BANK_1_0_agg
	subcomponent keys:padded16_global_wrapper_stencil_BANK_1_0_tb
	subcomponent keys:padded16_global_wrapper_stencil_BANK_1_sram
--- padded16_global_wrapper_stencil_BANK_1_sram
	---- 4 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4092] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4093] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4094] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4095] }

	---- 4 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_0
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4092] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_1
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4093] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_2
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4094] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_3
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { padded16_global_wrapper_stencil_BANK_1_sram[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_0
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_1
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_2
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_3
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_0
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_1
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_2
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_3

	subcomponent keys:padded16_global_wrapper_stencil_BANK_0_0_agg
	subcomponent keys:padded16_global_wrapper_stencil_BANK_0_0_tb
	subcomponent keys:padded16_global_wrapper_stencil_BANK_0_sram
--- padded16_global_wrapper_stencil_BANK_0_sram
	---- 4 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4092] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4093] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4094] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4095] }

	---- 4 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_0
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4092] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_1
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4093] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_2
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4094] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_3
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { padded16_global_wrapper_stencil_BANK_0_sram[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_0
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_1
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_2
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_3
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_0
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_1
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_2
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_3

new banks id: 2
get SRAM port schedule: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
get SRAM port schedule: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
get SRAM port schedule: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
	 output sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
	adjust temp sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
--- padded16_global_wrapper_stencil_bank_2_sram
	---- 4 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_sram[0] }
			max location: { padded16_global_wrapper_stencil_bank_2_sram[4092] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_sram[1] }
			max location: { padded16_global_wrapper_stencil_bank_2_sram[4093] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_sram[2] }
			max location: { padded16_global_wrapper_stencil_bank_2_sram[4094] }

		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_sram[3] }
			max location: { padded16_global_wrapper_stencil_bank_2_sram[4095] }

	---- 8 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_0
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_sram[0] }
			max location: { padded16_global_wrapper_stencil_bank_2_sram[4092] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_1
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_bank_2_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_sram[1] }
			max location: { padded16_global_wrapper_stencil_bank_2_sram[4093] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_2
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_bank_2_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_sram[2] }
			max location: { padded16_global_wrapper_stencil_bank_2_sram[4094] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_3
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_bank_2_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_sram[3] }
			max location: { padded16_global_wrapper_stencil_bank_2_sram[4095] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_0
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_sram[0] }
			max location: { padded16_global_wrapper_stencil_bank_2_sram[4092] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_1
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_bank_2_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_sram[1] }
			max location: { padded16_global_wrapper_stencil_bank_2_sram[4093] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_2
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_bank_2_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_sram[2] }
			max location: { padded16_global_wrapper_stencil_bank_2_sram[4094] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_3
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_bank_2_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_sram[3] }
			max location: { padded16_global_wrapper_stencil_bank_2_sram[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_0
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_1
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_2
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_in_3
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_0
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_1
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_2
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_3
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_0
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_1
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_2
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_3

--- padded16_global_wrapper_stencil_bank_2
	---- 1 in ports
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
			dom : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_bank_2[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_bank_2[0] }
			max location: { padded16_global_wrapper_stencil_bank_2[4095] }

	---- 2 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_bank_2[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [128 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_bank_2[0] }
			max location: { padded16_global_wrapper_stencil_bank_2[4095] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_bank_2[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_bank_2[0] }
			max location: { padded16_global_wrapper_stencil_bank_2[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0_write
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_read
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60

sub component buf: agg
sub component buf: tb
sub component buf: sram
sub component buf: agg
sub component buf: tb
sub component buf: sram
micor buf: --- padded16_global_wrapper_stencil_bank_2_0_tb
	---- 4 in ports
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_0
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_0_tb[0] }
			max location: { padded16_global_wrapper_stencil_bank_2_0_tb[4092] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_1
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_0_tb[1] }
			max location: { padded16_global_wrapper_stencil_bank_2_0_tb[4093] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_2
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_0_tb[2] }
			max location: { padded16_global_wrapper_stencil_bank_2_0_tb[4094] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_3
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_0_tb[3] }
			max location: { padded16_global_wrapper_stencil_bank_2_0_tb[4095] }

	---- 1 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [128 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_bank_2_0_tb[0] }
			max location: { padded16_global_wrapper_stencil_bank_2_0_tb[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_read_tb_in
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_0
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_1
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_2
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out_3
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_read_tb_out
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58_out

micor buf: --- padded16_global_wrapper_stencil_bank_2_1_tb
	---- 4 in ports
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_0
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_1_tb[0] }
			max location: { padded16_global_wrapper_stencil_bank_2_1_tb[4092] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_1
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_1_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_1_tb[1] }
			max location: { padded16_global_wrapper_stencil_bank_2_1_tb[4093] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_2
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_1_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_1_tb[2] }
			max location: { padded16_global_wrapper_stencil_bank_2_1_tb[4094] }

		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_3
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_1_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { padded16_global_wrapper_stencil_bank_2_1_tb[3] }
			max location: { padded16_global_wrapper_stencil_bank_2_1_tb[4095] }

	---- 1 out ports:
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out
			dom : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_1[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_1[root = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_1[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
			min location: { padded16_global_wrapper_stencil_bank_2_1_tb[0] }
			max location: { padded16_global_wrapper_stencil_bank_2_1_tb[4095] }

	---- Input Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_read_tb_in
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_0
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_1
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_2
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out_3
	---- Output Bundles
		padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_read_tb_out
		---- Ports...
			padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60_out

Bank writers: 
	 bank NO.2
		writers: {padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.2
		readers: {padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58, padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60}
Shift Register Output: 
	memtiles IO:: 
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58, delay = 128
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60, delay = 64
	register IO:: 
		 padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62, delay = 2
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51, delay = 0
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50->padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61, delay = 1
		 padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61->padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49, delay = 0

add input: padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_0 to pt2wire
add output: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_58 to pt2wire
add output: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_59 to pt2wire
add output: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_60 to pt2wire
add output: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_61 to pt2wire
add output: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_62 to pt2wire
add output: padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_63 to pt2wire
add output: padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_49 to pt2wire
add output: padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_50 to pt2wire
add output: padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_51 to pt2wire
add output: padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_52 to pt2wire
add output: padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_53 to pt2wire
add output: padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_54 to pt2wire
agg2sram_opt debug start 
sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
write map: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
{ padded16_global_wrapper_stencil_bank_2_sram[i0] : -3 <= i0 <= 4095 and (((2 + i0) mod 4 = 0 and -1 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 4092 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 4093 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
read map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
sched: { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
op_name: op_hcompute_padded16_global_wrapper_stencil_agg2sram_0, extent_0: 64, stride_0: 1
sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
write map: { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_bank_2_0_agg[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
{ padded16_global_wrapper_stencil_bank_2_0_agg[i0] : -3 <= i0 <= 4095 and (i0 >= 0 or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 4092 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 4093 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [128 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
write map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
{ padded16_global_wrapper_stencil_bank_2_0_tb[i0] : -3 <= i0 <= 4095 and (i0 >= 0 or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 4092 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 4093 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_1[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
write map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
{ padded16_global_wrapper_stencil_bank_2_1_tb[i0] : -3 <= i0 <= 4095 and (i0 >= 0 or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 4092 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 4093 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_1[root = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
	op name: op_hcompute_padded16_global_wrapper_stencil_agg2sram_0
	Sched: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",4,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
adding new agg2sram opt cfg for: op_hcompute_padded16_global_wrapper_stencil_agg2sram_0: mode 0, agg_read_padding 0, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",16,0
"write_data_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_padded16_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_padded16_global_wrapper_stencil_in2agg_0
	Sched: { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }

"dimensionality",3,0
"cycle_starting_addr",0,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_padded16_global_wrapper_stencil_in2agg_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_global_wrapper_stencil_bank_2_0_agg[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	op name: op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0
	Sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",126,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0
	Sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [128 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }

"dimensionality",3,0
"cycle_starting_addr",128,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1
	Sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",61,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> padded16_global_wrapper_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_1
	Sched: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_1[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64 + 64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }

"dimensionality",3,0
"cycle_starting_addr",64,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_padded16_global_wrapper_stencilop_hcompute_padded16_global_wrapper_stencil_delay_64_tb2out_1[root = 0, i1, i2] -> padded16_global_wrapper_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
{"agg2sram_0":{"agg_read_padding":[0],"cycle_starting_addr":[4],"cycle_stride":[4,64],"delay":[0],"dimensionality":2,"extent":[16,64],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[1,0],"write_data_starting_addr":[0],"write_data_stride":[1,16]},"in2agg_0":{"cycle_starting_addr":[0],"cycle_stride":[1,64],"dimensionality":2,"extent":[64,64],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_0":{"cycle_starting_addr":[126],"cycle_stride":[4,64],"dimensionality":2,"extent":[16,64],"read_data_starting_addr":[0],"read_data_stride":[1,16],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_1":{"cycle_starting_addr":[61],"cycle_stride":[4,64],"dimensionality":2,"extent":[16,64],"read_data_starting_addr":[0],"read_data_stride":[1,16],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"tb2out_0":{"cycle_starting_addr":[128],"cycle_stride":[1,64],"dimensionality":2,"extent":[64,64],"read_data_starting_addr":[0],"read_data_stride":[1,0]},"tb2out_1":{"cycle_starting_addr":[64],"cycle_stride":[1,64],"dimensionality":2,"extent":[64,64],"read_data_starting_addr":[0],"read_data_stride":[1,0]}}
Add lake node:ub_padded16_global_wrapper_stencil_bank_2 with input_num = 1, output_num = 2
Config mode: lake
Generating Verilog Testing Collateral for: ub_padded16_global_wrapper_stencil_bank_2
Module: cgralib.Mem_amber(ID:_U28, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'data_out_1':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U28__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs2__use_prebuilt_memTrue__width16
addr need tight: {}
Global range: { padded16_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Sorted ops: {op_hcompute_padded16_global_wrapper_stencil}
  Before Merge: 
    acc map: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
    sched: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
    reduce_map: { padded16_stencil[d0, d1] -> padded16_stencil[64d0 + d1] }
  Dim: 2
    Schedule dom range: 64, current_level_stride : 1, up_level_stride : 64
    Address dom range: 64, current_level_stride : 1, up_level_stride : 64
span range: 64, up_level_stride : 64
span range: 64, up_level_stride : 64
	access map merge pair: {{0, 1} }
	schedule merge pair: {{0, 1} }
merge pair: {0, 1} , {0, 1} 
access map: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_stencil[64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
  After Merge: 
    schedule: { op_hcompute_padded16_global_wrapper_stencil[0, i1] -> [i1] : 0 <= i1 <= 4095 }
"dimensionality",2,0
"cycle_starting_addr",0,0
"extent_1",1,0
"cycle_stride_1",0,0
"extent_0",4096,0
"cycle_stride_0",1,0
"read_data_starting_addr",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	Read map: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> padded16_stencil[padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
{"glb2out_0":{"cycle_starting_addr":[0],"cycle_stride":[1],"dimensionality":1,"extent":[4096],"read_data_starting_addr":[0],"read_data_stride":[1]}}
Visit op: op_hcompute_hw_output_stencil
Schedule to generate affine controller: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
pma: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi)] : root = 0 and 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
sched = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(390 + 64hw_output_s0_y_yi + hw_output_s0_x_xi)] }
  dom = { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 57 and 0 <= hw_output_s0_x_xi <= 57 }
ls = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] }
v = 0
Add ub node to be aff ctrl
"dimensionality",3,0
"cycle_starting_addr",390,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",58,0
"cycle_stride_1",64,0
"extent_0",58,0
"cycle_stride_0",1,0
Generating Verilog Testing Collateral for: op_hcompute_hw_output_stencil_port_controller
Module: cgralib.Mem_amber(ID:_U35, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'stencil_valid':Bit, 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U35__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validTrue__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
Find compute
Done Finding compute , op Latency : 0, read Latency: 0
Delaying read
Returning delayed...
Delaying exe
Returning delayed...
Delaying writes
Returning delayed...
getting incoming buffers to op_hcompute_hw_output_stencil
  consumed: cim_output_stencil
Visit op: op_hcompute_cim_output_stencil
getting incoming buffers to op_hcompute_cim_output_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
  consumed: cim_stencil
Visit op: op_hcompute_cim_stencil
getting incoming buffers to op_hcompute_cim_stencil
  consumed: lgxx_stencil
  consumed: lgxy_stencil
  consumed: lgyy_stencil
Visit op: op_hcompute_lgyy_stencil_1
getting incoming buffers to op_hcompute_lgyy_stencil_1
  consumed: lgyy_stencil_clkwrk_dsa4
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
  consumed: lyy_stencil
Visit op: op_hcompute_lgyy_stencil
getting incoming buffers to op_hcompute_lgyy_stencil
Visit op: op_hcompute_lyy_stencil
getting incoming buffers to op_hcompute_lyy_stencil
  consumed: grad_y_unclamp_stencil
Visit op: op_hcompute_lgxy_stencil_1
getting incoming buffers to op_hcompute_lgxy_stencil_1
  consumed: lgxy_stencil_clkwrk_dsa3
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
  consumed: lxy_stencil
Visit op: op_hcompute_lgxy_stencil
getting incoming buffers to op_hcompute_lgxy_stencil
Visit op: op_hcompute_lxy_stencil
getting incoming buffers to op_hcompute_lxy_stencil
  consumed: grad_x_unclamp_stencil
  consumed: grad_y_unclamp_stencil
Visit op: op_hcompute_grad_y_unclamp_stencil_1
getting incoming buffers to op_hcompute_grad_y_unclamp_stencil_1
  consumed: grad_y_unclamp_stencil_clkwrk_dsa1
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
Visit op: op_hcompute_grad_y_unclamp_stencil
getting incoming buffers to op_hcompute_grad_y_unclamp_stencil
Visit op: op_hcompute_lgxx_stencil_1
getting incoming buffers to op_hcompute_lgxx_stencil_1
  consumed: lgxx_stencil_clkwrk_dsa2
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
  consumed: lxx_stencil
Visit op: op_hcompute_lgxx_stencil
getting incoming buffers to op_hcompute_lgxx_stencil
Visit op: op_hcompute_lxx_stencil
getting incoming buffers to op_hcompute_lxx_stencil
  consumed: grad_x_unclamp_stencil
Visit op: op_hcompute_grad_x_unclamp_stencil_1
getting incoming buffers to op_hcompute_grad_x_unclamp_stencil_1
  consumed: grad_x_unclamp_stencil_clkwrk_dsa0
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
  consumed: padded16_global_wrapper_stencil
Visit op: op_hcompute_grad_x_unclamp_stencil
getting incoming buffers to op_hcompute_grad_x_unclamp_stencil
Visit op: op_hcompute_padded16_global_wrapper_stencil
getting incoming buffers to op_hcompute_padded16_global_wrapper_stencil
  consumed: padded16_stencil
Schedule to generate affine controller: { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
pma: { op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x)] : root = 0 and 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
sched = { op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] -> [(64padded16_global_wrapper_s0_y + padded16_global_wrapper_s0_x)] }
  dom = { op_hcompute_padded16_global_wrapper_stencil[root = 0, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] : 0 <= padded16_global_wrapper_s0_y <= 63 and 0 <= padded16_global_wrapper_s0_x <= 63 }
ls = { op_hcompute_padded16_global_wrapper_stencil[root, padded16_global_wrapper_s0_y, padded16_global_wrapper_s0_x] }
v = 0
Add ub node to be aff ctrl
"dimensionality",3,0
"cycle_starting_addr",0,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
Generating Verilog Testing Collateral for: op_hcompute_padded16_global_wrapper_stencil_port_controller
Module: cgralib.Mem_amber(ID:_U39, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'stencil_valid':Bit, 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U39__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validTrue__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
Find compute
Done Finding compute , op Latency : 0, read Latency: 0
Delaying read
Returning delayed...
Delaying exe
Returning delayed...
Delaying writes
Returning delayed...
Module: global.harris
  Type: {'clk':coreir.clkIn, 'reset':BitIn, 'hw_output_stencil_op_hcompute_hw_output_stencil_write_valid':Bit, 'hw_output_stencil_op_hcompute_hw_output_stencil_write':Bit[16][1], 'padded16_stencil_op_hcompute_padded16_global_wrapper_stencil_read_en':Bit, 'padded16_stencil_op_hcompute_padded16_global_wrapper_stencil_read':BitIn[16][1]}
  Def? Yes
  Def:
    Instances:
      _U43 : reg(has_clr:False, has_en:False, has_rst:False, width:16)
      cim_output_stencil : cim_output_stencil_ub
      cim_stencil : cim_stencil_ub
      grad_x_unclamp_stencil : grad_x_unclamp_stencil_ub
      grad_x_unclamp_stencil_clkwrk_dsa0 : grad_x_unclamp_stencil_clkwrk_dsa0_ub
      grad_y_unclamp_stencil : grad_y_unclamp_stencil_ub
      grad_y_unclamp_stencil_clkwrk_dsa1 : grad_y_unclamp_stencil_clkwrk_dsa1_ub
      lgxx_stencil : lgxx_stencil_ub
      lgxx_stencil_clkwrk_dsa2 : lgxx_stencil_clkwrk_dsa2_ub
      lgxy_stencil : lgxy_stencil_ub
      lgxy_stencil_clkwrk_dsa3 : lgxy_stencil_clkwrk_dsa3_ub
      lgyy_stencil : lgyy_stencil_ub
      lgyy_stencil_clkwrk_dsa4 : lgyy_stencil_clkwrk_dsa4_ub
      lxx_stencil : lxx_stencil_ub
      lxy_stencil : lxy_stencil_ub
      lyy_stencil : lyy_stencil_ub
      op_hcompute_cim_output_stencil : cu_op_hcompute_cim_output_stencil
      op_hcompute_cim_stencil : cu_op_hcompute_cim_stencil
      op_hcompute_grad_x_unclamp_stencil : cu_op_hcompute_grad_x_unclamp_stencil
      op_hcompute_grad_x_unclamp_stencil_1 : cu_op_hcompute_grad_x_unclamp_stencil_1
      op_hcompute_grad_y_unclamp_stencil : cu_op_hcompute_grad_y_unclamp_stencil
      op_hcompute_grad_y_unclamp_stencil_1 : cu_op_hcompute_grad_y_unclamp_stencil_1
      op_hcompute_hw_output_stencil : cu_op_hcompute_hw_output_stencil
      op_hcompute_hw_output_stencil_exe_start : op_hcompute_hw_output_stencil_exe_start_pt__U37
      op_hcompute_hw_output_stencil_port_controller : Mem_amber(ID:_U35, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
      op_hcompute_hw_output_stencil_port_controller_clk_en_const : const
      op_hcompute_hw_output_stencil_read_start : op_hcompute_hw_output_stencil_read_start_pt__U36
      op_hcompute_hw_output_stencil_write_start : op_hcompute_hw_output_stencil_write_start_pt__U38
      op_hcompute_lgxx_stencil : cu_op_hcompute_lgxx_stencil
      op_hcompute_lgxx_stencil_1 : cu_op_hcompute_lgxx_stencil_1
      op_hcompute_lgxy_stencil : cu_op_hcompute_lgxy_stencil
      op_hcompute_lgxy_stencil_1 : cu_op_hcompute_lgxy_stencil_1
      op_hcompute_lgyy_stencil : cu_op_hcompute_lgyy_stencil
      op_hcompute_lgyy_stencil_1 : cu_op_hcompute_lgyy_stencil_1
      op_hcompute_lxx_stencil : cu_op_hcompute_lxx_stencil
      op_hcompute_lxy_stencil : cu_op_hcompute_lxy_stencil
      op_hcompute_lyy_stencil : cu_op_hcompute_lyy_stencil
      op_hcompute_padded16_global_wrapper_stencil : cu_op_hcompute_padded16_global_wrapper_stencil
      op_hcompute_padded16_global_wrapper_stencil_exe_start : op_hcompute_padded16_global_wrapper_stencil_exe_start_pt__U41
      op_hcompute_padded16_global_wrapper_stencil_port_controller : Mem_amber(ID:_U39, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
      op_hcompute_padded16_global_wrapper_stencil_port_controller_clk_en_const : const
      op_hcompute_padded16_global_wrapper_stencil_read_start : op_hcompute_padded16_global_wrapper_stencil_read_start_pt__U40
      op_hcompute_padded16_global_wrapper_stencil_write_start : op_hcompute_padded16_global_wrapper_stencil_write_start_pt__U42
      padded16_global_wrapper_stencil : padded16_global_wrapper_stencil_ub
    Connections:
      cim_output_stencil.reset <=> self.reset
      cim_stencil.reset <=> self.reset
      grad_x_unclamp_stencil.reset <=> self.reset
      grad_x_unclamp_stencil_clkwrk_dsa0.reset <=> self.reset
      grad_y_unclamp_stencil.reset <=> self.reset
      grad_y_unclamp_stencil_clkwrk_dsa1.reset <=> self.reset
      lgxx_stencil.reset <=> self.reset
      lgxx_stencil_clkwrk_dsa2.reset <=> self.reset
      lgxy_stencil.reset <=> self.reset
      lgxy_stencil_clkwrk_dsa3.reset <=> self.reset
      lgyy_stencil.reset <=> self.reset
      lgyy_stencil_clkwrk_dsa4.reset <=> self.reset
      lxx_stencil.reset <=> self.reset
      lxy_stencil.reset <=> self.reset
      lyy_stencil.reset <=> self.reset
      padded16_global_wrapper_stencil.reset <=> self.reset
      op_hcompute_hw_output_stencil_port_controller.flush <=> self.reset
      op_hcompute_padded16_global_wrapper_stencil_port_controller.flush <=> self.reset
      op_hcompute_hw_output_stencil.hw_output_stencil_op_hcompute_hw_output_stencil_write <=> self.hw_output_stencil_op_hcompute_hw_output_stencil_write
      op_hcompute_hw_output_stencil_port_controller.clk <=> self.clk
      op_hcompute_padded16_global_wrapper_stencil_port_controller.clk <=> self.clk
      op_hcompute_hw_output_stencil_port_controller.clk_en <=> op_hcompute_hw_output_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_output_stencil_port_controller.rst_n <=> op_hcompute_hw_output_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_output_stencil_port_controller.stencil_valid <=> op_hcompute_hw_output_stencil_read_start.in
      op_hcompute_hw_output_stencil_exe_start.in <=> op_hcompute_hw_output_stencil_port_controller.stencil_valid
      op_hcompute_hw_output_stencil_port_controller.stencil_valid <=> op_hcompute_hw_output_stencil_write_start.in
      op_hcompute_hw_output_stencil_write_start.out <=> self.hw_output_stencil_op_hcompute_hw_output_stencil_write_valid
      cim_output_stencil.op_hcompute_hw_output_stencil_read <=> op_hcompute_hw_output_stencil.cim_output_stencil_op_hcompute_hw_output_stencil_read
      cim_output_stencil.op_hcompute_cim_output_stencil_write <=> op_hcompute_cim_output_stencil.cim_output_stencil_op_hcompute_cim_output_stencil_write
      cim_stencil.op_hcompute_cim_output_stencil_read <=> op_hcompute_cim_output_stencil.cim_stencil_op_hcompute_cim_output_stencil_read
      cim_stencil.op_hcompute_cim_stencil_write <=> op_hcompute_cim_stencil.cim_stencil_op_hcompute_cim_stencil_write
      lgxx_stencil.op_hcompute_cim_stencil_read <=> op_hcompute_cim_stencil.lgxx_stencil_op_hcompute_cim_stencil_read
      lgxy_stencil.op_hcompute_cim_stencil_read <=> op_hcompute_cim_stencil.lgxy_stencil_op_hcompute_cim_stencil_read
      lgyy_stencil.op_hcompute_cim_stencil_read <=> op_hcompute_cim_stencil.lgyy_stencil_op_hcompute_cim_stencil_read
      lgyy_stencil.op_hcompute_lgyy_stencil_1_write <=> op_hcompute_lgyy_stencil_1.lgyy_stencil_op_hcompute_lgyy_stencil_1_write
      lgyy_stencil_clkwrk_dsa4.op_hcompute_lgyy_stencil_1_read <=> op_hcompute_lgyy_stencil_1.lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_1_read
      lyy_stencil.op_hcompute_lgyy_stencil_1_read <=> op_hcompute_lgyy_stencil_1.lyy_stencil_op_hcompute_lgyy_stencil_1_read
      lgyy_stencil_clkwrk_dsa4.op_hcompute_lgyy_stencil_write <=> op_hcompute_lgyy_stencil.lgyy_stencil_clkwrk_dsa4_op_hcompute_lgyy_stencil_write
      lyy_stencil.op_hcompute_lyy_stencil_write <=> op_hcompute_lyy_stencil.lyy_stencil_op_hcompute_lyy_stencil_write
      grad_y_unclamp_stencil.op_hcompute_lyy_stencil_read <=> op_hcompute_lyy_stencil.grad_y_unclamp_stencil_op_hcompute_lyy_stencil_read
      lgxy_stencil.op_hcompute_lgxy_stencil_1_write <=> op_hcompute_lgxy_stencil_1.lgxy_stencil_op_hcompute_lgxy_stencil_1_write
      lgxy_stencil_clkwrk_dsa3.op_hcompute_lgxy_stencil_1_read <=> op_hcompute_lgxy_stencil_1.lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_1_read
      lxy_stencil.op_hcompute_lgxy_stencil_1_read <=> op_hcompute_lgxy_stencil_1.lxy_stencil_op_hcompute_lgxy_stencil_1_read
      lgxy_stencil_clkwrk_dsa3.op_hcompute_lgxy_stencil_write <=> op_hcompute_lgxy_stencil.lgxy_stencil_clkwrk_dsa3_op_hcompute_lgxy_stencil_write
      lxy_stencil.op_hcompute_lxy_stencil_write <=> op_hcompute_lxy_stencil.lxy_stencil_op_hcompute_lxy_stencil_write
      grad_x_unclamp_stencil.op_hcompute_lxy_stencil_read <=> op_hcompute_lxy_stencil.grad_x_unclamp_stencil_op_hcompute_lxy_stencil_read
      grad_y_unclamp_stencil.op_hcompute_lxy_stencil_read <=> op_hcompute_lxy_stencil.grad_y_unclamp_stencil_op_hcompute_lxy_stencil_read
      grad_y_unclamp_stencil.op_hcompute_grad_y_unclamp_stencil_1_write <=> op_hcompute_grad_y_unclamp_stencil_1.grad_y_unclamp_stencil_op_hcompute_grad_y_unclamp_stencil_1_write
      grad_y_unclamp_stencil_clkwrk_dsa1.op_hcompute_grad_y_unclamp_stencil_1_read <=> op_hcompute_grad_y_unclamp_stencil_1.grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_1_read
      op_hcompute_grad_y_unclamp_stencil_1.padded16_global_wrapper_stencil_op_hcompute_grad_y_unclamp_stencil_1_read <=> padded16_global_wrapper_stencil.op_hcompute_grad_y_unclamp_stencil_1_read
      grad_y_unclamp_stencil_clkwrk_dsa1.op_hcompute_grad_y_unclamp_stencil_write <=> op_hcompute_grad_y_unclamp_stencil.grad_y_unclamp_stencil_clkwrk_dsa1_op_hcompute_grad_y_unclamp_stencil_write
      lgxx_stencil.op_hcompute_lgxx_stencil_1_write <=> op_hcompute_lgxx_stencil_1.lgxx_stencil_op_hcompute_lgxx_stencil_1_write
      lgxx_stencil_clkwrk_dsa2.op_hcompute_lgxx_stencil_1_read <=> op_hcompute_lgxx_stencil_1.lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_1_read
      lxx_stencil.op_hcompute_lgxx_stencil_1_read <=> op_hcompute_lgxx_stencil_1.lxx_stencil_op_hcompute_lgxx_stencil_1_read
      lgxx_stencil_clkwrk_dsa2.op_hcompute_lgxx_stencil_write <=> op_hcompute_lgxx_stencil.lgxx_stencil_clkwrk_dsa2_op_hcompute_lgxx_stencil_write
      lxx_stencil.op_hcompute_lxx_stencil_write <=> op_hcompute_lxx_stencil.lxx_stencil_op_hcompute_lxx_stencil_write
      grad_x_unclamp_stencil.op_hcompute_lxx_stencil_read <=> op_hcompute_lxx_stencil.grad_x_unclamp_stencil_op_hcompute_lxx_stencil_read
      grad_x_unclamp_stencil.op_hcompute_grad_x_unclamp_stencil_1_write <=> op_hcompute_grad_x_unclamp_stencil_1.grad_x_unclamp_stencil_op_hcompute_grad_x_unclamp_stencil_1_write
      grad_x_unclamp_stencil_clkwrk_dsa0.op_hcompute_grad_x_unclamp_stencil_1_read <=> op_hcompute_grad_x_unclamp_stencil_1.grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_1_read
      op_hcompute_grad_x_unclamp_stencil_1.padded16_global_wrapper_stencil_op_hcompute_grad_x_unclamp_stencil_1_read <=> padded16_global_wrapper_stencil.op_hcompute_grad_x_unclamp_stencil_1_read
      grad_x_unclamp_stencil_clkwrk_dsa0.op_hcompute_grad_x_unclamp_stencil_write <=> op_hcompute_grad_x_unclamp_stencil.grad_x_unclamp_stencil_clkwrk_dsa0_op_hcompute_grad_x_unclamp_stencil_write
      op_hcompute_padded16_global_wrapper_stencil.padded16_global_wrapper_stencil_op_hcompute_padded16_global_wrapper_stencil_write <=> padded16_global_wrapper_stencil.op_hcompute_padded16_global_wrapper_stencil_write
      op_hcompute_padded16_global_wrapper_stencil_port_controller.stencil_valid <=> op_hcompute_padded16_global_wrapper_stencil_read_start.in
      op_hcompute_padded16_global_wrapper_stencil_exe_start.in <=> op_hcompute_padded16_global_wrapper_stencil_port_controller.stencil_valid
      op_hcompute_padded16_global_wrapper_stencil_port_controller.stencil_valid <=> op_hcompute_padded16_global_wrapper_stencil_write_start.in
      op_hcompute_padded16_global_wrapper_stencil_port_controller.clk_en <=> op_hcompute_padded16_global_wrapper_stencil_port_controller_clk_en_const.out
      op_hcompute_padded16_global_wrapper_stencil_port_controller.rst_n <=> op_hcompute_padded16_global_wrapper_stencil_port_controller_clk_en_const.out
      op_hcompute_padded16_global_wrapper_stencil_read_start.out <=> self.padded16_stencil_op_hcompute_padded16_global_wrapper_stencil_read_en
      op_hcompute_padded16_global_wrapper_stencil.padded16_stencil_op_hcompute_padded16_global_wrapper_stencil_read <=> self.padded16_stencil_op_hcompute_padded16_global_wrapper_stencil_read
      _U43.in <=> self.padded16_stencil_op_hcompute_padded16_global_wrapper_stencil_read[0]

Find top interface: clk
Find top interface: hw_output_stencil_op_hcompute_hw_output_stencil_write
Find top interface: hw_output_stencil_op_hcompute_hw_output_stencil_write_valid
Find top interface: padded16_stencil_op_hcompute_padded16_global_wrapper_stencil_read
Find top interface: padded16_stencil_op_hcompute_padded16_global_wrapper_stencil_read_en
Find top interface: reset
    Connect the read directly to write port of GLB!
    ub_cim_stencil_bank_2(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    ub_lxx_stencil_bank_2(ID:_U7, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    ub_lxy_stencil_bank_2(ID:_U14, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    ub_lyy_stencil_bank_2(ID:_U21, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    ub_padded16_global_wrapper_stencil_bank_2(ID:_U28, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    op_hcompute_hw_output_stencil_port_controller(ID:_U35, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
    Connect the read directly to write port of GLB!
    op_hcompute_padded16_global_wrapper_stencil_port_controller(ID:_U39, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
inlining op_hcompute_padded16_global_wrapper_stencil_write_start
inlining op_hcompute_padded16_global_wrapper_stencil_read_start
inlining op_hcompute_padded16_global_wrapper_stencil_exe_start
inlining op_hcompute_hw_output_stencil_write_start
inlining op_hcompute_hw_output_stencil_read_start
inlining op_hcompute_hw_output_stencil_exe_start
inlining inner_compute$bitand_649_651_652_tree$_join_i2160_i1423
inlining inner_compute$bitand_649_651_652_tree$opN_0$_join_i2157_i1423
inlining inner_compute$bitand_649_651_652_tree$opN_0$opN_0$_join_i2145_i1423
inlining inner_compute$bitand_649_651_652_tree$opN_0$opN_0$opN_0$_join_i2139_i1423
inlining inner_compute$bitand_649_651_652_tree$opN_0$opN_0$opN_1$_join_i2144_i1423
inlining inner_compute$bitand_649_651_652_tree$opN_0$opN_1$_join_i2156_i1423
inlining inner_compute$bitand_649_651_652_tree$opN_0$opN_1$opN_0$_join_i2150_i1423
inlining inner_compute$bitand_649_651_652_tree$opN_0$opN_1$opN_1$_join_i2155_i1423
inlining inner_compute$mux_6522550_i2161_i1269
inlining inner_compute$sle_650_cim_stencil_2_651_i2159_i1888
inlining inner_compute$slt_cim_stencil_1_cim_stencil_2_635_i2136_i637
inlining inner_compute$slt_cim_stencil_3_cim_stencil_2_636_i2138_i637
inlining inner_compute$slt_cim_stencil_4_cim_stencil_2_638_i2141_i637
inlining inner_compute$slt_cim_stencil_5_cim_stencil_2_640_i2143_i637
inlining inner_compute$slt_cim_stencil_6_cim_stencil_2_642_i2147_i637
inlining inner_compute$slt_cim_stencil_7_cim_stencil_2_644_i2149_i637
inlining inner_compute$slt_cim_stencil_8_cim_stencil_2_646_i2152_i637
inlining inner_compute$slt_cim_stencil_9_cim_stencil_2_648_i2154_i637
inlining inner_compute$add_587_588_593_i2204_i1808
inlining inner_compute$ashr_594_595_596_i2207_i1070
inlining inner_compute$ashr_lgxx_stencil_2_586_587_i2192_i246
inlining inner_compute$ashr_lgxy_stencil_2_586_590_i2201_i246
inlining inner_compute$ashr_lgyy_stencil_2_586_588_i2196_i246
inlining inner_compute$mul_590_590_591_i2202_i1461
inlining inner_compute$sub_589_591_592_i2203_i599
inlining inner_compute$sub_592_596_597_i2208_i440
inlining inner_compute$i2230_i2231_i131
inlining inner_compute$add_grad_x_unclamp_stencil_1_280_281_tree$_join_i2244_i364
inlining inner_compute$add_grad_x_unclamp_stencil_1_280_281_tree$opN_1$_join_i2243_i2127
inlining inner_compute$mul_padded16_global_wrapper_stencil_5_277_283_i2249_i1461
inlining inner_compute$sub_282_283_284_i2250_i1190
inlining inner_compute$sub_284_padded16_global_wrapper_stencil_6_285_i2252_i440
inlining inner_compute$i2265_i2266_i131
inlining inner_compute$add_grad_y_unclamp_stencil_1_396_397_tree$_join_i2279_i364
inlining inner_compute$add_grad_y_unclamp_stencil_1_396_397_tree$opN_1$_join_i2278_i2127
inlining inner_compute$mul_padded16_global_wrapper_stencil_11_393_399_i2284_i1461
inlining inner_compute$sub_398_399_400_i2285_i1190
inlining inner_compute$sub_400_padded16_global_wrapper_stencil_12_401_i2287_i440
inlining inner_compute$i2302_i2303_i131
inlining inner_compute$add_lxx_stencil_1_352_353_tree$_join_i2326_i364
inlining inner_compute$add_lxx_stencil_1_352_353_tree$opN_0$opN_0$_join_i2314_i364
inlining inner_compute$add_lxx_stencil_1_352_353_tree$opN_0$opN_0$opN_1$_join_i2313_i1808
inlining inner_compute$add_lxx_stencil_1_352_353_tree$opN_0$opN_1$_join_i2321_i364
inlining inner_compute$add_lxx_stencil_1_352_353_tree$opN_0$opN_1$opN_1$_join_i2320_i1808
inlining inner_compute$add_lxx_stencil_1_352_353_tree$opN_1$_join_i2325_i1808
inlining inner_compute$i2334_i2335_i131
inlining inner_compute$add_lxy_stencil_1_475_476_tree$_join_i2358_i364
inlining inner_compute$add_lxy_stencil_1_475_476_tree$opN_0$opN_0$_join_i2346_i364
inlining inner_compute$add_lxy_stencil_1_475_476_tree$opN_0$opN_0$opN_1$_join_i2345_i1808
inlining inner_compute$add_lxy_stencil_1_475_476_tree$opN_0$opN_1$_join_i2353_i364
inlining inner_compute$add_lxy_stencil_1_475_476_tree$opN_0$opN_1$opN_1$_join_i2352_i1808
inlining inner_compute$add_lxy_stencil_1_475_476_tree$opN_1$_join_i2357_i1808
inlining inner_compute$i2366_i2367_i131
inlining inner_compute$add_lyy_stencil_1_547_548_tree$_join_i2390_i364
inlining inner_compute$add_lyy_stencil_1_547_548_tree$opN_0$opN_0$_join_i2378_i364
inlining inner_compute$add_lyy_stencil_1_547_548_tree$opN_0$opN_0$opN_1$_join_i2377_i1808
inlining inner_compute$add_lyy_stencil_1_547_548_tree$opN_0$opN_1$_join_i2385_i364
inlining inner_compute$add_lyy_stencil_1_547_548_tree$opN_0$opN_1$opN_1$_join_i2384_i1808
inlining inner_compute$add_lyy_stencil_1_547_548_tree$opN_1$_join_i2389_i1808
inlining inner_compute$ashr_318_319_320_i2407_i1070
inlining inner_compute$smax_315_316_317$max_mux_i2404_i1850
inlining inner_compute$ashr_438_439_440_i2437_i1070
inlining inner_compute$smax_433_434_435$max_mux_i2426_i1850
inlining inner_compute$smax_436_434_437$max_mux_i2434_i1850
inlining inner_compute$ashr_513_514_515_i2466_i1070
inlining inner_compute$smax_510_511_512$max_mux_i2463_i1850
inlining bitand_649_651_652_tree$_join_i2160_i1423
inlining bitand_649_651_652_tree$opN_0$_join_i2157_i1423
inlining bitand_649_651_652_tree$opN_0$opN_0$_join_i2145_i1423
inlining bitand_649_651_652_tree$opN_0$opN_0$opN_0$_join_i2139_i1423
inlining bitand_649_651_652_tree$opN_0$opN_0$opN_1$_join_i2144_i1423
inlining bitand_649_651_652_tree$opN_0$opN_1$_join_i2156_i1423
inlining bitand_649_651_652_tree$opN_0$opN_1$opN_0$_join_i2150_i1423
inlining bitand_649_651_652_tree$opN_0$opN_1$opN_1$_join_i2155_i1423
inlining mux_6522550_i2161_i1269
inlining sle_650_cim_stencil_2_651_i2159_i1888
inlining slt_cim_stencil_1_cim_stencil_2_635_i2136_i637
inlining slt_cim_stencil_3_cim_stencil_2_636_i2138_i637
inlining slt_cim_stencil_4_cim_stencil_2_638_i2141_i637
inlining slt_cim_stencil_5_cim_stencil_2_640_i2143_i637
inlining slt_cim_stencil_6_cim_stencil_2_642_i2147_i637
inlining slt_cim_stencil_7_cim_stencil_2_644_i2149_i637
inlining slt_cim_stencil_8_cim_stencil_2_646_i2152_i637
inlining slt_cim_stencil_9_cim_stencil_2_648_i2154_i637
inlining add_587_588_593_i2204_i1808
inlining ashr_594_595_596_i2207_i1070
inlining ashr_lgxx_stencil_2_586_587_i2192_i246
inlining ashr_lgxy_stencil_2_586_590_i2201_i246
inlining ashr_lgyy_stencil_2_586_588_i2196_i246
inlining mul_590_590_591_i2202_i1461
inlining sub_589_591_592_i2203_i599
inlining sub_592_596_597_i2208_i440
inlining i2230_i2231_i131
inlining add_grad_x_unclamp_stencil_1_280_281_tree$_join_i2244_i364
inlining add_grad_x_unclamp_stencil_1_280_281_tree$opN_1$_join_i2243_i2127
inlining mul_padded16_global_wrapper_stencil_5_277_283_i2249_i1461
inlining sub_282_283_284_i2250_i1190
inlining sub_284_padded16_global_wrapper_stencil_6_285_i2252_i440
inlining i2265_i2266_i131
inlining add_grad_y_unclamp_stencil_1_396_397_tree$_join_i2279_i364
inlining add_grad_y_unclamp_stencil_1_396_397_tree$opN_1$_join_i2278_i2127
inlining mul_padded16_global_wrapper_stencil_11_393_399_i2284_i1461
inlining sub_398_399_400_i2285_i1190
inlining sub_400_padded16_global_wrapper_stencil_12_401_i2287_i440
inlining i2302_i2303_i131
inlining add_lxx_stencil_1_352_353_tree$_join_i2326_i364
inlining add_lxx_stencil_1_352_353_tree$opN_0$opN_0$_join_i2314_i364
inlining add_lxx_stencil_1_352_353_tree$opN_0$opN_0$opN_1$_join_i2313_i1808
inlining add_lxx_stencil_1_352_353_tree$opN_0$opN_1$_join_i2321_i364
inlining add_lxx_stencil_1_352_353_tree$opN_0$opN_1$opN_1$_join_i2320_i1808
inlining add_lxx_stencil_1_352_353_tree$opN_1$_join_i2325_i1808
inlining i2334_i2335_i131
inlining add_lxy_stencil_1_475_476_tree$_join_i2358_i364
inlining add_lxy_stencil_1_475_476_tree$opN_0$opN_0$_join_i2346_i364
inlining add_lxy_stencil_1_475_476_tree$opN_0$opN_0$opN_1$_join_i2345_i1808
inlining add_lxy_stencil_1_475_476_tree$opN_0$opN_1$_join_i2353_i364
inlining add_lxy_stencil_1_475_476_tree$opN_0$opN_1$opN_1$_join_i2352_i1808
inlining add_lxy_stencil_1_475_476_tree$opN_1$_join_i2357_i1808
inlining i2366_i2367_i131
inlining add_lyy_stencil_1_547_548_tree$_join_i2390_i364
inlining add_lyy_stencil_1_547_548_tree$opN_0$opN_0$_join_i2378_i364
inlining add_lyy_stencil_1_547_548_tree$opN_0$opN_0$opN_1$_join_i2377_i1808
inlining add_lyy_stencil_1_547_548_tree$opN_0$opN_1$_join_i2385_i364
inlining add_lyy_stencil_1_547_548_tree$opN_0$opN_1$opN_1$_join_i2384_i1808
inlining add_lyy_stencil_1_547_548_tree$opN_1$_join_i2389_i1808
inlining ashr_318_319_320_i2407_i1070
inlining smax_315_316_317$max_mux_i2404_i1850
inlining ashr_438_439_440_i2437_i1070
inlining smax_433_434_435$max_mux_i2426_i1850
inlining smax_436_434_437$max_mux_i2434_i1850
inlining ashr_513_514_515_i2466_i1070
inlining smax_510_511_512$max_mux_i2463_i1850
inlining d_reg__U1
inlining d_reg__U2
inlining d_reg__U3
inlining d_reg__U4
inlining d_reg__U5
inlining d_reg__U6
inlining _U43
inlining d_reg__U10
inlining d_reg__U11
inlining d_reg__U12
inlining d_reg__U13
inlining d_reg__U8
inlining d_reg__U9
inlining d_reg__U15
inlining d_reg__U16
inlining d_reg__U17
inlining d_reg__U18
inlining d_reg__U19
inlining d_reg__U20
inlining d_reg__U22
inlining d_reg__U23
inlining d_reg__U24
inlining d_reg__U25
inlining d_reg__U26
inlining d_reg__U27
inlining d_reg__U29
inlining d_reg__U30
inlining d_reg__U31
inlining d_reg__U32
inlining d_reg__U33
inlining d_reg__U34
inlining lgyy_stencil
inlining lgyy_stencil_clkwrk_dsa4
inlining lgxy_stencil
inlining lgxy_stencil_clkwrk_dsa3
inlining lgxx_stencil
inlining lgxx_stencil_clkwrk_dsa2
inlining grad_y_unclamp_stencil
inlining grad_y_unclamp_stencil_clkwrk_dsa1
inlining grad_x_unclamp_stencil
inlining grad_x_unclamp_stencil_clkwrk_dsa0
inlining op_hcompute_padded16_global_wrapper_stencil
inlining op_hcompute_hw_output_stencil
inlining inner_compute$c0
inlining inner_compute$c1
inlining inner_compute$c10
inlining inner_compute$c11
inlining inner_compute$c12
inlining inner_compute$c13
inlining inner_compute$c14
inlining inner_compute$c15
inlining inner_compute$c16
inlining inner_compute$c17
inlining inner_compute$c2
inlining inner_compute$c3
inlining inner_compute$c4
inlining inner_compute$c5
inlining inner_compute$c6
inlining inner_compute$c7
inlining inner_compute$c8
inlining inner_compute$c9
inlining inner_compute$c0
inlining inner_compute$c1
inlining inner_compute$c2
inlining inner_compute$c3
inlining inner_compute$c4
inlining inner_compute$c5
inlining inner_compute$c6
inlining inner_compute$c7
inlining inner_compute$c0
inlining inner_compute$c0
inlining inner_compute$c1
inlining inner_compute$c2
inlining inner_compute$c3
inlining inner_compute$c4
inlining inner_compute$c0
inlining inner_compute$c0
inlining inner_compute$c1
inlining inner_compute$c2
inlining inner_compute$c3
inlining inner_compute$c4
inlining inner_compute$c0
inlining inner_compute$c0
inlining inner_compute$c1
inlining inner_compute$c2
inlining inner_compute$c3
inlining inner_compute$c4
inlining inner_compute$c5
inlining inner_compute$c0
inlining inner_compute$c0
inlining inner_compute$c1
inlining inner_compute$c2
inlining inner_compute$c3
inlining inner_compute$c4
inlining inner_compute$c5
inlining inner_compute$c0
inlining inner_compute$c0
inlining inner_compute$c1
inlining inner_compute$c2
inlining inner_compute$c3
inlining inner_compute$c4
inlining inner_compute$c5
inlining inner_compute$c0
inlining inner_compute$c1
inlining inner_compute$c0
inlining inner_compute$c1
inlining inner_compute$c2
inlining inner_compute$c0
inlining inner_compute$c1
inlining c0
inlining c1
inlining c10
inlining c11
inlining c12
inlining c13
inlining c14
inlining c15
inlining c16
inlining c17
inlining c2
inlining c3
inlining c4
inlining c5
inlining c6
inlining c7
inlining c8
inlining c9
inlining c0
inlining c1
inlining c2
inlining c3
inlining c4
inlining c5
inlining c6
inlining c7
inlining c0
inlining c0
inlining c1
inlining c2
inlining c3
inlining c4
inlining c0
inlining c0
inlining c1
inlining c2
inlining c3
inlining c4
inlining c0
inlining c0
inlining c1
inlining c2
inlining c3
inlining c4
inlining c5
inlining c0
inlining c0
inlining c1
inlining c2
inlining c3
inlining c4
inlining c5
inlining c0
inlining c0
inlining c1
inlining c2
inlining c3
inlining c4
inlining c5
inlining c0
inlining c1
inlining c0
inlining c1
inlining c2
inlining c0
inlining c1
inlining op_hcompute_lyy_stencil
inlining op_hcompute_lxy_stencil
inlining op_hcompute_lxx_stencil
inlining op_hcompute_lgyy_stencil_1
inlining op_hcompute_lgyy_stencil
inlining op_hcompute_lgxy_stencil_1
inlining op_hcompute_lgxy_stencil
inlining op_hcompute_lgxx_stencil_1
inlining op_hcompute_lgxx_stencil
inlining op_hcompute_grad_y_unclamp_stencil_1
inlining op_hcompute_grad_y_unclamp_stencil
inlining op_hcompute_grad_x_unclamp_stencil_1
inlining op_hcompute_grad_x_unclamp_stencil
inlining op_hcompute_cim_stencil
inlining op_hcompute_cim_output_stencil
inlining ub_cim_stencil_bank_2_clk_en_const
inlining op_hcompute_hw_output_stencil_port_controller_clk_en_const
inlining op_hcompute_padded16_global_wrapper_stencil_port_controller_clk_en_const
inlining ub_lxx_stencil_bank_2_clk_en_const
inlining ub_lxy_stencil_bank_2_clk_en_const
inlining ub_lyy_stencil_bank_2_clk_en_const
inlining ub_padded16_global_wrapper_stencil_bank_2_clk_en_const
inlining cim_output_stencil
inlining ub_lxx_stencil_bank_2
inlining lxx_stencil
inlining op_hcompute_padded16_global_wrapper_stencil_port_controller
inlining op_hcompute_hw_output_stencil_port_controller
inlining ub_padded16_global_wrapper_stencil_bank_2
inlining padded16_global_wrapper_stencil
inlining ub_lyy_stencil_bank_2
inlining lyy_stencil
inlining ub_lxy_stencil_bank_2
inlining lxy_stencil
inlining ub_cim_stencil_bank_2
inlining cim_stencil
    new memory syntax transformation!
    ub_cim_stencil_bank_2(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    ub_lxx_stencil_bank_2(ID:_U7, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    ub_lxy_stencil_bank_2(ID:_U14, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    ub_lyy_stencil_bank_2(ID:_U21, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    ub_padded16_global_wrapper_stencil_bank_2(ID:_U28, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    op_hcompute_hw_output_stencil_port_controller(ID:_U35, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: stencil_valid to O4
Connecting cnst_port: flush
    new memory syntax transformation!
    op_hcompute_padded16_global_wrapper_stencil_port_controller(ID:_U39, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: stencil_valid to O4
Connecting cnst_port: flush
    new memory syntax transformation!
    lxx_stencil$ub_lxx_stencil_bank_2(ID:_U7, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    padded16_global_wrapper_stencil$ub_padded16_global_wrapper_stencil_bank_2(ID:_U28, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    lyy_stencil$ub_lyy_stencil_bank_2(ID:_U21, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    lxy_stencil$ub_lxy_stencil_bank_2(ID:_U14, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    cim_stencil$ub_cim_stencil_bank_2(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
