program: conv_2input
Inputs...
  hw_input_stencil
  hw_weight_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int hw_weight_global_wrapper_s0_y = 0; hw_weight_global_wrapper_s0_y < 3; hw_weight_global_wrapper_s0_y++) {
    for (int hw_weight_global_wrapper_s0_x = 0; hw_weight_global_wrapper_s0_x < 3; hw_weight_global_wrapper_s0_x++) {
      op_hcompute_hw_weight_global_wrapper_stencil: hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] = hcompute_hw_weight_global_wrapper_stencil(hw_weight_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil[conv_s0_y, conv_s0_x] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y, conv_s1_x] = hcompute_conv_stencil_1(conv_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 1)], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 1)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 1)], hw_weight_global_wrapper_stencil[0, 0], hw_weight_global_wrapper_stencil[0, 1], hw_weight_global_wrapper_stencil[0, 2], hw_weight_global_wrapper_stencil[1, 0], hw_weight_global_wrapper_stencil[1, 1], hw_weight_global_wrapper_stencil[1, 2], hw_weight_global_wrapper_stencil[2, 0], hw_weight_global_wrapper_stencil[2, 2], hw_weight_global_wrapper_stencil[2, 1])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
Is rate matchable
reduced kernel : conv_stencil
insert kernel: conv_s0_y to producer buffer: conv_stencil
insert kernel: conv_s1_y to producer buffer: conv_stencil
insert kernel: hw_input_global_wrapper_s0_y to producer buffer: hw_input_global_wrapper_stencil
insert kernel: hw_output_s0_y_yi to producer buffer: hw_output_stencil
insert kernel: hw_weight_global_wrapper_s0_y to producer buffer: hw_weight_global_wrapper_stencil
Producer kernels...
  conv_stencil -> conv_s0_y conv_s1_y 
    MULTIPLE PRODUCERS
  hw_input_global_wrapper_stencil -> hw_input_global_wrapper_s0_y 
  hw_output_stencil -> hw_output_s0_y_yi 
  hw_weight_global_wrapper_stencil -> hw_weight_global_wrapper_s0_y 
conv_stencil has 2 producers
  conv_s0_y
  conv_s1_y
program: conv_2input
Inputs...
  hw_input_stencil
  hw_weight_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int hw_weight_global_wrapper_s0_y = 0; hw_weight_global_wrapper_s0_y < 3; hw_weight_global_wrapper_s0_y++) {
    for (int hw_weight_global_wrapper_s0_x = 0; hw_weight_global_wrapper_s0_x < 3; hw_weight_global_wrapper_s0_x++) {
      op_hcompute_hw_weight_global_wrapper_stencil: hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] = hcompute_hw_weight_global_wrapper_stencil(hw_weight_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil[conv_s0_y, conv_s0_x] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y, conv_s1_x] = hcompute_conv_stencil_1(conv_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 1)], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 1)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 1)], hw_weight_global_wrapper_stencil[0, 0], hw_weight_global_wrapper_stencil[0, 1], hw_weight_global_wrapper_stencil[0, 2], hw_weight_global_wrapper_stencil[1, 0], hw_weight_global_wrapper_stencil[1, 1], hw_weight_global_wrapper_stencil[1, 2], hw_weight_global_wrapper_stencil[2, 0], hw_weight_global_wrapper_stencil[2, 2], hw_weight_global_wrapper_stencil[2, 1])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
conv_stencil has 2 producers
  conv_s0_y
  conv_s1_y
program: conv_2input
Inputs...
  hw_input_stencil
  hw_weight_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int hw_weight_global_wrapper_s0_y = 0; hw_weight_global_wrapper_s0_y < 3; hw_weight_global_wrapper_s0_y++) {
    for (int hw_weight_global_wrapper_s0_x = 0; hw_weight_global_wrapper_s0_x < 3; hw_weight_global_wrapper_s0_x++) {
      op_hcompute_hw_weight_global_wrapper_stencil: hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] = hcompute_hw_weight_global_wrapper_stencil(hw_weight_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil[conv_s0_y, conv_s0_x] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y, conv_s1_x] = hcompute_conv_stencil_1(conv_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 1)], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 1)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 1)], hw_weight_global_wrapper_stencil[0, 0], hw_weight_global_wrapper_stencil[0, 1], hw_weight_global_wrapper_stencil[0, 2], hw_weight_global_wrapper_stencil[1, 0], hw_weight_global_wrapper_stencil[1, 1], hw_weight_global_wrapper_stencil[1, 2], hw_weight_global_wrapper_stencil[2, 0], hw_weight_global_wrapper_stencil[2, 2], hw_weight_global_wrapper_stencil[2, 1])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
Multi-write buffers
  conv_stencil
Built initializer / update maps
  # multi_write buffers = 1
program: conv_2input
Inputs...
  hw_input_stencil
  hw_weight_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int hw_weight_global_wrapper_s0_y = 0; hw_weight_global_wrapper_s0_y < 3; hw_weight_global_wrapper_s0_y++) {
    for (int hw_weight_global_wrapper_s0_x = 0; hw_weight_global_wrapper_s0_x < 3; hw_weight_global_wrapper_s0_x++) {
      op_hcompute_hw_weight_global_wrapper_stencil: hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] = hcompute_hw_weight_global_wrapper_stencil(hw_weight_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y, conv_s1_x] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 1)], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 1)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 1)], hw_weight_global_wrapper_stencil[0, 0], hw_weight_global_wrapper_stencil[0, 1], hw_weight_global_wrapper_stencil[0, 2], hw_weight_global_wrapper_stencil[1, 0], hw_weight_global_wrapper_stencil[1, 1], hw_weight_global_wrapper_stencil[1, 2], hw_weight_global_wrapper_stencil[2, 0], hw_weight_global_wrapper_stencil[2, 2], hw_weight_global_wrapper_stencil[2, 1])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
Unoptimized schedule...
  : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
{
  for (int c3 = 0; c3 <= 63; c3 += 1)
    for (int c5 = 0; c5 <= 63; c5 += 1)
      op_hcompute_hw_input_global_wrapper_stencil(0, c3, c5);
  for (int c3 = 0; c3 <= 2; c3 += 1)
    for (int c5 = 0; c5 <= 2; c5 += 1)
      op_hcompute_hw_weight_global_wrapper_stencil(0, c3, c5);
  for (int c3 = 0; c3 <= 61; c3 += 1)
    for (int c5 = 0; c5 <= 61; c5 += 1)
      op_hcompute_conv_stencil(0, c3, c5);
  for (int c3 = 0; c3 <= 61; c3 += 1)
    for (int c5 = 0; c5 <= 61; c5 += 1)
      op_hcompute_conv_stencil_1(0, c3, c5);
  for (int c3 = 0; c3 <= 61; c3 += 1)
    for (int c5 = 0; c5 <= 61; c5 += 1)
      op_hcompute_hw_output_stencil(0, c3, c5);
}
Creating ports for op: hw_weight_global_wrapper_stencil
cond = { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
		Consumed: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
Creating ports for op: hw_weight_stencil
cond = { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] }
	Adding output port: hw_weight_stencil_op_hcompute_hw_weight_global_wrapper_stencil_1
		Consumed: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_hw_weight_global_wrapper_stencil
  other_dspace_id = op_hcompute_hw_weight_global_wrapper_stencil
  Schedule domain set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
  Domain set from prg: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
  ITS: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
ITS      : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
current out port name: 
	hw_weight_stencil_op_hcompute_hw_weight_global_wrapper_stencil_1
Creating ports for op: hw_output_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] }
	Adding output port: hw_output_stencil_op_hcompute_hw_output_stencil_2
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
current out port name: 
	hw_output_stencil_op_hcompute_hw_output_stencil_2
Creating ports for op: conv_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] }
	Adding output port: conv_stencil_op_hcompute_hw_output_stencil_3
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_hw_output_stencil
  other_dspace_id = op_hcompute_hw_output_stencil
  Schedule domain set: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
  Domain set from prg: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
  ITS: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
ITS      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
current out port name: 
	conv_stencil_op_hcompute_hw_output_stencil_3
Creating ports for op: hw_input_global_wrapper_stencil
cond = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
		Consumed: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
Creating ports for op: hw_input_stencil
cond = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
	Adding output port: hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_5
		Consumed: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_hw_input_global_wrapper_stencil
  other_dspace_id = op_hcompute_hw_input_global_wrapper_stencil
  Schedule domain set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  Domain set from prg: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  ITS: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
ITS      : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
current out port name: 
	hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_5
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] }
	Adding output port: conv_stencil_op_hcompute_conv_stencil_1_6
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	conv_stencil_op_hcompute_conv_stencil_1_6
Creating ports for op: conv_stencil_clkwrk_dsa0
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x] }
	Adding output port: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 1)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 2)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 1), conv_s1_x] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 1)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 2)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 2), conv_s1_x] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 2)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 1)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 0] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 1] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 2] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 0] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 1] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 2] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 0] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 2] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 1] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [0, 0, 1, hw_weight_global_wrapper_s0_y, 0, hw_weight_global_wrapper_s0_x, 0] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 2, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 4, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 3, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25
cond = { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] }
	Adding output port: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
		Consumed: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
current out port name: 
	conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
generating banks for buffer: conv_stencil
getting rddom
rddom = { conv_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Adding bank between conv_stencil_op_hcompute_conv_stencil_1_6 and conv_stencil_op_hcompute_hw_output_stencil_3
Done generating register-file style banks for conv_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: conv_stencil_all_inputs_to_all_outputs
	input: 
    conv_stencil_op_hcompute_conv_stencil_1_6
	 output: 
    conv_stencil_op_hcompute_hw_output_stencil_3
extracting box from { conv_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
extracting box from { conv_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Input port:conv_stencil_op_hcompute_conv_stencil_1_6, Get ram string: (((1*conv_s1_y)) - 0) * 1 + (((1*conv_s1_x)) - 0) * 62
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(hw_output_s0_y_yi)] }
cg = (((1*hw_output_s0_y_yi)) >= 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(61 - hw_output_s0_y_yi)] }
cg = (((61 + -1*hw_output_s0_y_yi)) >= 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
cg = (((1*hw_output_s0_x_xi)) >= 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(61 - hw_output_s0_x_xi)] }
cg = (((61 + -1*hw_output_s0_x_xi)) >= 0)
generating banks for buffer: conv_stencil_clkwrk_dsa0
getting rddom
rddom = { conv_stencil_clkwrk_dsa0[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Adding bank between conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26 and conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7
Done generating register-file style banks for conv_stencil_clkwrk_dsa0, bank list size = 1
  after banking there are 1 banks
  Bank name: conv_stencil_clkwrk_dsa0_all_inputs_to_all_outputs
	input: 
    conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
	 output: 
    conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7
extracting box from { conv_stencil_clkwrk_dsa0[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
extracting box from { conv_stencil_clkwrk_dsa0[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Constraint aff with div: { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [(conv_s0_y)] }
cg = (((1*conv_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [(61 - conv_s0_y)] }
cg = (((61 + -1*conv_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [(conv_s0_x)] }
cg = (((1*conv_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [(61 - conv_s0_x)] }
cg = (((61 + -1*conv_s0_x)) >= 0)
Input port:conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26, Get ram string: (((1*conv_s0_y)) - 0) * 1 + (((1*conv_s0_x)) - 0) * 62
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
generating banks for buffer: hw_input_global_wrapper_stencil
getting rddom
rddom = { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
Done generating register-file style banks for hw_input_global_wrapper_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: hw_input_global_wrapper_stencil_all_inputs_to_all_outputs
	input: 
    hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
	 output: 
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
extracting box from { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
extracting box from { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_y)] }
cg = (((1*hw_input_global_wrapper_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(63 - hw_input_global_wrapper_s0_y)] }
cg = (((63 + -1*hw_input_global_wrapper_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_x)] }
cg = (((1*hw_input_global_wrapper_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(63 - hw_input_global_wrapper_s0_x)] }
cg = (((63 + -1*hw_input_global_wrapper_s0_x)) >= 0)
Input port:hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4, Get ram string: (((1*hw_input_global_wrapper_s0_y)) - 0) * 1 + (((1*hw_input_global_wrapper_s0_x)) - 0) * 64
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
generating banks for buffer: hw_weight_global_wrapper_stencil
getting rddom
rddom = { hw_weight_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 2 and 0 <= i1 <= 2; hw_weight_global_wrapper_stencil[2, 2]; hw_weight_global_wrapper_stencil[1, 2]; hw_weight_global_wrapper_stencil[0, 2]; hw_weight_global_wrapper_stencil[2, 1]; hw_weight_global_wrapper_stencil[1, 1]; hw_weight_global_wrapper_stencil[0, 1]; hw_weight_global_wrapper_stencil[2, 0]; hw_weight_global_wrapper_stencil[1, 0]; hw_weight_global_wrapper_stencil[0, 0] }
Adding bank between hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0 and hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17
Adding bank between hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0 and hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18
Adding bank between hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0 and hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19
Adding bank between hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0 and hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20
Adding bank between hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0 and hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21
Adding bank between hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0 and hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22
Adding bank between hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0 and hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23
Adding bank between hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0 and hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24
Adding bank between hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0 and hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25
Done generating register-file style banks for hw_weight_global_wrapper_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: hw_weight_global_wrapper_stencil_all_inputs_to_all_outputs
	input: 
    hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	 output: 
    hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17
    hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18
    hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19
    hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20
    hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21
    hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22
    hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23
    hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24
    hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25
extracting box from { hw_weight_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 2 and 0 <= i1 <= 2; hw_weight_global_wrapper_stencil[2, 2]; hw_weight_global_wrapper_stencil[1, 2]; hw_weight_global_wrapper_stencil[0, 2]; hw_weight_global_wrapper_stencil[2, 1]; hw_weight_global_wrapper_stencil[1, 1]; hw_weight_global_wrapper_stencil[0, 1]; hw_weight_global_wrapper_stencil[2, 0]; hw_weight_global_wrapper_stencil[1, 0]; hw_weight_global_wrapper_stencil[0, 0] }
extracting box from { hw_weight_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 2 and 0 <= i1 <= 2; hw_weight_global_wrapper_stencil[2, 2]; hw_weight_global_wrapper_stencil[1, 2]; hw_weight_global_wrapper_stencil[0, 2]; hw_weight_global_wrapper_stencil[2, 1]; hw_weight_global_wrapper_stencil[1, 1]; hw_weight_global_wrapper_stencil[0, 1]; hw_weight_global_wrapper_stencil[2, 0]; hw_weight_global_wrapper_stencil[1, 0]; hw_weight_global_wrapper_stencil[0, 0] }
Constraint aff with div: { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [(hw_weight_global_wrapper_s0_y)] }
cg = (((1*hw_weight_global_wrapper_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [(2 - hw_weight_global_wrapper_s0_y)] }
cg = (((2 + -1*hw_weight_global_wrapper_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [(hw_weight_global_wrapper_s0_x)] }
cg = (((1*hw_weight_global_wrapper_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [(2 - hw_weight_global_wrapper_s0_x)] }
cg = (((2 + -1*hw_weight_global_wrapper_s0_x)) >= 0)
Input port:hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0, Get ram string: (((1*hw_weight_global_wrapper_s0_y)) - 0) * 1 + (((1*hw_weight_global_wrapper_s0_x)) - 0) * 3
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_y)] }
cg = (((61 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(61 - conv_s1_x)] }
cg = (((61 + -1*conv_s1_x)) >= 0)
Prog: unoptimized_conv_2input
Generating compute for: op_hcompute_hw_input_global_wrapper_stencil
Got srcs
Got iteration variables
got in_buffers
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_hw_weight_global_wrapper_stencil
Got srcs
Got iteration variables
got in_buffers
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_conv_stencil
Got srcs
Got iteration variables
got in_buffers
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_conv_stencil_1
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_conv_stencil_1
op = op_hcompute_conv_stencil_1
op = op_hcompute_conv_stencil_1
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_hw_output_stencil
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_hw_output_stencil
created res
finding out buffers
Checking if program is a boundary
Trying to find hw_input_stencil in buffers
Trying bundle: op_hcompute_hw_input_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_input_stencil
No bundle for input: hw_input_stencil
Trying to find hw_weight_stencil in buffers
Trying bundle: op_hcompute_hw_weight_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_weight_stencil
No bundle for input: hw_weight_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-1 + i2)] }
cg = (((-1 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(2 - i3)] }
cg = (((2 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(2 - i5)] }
cg = (((2 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-2 + i2)] }
cg = (((-2 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(61 - i3)] }
cg = (((61 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(61 - i5)] }
cg = (((61 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i2)] }
cg = (((1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(63 - i3)] }
cg = (((63 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(63 - i5)] }
cg = (((63 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-3 + i2)] }
cg = (((-3 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(61 - i3)] }
cg = (((61 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(61 - i5)] }
cg = (((61 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-4 + i2)] }
cg = (((-4 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(61 - i3)] }
cg = (((61 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(61 - i5)] }
cg = (((61 + -1*i5)) >= 0)
Trying to find hw_input_stencil in buffers
Trying bundle: op_hcompute_hw_input_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_input_stencil
No bundle for input: hw_input_stencil
Trying to find hw_weight_stencil in buffers
Trying bundle: op_hcompute_hw_weight_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_weight_stencil
No bundle for input: hw_weight_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
Trying to find hw_input_stencil in buffers
Trying bundle: op_hcompute_hw_input_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_input_stencil
No bundle for input: hw_input_stencil
Trying to find hw_weight_stencil in buffers
Trying bundle: op_hcompute_hw_weight_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_weight_stencil
No bundle for input: hw_weight_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
Generating accel wrapper
# in bundles: 1
Generating arg list
Generating driver function
buf = hw_input_stencil
buf = hw_weight_stencil
Generated accel wrapper
Generating accel wrapper
Generating arg list
Generating driver function
Generating bmp harness
Generated channels
Generating inputs
in dim = 0
Trying to find hw_input_stencil in buffers
Trying bundle: op_hcompute_hw_input_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_input_stencil
No bundle for input: hw_input_stencil
Trying to find hw_weight_stencil in buffers
Trying bundle: op_hcompute_hw_weight_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_weight_stencil
No bundle for input: hw_weight_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
Built unoptimized code
cmd: echo $CLKWRK_PATH
/home/dai-dirk/MetaMapper/MetaMapper/clockwork
cmd: g++ -fstack-protector-all -std=c++11 -I $CLKWRK_PATH regression_tb_unoptimized_conv_2input.cpp unoptimized_conv_2input.cpp
Running CGRA flow on conv_2input
program: conv_2input
Inputs...
  hw_input_stencil
  hw_weight_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int hw_weight_global_wrapper_s0_y = 0; hw_weight_global_wrapper_s0_y < 3; hw_weight_global_wrapper_s0_y++) {
    for (int hw_weight_global_wrapper_s0_x = 0; hw_weight_global_wrapper_s0_x < 3; hw_weight_global_wrapper_s0_x++) {
      op_hcompute_hw_weight_global_wrapper_stencil: hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] = hcompute_hw_weight_global_wrapper_stencil(hw_weight_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y, conv_s1_x] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 1)], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 1)], hw_input_global_wrapper_stencil[(conv_s1_y + 1), (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 2)], hw_input_global_wrapper_stencil[(conv_s1_y + 2), (conv_s1_x + 1)], hw_weight_global_wrapper_stencil[0, 0], hw_weight_global_wrapper_stencil[0, 1], hw_weight_global_wrapper_stencil[0, 2], hw_weight_global_wrapper_stencil[1, 0], hw_weight_global_wrapper_stencil[1, 1], hw_weight_global_wrapper_stencil[1, 2], hw_weight_global_wrapper_stencil[2, 0], hw_weight_global_wrapper_stencil[2, 2], hw_weight_global_wrapper_stencil[2, 1])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
Buffer: conv_stencil
  Producers...
Got consumers
Writes: { conv_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
    Min offset (counting only writers): 0, 0
Visit produce locations: conv_stencil: addr =  [conv_s1_y, conv_s1_x]
New produce locations: conv_stencil: addr =  [conv_s1_y+0,  conv_s1_x+0]
Visit consume locations: conv_stencil: addr =  [hw_output_s0_y_yi, hw_output_s0_x_xi]
New consume locations: conv_stencil: addr =  [hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0]
Buffer: conv_stencil_clkwrk_dsa0
  Producers...
Got consumers
Writes: { conv_stencil_clkwrk_dsa0[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
    Min offset (counting only writers): 0, 0
Visit produce locations: conv_stencil_clkwrk_dsa0: addr =  [conv_s0_y, conv_s0_x]
New produce locations: conv_stencil_clkwrk_dsa0: addr =  [conv_s0_y+0,  conv_s0_x+0]
Visit consume locations: conv_stencil_clkwrk_dsa0: addr =  [conv_s1_y, conv_s1_x]
New consume locations: conv_stencil_clkwrk_dsa0: addr =  [conv_s1_y+0,  conv_s1_x+0]
Buffer: hw_input_global_wrapper_stencil
  Producers...
Got consumers
Writes: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 and ((i0 >= 2 and i1 >= 2) or (i0 >= 2 and 0 < i1 <= 62) or (i0 >= 2 and i1 <= 61) or (0 < i0 <= 62 and i1 >= 2) or (0 < i0 <= 62 and 0 < i1 <= 62) or (0 < i0 <= 62 and i1 <= 61) or (i0 <= 61 and i1 >= 2) or (i0 <= 61 and 0 < i1 <= 62) or (i0 <= 61 and i1 <= 61)) }
    Min offset (counting only writers): 0, 0
Visit produce locations: hw_input_global_wrapper_stencil: addr =  [hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x]
New produce locations: hw_input_global_wrapper_stencil: addr =  [hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [conv_s1_y, conv_s1_x]
New consume locations: hw_input_global_wrapper_stencil: addr =  [conv_s1_y+0,  conv_s1_x+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [conv_s1_y, (conv_s1_x + 1)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [conv_s1_y+0,  (conv_s1_x + 1)+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [conv_s1_y, (conv_s1_x + 2)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [conv_s1_y+0,  (conv_s1_x + 2)+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 1), conv_s1_x]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 1)+0,  conv_s1_x+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 1), (conv_s1_x + 1)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 1)+0,  (conv_s1_x + 1)+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 1), (conv_s1_x + 2)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 1)+0,  (conv_s1_x + 2)+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 2), conv_s1_x]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 2)+0,  conv_s1_x+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 2), (conv_s1_x + 2)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 2)+0,  (conv_s1_x + 2)+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 2), (conv_s1_x + 1)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 2)+0,  (conv_s1_x + 1)+0]
Buffer: hw_input_stencil
  Producers...
5
Got consumers
Writes: { hw_input_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
    Min offset (counting only writers): 0, 0
Visit consume locations: hw_input_stencil: addr =  [hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x]
New consume locations: hw_input_stencil: addr =  [hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0]
Buffer: hw_output_stencil
  Producers...
Got consumers
    Min offset (counting only writers): 0, 0
Visit produce locations: hw_output_stencil: addr =  [hw_output_s0_y_yi, hw_output_s0_x_xi]
New produce locations: hw_output_stencil: addr =  [hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0]
Buffer: hw_weight_global_wrapper_stencil
  Producers...
Got consumers
Writes: { hw_weight_global_wrapper_stencil[2, 2]; hw_weight_global_wrapper_stencil[1, 2]; hw_weight_global_wrapper_stencil[0, 2]; hw_weight_global_wrapper_stencil[2, 1]; hw_weight_global_wrapper_stencil[1, 1]; hw_weight_global_wrapper_stencil[0, 1]; hw_weight_global_wrapper_stencil[2, 0]; hw_weight_global_wrapper_stencil[1, 0]; hw_weight_global_wrapper_stencil[0, 0] }
    Min offset (counting only writers): 0, 0
Visit produce locations: hw_weight_global_wrapper_stencil: addr =  [hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x]
New produce locations: hw_weight_global_wrapper_stencil: addr =  [hw_weight_global_wrapper_s0_y+0,  hw_weight_global_wrapper_s0_x+0]
Visit consume locations: hw_weight_global_wrapper_stencil: addr =  [0, 0]
New consume locations: hw_weight_global_wrapper_stencil: addr =  [0+0,  0+0]
Visit consume locations: hw_weight_global_wrapper_stencil: addr =  [0, 1]
New consume locations: hw_weight_global_wrapper_stencil: addr =  [0+0,  1+0]
Visit consume locations: hw_weight_global_wrapper_stencil: addr =  [0, 2]
New consume locations: hw_weight_global_wrapper_stencil: addr =  [0+0,  2+0]
Visit consume locations: hw_weight_global_wrapper_stencil: addr =  [1, 0]
New consume locations: hw_weight_global_wrapper_stencil: addr =  [1+0,  0+0]
Visit consume locations: hw_weight_global_wrapper_stencil: addr =  [1, 1]
New consume locations: hw_weight_global_wrapper_stencil: addr =  [1+0,  1+0]
Visit consume locations: hw_weight_global_wrapper_stencil: addr =  [1, 2]
New consume locations: hw_weight_global_wrapper_stencil: addr =  [1+0,  2+0]
Visit consume locations: hw_weight_global_wrapper_stencil: addr =  [2, 0]
New consume locations: hw_weight_global_wrapper_stencil: addr =  [2+0,  0+0]
Visit consume locations: hw_weight_global_wrapper_stencil: addr =  [2, 2]
New consume locations: hw_weight_global_wrapper_stencil: addr =  [2+0,  2+0]
Visit consume locations: hw_weight_global_wrapper_stencil: addr =  [2, 1]
New consume locations: hw_weight_global_wrapper_stencil: addr =  [2+0,  1+0]
Buffer: hw_weight_stencil
  Producers...
5
Got consumers
Writes: { hw_weight_stencil[i0, i1] : 0 <= i0 <= 2 and 0 <= i1 <= 2 }
    Min offset (counting only writers): 0, 0
Visit consume locations: hw_weight_stencil: addr =  [hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x]
New consume locations: hw_weight_stencil: addr =  [hw_weight_global_wrapper_s0_y+0,  hw_weight_global_wrapper_s0_x+0]
program: conv_2input
Inputs...
  hw_input_stencil
  hw_weight_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int hw_weight_global_wrapper_s0_y = 0; hw_weight_global_wrapper_s0_y < 3; hw_weight_global_wrapper_s0_y++) {
    for (int hw_weight_global_wrapper_s0_x = 0; hw_weight_global_wrapper_s0_x < 3; hw_weight_global_wrapper_s0_x++) {
      op_hcompute_hw_weight_global_wrapper_stencil: hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y+0,  hw_weight_global_wrapper_s0_x+0] = hcompute_hw_weight_global_wrapper_stencil(hw_weight_stencil[hw_weight_global_wrapper_s0_y+0,  hw_weight_global_wrapper_s0_x+0])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_y+0,  conv_s0_x+0] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y+0,  conv_s1_x+0] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 1)+0], hw_weight_global_wrapper_stencil[0+0,  0+0], hw_weight_global_wrapper_stencil[0+0,  1+0], hw_weight_global_wrapper_stencil[0+0,  2+0], hw_weight_global_wrapper_stencil[1+0,  0+0], hw_weight_global_wrapper_stencil[1+0,  1+0], hw_weight_global_wrapper_stencil[1+0,  2+0], hw_weight_global_wrapper_stencil[2+0,  0+0], hw_weight_global_wrapper_stencil[2+0,  2+0], hw_weight_global_wrapper_stencil[2+0,  1+0])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
    }
  }
}
cmd: mkdir -p ./map_result/conv_2input
After Loop Perfection
program: conv_2input
Inputs...
  hw_input_stencil
  hw_weight_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int hw_weight_global_wrapper_s0_y = 0; hw_weight_global_wrapper_s0_y < 3; hw_weight_global_wrapper_s0_y++) {
    for (int hw_weight_global_wrapper_s0_x = 0; hw_weight_global_wrapper_s0_x < 3; hw_weight_global_wrapper_s0_x++) {
      op_hcompute_hw_weight_global_wrapper_stencil: hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y+0,  hw_weight_global_wrapper_s0_x+0] = hcompute_hw_weight_global_wrapper_stencil(hw_weight_stencil[hw_weight_global_wrapper_s0_y+0,  hw_weight_global_wrapper_s0_x+0])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_y+0,  conv_s0_x+0] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y+0,  conv_s1_x+0] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 1)+0], hw_weight_global_wrapper_stencil[0+0,  0+0], hw_weight_global_wrapper_stencil[0+0,  1+0], hw_weight_global_wrapper_stencil[0+0,  2+0], hw_weight_global_wrapper_stencil[1+0,  0+0], hw_weight_global_wrapper_stencil[1+0,  1+0], hw_weight_global_wrapper_stencil[1+0,  2+0], hw_weight_global_wrapper_stencil[2+0,  0+0], hw_weight_global_wrapper_stencil[2+0,  2+0], hw_weight_global_wrapper_stencil[2+0,  1+0])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
    }
  }
}
hcompute_hw_input_global_wrapper_stencil
	Buffer <hw_input_global_wrapper_stencil> 
	producer map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	capacity: 4096
	hierarchy level: glb
	Buffer <hw_input_stencil> 
	producer map: {  }
	capacity: 4096
	hierarchy level: glb
hcompute_hw_weight_global_wrapper_stencil
	Buffer <hw_weight_global_wrapper_stencil> 
	producer map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
	capacity: 9
	hierarchy level: mem
	Buffer <hw_weight_stencil> 
	producer map: {  }
	capacity: 9
	hierarchy level: mem
hcompute_conv_stencil
	Buffer <conv_stencil_clkwrk_dsa0> 
	producer map: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
	capacity: 3844
	hierarchy level: glb
hcompute_conv_stencil_1
	Buffer <conv_stencil> 
	producer map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	capacity: 3844
	hierarchy level: glb
	Buffer <conv_stencil_clkwrk_dsa0> 
	producer map: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
	capacity: 3844
	hierarchy level: glb
	Buffer <hw_input_global_wrapper_stencil> 
	producer map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	capacity: 4096
	hierarchy level: glb
	Buffer <hw_weight_global_wrapper_stencil> 
	producer map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
	capacity: 9
	hierarchy level: mem
hcompute_hw_output_stencil
	Buffer <conv_stencil> 
	producer map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	capacity: 3844
	hierarchy level: glb
	Buffer <hw_output_stencil> 
	producer map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
	capacity: 3844
	hierarchy level: glb
hcompute_conv_stencil: 0 
hcompute_conv_stencil_1: 0 
hcompute_hw_input_global_wrapper_stencil: 0 
hcompute_hw_output_stencil: 0 
hcompute_hw_weight_global_wrapper_stencil: 0 

hcompute_conv_stencil: 0 
hcompute_conv_stencil_1: 0 
hcompute_hw_input_global_wrapper_stencil: 0 
hcompute_hw_output_stencil: 0 
hcompute_hw_weight_global_wrapper_stencil: 0 

Compute file dse found
No compute unit file: 
program: conv_2input
Inputs...
  hw_input_stencil
  hw_weight_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int hw_weight_global_wrapper_s0_y = 0; hw_weight_global_wrapper_s0_y < 3; hw_weight_global_wrapper_s0_y++) {
    for (int hw_weight_global_wrapper_s0_x = 0; hw_weight_global_wrapper_s0_x < 3; hw_weight_global_wrapper_s0_x++) {
      op_hcompute_hw_weight_global_wrapper_stencil: hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y+0,  hw_weight_global_wrapper_s0_x+0] = hcompute_hw_weight_global_wrapper_stencil(hw_weight_stencil[hw_weight_global_wrapper_s0_y+0,  hw_weight_global_wrapper_s0_x+0])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_y+0,  conv_s0_x+0] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y+0,  conv_s1_x+0] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 1)+0], hw_weight_global_wrapper_stencil[0+0,  0+0], hw_weight_global_wrapper_stencil[0+0,  1+0], hw_weight_global_wrapper_stencil[0+0,  2+0], hw_weight_global_wrapper_stencil[1+0,  0+0], hw_weight_global_wrapper_stencil[1+0,  1+0], hw_weight_global_wrapper_stencil[1+0,  2+0], hw_weight_global_wrapper_stencil[2+0,  0+0], hw_weight_global_wrapper_stencil[2+0,  2+0], hw_weight_global_wrapper_stencil[2+0,  1+0])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
    }
  }
}
program: conv_2input
Inputs...
  hw_input_stencil
  hw_weight_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int hw_weight_global_wrapper_s0_y = 0; hw_weight_global_wrapper_s0_y < 3; hw_weight_global_wrapper_s0_y++) {
    for (int hw_weight_global_wrapper_s0_x = 0; hw_weight_global_wrapper_s0_x < 3; hw_weight_global_wrapper_s0_x++) {
      op_hcompute_hw_weight_global_wrapper_stencil: hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y+0,  hw_weight_global_wrapper_s0_x+0] = hcompute_hw_weight_global_wrapper_stencil(hw_weight_stencil[hw_weight_global_wrapper_s0_y+0,  hw_weight_global_wrapper_s0_x+0])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_y+0,  conv_s0_x+0] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y+0,  conv_s1_x+0] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 1)+0], hw_weight_global_wrapper_stencil[0+0,  0+0], hw_weight_global_wrapper_stencil[0+0,  1+0], hw_weight_global_wrapper_stencil[0+0,  2+0], hw_weight_global_wrapper_stencil[1+0,  0+0], hw_weight_global_wrapper_stencil[1+0,  1+0], hw_weight_global_wrapper_stencil[1+0,  2+0], hw_weight_global_wrapper_stencil[2+0,  0+0], hw_weight_global_wrapper_stencil[2+0,  2+0], hw_weight_global_wrapper_stencil[2+0,  1+0])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
    }
  }
}
program: conv_2input
Inputs...
  hw_input_stencil
  hw_weight_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int hw_weight_global_wrapper_s0_y = 0; hw_weight_global_wrapper_s0_y < 3; hw_weight_global_wrapper_s0_y++) {
    for (int hw_weight_global_wrapper_s0_x = 0; hw_weight_global_wrapper_s0_x < 3; hw_weight_global_wrapper_s0_x++) {
      op_hcompute_hw_weight_global_wrapper_stencil: hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y+0,  hw_weight_global_wrapper_s0_x+0] = hcompute_hw_weight_global_wrapper_stencil(hw_weight_stencil[hw_weight_global_wrapper_s0_y+0,  hw_weight_global_wrapper_s0_x+0])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_y+0,  conv_s0_x+0] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y+0,  conv_s1_x+0] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 1)+0], hw_weight_global_wrapper_stencil[0+0,  0+0], hw_weight_global_wrapper_stencil[0+0,  1+0], hw_weight_global_wrapper_stencil[0+0,  2+0], hw_weight_global_wrapper_stencil[1+0,  0+0], hw_weight_global_wrapper_stencil[1+0,  1+0], hw_weight_global_wrapper_stencil[1+0,  2+0], hw_weight_global_wrapper_stencil[2+0,  0+0], hw_weight_global_wrapper_stencil[2+0,  2+0], hw_weight_global_wrapper_stencil[2+0,  1+0])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
    }
  }
}
conv_2input is a stencil pipeline
Computing validity deps for conv_stencil
Computing validity deps for conv_stencil_clkwrk_dsa0
Computing validity deps for hw_input_global_wrapper_stencil
Computing validity deps for hw_input_stencil
Computing validity deps for hw_output_stencil
Computing validity deps for hw_weight_global_wrapper_stencil
Computing validity deps for hw_weight_stencil
Finite validity: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = conv_s0_y, conv_s1_x = conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_yi = conv_s1_y, hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Dep = { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Dep = { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = conv_s0_y, conv_s1_x = conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
  Dep = { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 2 <= hw_input_global_wrapper_s0_x <= 63 }
  Dep = { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_yi = conv_s1_y, hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Got deps
Schedule dim = 3
  scheduling dimension 0
  { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
  { op_hcompute_conv_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_output_stencil[root' = 0] }
Consumed data...
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_weight_global_wrapper_stencil[root' = 0] }
bound: { op_hcompute_conv_stencil_1[root] -> op_hcompute_hw_weight_global_wrapper_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[root] -> [(0)] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_conv_stencil[root' = 0] }
bound: { op_hcompute_conv_stencil_1[root] -> op_hcompute_conv_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[root] -> [(0)] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0] }
bound: { op_hcompute_conv_stencil_1[root] -> op_hcompute_hw_input_global_wrapper_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[root] -> [(0)] }
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
bound: { op_hcompute_hw_output_stencil[root] -> op_hcompute_conv_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_hw_output_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[root] -> [(0)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv_stencil_1, s_op_hcompute_hw_weight_global_wrapper_stencil, s_op_hcompute_conv_stencil, s_op_hcompute_hw_output_stencil, s_op_hcompute_hw_input_global_wrapper_stencil] : s_op_hcompute_conv_stencil_1 > 0 and s_op_hcompute_hw_weight_global_wrapper_stencil > 0 and s_op_hcompute_conv_stencil > 0 and s_op_hcompute_hw_output_stencil > 0 and s_op_hcompute_hw_input_global_wrapper_stencil > 0 }
Writing problem to mod file...
  # of constraints: 5
  legal point  : { [1, 1, 1, 1, 1] }
  minimal point: 0
Schedule params...
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_weight_global_wrapper_stencil[root' = 0] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_conv_stencil[root' = 0] }
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0] }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(i)] }
  op_hcompute_hw_weight_global_wrapper_stencil: { [i] -> [(i)] }
  scheduling dimension 1
  { op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y = 2] -> op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y = 1] -> op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y = 0] -> op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 61 }
  { op_hcompute_conv_stencil[conv_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = conv_s0_y] : 0 <= conv_s0_y <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = hw_input_global_wrapper_s0_y] : 0 <= hw_input_global_wrapper_s0_y <= 61; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = -1 + hw_input_global_wrapper_s0_y] : 0 < hw_input_global_wrapper_s0_y <= 62; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = -2 + hw_input_global_wrapper_s0_y] : 2 <= hw_input_global_wrapper_s0_y <= 63 }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_output_stencil[hw_output_s0_y_yi = conv_s1_y] : 0 <= conv_s1_y <= 61 }
Consumed data...
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y = 2] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y = 1] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y = 0] : 0 <= conv_s1_y <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_weight_global_wrapper_stencil[(2)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(2)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(2)] }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_conv_stencil[conv_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_conv_stencil[(conv_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(conv_s1_y)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(conv_s1_y)] }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 2 + conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 1 + conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[(2 + conv_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(2 + conv_s1_y)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(2 + conv_s1_y)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_conv_stencil_1[conv_s1_y = hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 61 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_conv_stencil_1[(hw_output_s0_y_yi)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> [(hw_output_s0_y_yi)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 61 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> [(hw_output_s0_y_yi)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv_stencil_1, s_op_hcompute_hw_input_global_wrapper_stencil, s_op_hcompute_hw_weight_global_wrapper_stencil, s_op_hcompute_conv_stencil, s_op_hcompute_hw_output_stencil] : s_op_hcompute_hw_input_global_wrapper_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil_1 > 0 and s_op_hcompute_hw_weight_global_wrapper_stencil > 0 }
Writing problem to mod file...
  # of constraints: 8
  legal point  : { [1, 1, 1, 1, 1] }
  minimal point: -4
Schedule params...
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 2 + conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 1 + conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 61 }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y = 2] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y = 1] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y = 0] : 0 <= conv_s1_y <= 61 }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_conv_stencil[conv_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 61 }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_conv_stencil_1[conv_s1_y = hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 61 }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(2 + i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(2 + i)] }
  op_hcompute_hw_weight_global_wrapper_stencil: { [i] -> [(i)] }
  scheduling dimension 2
  { op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_x = 2] -> op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_x = 1] -> op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_x = 0] -> op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 61 }
  { op_hcompute_conv_stencil[conv_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = conv_s0_x] : 0 <= conv_s0_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_output_stencil[hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_x <= 61 }
Consumed data...
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_x = 2] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_x = 1] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_x = 0] : 0 <= conv_s1_x <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_weight_global_wrapper_stencil[(2)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(2)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(2)] }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_conv_stencil[conv_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_conv_stencil[(conv_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(conv_s1_x)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(conv_s1_x)] }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 2 + conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[(2 + conv_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(2 + conv_s1_x)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(2 + conv_s1_x)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv_stencil_1[conv_s1_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 61 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv_stencil_1[(hw_output_s0_x_xi)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 61 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv_stencil_1, s_op_hcompute_conv_stencil, s_op_hcompute_hw_weight_global_wrapper_stencil, s_op_hcompute_hw_input_global_wrapper_stencil, s_op_hcompute_hw_output_stencil] : s_op_hcompute_conv_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_input_global_wrapper_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil_1 > 0 and s_op_hcompute_hw_weight_global_wrapper_stencil > 0 }
Writing problem to mod file...
  # of constraints: 8
  legal point  : { [1, 1, 1, 1, 1] }
  minimal point: -4
Schedule params...
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_conv_stencil[conv_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 61 }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_x = 2] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_x = 1] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_x = 0] : 0 <= conv_s1_x <= 61 }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 2 + conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv_stencil_1[conv_s1_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 61 }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(2 + i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(2 + i)] }
  op_hcompute_hw_weight_global_wrapper_stencil: { [i] -> [(i)] }
Final schedule...
  op_hcompute_conv_stencil
    1*d2*1*1 + 1*2
    1*d1*1*1 + 1*2
    1*d0*1*1 + 1*0

  op_hcompute_conv_stencil_1
    1*d2*1*1 + 1*2
    1*d1*1*1 + 1*2
    1*d0*1*1 + 1*0

  op_hcompute_hw_input_global_wrapper_stencil
    1*d2*1*1 + 1*0
    1*d1*1*1 + 1*0
    1*d0*1*1 + 1*0

  op_hcompute_hw_output_stencil
    1*d2*1*1 + 1*2
    1*d1*1*1 + 1*2
    1*d0*1*1 + 1*0

  op_hcompute_hw_weight_global_wrapper_stencil
    1*d2*1*1 + 1*0
    1*d1*1*1 + 1*0
    1*d0*1*1 + 1*0

Sched expr: 1*d2 + 2
Sched expr: 1*d1 + 2
Sched expr: 1*d0 + 0
Map str: { op_hcompute_conv_stencil[d0, d1, d2] -> [1*d2 + 2, 1*d1 + 2, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 2
Sched expr: 1*d1 + 2
Sched expr: 1*d0 + 0
Map str: { op_hcompute_conv_stencil_1[d0, d1, d2] -> [1*d2 + 2, 1*d1 + 2, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 0
Sched expr: 1*d1 + 0
Sched expr: 1*d0 + 0
Map str: { op_hcompute_hw_input_global_wrapper_stencil[d0, d1, d2] -> [1*d2 + 0, 1*d1 + 0, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 2
Sched expr: 1*d1 + 2
Sched expr: 1*d0 + 0
Map str: { op_hcompute_hw_output_stencil[d0, d1, d2] -> [1*d2 + 2, 1*d1 + 2, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 0
Sched expr: 1*d1 + 0
Sched expr: 1*d0 + 0
Map str: { op_hcompute_hw_weight_global_wrapper_stencil[d0, d1, d2] -> [1*d2 + 0, 1*d1 + 0, 1*d0 + 0] }
map got str
Clockwork schedule...
  { op_hcompute_conv_stencil[d0, d1, d2] -> [2 + d2, 2 + d1, d0] }
  { op_hcompute_hw_weight_global_wrapper_stencil[d0, d1, d2] -> [d2, d1, d0] }
  { op_hcompute_conv_stencil_1[d0, d1, d2] -> [2 + d2, 2 + d1, d0] }
  { op_hcompute_hw_output_stencil[d0, d1, d2] -> [2 + d2, 2 + d1, d0] }
  { op_hcompute_hw_input_global_wrapper_stencil[d0, d1, d2] -> [d2, d1, d0] }
Domain...
  { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
  { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
bounds...{ [i0, i1, 0] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
lengths
1
64
64
1
Fused iis
  4096
  64
  1
Finite validity: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = conv_s0_y, conv_s1_x = conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_yi = conv_s1_y, hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Dep = { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Dep = { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = conv_s0_y, conv_s1_x = conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
  Dep = { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 2 <= hw_input_global_wrapper_s0_x <= 63 }
  Dep = { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_yi = conv_s1_y, hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Got deps
Schedule dim = 3
  scheduling dimension 0
  { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
  { op_hcompute_conv_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_output_stencil[root' = 0] }
Consumed data...
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_weight_global_wrapper_stencil[root' = 0] }
bound: { op_hcompute_conv_stencil_1[root] -> op_hcompute_hw_weight_global_wrapper_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[root] -> [(0)] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_conv_stencil[root' = 0] }
bound: { op_hcompute_conv_stencil_1[root] -> op_hcompute_conv_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[root] -> [(0)] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0] }
bound: { op_hcompute_conv_stencil_1[root] -> op_hcompute_hw_input_global_wrapper_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[root] -> [(0)] }
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
bound: { op_hcompute_hw_output_stencil[root] -> op_hcompute_conv_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_hw_output_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[root] -> [(0)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv_stencil_1, s_op_hcompute_conv_stencil, s_op_hcompute_hw_output_stencil, s_op_hcompute_hw_weight_global_wrapper_stencil, s_op_hcompute_hw_input_global_wrapper_stencil] : s_op_hcompute_conv_stencil_1 > 0 and s_op_hcompute_conv_stencil > 0 and s_op_hcompute_hw_output_stencil > 0 and s_op_hcompute_hw_weight_global_wrapper_stencil > 0 and s_op_hcompute_hw_input_global_wrapper_stencil > 0 }
Writing problem to mod file...
  # of constraints: 5
  legal point  : { [1, 1, 1, 1, 1] }
  minimal point: 0
Schedule params...
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_conv_stencil[root' = 0] }
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_weight_global_wrapper_stencil[root' = 0] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0] }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(i)] }
  op_hcompute_hw_weight_global_wrapper_stencil: { [i] -> [(i)] }
  scheduling dimension 1
  { op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y = 2] -> op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y = 1] -> op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y = 0] -> op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 61 }
  { op_hcompute_conv_stencil[conv_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = conv_s0_y] : 0 <= conv_s0_y <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = hw_input_global_wrapper_s0_y] : 0 <= hw_input_global_wrapper_s0_y <= 61; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = -1 + hw_input_global_wrapper_s0_y] : 0 < hw_input_global_wrapper_s0_y <= 62; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = -2 + hw_input_global_wrapper_s0_y] : 2 <= hw_input_global_wrapper_s0_y <= 63 }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_output_stencil[hw_output_s0_y_yi = conv_s1_y] : 0 <= conv_s1_y <= 61 }
Consumed data...
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y = 2] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y = 1] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y = 0] : 0 <= conv_s1_y <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_weight_global_wrapper_stencil[(2)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(2)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(2)] }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_conv_stencil[conv_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_conv_stencil[(conv_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(conv_s1_y)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(conv_s1_y)] }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 2 + conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 1 + conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[(2 + conv_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(2 + conv_s1_y)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(2 + conv_s1_y)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_conv_stencil_1[conv_s1_y = hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 61 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_conv_stencil_1[(hw_output_s0_y_yi)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> [(hw_output_s0_y_yi)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 61 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> [(hw_output_s0_y_yi)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv_stencil_1, s_op_hcompute_hw_weight_global_wrapper_stencil, s_op_hcompute_hw_output_stencil, s_op_hcompute_conv_stencil, s_op_hcompute_hw_input_global_wrapper_stencil] : s_op_hcompute_hw_output_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_input_global_wrapper_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil_1 > 0 and s_op_hcompute_hw_weight_global_wrapper_stencil > 0 }
Writing problem to mod file...
  # of constraints: 8
  legal point  : { [1, 1, 1, 1, 1] }
  minimal point: -4
Schedule params...
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y = 2] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y = 1] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y = 0] : 0 <= conv_s1_y <= 61 }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_conv_stencil_1[conv_s1_y = hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 61 }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_conv_stencil[conv_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 61 }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 2 + conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 1 + conv_s1_y] : 0 <= conv_s1_y <= 61; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 61 }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(2 + i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(2 + i)] }
  op_hcompute_hw_weight_global_wrapper_stencil: { [i] -> [(i)] }
  scheduling dimension 2
  { op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_x = 2] -> op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_x = 1] -> op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_x = 0] -> op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 61 }
  { op_hcompute_conv_stencil[conv_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = conv_s0_x] : 0 <= conv_s0_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_output_stencil[hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_x <= 61 }
Consumed data...
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_x = 2] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_x = 1] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_x = 0] : 0 <= conv_s1_x <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_weight_global_wrapper_stencil[(2)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(2)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(2)] }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_conv_stencil[conv_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_conv_stencil[(conv_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(conv_s1_x)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(conv_s1_x)] }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 2 + conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 61 }
bound: { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[(2 + conv_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(2 + conv_s1_x)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(2 + conv_s1_x)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv_stencil_1[conv_s1_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 61 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv_stencil_1[(hw_output_s0_x_xi)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 61 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv_stencil_1, s_op_hcompute_conv_stencil, s_op_hcompute_hw_weight_global_wrapper_stencil, s_op_hcompute_hw_input_global_wrapper_stencil, s_op_hcompute_hw_output_stencil] : s_op_hcompute_conv_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_input_global_wrapper_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil_1 > 0 and s_op_hcompute_hw_weight_global_wrapper_stencil > 0 }
Writing problem to mod file...
  # of constraints: 8
  legal point  : { [1, 1, 1, 1, 1] }
  minimal point: -4
Schedule params...
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_conv_stencil[conv_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 61 }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_x = 2] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_x = 1] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_x = 0] : 0 <= conv_s1_x <= 61 }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 2 + conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv_stencil_1[conv_s1_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 61 }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(2 + i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(2 + i)] }
  op_hcompute_hw_weight_global_wrapper_stencil: { [i] -> [(i)] }
Original Loop iis
op_hcompute_hw_input_global_wrapper_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_hw_input_global_wrapper_stencil
  hw_input_global_wrapper_s0_y q: 1, d = 0
    ii = 64
op_hcompute_hw_input_global_wrapper_stencil
  hw_input_global_wrapper_s0_x q: 1, d = 0
    ii = 1
op_hcompute_hw_weight_global_wrapper_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_hw_weight_global_wrapper_stencil
  hw_weight_global_wrapper_s0_y q: 1, d = 0
    ii = 64
op_hcompute_hw_weight_global_wrapper_stencil
  hw_weight_global_wrapper_s0_x q: 1, d = 0
    ii = 1
op_hcompute_conv_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_conv_stencil
  conv_s0_y q: 1, d = 2
    ii = 64
op_hcompute_conv_stencil
  conv_s0_x q: 1, d = 2
    ii = 1
op_hcompute_conv_stencil_1
  root q: 1, d = 0
    ii = 4096
op_hcompute_conv_stencil_1
  conv_s1_y q: 1, d = 2
    ii = 64
op_hcompute_conv_stencil_1
  conv_s1_x q: 1, d = 2
    ii = 1
op_hcompute_hw_output_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_hw_output_stencil
  hw_output_s0_y_yi q: 1, d = 2
    ii = 64
op_hcompute_hw_output_stencil
  hw_output_s0_x_xi q: 1, d = 2
    ii = 1
inner ops: op_hcompute_hw_input_global_wrapper_stencil
inner ops: op_hcompute_hw_input_global_wrapper_stencil, offset: 0
inner ops: op_hcompute_hw_weight_global_wrapper_stencil
inner ops: op_hcompute_hw_weight_global_wrapper_stencil, offset: 0
inner ops: op_hcompute_conv_stencil
inner ops: op_hcompute_conv_stencil, offset: 0
inner ops: op_hcompute_conv_stencil_1
force inner op: op_hcompute_conv_stencil, has same offset as update: 0
inner ops: op_hcompute_conv_stencil_1, offset: 0
inner ops: op_hcompute_hw_output_stencil
inner ops: op_hcompute_hw_output_stencil, offset: 0
schedule for n: { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [130 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [130 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [130 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [130 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [130 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [130 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [130 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [130 + 4096root + 64conv_s1_y + conv_s1_x] }
orginal schedule before relax: { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [130 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [130 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [130 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [130 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [130 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [130 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [130 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [130 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [130 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [130 + 4096root + 64conv_s1_y + conv_s1_x] }
Start times...
{ start_op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [130 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; start_op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [130 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; start_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; start_op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [130 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; start_op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
  pre adjustment min: { [0] }
Adjusting delays of conv_2input
schedule for n: { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [130 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [130 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [130 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [130 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [130 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [130 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [130 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [130 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [130 + 4096root + 64conv_s0_y + conv_s0_x]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] }
sorted kernel: {}
sorted kernel: {conv_s0_y}
sorted kernel: {conv_s0_y}
sorted kernel: {conv_s0_y, hw_input_global_wrapper_s0_y}
sorted kernel: {conv_s0_y, hw_input_global_wrapper_s0_y}
sorted kernel: {conv_s0_y, hw_input_global_wrapper_s0_y}
sorted kernel: {conv_s0_y, hw_input_global_wrapper_s0_y, hw_weight_global_wrapper_s0_y}
sorted kernel: {conv_s0_y, hw_input_global_wrapper_s0_y, hw_weight_global_wrapper_s0_y, conv_s1_y}
Adjusting delay of conv_s0_y
Adjusting delay of hw_input_global_wrapper_s0_y
read map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Kernel <hw_input_global_wrapper_s0_y> has Delay slack: 0
Offset with in parent: 0
Adjusting delay of hw_weight_global_wrapper_s0_y
read map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Kernel <hw_weight_global_wrapper_s0_y> has Delay slack: 0
Offset with in parent: 0
Adjusting delay of conv_s1_y
read map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
writes: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [130 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [130 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [130 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
  { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Time to write: { [i0] -> conv_stencil_clkwrk_dsa0[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -1 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -2 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -64 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -65 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -66 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -128 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -129 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> conv_stencil_clkwrk_dsa0[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> hw_weight_global_wrapper_stencil[2, 2] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[1, 2] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[0, 2] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[2, 1] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[1, 1] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[0, 1] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[2, 0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[1, 0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[0, 0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_conv_stencil
    sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [130 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
    Consumers: op_hcompute_conv_stencil_1
    sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [130 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [130 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [130 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [130 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
  { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -1 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -2 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -64 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -65 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -66 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -128 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -129 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> conv_stencil_clkwrk_dsa0[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> hw_weight_global_wrapper_stencil[2, 2] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[1, 2] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[0, 2] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[2, 1] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[1, 1] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[0, 1] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[2, 0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[1, 0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[0, 0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
PC times     : { [i0] -> [130 + i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0; [i0] -> [129 + i0] : -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) < i0; [i0] -> [128 + i0] : 0 <= i0 <= 3967 and 64*floor((i0)/64) <= -2 + i0; [i0] -> [66 + i0] : 62 <= i0 <= 4029 and 64*floor((2 + i0)/64) <= i0; [i0] -> [65 + i0] : 63 <= i0 <= 4030 and 64*floor((1 + i0)/64) < i0; [i0] -> [64 + i0] : 64 <= i0 <= 4031 and 64*floor((i0)/64) <= -2 + i0; [i0] -> [2 + i0] : 126 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= i0; [i0] -> [1 + i0] : 127 <= i0 <= 4094 and 64*floor((1 + i0)/64) < i0; [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [130]; [129]; [128]; [66]; [65]; [64]; [2]; [1]; [0] }
    Producers: op_hcompute_hw_input_global_wrapper_stencil
    sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
    Consumers: op_hcompute_conv_stencil_1
    sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [130 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
writes: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [130 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [130 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [130 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
  { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Time to write: { [i0] -> hw_weight_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 2 and -2 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -1 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -2 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -64 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -65 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -66 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -128 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -129 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> conv_stencil_clkwrk_dsa0[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> hw_weight_global_wrapper_stencil[2, 2] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[1, 2] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[0, 2] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[2, 1] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[1, 1] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[0, 1] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[2, 0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[1, 0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0; [i0] -> hw_weight_global_wrapper_stencil[0, 0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
PC times     : { [130] -> [o0] : 128 <= o0 <= 4095 and 64*floor((o0)/64) <= -2 + o0; [129] -> [o0] : 128 <= o0 <= 4095 and 64*floor((o0)/64) <= -2 + o0; [128] -> [o0] : 128 <= o0 <= 4095 and 64*floor((o0)/64) <= -2 + o0; [66] -> [o0] : 128 <= o0 <= 4095 and 64*floor((o0)/64) <= -2 + o0; [65] -> [o0] : 128 <= o0 <= 4095 and 64*floor((o0)/64) <= -2 + o0; [64] -> [o0] : 128 <= o0 <= 4095 and 64*floor((o0)/64) <= -2 + o0; [2] -> [o0] : 128 <= o0 <= 4095 and 64*floor((o0)/64) <= -2 + o0; [1] -> [o0] : 128 <= o0 <= 4095 and 64*floor((o0)/64) <= -2 + o0; [0] -> [o0] : 128 <= o0 <= 4095 and 64*floor((o0)/64) <= -2 + o0 }
DDs          : { [i0] : -2 <= i0 <= 4095 and ((i0 <= 3965 and 64*floor((2 + i0)/64) <= i0) or (i0 >= 128 and 64*floor((i0)/64) <= -2 + i0) or (127 <= i0 <= 4094 and 64*floor((1 + i0)/64) < i0) or (126 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= i0) or (64 <= i0 <= 4031 and 64*floor((i0)/64) <= -2 + i0) or (63 <= i0 <= 4030 and 64*floor((1 + i0)/64) < i0) or (62 <= i0 <= 4029 and 64*floor((2 + i0)/64) <= i0) or (0 <= i0 <= 3967 and 64*floor((i0)/64) <= -2 + i0) or (-1 <= i0 <= 3966 and 64*floor((1 + i0)/64) < i0)) }
    Min DD: 0
    Max DD: 4095
		op op_hcompute_hw_weight_global_wrapper_stencil has ii: 1
    Producers: op_hcompute_hw_weight_global_wrapper_stencil
    sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
    Consumers: op_hcompute_conv_stencil_1
    sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [130 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Kernel <conv_s1_y> has Delay slack: 8
Offset with in parent: 136
Adjusting delay of hw_output_s0_y_yi
read map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
write map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
writes: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
reads : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Schedule...
  { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [130 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [130 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [130 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
  { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Time to write: { [i0] -> conv_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> conv_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_conv_stencil_1
    sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [130 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    Consumers: op_hcompute_hw_output_stencil
    sched: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [130 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Kernel <hw_output_s0_y_yi> has Delay slack: 8
Offset with in parent: 136
    Find buffers need to be rewritten: conv_stencil_clkwrk_dsa0
    Find buffers need to be rewritten: hw_input_global_wrapper_stencil
    Find buffers need to be rewritten: hw_weight_global_wrapper_stencil

Filter buffers...

schedule for n: { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
Final schedule after relax: { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { end_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] }
schedmap = { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; end_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x]; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
Final end schedule after relax: { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; end_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x]; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] }
Computing validity deps for conv_stencil
Computing validity deps for conv_stencil_clkwrk_dsa0
Computing validity deps for hw_input_global_wrapper_stencil
Computing validity deps for hw_input_stencil
Computing validity deps for hw_output_stencil
Computing validity deps for hw_weight_global_wrapper_stencil
Computing validity deps for hw_weight_stencil
program: conv_2input
Inputs...
  hw_input_stencil
  hw_weight_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int hw_weight_global_wrapper_s0_y = 0; hw_weight_global_wrapper_s0_y < 3; hw_weight_global_wrapper_s0_y++) {
    for (int hw_weight_global_wrapper_s0_x = 0; hw_weight_global_wrapper_s0_x < 3; hw_weight_global_wrapper_s0_x++) {
      op_hcompute_hw_weight_global_wrapper_stencil: hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y+0,  hw_weight_global_wrapper_s0_x+0] = hcompute_hw_weight_global_wrapper_stencil(hw_weight_stencil[hw_weight_global_wrapper_s0_y+0,  hw_weight_global_wrapper_s0_x+0])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 62; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 62; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_y+0,  conv_s0_x+0] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 62; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 62; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y+0,  conv_s1_x+0] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 1)+0], hw_weight_global_wrapper_stencil[0+0,  0+0], hw_weight_global_wrapper_stencil[0+0,  1+0], hw_weight_global_wrapper_stencil[0+0,  2+0], hw_weight_global_wrapper_stencil[1+0,  0+0], hw_weight_global_wrapper_stencil[1+0,  1+0], hw_weight_global_wrapper_stencil[1+0,  2+0], hw_weight_global_wrapper_stencil[2+0,  0+0], hw_weight_global_wrapper_stencil[2+0,  2+0], hw_weight_global_wrapper_stencil[2+0,  1+0])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 62; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 62; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
    }
  }
}
schedule for n: { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
Start times...
  { start_op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { start_op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
  { start_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { start_op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
  { start_op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
  min: { [0] }
schedule for n: { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { end_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] }
schedmap = { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; end_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x]; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
Schedule...
  { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x] }
  { start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] }
  { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
  { start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
  { start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
  Cycle deps: { end_op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = conv_s0_y, conv_s1_x = conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; end_op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> start_op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_yi = conv_s1_y, hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; end_op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; end_op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; end_op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; end_op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; end_op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; end_op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; end_op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; end_op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; end_op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 <= hw_input_global_wrapper_s0_x <= 61; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 61; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 61; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 < hw_input_global_wrapper_s0_x <= 62; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 62; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 < hw_input_global_wrapper_s0_x <= 62; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 2 <= hw_input_global_wrapper_s0_x <= 63; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 2 <= hw_input_global_wrapper_s0_x <= 63; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -2 + hw_input_global_wrapper_s0_y, conv_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 2 <= hw_input_global_wrapper_s0_x <= 63 }
  Earlier deps: { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : hw_weight_global_wrapper_s0_x > 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_weight_global_wrapper_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64conv_s1_y; end_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> start_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y', hw_weight_global_wrapper_s0_x'] : hw_weight_global_wrapper_s0_x' > 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64hw_weight_global_wrapper_s0_y'; end_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> end_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x >= -137 + 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64conv_s0_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x >= -137 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv_s0_y; end_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x >= -137 + 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64conv_s0_y; start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x >= -137 + 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64conv_s1_y; start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x >= -137 + 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64conv_s1_y; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> start_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : hw_weight_global_wrapper_s0_x >= 139 + 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_weight_global_wrapper_s0_y; end_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -137 + 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64conv_s1_y; start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -137 + 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> start_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : hw_weight_global_wrapper_s0_x >= 139 + 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_weight_global_wrapper_s0_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -137 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_x'] : hw_input_global_wrapper_s0_x' > 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y'; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 139 + 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> end_op_hcompute_conv_stencil[root', conv_s0_y', conv_s0_x'] : conv_s0_x' > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64conv_s0_y'; end_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -137 + 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 139 + 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x > 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x >= -137 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv_s1_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64conv_s0_y; start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> end_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y', hw_weight_global_wrapper_s0_x'] : hw_weight_global_wrapper_s0_x' > 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64hw_weight_global_wrapper_s0_y'; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : hw_weight_global_wrapper_s0_x > 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_weight_global_wrapper_s0_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x >= -137 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv_s1_y; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> end_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64conv_s0_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_x'] : hw_input_global_wrapper_s0_x' > 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y'; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_y', conv_s1_x'] : conv_s1_x' > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64conv_s1_y'; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_y', conv_s1_x'] : conv_s1_x' > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64conv_s1_y'; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x >= -137 + 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64conv_s1_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -137 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 139 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64conv_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : hw_weight_global_wrapper_s0_x >= 139 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_weight_global_wrapper_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64conv_s1_y; start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64conv_s1_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : hw_weight_global_wrapper_s0_x >= 139 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_weight_global_wrapper_s0_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : hw_weight_global_wrapper_s0_x > 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_weight_global_wrapper_s0_y; start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 139 + 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : hw_weight_global_wrapper_s0_x >= 139 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_weight_global_wrapper_s0_y; start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> start_op_hcompute_conv_stencil[root', conv_s0_y', conv_s0_x'] : conv_s0_x' > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64conv_s0_y'; start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x > 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x >= -137 + 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64conv_s0_y; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> start_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64conv_s0_y; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 139 + 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> start_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y', hw_weight_global_wrapper_s0_x'] : hw_weight_global_wrapper_s0_x' > 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64hw_weight_global_wrapper_s0_y'; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : hw_weight_global_wrapper_s0_x > 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_weight_global_wrapper_s0_y; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> start_op_hcompute_conv_stencil[root', conv_s0_y', conv_s0_x'] : conv_s0_x' > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64conv_s0_y'; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 139 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x >= -137 + 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64conv_s1_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_output_s0_y_yi'; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> start_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : hw_weight_global_wrapper_s0_x >= 139 + 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_weight_global_wrapper_s0_y; start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64conv_s1_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_output_s0_y_yi'; start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> end_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x >= -137 + 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64conv_s0_y; start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -137 + 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_output_s0_y_yi'; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64conv_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_output_s0_y_yi'; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -137 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> end_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64conv_s0_y; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 139 + 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x > 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 139 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 139 + 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_y', conv_s1_x'] : conv_s1_x' > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64conv_s1_y'; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> end_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : hw_weight_global_wrapper_s0_x >= 139 + 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_weight_global_wrapper_s0_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x >= -137 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv_s1_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64conv_s1_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -137 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> end_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : hw_weight_global_wrapper_s0_x >= 139 + 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_weight_global_wrapper_s0_y; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> end_op_hcompute_conv_stencil[root', conv_s0_y', conv_s0_x'] : conv_s0_x' > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64conv_s0_y'; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> start_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : hw_weight_global_wrapper_s0_x >= 139 + 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_weight_global_wrapper_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 139 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_x'] : hw_input_global_wrapper_s0_x' > 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y'; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> end_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : hw_weight_global_wrapper_s0_x >= 139 + 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_weight_global_wrapper_s0_y; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_y', conv_s1_x'] : conv_s1_x' > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64conv_s1_y'; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : hw_weight_global_wrapper_s0_x >= 139 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_weight_global_wrapper_s0_y; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> start_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64conv_s0_y; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 139 + 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_x'] : hw_input_global_wrapper_s0_x' > 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y'; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64conv_s0_y; start_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x > 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x >= -137 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv_s0_y; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64conv_s1_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x >= -137 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv_s0_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x >= -137 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv_s1_y; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64conv_s1_y; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> end_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : hw_weight_global_wrapper_s0_x >= 139 + 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_weight_global_wrapper_s0_y; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 139 + 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> end_op_hcompute_hw_weight_global_wrapper_stencil[root', hw_weight_global_wrapper_s0_y', hw_weight_global_wrapper_s0_x'] : hw_weight_global_wrapper_s0_x' > 4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x - 4096root' - 64hw_weight_global_wrapper_s0_y'; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x >= -137 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv_s0_y }
  Violated deps: {  }
schedule for n: { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [138 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [138 + 4096root + 64conv_s0_y + conv_s0_x]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [4096root + 64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] }
result schedule: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Creating ports for op: hw_weight_global_wrapper_stencil
cond = { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y+0,  hw_weight_global_wrapper_s0_x+0] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
		Consumed: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
Creating ports for op: hw_weight_stencil
cond = { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_stencil[hw_weight_global_wrapper_s0_y+0,  hw_weight_global_wrapper_s0_x+0] }
	Adding output port: hw_weight_stencil_op_hcompute_hw_weight_global_wrapper_stencil_1
		Consumed: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_hw_weight_global_wrapper_stencil
  other_dspace_id = op_hcompute_hw_weight_global_wrapper_stencil
  Schedule domain set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
  Domain set from prg: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
  ITS: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
ITS      : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
current out port name: 
	hw_weight_stencil_op_hcompute_hw_weight_global_wrapper_stencil_1
Creating ports for op: hw_output_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] }
	Adding output port: hw_output_stencil_op_hcompute_hw_output_stencil_2
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
current out port name: 
	hw_output_stencil_op_hcompute_hw_output_stencil_2
Creating ports for op: conv_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] }
	Adding output port: conv_stencil_op_hcompute_hw_output_stencil_3
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_hw_output_stencil
  other_dspace_id = op_hcompute_hw_output_stencil
  Schedule domain set: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
  Domain set from prg: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
  ITS: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
ITS      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
current out port name: 
	conv_stencil_op_hcompute_hw_output_stencil_3
Creating ports for op: hw_input_global_wrapper_stencil
cond = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
		Consumed: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
Creating ports for op: hw_input_stencil
cond = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] }
	Adding output port: hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_5
		Consumed: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_hw_input_global_wrapper_stencil
  other_dspace_id = op_hcompute_hw_input_global_wrapper_stencil
  Schedule domain set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  Domain set from prg: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  ITS: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
ITS      : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
current out port name: 
	hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_5
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y+0,  conv_s1_x+0] }
	Adding output port: conv_stencil_op_hcompute_conv_stencil_1_6
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	conv_stencil_op_hcompute_conv_stencil_1_6
Creating ports for op: conv_stencil_clkwrk_dsa0
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y+0,  conv_s1_x+0] }
	Adding output port: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 2)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 1)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  (conv_s1_x + 2)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  conv_s1_x+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 2)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 2)+0,  (conv_s1_x + 1)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0+0,  0+0] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0+0,  1+0] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0+0,  2+0] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1+0,  0+0] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1+0,  1+0] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1+0,  2+0] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2+0,  0+0] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2+0,  2+0] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2+0,  1+0] }
	Adding output port: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
SDom     : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
current out port name: 
	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24	hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25
cond = { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y+0,  conv_s0_x+0] }
	Adding output port: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
		Consumed: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
current out port name: 
	conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
Latency of application is: { [4103] }
Global schedule: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61; op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
# in bundles: 1
Generating compute unit for op_hcompute_hw_input_global_wrapper_stencil
getting incoming buffers to op_hcompute_hw_input_global_wrapper_stencil
  consumed: hw_input_stencil
Found compute file for conv_2input
getting incoming buffers to op_hcompute_hw_input_global_wrapper_stencil
  consumed: hw_input_stencil
Looking for connection for hw_input_stencil.op_hcompute_hw_input_global_wrapper_stencil_read
# of selects = 0
inner_compute() : global.hcompute_hw_input_global_wrapper_stencil
name = in0_hw_input_stencil
More than oune outgoing bundle
# of selects = 1
inner_compute() : global.hcompute_hw_input_global_wrapper_stencil
  name = in0_hw_input_stencil
  bundle.first = hw_input_global_wrapper_stencil
  after split  = hw_input_global_wrapper_stencil
  name = out_hw_input_global_wrapper_stencil
  bundle.first = hw_input_global_wrapper_stencil
  after split  = hw_input_global_wrapper_stencil
Generating compute unit for op_hcompute_hw_weight_global_wrapper_stencil
getting incoming buffers to op_hcompute_hw_weight_global_wrapper_stencil
  consumed: hw_weight_stencil
Found compute file for conv_2input
getting incoming buffers to op_hcompute_hw_weight_global_wrapper_stencil
  consumed: hw_weight_stencil
Looking for connection for hw_weight_stencil.op_hcompute_hw_weight_global_wrapper_stencil_read
# of selects = 0
inner_compute() : global.hcompute_hw_weight_global_wrapper_stencil
name = in0_hw_weight_stencil
More than oune outgoing bundle
# of selects = 1
inner_compute() : global.hcompute_hw_weight_global_wrapper_stencil
  name = in0_hw_weight_stencil
  bundle.first = hw_weight_global_wrapper_stencil
  after split  = hw_weight_global_wrapper_stencil
  name = out_hw_weight_global_wrapper_stencil
  bundle.first = hw_weight_global_wrapper_stencil
  after split  = hw_weight_global_wrapper_stencil
Generating compute unit for op_hcompute_conv_stencil
getting incoming buffers to op_hcompute_conv_stencil
Found compute file for conv_2input
getting incoming buffers to op_hcompute_conv_stencil
More than oune outgoing bundle
# of selects = 0
inner_compute() : global.hcompute_conv_stencil
  name = out_conv_stencil
  bundle.first = conv_stencil_clkwrk_dsa0
  after split  = conv_stencil
Generating compute unit for op_hcompute_conv_stencil_1
getting incoming buffers to op_hcompute_conv_stencil_1
  consumed: conv_stencil_clkwrk_dsa0
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
Found compute file for conv_2input
getting incoming buffers to op_hcompute_conv_stencil_1
  consumed: conv_stencil_clkwrk_dsa0
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
Looking for connection for conv_stencil_clkwrk_dsa0.op_hcompute_conv_stencil_1_read
# of selects = 0
inner_compute() : global.hcompute_conv_stencil_1
name = in0_conv_stencil
Looking for connection for hw_input_global_wrapper_stencil.op_hcompute_conv_stencil_1_read
# of selects = 1
inner_compute() : global.hcompute_conv_stencil_1
name = in0_conv_stencil
name = in1_hw_input_global_wrapper_stencil
Looking for connection for hw_weight_global_wrapper_stencil.op_hcompute_conv_stencil_1_read
# of selects = 2
inner_compute() : global.hcompute_conv_stencil_1
name = in0_conv_stencil
name = in1_hw_input_global_wrapper_stencil
name = in2_hw_weight_global_wrapper_stencil
More than oune outgoing bundle
# of selects = 3
inner_compute() : global.hcompute_conv_stencil_1
  name = in0_conv_stencil
  bundle.first = conv_stencil
  after split  = conv_stencil
  name = in1_hw_input_global_wrapper_stencil
  bundle.first = conv_stencil
  after split  = conv_stencil
  name = in2_hw_weight_global_wrapper_stencil
  bundle.first = conv_stencil
  after split  = conv_stencil
  name = out_conv_stencil
  bundle.first = conv_stencil
  after split  = conv_stencil
Generating compute unit for op_hcompute_hw_output_stencil
getting incoming buffers to op_hcompute_hw_output_stencil
  consumed: conv_stencil
Found compute file for conv_2input
getting incoming buffers to op_hcompute_hw_output_stencil
  consumed: conv_stencil
Looking for connection for conv_stencil.op_hcompute_hw_output_stencil_read
# of selects = 0
inner_compute() : global.hcompute_hw_output_stencil
name = in0_conv_stencil
More than oune outgoing bundle
# of selects = 1
inner_compute() : global.hcompute_hw_output_stencil
  name = in0_conv_stencil
  bundle.first = hw_output_stencil
  after split  = hw_output_stencil
  name = out_hw_output_stencil
  bundle.first = hw_output_stencil
  after split  = hw_output_stencil
create shift register for --- conv_stencil
	---- 1 in ports
		conv_stencil_op_hcompute_conv_stencil_1_6
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { conv_stencil[0, 0] }
			max location: { conv_stencil[61, 61] }

	---- 1 out ports:
		conv_stencil_op_hcompute_hw_output_stencil_3
			dom : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
			acc : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
			sched: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
			min location: { conv_stencil[0, 0] }
			max location: { conv_stencil[61, 61] }

	---- Input Bundles
		op_hcompute_conv_stencil_1_write
		---- Ports...
			conv_stencil_op_hcompute_conv_stencil_1_6
	---- Output Bundles
		op_hcompute_hw_output_stencil_read
		---- Ports...
			conv_stencil_op_hcompute_hw_output_stencil_3

==== No reduce ops on this buffer
Writer name: op_hcompute_conv_stencil_1
read_op read: {conv_stencil}
read_op write: {hw_output_stencil, }
write_op write: {hw_output_stencil}
write_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
reads : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
Time to write: { [i0] -> conv_stencil[o0, -138 + i0 - 64o0] : 0 <= o0 <= 61 and -199 + i0 <= 64o0 <= -138 + i0 }
Time to read : { [i0] -> conv_stencil[o0, -138 + i0 - 64o0] : 0 <= o0 <= 61 and -199 + i0 <= 64o0 <= -138 + i0 }
PC times     : { [i0] -> [i0] : 136 <= i0 <= 4103 and 64*floor((-8 + i0)/64) <= -10 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_conv_stencil_1
DG: ...
# nodes: 2
# edges: 1
Group:     conv_stencil_op_hcompute_conv_stencil_1_6
        conv_stencil_op_hcompute_conv_stencil_1_6 -> (0) conv_stencil_op_hcompute_hw_output_stencil_3
Fanin Group:     conv_stencil_op_hcompute_conv_stencil_1_6
        conv_stencil_op_hcompute_hw_output_stencil_3 -> (-1) conv_stencil_op_hcompute_conv_stencil_1_6

Naive Shift registers...
# nodes: 2
# edges: 1
Group:     conv_stencil_op_hcompute_conv_stencil_1_6
        conv_stencil_op_hcompute_conv_stencil_1_6 -> (0) conv_stencil_op_hcompute_hw_output_stencil_3
Fanin Group:     conv_stencil_op_hcompute_conv_stencil_1_6
        conv_stencil_op_hcompute_hw_output_stencil_3 -> (-1) conv_stencil_op_hcompute_conv_stencil_1_6

inpt: conv_stencil_op_hcompute_conv_stencil_1_6
  conv_stencil_op_hcompute_hw_output_stencil_3 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     conv_stencil_op_hcompute_conv_stencil_1_6
        conv_stencil_op_hcompute_conv_stencil_1_6 -> (0) conv_stencil_op_hcompute_hw_output_stencil_3
Fanin Group:     conv_stencil_op_hcompute_conv_stencil_1_6
        conv_stencil_op_hcompute_hw_output_stencil_3 -> (-1) conv_stencil_op_hcompute_conv_stencil_1_6

edge: conv_stencil_op_hcompute_conv_stencil_1_6=>conv_stencil_op_hcompute_hw_output_stencil_3, w=0
after sort: outpt->conv_stencil_op_hcompute_hw_output_stencil_3, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     conv_stencil_op_hcompute_conv_stencil_1_6
        conv_stencil_op_hcompute_conv_stencil_1_6 -> (0) conv_stencil_op_hcompute_hw_output_stencil_3
Fanin Group:     conv_stencil_op_hcompute_conv_stencil_1_6
        conv_stencil_op_hcompute_hw_output_stencil_3 -> (-1) conv_stencil_op_hcompute_conv_stencil_1_6
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_op_hcompute_conv_stencil_1_6->conv_stencil_op_hcompute_hw_output_stencil_3, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_op_hcompute_conv_stencil_1_6->conv_stencil_op_hcompute_hw_output_stencil_3, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_op_hcompute_conv_stencil_1_6->conv_stencil_op_hcompute_hw_output_stencil_3, delay = 0
	register IO:: 

Done ports: {conv_stencil_op_hcompute_hw_output_stencil_3}
reduced buffer: --- conv_stencil
	---- 1 in ports
		conv_stencil_op_hcompute_conv_stencil_1_6
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { conv_stencil[0, 0] }
			max location: { conv_stencil[61, 61] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_conv_stencil_1_write
		---- Ports...
			conv_stencil_op_hcompute_conv_stencil_1_6
	---- Output Bundles

SR outputs: {conv_stencil_op_hcompute_hw_output_stencil_3}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_op_hcompute_conv_stencil_1_6->conv_stencil_op_hcompute_hw_output_stencil_3, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_op_hcompute_conv_stencil_1_6->conv_stencil_op_hcompute_hw_output_stencil_3, delay = 0
	register IO:: 

add input: conv_stencil_op_hcompute_conv_stencil_1_6 to pt2wire
add output: conv_stencil_op_hcompute_hw_output_stencil_3 to pt2wire
create shift register for --- conv_stencil_clkwrk_dsa0
	---- 1 in ports
		conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
			dom : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
			acc : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
			sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
			min location: { conv_stencil_clkwrk_dsa0[0, 0] }
			max location: { conv_stencil_clkwrk_dsa0[61, 61] }

	---- 1 out ports:
		conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { conv_stencil_clkwrk_dsa0[0, 0] }
			max location: { conv_stencil_clkwrk_dsa0[61, 61] }

	---- Input Bundles
		op_hcompute_conv_stencil_write
		---- Ports...
			conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
	---- Output Bundles
		op_hcompute_conv_stencil_1_read
		---- Ports...
			conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7

==== No reduce ops on this buffer
Writer name: op_hcompute_conv_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: 
Calculate DDs for creating shift registers.
writes: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
Time to write: { [i0] -> conv_stencil_clkwrk_dsa0[o0, -138 + i0 - 64o0] : 0 <= o0 <= 61 and -199 + i0 <= 64o0 <= -138 + i0 }
Time to read : { [i0] -> conv_stencil_clkwrk_dsa0[o0, -138 + i0 - 64o0] : 0 <= o0 <= 61 and -199 + i0 <= 64o0 <= -138 + i0 }
PC times     : { [i0] -> [i0] : 136 <= i0 <= 4103 and 64*floor((-8 + i0)/64) <= -10 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_conv_stencil
DG: ...
# nodes: 2
# edges: 1
Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26 -> (0) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7
Fanin Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7 -> (-1) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26

Naive Shift registers...
# nodes: 2
# edges: 1
Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26 -> (0) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7
Fanin Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7 -> (-1) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26

inpt: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
  conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26 -> (0) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7
Fanin Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7 -> (-1) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26

edge: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26=>conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7, w=0
after sort: outpt->conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26 -> (0) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7
Fanin Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7 -> (-1) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26->conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26->conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26->conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7, delay = 0
	register IO:: 

Done ports: {conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7}
reduced buffer: --- conv_stencil_clkwrk_dsa0
	---- 1 in ports
		conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
			dom : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
			acc : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
			sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [138 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 61 and 0 <= conv_s0_x <= 61 }
			min location: { conv_stencil_clkwrk_dsa0[0, 0] }
			max location: { conv_stencil_clkwrk_dsa0[61, 61] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_conv_stencil_write
		---- Ports...
			conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26
	---- Output Bundles

SR outputs: {conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26->conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26->conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7, delay = 0
	register IO:: 

add input: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_26 to pt2wire
add output: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_7 to pt2wire
create shift register for --- hw_input_global_wrapper_stencil
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil[0, 0] }
			max location: { hw_input_global_wrapper_stencil[63, 63] }

	---- 9 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[0, 2] }
			max location: { hw_input_global_wrapper_stencil[61, 63] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[1, 0] }
			max location: { hw_input_global_wrapper_stencil[62, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[1, 1] }
			max location: { hw_input_global_wrapper_stencil[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[1, 2] }
			max location: { hw_input_global_wrapper_stencil[62, 63] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[2, 0] }
			max location: { hw_input_global_wrapper_stencil[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[2, 2] }
			max location: { hw_input_global_wrapper_stencil[63, 63] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[2, 1] }
			max location: { hw_input_global_wrapper_stencil[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[0, 0] }
			max location: { hw_input_global_wrapper_stencil[61, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[0, 1] }
			max location: { hw_input_global_wrapper_stencil[61, 62] }

	---- Input Bundles
		op_hcompute_hw_input_global_wrapper_stencil_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
	---- Output Bundles
		op_hcompute_conv_stencil_1_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16

==== No reduce ops on this buffer
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -136 + i0 - 64o0] : 0 <= o0 <= 61 and -199 + i0 <= 64o0 <= -138 + i0 }
PC times     : { [i0] -> [136 + i0] : 0 <= i0 <= 3967 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [136] }
DD           : 136
writer op    : op_hcompute_hw_input_global_wrapper_stencil
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -74 + i0 - 64o0] : 0 < o0 <= 62 and -135 + i0 <= 64o0 <= -74 + i0 }
PC times     : { [i0] -> [74 + i0] : 62 <= i0 <= 4029 and 64*floor((2 + i0)/64) <= i0 }
DDs          : { [74] }
DD           : 74
writer op    : op_hcompute_hw_input_global_wrapper_stencil
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -73 + i0 - 64o0] : 0 < o0 <= 62 and -135 + i0 <= 64o0 <= -74 + i0 }
PC times     : { [i0] -> [73 + i0] : 63 <= i0 <= 4030 and 64*floor((1 + i0)/64) < i0 }
DDs          : { [73] }
DD           : 73
writer op    : op_hcompute_hw_input_global_wrapper_stencil
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -72 + i0 - 64o0] : 0 < o0 <= 62 and -135 + i0 <= 64o0 <= -74 + i0 }
PC times     : { [i0] -> [72 + i0] : 64 <= i0 <= 4031 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [72] }
DD           : 72
writer op    : op_hcompute_hw_input_global_wrapper_stencil
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -10 + i0 - 64o0] : 2 <= o0 <= 63 and -71 + i0 <= 64o0 <= -10 + i0 }
PC times     : { [i0] -> [10 + i0] : 126 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= i0 }
DDs          : { [10] }
DD           : 10
writer op    : op_hcompute_hw_input_global_wrapper_stencil
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 2 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -8 + i0 - 64o0] : 2 <= o0 <= 63 and -71 + i0 <= 64o0 <= -10 + i0 }
PC times     : { [i0] -> [8 + i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [8] }
DD           : 8
writer op    : op_hcompute_hw_input_global_wrapper_stencil
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[2 + conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -9 + i0 - 64o0] : 2 <= o0 <= 63 and -71 + i0 <= 64o0 <= -10 + i0 }
PC times     : { [i0] -> [9 + i0] : 127 <= i0 <= 4094 and 64*floor((1 + i0)/64) < i0 }
DDs          : { [9] }
DD           : 9
writer op    : op_hcompute_hw_input_global_wrapper_stencil
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -138 + i0 - 64o0] : 0 <= o0 <= 61 and -199 + i0 <= 64o0 <= -138 + i0 }
PC times     : { [i0] -> [138 + i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
DDs          : { [138] }
DD           : 138
writer op    : op_hcompute_hw_input_global_wrapper_stencil
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -137 + i0 - 64o0] : 0 <= o0 <= 61 and -199 + i0 <= 64o0 <= -138 + i0 }
PC times     : { [i0] -> [137 + i0] : -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) < i0 }
DDs          : { [137] }
DD           : 137
writer op    : op_hcompute_hw_input_global_wrapper_stencil
DG: ...
# nodes: 10
# edges: 9
Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (136) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (74) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (73) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (72) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (10) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (8) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (9) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (138) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (137) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4

Naive Shift registers...
# nodes: 10
# edges: 9
Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (136) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (74) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (73) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (72) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (10) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (8) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (9) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (138) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (137) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4

inpt: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15 -(8)-> 8
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16 -(9)-> 9
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14 -(10)-> 10
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13 -(72)-> 72
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12 -(73)-> 73
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11 -(74)-> 74
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10 -(136)-> 136
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9 -(137)-> 137
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8 -(138)-> 138
Groups...
  Group...
  Group...
  Group...
# nodes: 10
# edges: 9
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (136) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (72) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (8) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4

edge: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4=>hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10, w=136
edge: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4=>hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13, w=72
edge: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4=>hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15, w=8
after sort: outpt->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10, w=136
after sort: outpt->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13, w=72
after sort: outpt->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15, w=8
	delay of hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16 = 1
	delay of hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15 = 2
	subbranch size: 2
	delay of hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12 = 1
	delay of hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13 = 2
	subbranch size: 2
	delay of hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9 = 1
	delay of hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10 = 2
	subbranch size: 2
# nodes: 10
# edges: 9
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (136) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (72) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 -> (8) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10, delay = 136
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13, delay = 72
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15, delay = 8
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, delay = 1
Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10, delay = 136
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13, delay = 72
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15, delay = 8
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, delay = 1

After shift register optimization: Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10, delay = 136
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13, delay = 72
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15, delay = 8
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, delay = 1

Done ports: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9}
reduced buffer: --- hw_input_global_wrapper_stencil
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil[0, 0] }
			max location: { hw_input_global_wrapper_stencil[63, 63] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_hw_input_global_wrapper_stencil_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
	---- Output Bundles

SR outputs: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9}
BUF outputs: {}
After banking optimization: Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10, delay = 136
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13, delay = 72
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15, delay = 8
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, delay = 1

After bank merging: Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10, delay = 136
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13, delay = 72
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15, delay = 8
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, delay = 1

CGPL level :0
impl inputs: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4}
impl outpts: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13}
rddom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
ls = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
v = 0
Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10, delay = 136
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13, delay = 72
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15, delay = 8
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, delay = 1

--- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [72 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13

Stride inner most:  1
{hw_input_global_wrapper_stencil[d0, d1] -> hw_input_global_wrapper_stencil[floor((1*d1 + 64*d0)/1)] }
reduce map: { hw_input_global_wrapper_stencil_BANK_0[d0, d1] -> hw_input_global_wrapper_stencil_BANK_0[64d0 + d1] }
linear map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
linear map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
after ubuffer regen: --- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [72 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13

addr need tight: {}
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [72 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [72 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }

	UBuffer after address tighten--- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [72 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13

getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_0[i0] : 0 <= i0 <= 4095 }
Vectorization buffer capacity: 4096

	UBuffer after cgpl optimization--- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [72 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13

find bd for op :op_hcompute_hw_input_global_wrapper_stencil
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
find bd for op :op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x)] }
	div dim: 0
getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_0[i0] : 0 <= i0 <= 4095 }
vectorization buffer capacity: 4096
vectorization buf name: hw_input_global_wrapper_stencil_BANK_0
	 original range input access map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	 dim id: 2
Ext by dim: {4096}
  buffer_vectorization Vectorizing: hw_input_global_wrapper_stencil_BANK_0
   On addr dim: 0, fetch_width: 4
--- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [72 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13

in bundle  = 1
out bundle = 1
Vectorize input port bundle: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
	vectorize input port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [4096, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

origin: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }, transform: { hw_input_global_wrapper_stencil_BANK_0[d0] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[d0] }
access map : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] -> op_hcompute_hw_input_global_wrapper_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	sched after trans: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_0[i0] -> hw_input_global_wrapper_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
trans max: 1023 , origin max: 1023
agg2sram sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
AGG : --- hw_input_global_wrapper_stencil_BANK_0_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_3

AGG Schedule: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Vectorize output port bundle: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
	Vectorize output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_0[i0] -> hw_input_global_wrapper_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
Range slice: { hw_input_global_wrapper_stencil_BANK_0[i0] -> hw_input_global_wrapper_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
after slice{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(16hw_input_global_wrapper_s0_y + floor((hw_input_global_wrapper_s0_x)/4))] }
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(16hw_input_global_wrapper_s0_y + floor((hw_input_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 2 denom: 4
	Trans str{op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[d0, d1, d2]->op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[d0, d1, floor(d2/4), d2%4]}
{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[d0, d1, d2] -> op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[d0, d1, o2, o3] : (-d2 + o3) mod 4 = 0 and -3 + d2 <= 4o2 <= d2 and 0 <= o3 <= 3 }
access map : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Preliminary vectorization dim: 2
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[i0, i1, i2, i3] -> [(16i1 + i2)] }
after removal: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[i0, i1, i2, i3] -> [(16i1 + i2)] }
new: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
remove: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
access map : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Vectorization dimension: 2
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[i0, i1, i2, i3] -> [(16i1 + i2)] }
	div dim: 0
rem: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
new: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
base_str : {op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[i0=0, i1=0, i2=0, i3]}
base_str : {op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[i0=0, i1=0, i2=0, i3]}
	new: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[i0 = 0, i1 = 0, i2 = 0, i3] }
	rem: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[i0 = 0, i1 = 0, i2 = 0, i3] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[i0, i1, i2, i3 = 0] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[i0, i1, i2, i3 = 0] }
remove dimension: {3}
before:{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
after:{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[0, i1, i2, 0] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
remove dimension: {3}
sched before projection: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[0, i1, i2] -> [72 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vectorization dimension after irrelevant dimension removal: 2
sched before adjust: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[0, i1, i2] -> [72 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[0, i1, i2] -> [72 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
final schedule: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
final access: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [4096, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

Autogen slice:{ hw_input_global_wrapper_stencil_BANK_0[i0] -> hw_input_global_wrapper_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(16hw_input_global_wrapper_s0_y + floor((hw_input_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] }
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+1]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+2]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+3]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] }
	Add TB output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_0[i0] -> hw_input_global_wrapper_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(16hw_input_global_wrapper_s0_y + floor((hw_input_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
access map expr:[64*i1+i2]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[64i1 + i2] }
tb output access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
	Access map decouple reuse: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [72 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [72 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
TB  : --- hw_input_global_wrapper_stencil_BANK_0_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [72 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out

TB Schedule: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15; op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [72 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
SRAM: --- hw_input_global_wrapper_stencil_BANK_0_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3

SRAM Schedule: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15; op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
after vectorization codegen: hw_input_global_wrapper_stencil_BANK_0_0_agg
--- hw_input_global_wrapper_stencil_BANK_0_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_3

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_0_0_tb
--- hw_input_global_wrapper_stencil_BANK_0_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [72 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_0_sram
--- hw_input_global_wrapper_stencil_BANK_0_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3

CGPL level :0
impl inputs: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4}
impl outpts: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
rddom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
ls = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
v = 0
Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10, delay = 136
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13, delay = 72
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15, delay = 8
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, delay = 1

--- hw_input_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [136 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10

Stride inner most:  1
{hw_input_global_wrapper_stencil[d0, d1] -> hw_input_global_wrapper_stencil[floor((1*d1 + 64*d0)/1)] }
reduce map: { hw_input_global_wrapper_stencil_BANK_1[d0, d1] -> hw_input_global_wrapper_stencil_BANK_1[64d0 + d1] }
linear map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
linear map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
after ubuffer regen: --- hw_input_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [136 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10

addr need tight: {}
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [136 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [136 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }

	UBuffer after address tighten--- hw_input_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [136 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10

getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_1[i0] : 0 <= i0 <= 4095 }
Vectorization buffer capacity: 4096

	UBuffer after cgpl optimization--- hw_input_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [136 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10

find bd for op :op_hcompute_hw_input_global_wrapper_stencil
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
find bd for op :op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x)] }
	div dim: 0
getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_1[i0] : 0 <= i0 <= 4095 }
vectorization buffer capacity: 4096
vectorization buf name: hw_input_global_wrapper_stencil_BANK_1
	 original range input access map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	 dim id: 2
Ext by dim: {4096}
  buffer_vectorization Vectorizing: hw_input_global_wrapper_stencil_BANK_1
   On addr dim: 0, fetch_width: 4
--- hw_input_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [136 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10

in bundle  = 1
out bundle = 1
Vectorize input port bundle: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
	vectorize input port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [4096, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

origin: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }, transform: { hw_input_global_wrapper_stencil_BANK_1[d0] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[d0] }
access map : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] -> op_hcompute_hw_input_global_wrapper_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	sched after trans: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_1[i0] -> hw_input_global_wrapper_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
trans max: 1023 , origin max: 1023
agg2sram sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
AGG : --- hw_input_global_wrapper_stencil_BANK_1_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_3

AGG Schedule: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Vectorize output port bundle: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
	Vectorize output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_1[i0] -> hw_input_global_wrapper_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
Range slice: { hw_input_global_wrapper_stencil_BANK_1[i0] -> hw_input_global_wrapper_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
after slice{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(16hw_input_global_wrapper_s0_y + floor((hw_input_global_wrapper_s0_x)/4))] }
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(16hw_input_global_wrapper_s0_y + floor((hw_input_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 2 denom: 4
	Trans str{op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[d0, d1, d2]->op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[d0, d1, floor(d2/4), d2%4]}
{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[d0, d1, d2] -> op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[d0, d1, o2, o3] : (-d2 + o3) mod 4 = 0 and -3 + d2 <= 4o2 <= d2 and 0 <= o3 <= 3 }
access map : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Preliminary vectorization dim: 2
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[i0, i1, i2, i3] -> [(16i1 + i2)] }
after removal: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[i0, i1, i2, i3] -> [(16i1 + i2)] }
new: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
remove: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
access map : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Vectorization dimension: 2
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[i0, i1, i2, i3] -> [(16i1 + i2)] }
	div dim: 0
rem: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
new: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
base_str : {op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[i0=0, i1=0, i2=0, i3]}
base_str : {op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[i0=0, i1=0, i2=0, i3]}
	new: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[i0 = 0, i1 = 0, i2 = 0, i3] }
	rem: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[i0 = 0, i1 = 0, i2 = 0, i3] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[i0, i1, i2, i3 = 0] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[i0, i1, i2, i3 = 0] }
remove dimension: {3}
before:{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
after:{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[0, i1, i2, 0] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
remove dimension: {3}
sched before projection: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[0, i1, i2] -> [136 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vectorization dimension after irrelevant dimension removal: 2
sched before adjust: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[0, i1, i2] -> [136 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[0, i1, i2] -> [136 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
final schedule: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
final access: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [4096, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

Autogen slice:{ hw_input_global_wrapper_stencil_BANK_1[i0] -> hw_input_global_wrapper_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(16hw_input_global_wrapper_s0_y + floor((hw_input_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + 4i2] }
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+1]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+2]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+3]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] }
	Add TB output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_1[i0] -> hw_input_global_wrapper_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(16hw_input_global_wrapper_s0_y + floor((hw_input_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
access map expr:[64*i1+i2]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1[64i1 + i2] }
tb output access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
	Access map decouple reuse: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [136 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [136 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
TB  : --- hw_input_global_wrapper_stencil_BANK_1_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [136 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out

TB Schedule: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15; op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [136 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
SRAM: --- hw_input_global_wrapper_stencil_BANK_1_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3

SRAM Schedule: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
after vectorization codegen: hw_input_global_wrapper_stencil_BANK_1_0_agg
--- hw_input_global_wrapper_stencil_BANK_1_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_out_3

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_1_0_tb
--- hw_input_global_wrapper_stencil_BANK_1_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [136 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_1_sram
--- hw_input_global_wrapper_stencil_BANK_1_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3

bank id: 0
rd dom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
	rel map: {0, 1, 1}
	rel dim: 2
	rel dim stride: 4
out_fetch_ii: 4
bank id: 1
rd dom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
	rel map: {0, 1, 1}
	rel dim: 2
	rel dim stride: 4
out_fetch_ii: 4
bank id: 0, to be merged: {0, 1}
	Group: 0: {0, 1}
	Perform bank merging!
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_1_0_agg
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_1_0_tb
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_1_sram
--- hw_input_global_wrapper_stencil_BANK_1_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3

	subcomponent keys:hw_input_global_wrapper_stencil_BANK_0_0_agg
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_0_0_tb
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_0_sram
--- hw_input_global_wrapper_stencil_BANK_0_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3

new banks id: 2
get SRAM port schedule: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
get SRAM port schedule: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
get SRAM port schedule: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
	 output sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [70 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
	adjust temp sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_0[i0 = 0, i1, i2] -> [69 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
--- hw_input_global_wrapper_stencil_bank_2_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[1] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[2] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[3] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4095] }

	---- 8 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[1] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[2] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[3] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4095] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[i0 = 0, i1, i2] -> [69 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[i0 = 0, i1, i2] -> [69 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[1] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[i0 = 0, i1, i2] -> [69 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[2] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[i0 = 0, i1, i2] -> [69 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[3] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3

--- hw_input_global_wrapper_stencil_bank_2
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_2[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_bank_2[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2[4095] }

	---- 2 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_2[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [136 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_bank_2[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2[4095] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_2[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [72 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_bank_2[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13

sub component buf: agg
sub component buf: tb
sub component buf: sram
sub component buf: agg
sub component buf: tb
sub component buf: sram
micor buf: --- hw_input_global_wrapper_stencil_bank_2_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2_0_tb[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_0_tb[1] }
			max location: { hw_input_global_wrapper_stencil_bank_2_0_tb[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_0_tb[2] }
			max location: { hw_input_global_wrapper_stencil_bank_2_0_tb[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_0_tb[3] }
			max location: { hw_input_global_wrapper_stencil_bank_2_0_tb[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [136 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_bank_2_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2_0_tb[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10_out

micor buf: --- hw_input_global_wrapper_stencil_bank_2_1_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[i0 = 0, i1, i2] -> [69 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_1_tb[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2_1_tb[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_1_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[i0 = 0, i1, i2] -> [69 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_1_tb[1] }
			max location: { hw_input_global_wrapper_stencil_bank_2_1_tb[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_1_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[i0 = 0, i1, i2] -> [69 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_1_tb[2] }
			max location: { hw_input_global_wrapper_stencil_bank_2_1_tb[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_1_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[i0 = 0, i1, i2] -> [69 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_1_tb[3] }
			max location: { hw_input_global_wrapper_stencil_bank_2_1_tb[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_1[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_1[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_1[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [72 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_bank_2_1_tb[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2_1_tb[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13_out

Bank writers: 
	 bank NO.2
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4}
Bank readers: 
	 bank NO.2
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10, delay = 136
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13, delay = 72
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15, delay = 8
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, delay = 1

add input: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_4 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_9 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_10 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_11 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_12 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_13 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_14 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_15 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_16 to pt2wire
agg2sram_opt debug start 
sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[i0 = 0, i1, i2] -> [69 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
write map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
{ hw_input_global_wrapper_stencil_bank_2_sram[i0] : -3 <= i0 <= 4095 and (((2 + i0) mod 4 = 0 and -1 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 4092 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 4093 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
read map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
op_name: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0, extent_0: 64, stride_0: 1
sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
write map: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_2_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
{ hw_input_global_wrapper_stencil_bank_2_0_agg[i0] : -3 <= i0 <= 4095 and (i0 >= 0 or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 4092 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 4093 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [136 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
write map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
{ hw_input_global_wrapper_stencil_bank_2_0_tb[i0] : -3 <= i0 <= 4095 and (i0 >= 0 or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 4092 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 4093 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[i0 = 0, i1, i2] -> [69 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_1[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [72 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
write map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
{ hw_input_global_wrapper_stencil_bank_2_1_tb[i0] : -3 <= i0 <= 4095 and (i0 >= 0 or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 4092 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 4093 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_1[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
	op name: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0
	Sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",4,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
adding new agg2sram opt cfg for: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0: mode 0, agg_read_padding 0, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",16,0
"write_data_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencil_in2agg_0
	Sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }

"dimensionality",3,0
"cycle_starting_addr",0,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_2_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0
	Sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",134,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0
	Sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [136 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }

"dimensionality",3,0
"cycle_starting_addr",136,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_136_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1
	Sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[i0 = 0, i1, i2] -> [69 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",69,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_sram2tb_1[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_1
	Sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_1[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [72 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }

"dimensionality",3,0
"cycle_starting_addr",72,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_72_tb2out_1[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
{"agg2sram_0":{"agg_read_padding":[0],"cycle_starting_addr":[4],"cycle_stride":[4,64],"delay":[0],"dimensionality":2,"extent":[16,64],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[1,0],"write_data_starting_addr":[0],"write_data_stride":[1,16]},"in2agg_0":{"cycle_starting_addr":[0],"cycle_stride":[1,64],"dimensionality":2,"extent":[64,64],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_0":{"cycle_starting_addr":[134],"cycle_stride":[4,64],"dimensionality":2,"extent":[16,64],"read_data_starting_addr":[0],"read_data_stride":[1,16],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_1":{"cycle_starting_addr":[69],"cycle_stride":[4,64],"dimensionality":2,"extent":[16,64],"read_data_starting_addr":[0],"read_data_stride":[1,16],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"tb2out_0":{"cycle_starting_addr":[136],"cycle_stride":[1,64],"dimensionality":2,"extent":[64,64],"read_data_starting_addr":[0],"read_data_stride":[1,0]},"tb2out_1":{"cycle_starting_addr":[72],"cycle_stride":[1,64],"dimensionality":2,"extent":[64,64],"read_data_starting_addr":[0],"read_data_stride":[1,0]}}
Add lake node:ub_hw_input_global_wrapper_stencil_bank_2 with input_num = 1, output_num = 2
Config mode: lake
Generating Verilog Testing Collateral for: ub_hw_input_global_wrapper_stencil_bank_2
Module: cgralib.Mem_amber(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'data_out_1':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U0__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs2__use_prebuilt_memTrue__width16
addr need tight: {}
Global range: { hw_input_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Sorted ops: {op_hcompute_hw_input_global_wrapper_stencil}
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
    sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
    reduce_map: { hw_input_stencil[d0, d1] -> hw_input_stencil[64d0 + d1] }
  Dim: 2
    Schedule dom range: 64, current_level_stride : 1, up_level_stride : 64
    Address dom range: 64, current_level_stride : 1, up_level_stride : 64
span range: 64, up_level_stride : 64
span range: 64, up_level_stride : 64
	access map merge pair: {{0, 1} }
	schedule merge pair: {{0, 1} }
merge pair: {0, 1} , {0, 1} 
access map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  After Merge: 
    schedule: { op_hcompute_hw_input_global_wrapper_stencil[0, i1] -> [i1] : 0 <= i1 <= 4095 }
"dimensionality",2,0
"cycle_starting_addr",0,0
"extent_1",1,0
"cycle_stride_1",0,0
"extent_0",4096,0
"cycle_stride_0",1,0
"read_data_starting_addr",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	Read map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
{"glb2out_0":{"cycle_starting_addr":[0],"cycle_stride":[1],"dimensionality":1,"extent":[4096],"read_data_starting_addr":[0],"read_data_stride":[1]}}
addr need tight: {}
Global range: { hw_output_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Sorted ops: {op_hcompute_hw_output_stencil}
  Before Merge: 
    acc map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
    sched: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
    reduce_map: { hw_output_stencil[d0, d1] -> hw_output_stencil[62d0 + d1] }
    1d acc map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[62hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
  Dim: 2
    Schedule dom range: 62, current_level_stride : 1, up_level_stride : 64
    Address dom range: 62, current_level_stride : 1, up_level_stride : 62
Find dim: 2 pad = 2
span range: 62, up_level_stride : 62
span range: 62, up_level_stride : 64
	access map merge pair: {{0, 1} }
	schedule merge pair: {}
  After Merge: 
    schedule: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
"dimensionality",3,0
"cycle_starting_addr",138,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",62,0
"write_data_stride_0",1,0
	Write map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
{"in2glb_0":{"cycle_starting_addr":[138],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"write_data_starting_addr":[0],"write_data_stride":[1,62]}}
create shift register for --- hw_weight_global_wrapper_stencil
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
			min location: { hw_weight_global_wrapper_stencil[0, 0] }
			max location: { hw_weight_global_wrapper_stencil[2, 2] }

	---- 9 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil[0, 0] }
			max location: { hw_weight_global_wrapper_stencil[0, 0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil[0, 1] }
			max location: { hw_weight_global_wrapper_stencil[0, 1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil[0, 2] }
			max location: { hw_weight_global_wrapper_stencil[0, 2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil[1, 0] }
			max location: { hw_weight_global_wrapper_stencil[1, 0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil[1, 1] }
			max location: { hw_weight_global_wrapper_stencil[1, 1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil[1, 2] }
			max location: { hw_weight_global_wrapper_stencil[1, 2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil[2, 0] }
			max location: { hw_weight_global_wrapper_stencil[2, 0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil[2, 2] }
			max location: { hw_weight_global_wrapper_stencil[2, 2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil[2, 1] }
			max location: { hw_weight_global_wrapper_stencil[2, 1] }

	---- Input Bundles
		op_hcompute_hw_weight_global_wrapper_stencil_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		op_hcompute_conv_stencil_1_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25

==== No reduce ops on this buffer
Writer name: op_hcompute_hw_weight_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_weight_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Time to write: { [i0] -> hw_weight_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 2 and -2 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_weight_global_wrapper_stencil[0, 0] : 136 <= i0 <= 4103 and 64*floor((-8 + i0)/64) <= -10 + i0 }
PC times     : { [0] -> [o0] : 136 <= o0 <= 4103 and 64*floor((-8 + o0)/64) <= -10 + o0 }
DDs          : { [i0] : 136 <= i0 <= 4103 and 64*floor((-8 + i0)/64) <= -10 + i0 }
Writer name: op_hcompute_hw_weight_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_weight_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Time to write: { [i0] -> hw_weight_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 2 and -2 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_weight_global_wrapper_stencil[0, 1] : 136 <= i0 <= 4103 and 64*floor((-8 + i0)/64) <= -10 + i0 }
PC times     : { [1] -> [o0] : 136 <= o0 <= 4103 and 64*floor((-8 + o0)/64) <= -10 + o0 }
DDs          : { [i0] : 135 <= i0 <= 4102 and 64*floor((-7 + i0)/64) <= -9 + i0 }
Writer name: op_hcompute_hw_weight_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_weight_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Time to write: { [i0] -> hw_weight_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 2 and -2 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_weight_global_wrapper_stencil[0, 2] : 136 <= i0 <= 4103 and 64*floor((-8 + i0)/64) <= -10 + i0 }
PC times     : { [2] -> [o0] : 136 <= o0 <= 4103 and 64*floor((-8 + o0)/64) <= -10 + o0 }
DDs          : { [i0] : 134 <= i0 <= 4101 and 64*floor((-6 + i0)/64) <= -8 + i0 }
Writer name: op_hcompute_hw_weight_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_weight_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Time to write: { [i0] -> hw_weight_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 2 and -2 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_weight_global_wrapper_stencil[1, 0] : 136 <= i0 <= 4103 and 64*floor((-8 + i0)/64) <= -10 + i0 }
PC times     : { [64] -> [o0] : 136 <= o0 <= 4103 and 64*floor((-8 + o0)/64) <= -10 + o0 }
DDs          : { [i0] : 72 <= i0 <= 4039 and 64*floor((-8 + i0)/64) <= -10 + i0 }
Writer name: op_hcompute_hw_weight_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_weight_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Time to write: { [i0] -> hw_weight_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 2 and -2 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_weight_global_wrapper_stencil[1, 1] : 136 <= i0 <= 4103 and 64*floor((-8 + i0)/64) <= -10 + i0 }
PC times     : { [65] -> [o0] : 136 <= o0 <= 4103 and 64*floor((-8 + o0)/64) <= -10 + o0 }
DDs          : { [i0] : 71 <= i0 <= 4038 and 64*floor((-7 + i0)/64) <= -9 + i0 }
Writer name: op_hcompute_hw_weight_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_weight_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Time to write: { [i0] -> hw_weight_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 2 and -2 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_weight_global_wrapper_stencil[1, 2] : 136 <= i0 <= 4103 and 64*floor((-8 + i0)/64) <= -10 + i0 }
PC times     : { [66] -> [o0] : 136 <= o0 <= 4103 and 64*floor((-8 + o0)/64) <= -10 + o0 }
DDs          : { [i0] : 70 <= i0 <= 4037 and 64*floor((-6 + i0)/64) <= -8 + i0 }
Writer name: op_hcompute_hw_weight_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_weight_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Time to write: { [i0] -> hw_weight_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 2 and -2 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_weight_global_wrapper_stencil[2, 0] : 136 <= i0 <= 4103 and 64*floor((-8 + i0)/64) <= -10 + i0 }
PC times     : { [128] -> [o0] : 136 <= o0 <= 4103 and 64*floor((-8 + o0)/64) <= -10 + o0 }
DDs          : { [i0] : 8 <= i0 <= 3975 and 64*floor((-8 + i0)/64) <= -10 + i0 }
Writer name: op_hcompute_hw_weight_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_weight_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Time to write: { [i0] -> hw_weight_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 2 and -2 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_weight_global_wrapper_stencil[2, 2] : 136 <= i0 <= 4103 and 64*floor((-8 + i0)/64) <= -10 + i0 }
PC times     : { [130] -> [o0] : 136 <= o0 <= 4103 and 64*floor((-8 + o0)/64) <= -10 + o0 }
DDs          : { [i0] : 6 <= i0 <= 3973 and 64*floor((-6 + i0)/64) <= -8 + i0 }
Writer name: op_hcompute_hw_weight_global_wrapper_stencil
read_op read: {conv_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, hw_weight_global_wrapper_stencil}
read_op write: {conv_stencil, }
write_op write: {conv_stencil}
write_op read: {hw_weight_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
  { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
Time to write: { [i0] -> hw_weight_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 2 and -2 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_weight_global_wrapper_stencil[2, 1] : 136 <= i0 <= 4103 and 64*floor((-8 + i0)/64) <= -10 + i0 }
PC times     : { [129] -> [o0] : 136 <= o0 <= 4103 and 64*floor((-8 + o0)/64) <= -10 + o0 }
DDs          : { [i0] : 7 <= i0 <= 3974 and 64*floor((-7 + i0)/64) <= -9 + i0 }
DG: ...
# nodes: 0
# edges: 0

Naive Shift registers...
# nodes: 0
# edges: 0

Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

Out -> Out shift registers for hw_weight_global_wrapper_stencil
out -> out srs: 0
out2out DG: ...
# nodes: 0
# edges: 0

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

Done ports: {}
reduced buffer: --- hw_weight_global_wrapper_stencil
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_global_wrapper_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
			min location: { hw_weight_global_wrapper_stencil[0, 0] }
			max location: { hw_weight_global_wrapper_stencil[2, 2] }

	---- 9 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil[0, 0] }
			max location: { hw_weight_global_wrapper_stencil[0, 0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil[0, 1] }
			max location: { hw_weight_global_wrapper_stencil[0, 1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil[0, 2] }
			max location: { hw_weight_global_wrapper_stencil[0, 2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil[1, 0] }
			max location: { hw_weight_global_wrapper_stencil[1, 0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil[1, 1] }
			max location: { hw_weight_global_wrapper_stencil[1, 1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil[1, 2] }
			max location: { hw_weight_global_wrapper_stencil[1, 2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil[2, 0] }
			max location: { hw_weight_global_wrapper_stencil[2, 0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil[2, 2] }
			max location: { hw_weight_global_wrapper_stencil[2, 2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil[2, 1] }
			max location: { hw_weight_global_wrapper_stencil[2, 1] }

	---- Input Bundles
		op_hcompute_hw_weight_global_wrapper_stencil_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		op_hcompute_conv_stencil_1_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25

SR outputs: {}
BUF outputs: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25}
overlapping input:{hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
overlapping output:{}

overlapping input:{}
overlapping output:{hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25}

Error: No viable banking strategy for hw_weight_global_wrapper_stencil
  Cannot partition group: 
    hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[0, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[1, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil[2, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
      { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
	part size:9
	g size: 9
FOUND EMBARASSING PARTITION OF hw_weight_global_wrapper_stencil in 2 dimensions...
  0
  1
Total Banks: 0
Cannot merge port although they did not overlap
overlapping input:{hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
overlapping output:{}

overlapping input:{}
overlapping output:{hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24, hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25}

addr need tight: {}
addr dim fully unrolled: {0, 1}
Cyclic banking factors: {3, 3}
	part size:9
	g size: 9
FOUND CYLIC PARTITION OF hw_weight_global_wrapper_stencil in 2 dimensions...
  3
  3
Use cyclic banking algorithm 
bank func = {hw_weight_global_wrapper_stencil[a_0, a_1] -> Bank[(a_0 % 3)*1+(a_1 % 3)*3]}
rddom: { hw_weight_global_wrapper_stencil[a_0, a_1] : (a_1) mod 3 = 0 and (a_0) mod 3 = 0 }
ADD BANK!
 Bank id: 0
bank impl before port group: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

Before grouping: 
	input set: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	output set: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17}
rddom: { hw_weight_global_wrapper_stencil[a_0, a_1] : 3*((a_1) mod 3) = 1 - a_0 + 3*floor((a_0)/3) and 3*floor((a_0)/3) >= -1 + a_0 }
ADD BANK!
 Bank id: 1
bank impl before port group: Bank writers: 
	 bank NO.0
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.0
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

Before grouping: 
	input set: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	output set: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20}
rddom: { hw_weight_global_wrapper_stencil[a_0, a_1] : 3*((a_1) mod 3) = 2 - a_0 + 3*floor((a_0)/3) }
ADD BANK!
 Bank id: 2
bank impl before port group: Bank writers: 
	 bank NO.0
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.1
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.0
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17}
	 bank NO.1
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

Before grouping: 
	input set: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	output set: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23}
rddom: { hw_weight_global_wrapper_stencil[a_0, a_1] : 3*((a_1) mod 3) = 3 - a_0 + 3*floor((a_0)/3) }
ADD BANK!
 Bank id: 3
bank impl before port group: Bank writers: 
	 bank NO.0
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.1
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.2
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.0
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17}
	 bank NO.1
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20}
	 bank NO.2
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

Before grouping: 
	input set: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	output set: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18}
rddom: { hw_weight_global_wrapper_stencil[a_0, a_1] : 3*((a_1) mod 3) = 4 - a_0 + 3*floor((a_0)/3) }
ADD BANK!
 Bank id: 4
bank impl before port group: Bank writers: 
	 bank NO.0
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.1
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.2
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.3
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.0
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17}
	 bank NO.1
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20}
	 bank NO.2
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23}
	 bank NO.3
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

Before grouping: 
	input set: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	output set: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21}
rddom: { hw_weight_global_wrapper_stencil[a_0, a_1] : 3*((a_1) mod 3) = 5 - a_0 + 3*floor((a_0)/3) }
ADD BANK!
 Bank id: 5
bank impl before port group: Bank writers: 
	 bank NO.0
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.1
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.2
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.3
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.4
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.0
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17}
	 bank NO.1
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20}
	 bank NO.2
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23}
	 bank NO.3
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18}
	 bank NO.4
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

Before grouping: 
	input set: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	output set: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25}
rddom: { hw_weight_global_wrapper_stencil[a_0, a_1] : 3*((a_1) mod 3) = 6 - a_0 + 3*floor((a_0)/3) }
ADD BANK!
 Bank id: 6
bank impl before port group: Bank writers: 
	 bank NO.0
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.1
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.2
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.3
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.4
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.5
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.0
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17}
	 bank NO.1
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20}
	 bank NO.2
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23}
	 bank NO.3
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18}
	 bank NO.4
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21}
	 bank NO.5
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

Before grouping: 
	input set: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	output set: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19}
rddom: { hw_weight_global_wrapper_stencil[a_0, a_1] : 3*((a_1) mod 3) = 7 - a_0 + 3*floor((a_0)/3) and 3*floor((a_0)/3) < a_0 }
ADD BANK!
 Bank id: 7
bank impl before port group: Bank writers: 
	 bank NO.0
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.1
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.2
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.3
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.4
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.5
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.6
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.0
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17}
	 bank NO.1
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20}
	 bank NO.2
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23}
	 bank NO.3
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18}
	 bank NO.4
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21}
	 bank NO.5
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25}
	 bank NO.6
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

Before grouping: 
	input set: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	output set: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22}
rddom: { hw_weight_global_wrapper_stencil[a_0, a_1] : (1 + a_1) mod 3 = 0 and (1 + a_0) mod 3 = 0 }
ADD BANK!
 Bank id: 8
bank impl before port group: Bank writers: 
	 bank NO.0
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.1
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.2
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.3
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.4
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.5
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.6
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.7
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.0
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17}
	 bank NO.1
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20}
	 bank NO.2
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23}
	 bank NO.3
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18}
	 bank NO.4
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21}
	 bank NO.5
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25}
	 bank NO.6
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19}
	 bank NO.7
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

Before grouping: 
	input set: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	output set: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24}
Bank writers: 
	 bank NO.0
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.1
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.2
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.3
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.4
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.5
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.6
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.7
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.8
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.0
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17}
	 bank NO.1
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20}
	 bank NO.2
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23}
	 bank NO.3
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18}
	 bank NO.4
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21}
	 bank NO.5
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25}
	 bank NO.6
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19}
	 bank NO.7
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22}
	 bank NO.8
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

After banking optimization: Bank writers: 
	 bank NO.0
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.1
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.2
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.3
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.4
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.5
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.6
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.7
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.8
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.0
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17}
	 bank NO.1
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20}
	 bank NO.2
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23}
	 bank NO.3
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18}
	 bank NO.4
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21}
	 bank NO.5
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25}
	 bank NO.6
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19}
	 bank NO.7
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22}
	 bank NO.8
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

After bank merging: Bank writers: 
	 bank NO.0
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.1
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.2
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.3
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.4
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.5
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.6
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.7
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
	 bank NO.8
		writers: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
Bank readers: 
	 bank NO.0
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17}
	 bank NO.1
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20}
	 bank NO.2
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23}
	 bank NO.3
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18}
	 bank NO.4
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21}
	 bank NO.5
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25}
	 bank NO.6
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19}
	 bank NO.7
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22}
	 bank NO.8
		readers: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24}
Shift Register Output: 
	memtiles IO:: 
	register IO:: 

CGPL level :0
impl inputs: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
impl outpts: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17}
rddom: { hw_weight_global_wrapper_stencil[a_0 = 0, a_1 = 0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] }
v = 0
--- hw_weight_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_0[0, 0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] -> [0] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0[0, 0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0[0, 0] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_0[0, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_0[0, 0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0[0, 0] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17

    cons rem: {1, 0}
    prod rem: {1, 0}
    its: {1, 0}
    Dim:1 will be project out: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_0[0, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    Dim:1 will be project out: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_0[0, 0] }
after ubuffer regen: --- hw_weight_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_0[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] -> [0] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0[0] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_0[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0[0] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17

addr need tight: {}
before dim id set :{ op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_0[0] }
After dim id set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_0[0] }
before dim id set :{ op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] -> [0] }
After dim id set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] -> [0] }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_0[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_0[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

	UBuffer after address tighten--- hw_weight_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_0[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] -> [0] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0[0] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_0[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0[0] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17

getting rddom
rddom = { hw_weight_global_wrapper_stencil_BANK_0[0] }
Vectorization buffer capacity: 1

	UBuffer after cgpl optimization--- hw_weight_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_0[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 0] -> [0] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0[0] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_0[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0[0] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17

find bd for op :op_hcompute_conv_stencil_1
	find candidate: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_read
find bd for op :op_hcompute_hw_weight_global_wrapper_stencil
	find candidate: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
remove dimension: {2, 1}
remove dimension: {2, 1}
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(0)] }
	div dim: 0
getting rddom
rddom = { hw_weight_global_wrapper_stencil_BANK_0[0] }
vectorization buffer capacity: 1
vectorization buf name: hw_weight_global_wrapper_stencil_BANK_0
	 original range input access map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0[0] }
	 dim id: -1
Ext by dim: {1}
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 4
	input pt schedule: { op_hcompute_hw_weight_global_wrapper_stencil[root] -> [(0)] }
	agg2sram schedule: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
	sram2tb schedule: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
	input pt access map: { op_hcompute_hw_weight_global_wrapper_stencil[root] -> [(0)] }
	input pt access map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0[0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 0
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 2
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 3
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [3] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 0
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 2
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 3
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [3] }
--- hw_weight_global_wrapper_stencil_BANK_0_0_agg
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [0] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[0] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_agg[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_3

--- hw_weight_global_wrapper_stencil_BANK_0_sram
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_sram[3] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_sram[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_3

	output pt access map: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(0)] }
--- hw_weight_global_wrapper_stencil_BANK_0_0_tb
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_tb[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_tb[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_tb[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_tb[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[3] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_0_0_tb[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[0] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_read_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_0_0_agg
--- hw_weight_global_wrapper_stencil_BANK_0_0_agg
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [0] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[0] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_agg[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_agg[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_3

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_0_0_tb
--- hw_weight_global_wrapper_stencil_BANK_0_0_tb
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_tb[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_tb[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_tb[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_tb[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[3] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_0_0_tb[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_0_tb[0] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_read_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_0_sram
--- hw_weight_global_wrapper_stencil_BANK_0_sram
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_sram[3] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
			min location: { hw_weight_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_0_sram[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_3

CGPL level :0
impl inputs: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
impl outpts: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20}
rddom: { hw_weight_global_wrapper_stencil[a_0 = 1, a_1] : (a_1) mod 3 = 0 and 0 <= a_1 <= 2 }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] }
v = 0
--- hw_weight_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_1[1, 0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] -> [64] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1[1, 0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1[1, 0] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_1[1, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_1[1, 0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1[1, 0] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20

    cons rem: {1, 0}
    prod rem: {1, 0}
    its: {1, 0}
    Dim:1 will be project out: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_1[1, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    Dim:1 will be project out: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_1[1, 0] }
after ubuffer regen: --- hw_weight_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_1[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] -> [64] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1[1] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_1[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_1[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1[1] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20

addr need tight: {}
before dim id set :{ op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_1[1] }
After dim id set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_1[1] }
before dim id set :{ op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] -> [64] }
After dim id set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] -> [64] }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_1[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_1[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

	UBuffer after address tighten--- hw_weight_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_1[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] -> [64] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1[1] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_1[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_1[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1[1] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20

getting rddom
rddom = { hw_weight_global_wrapper_stencil_BANK_1[1] }
Vectorization buffer capacity: 1

	UBuffer after cgpl optimization--- hw_weight_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_1[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 0] -> [64] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1[1] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_1[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_1[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1[1] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20

find bd for op :op_hcompute_conv_stencil_1
	find candidate: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_read
find bd for op :op_hcompute_hw_weight_global_wrapper_stencil
	find candidate: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
remove dimension: {2, 1}
remove dimension: {2, 1}
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(1)] }
	div dim: 0
getting rddom
rddom = { hw_weight_global_wrapper_stencil_BANK_1[1] }
vectorization buffer capacity: 1
vectorization buf name: hw_weight_global_wrapper_stencil_BANK_1
	 original range input access map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1[1] }
	 dim id: -1
Ext by dim: {1}
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 4
	input pt schedule: { op_hcompute_hw_weight_global_wrapper_stencil[root] -> [(64)] }
	agg2sram schedule: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
	sram2tb schedule: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
	input pt access map: { op_hcompute_hw_weight_global_wrapper_stencil[root] -> [(1)] }
	input pt access map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1[1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 0
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 2
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 3
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [3] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 0
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 2
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 3
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [3] }
--- hw_weight_global_wrapper_stencil_BANK_1_0_agg
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [64] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[1] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_agg[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_3

--- hw_weight_global_wrapper_stencil_BANK_1_sram
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_sram[3] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_sram[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_3

	output pt access map: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(1)] }
--- hw_weight_global_wrapper_stencil_BANK_1_0_tb
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_tb[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_tb[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_tb[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_tb[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[3] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_1_0_tb[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[1] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_read_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_1_0_agg
--- hw_weight_global_wrapper_stencil_BANK_1_0_agg
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [64] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[1] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_agg[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_agg[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_3

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_1_0_tb
--- hw_weight_global_wrapper_stencil_BANK_1_0_tb
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_tb[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_tb[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_tb[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_tb[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[3] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_1_0_tb[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_0_tb[1] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_read_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_1_sram
--- hw_weight_global_wrapper_stencil_BANK_1_sram
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_sram[3] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
			min location: { hw_weight_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_1_sram[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_3

CGPL level :0
impl inputs: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
impl outpts: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23}
rddom: { hw_weight_global_wrapper_stencil[a_0 = 2, a_1] : (a_1) mod 3 = 0 and 0 <= a_1 <= 2 }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] }
v = 0
--- hw_weight_global_wrapper_stencil_BANK_2
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_2[2, 0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] -> [128] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2[2, 0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2[2, 0] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_2[2, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_2[2, 0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2[2, 0] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23

    cons rem: {1, 0}
    prod rem: {1, 0}
    its: {1, 0}
    Dim:1 will be project out: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_2[2, 0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    Dim:1 will be project out: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_2[2, 0] }
after ubuffer regen: --- hw_weight_global_wrapper_stencil_BANK_2
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_2[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] -> [128] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2[2] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_2[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_2[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2[2] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23

addr need tight: {}
before dim id set :{ op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_2[2] }
After dim id set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_2[2] }
before dim id set :{ op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] -> [128] }
After dim id set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] -> [128] }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_2[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_2[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

	UBuffer after address tighten--- hw_weight_global_wrapper_stencil_BANK_2
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_2[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] -> [128] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2[2] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_2[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_2[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2[2] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23

getting rddom
rddom = { hw_weight_global_wrapper_stencil_BANK_2[2] }
Vectorization buffer capacity: 1

	UBuffer after cgpl optimization--- hw_weight_global_wrapper_stencil_BANK_2
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] -> hw_weight_global_wrapper_stencil_BANK_2[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 0] -> [128] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2[2] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_2[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_2[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2[2] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23

find bd for op :op_hcompute_conv_stencil_1
	find candidate: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_read
find bd for op :op_hcompute_hw_weight_global_wrapper_stencil
	find candidate: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
remove dimension: {2, 1}
remove dimension: {2, 1}
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(2)] }
	div dim: 0
getting rddom
rddom = { hw_weight_global_wrapper_stencil_BANK_2[2] }
vectorization buffer capacity: 1
vectorization buf name: hw_weight_global_wrapper_stencil_BANK_2
	 original range input access map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2[2] }
	 dim id: -1
Ext by dim: {1}
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 4
	input pt schedule: { op_hcompute_hw_weight_global_wrapper_stencil[root] -> [(128)] }
	agg2sram schedule: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
	sram2tb schedule: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
	input pt access map: { op_hcompute_hw_weight_global_wrapper_stencil[root] -> [(2)] }
	input pt access map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2[2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 0
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 2
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 3
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [3] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 0
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 2
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 3
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [3] }
--- hw_weight_global_wrapper_stencil_BANK_2_0_agg
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [128] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[2] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_agg[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_3

--- hw_weight_global_wrapper_stencil_BANK_2_sram
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_sram[3] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_sram[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_3

	output pt access map: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(2)] }
--- hw_weight_global_wrapper_stencil_BANK_2_0_tb
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_tb[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_tb[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_tb[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_tb[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[3] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_2_0_tb[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[2] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_read_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_2_0_agg
--- hw_weight_global_wrapper_stencil_BANK_2_0_agg
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [128] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[2] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_agg[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_agg[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_3

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_2_0_tb
--- hw_weight_global_wrapper_stencil_BANK_2_0_tb
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_tb[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_tb[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_tb[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_tb[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[3] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_2_0_tb[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_0_tb[2] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_read_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_2_sram
--- hw_weight_global_wrapper_stencil_BANK_2_sram
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_sram[3] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
			min location: { hw_weight_global_wrapper_stencil_BANK_2_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_2_sram[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_3

CGPL level :0
impl inputs: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
impl outpts: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18}
rddom: { hw_weight_global_wrapper_stencil[a_0 = 0, a_1] : (a_1) mod 3 = 1 and 0 <= a_1 <= 2 }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] }
v = 0
--- hw_weight_global_wrapper_stencil_BANK_3
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_3[0, 1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3[0, 1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3[0, 1] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_3[0, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_3[0, 1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3[0, 1] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18

    cons rem: {1, 0}
    prod rem: {1, 0}
    its: {1, 0}
    Dim:1 will be project out: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_3[0, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    Dim:1 will be project out: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_3[0, 1] }
after ubuffer regen: --- hw_weight_global_wrapper_stencil_BANK_3
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_3[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3[0] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_3[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_3[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3[0] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18

addr need tight: {}
before dim id set :{ op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_3[0] }
After dim id set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_3[0] }
before dim id set :{ op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] -> [1] }
After dim id set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] -> [1] }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_3[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_3[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

	UBuffer after address tighten--- hw_weight_global_wrapper_stencil_BANK_3
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_3[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3[0] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_3[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_3[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3[0] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18

getting rddom
rddom = { hw_weight_global_wrapper_stencil_BANK_3[0] }
Vectorization buffer capacity: 1

	UBuffer after cgpl optimization--- hw_weight_global_wrapper_stencil_BANK_3
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_3[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 1] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3[0] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_3[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_3[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3[0] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18

find bd for op :op_hcompute_conv_stencil_1
	find candidate: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_read
find bd for op :op_hcompute_hw_weight_global_wrapper_stencil
	find candidate: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
remove dimension: {2, 1}
remove dimension: {2, 1}
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(0)] }
	div dim: 0
getting rddom
rddom = { hw_weight_global_wrapper_stencil_BANK_3[0] }
vectorization buffer capacity: 1
vectorization buf name: hw_weight_global_wrapper_stencil_BANK_3
	 original range input access map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3[0] }
	 dim id: -1
Ext by dim: {1}
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 4
	input pt schedule: { op_hcompute_hw_weight_global_wrapper_stencil[root] -> [(1)] }
	agg2sram schedule: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
	sram2tb schedule: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
	input pt access map: { op_hcompute_hw_weight_global_wrapper_stencil[root] -> [(0)] }
	input pt access map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3[0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 0
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 2
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 3
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [3] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 0
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 2
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 3
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [3] }
--- hw_weight_global_wrapper_stencil_BANK_3_0_agg
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[0] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_agg[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_3

--- hw_weight_global_wrapper_stencil_BANK_3_sram
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_sram[3] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_sram[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_3

	output pt access map: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(0)] }
--- hw_weight_global_wrapper_stencil_BANK_3_0_tb
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_tb[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_tb[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_tb[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_tb[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[3] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_3_0_tb[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[0] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_read_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_3_0_agg
--- hw_weight_global_wrapper_stencil_BANK_3_0_agg
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [1] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[0] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_agg[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_agg[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_3

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_3_0_tb
--- hw_weight_global_wrapper_stencil_BANK_3_0_tb
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_tb[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_tb[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_tb[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_tb[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[3] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_3_0_tb[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_0_tb[0] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_read_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_3_sram
--- hw_weight_global_wrapper_stencil_BANK_3_sram
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_sram[3] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
			min location: { hw_weight_global_wrapper_stencil_BANK_3_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_3_sram[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_3

CGPL level :0
impl inputs: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
impl outpts: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21}
rddom: { hw_weight_global_wrapper_stencil[a_0 = 1, a_1] : (a_1) mod 3 = 1 and 0 <= a_1 <= 2 }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] }
v = 0
--- hw_weight_global_wrapper_stencil_BANK_4
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_4[1, 1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4[1, 1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4[1, 1] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_4[1, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_4[1, 1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4[1, 1] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21

    cons rem: {1, 0}
    prod rem: {1, 0}
    its: {1, 0}
    Dim:1 will be project out: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_4[1, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    Dim:1 will be project out: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_4[1, 1] }
after ubuffer regen: --- hw_weight_global_wrapper_stencil_BANK_4
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_4[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4[1] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_4[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_4[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4[1] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21

addr need tight: {}
before dim id set :{ op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_4[1] }
After dim id set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_4[1] }
before dim id set :{ op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] -> [65] }
After dim id set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] -> [65] }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_4[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_4[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

	UBuffer after address tighten--- hw_weight_global_wrapper_stencil_BANK_4
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_4[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4[1] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_4[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_4[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4[1] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21

getting rddom
rddom = { hw_weight_global_wrapper_stencil_BANK_4[1] }
Vectorization buffer capacity: 1

	UBuffer after cgpl optimization--- hw_weight_global_wrapper_stencil_BANK_4
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_4[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 1] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4[1] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_4[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_4[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4[1] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21

find bd for op :op_hcompute_conv_stencil_1
	find candidate: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_read
find bd for op :op_hcompute_hw_weight_global_wrapper_stencil
	find candidate: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
remove dimension: {2, 1}
remove dimension: {2, 1}
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(1)] }
	div dim: 0
getting rddom
rddom = { hw_weight_global_wrapper_stencil_BANK_4[1] }
vectorization buffer capacity: 1
vectorization buf name: hw_weight_global_wrapper_stencil_BANK_4
	 original range input access map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4[1] }
	 dim id: -1
Ext by dim: {1}
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 4
	input pt schedule: { op_hcompute_hw_weight_global_wrapper_stencil[root] -> [(65)] }
	agg2sram schedule: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
	sram2tb schedule: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
	input pt access map: { op_hcompute_hw_weight_global_wrapper_stencil[root] -> [(1)] }
	input pt access map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4[1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 0
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 2
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 3
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [3] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 0
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 2
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 3
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [3] }
--- hw_weight_global_wrapper_stencil_BANK_4_0_agg
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[1] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_agg[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_3

--- hw_weight_global_wrapper_stencil_BANK_4_sram
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_sram[3] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_sram[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_3

	output pt access map: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(1)] }
--- hw_weight_global_wrapper_stencil_BANK_4_0_tb
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_tb[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_tb[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_tb[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_tb[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[3] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_4_0_tb[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[1] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_read_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_4_0_agg
--- hw_weight_global_wrapper_stencil_BANK_4_0_agg
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [65] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[1] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_agg[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_agg[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_3

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_4_0_tb
--- hw_weight_global_wrapper_stencil_BANK_4_0_tb
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_tb[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_tb[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_tb[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_tb[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[3] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_4_0_tb[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_0_tb[1] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_read_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_4_sram
--- hw_weight_global_wrapper_stencil_BANK_4_sram
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_sram[3] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
			min location: { hw_weight_global_wrapper_stencil_BANK_4_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_4_sram[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_3

CGPL level :0
impl inputs: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
impl outpts: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25}
rddom: { hw_weight_global_wrapper_stencil[a_0 = 2, a_1] : (a_1) mod 3 = 1 and 0 <= a_1 <= 2 }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] }
v = 0
--- hw_weight_global_wrapper_stencil_BANK_5
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_5[2, 1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5[2, 1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5[2, 1] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_5[2, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_5[2, 1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5[2, 1] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25

    cons rem: {1, 0}
    prod rem: {1, 0}
    its: {1, 0}
    Dim:1 will be project out: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_5[2, 1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    Dim:1 will be project out: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_5[2, 1] }
after ubuffer regen: --- hw_weight_global_wrapper_stencil_BANK_5
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_5[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5[2] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_5[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_5[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5[2] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25

addr need tight: {}
before dim id set :{ op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_5[2] }
After dim id set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_5[2] }
before dim id set :{ op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] -> [129] }
After dim id set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] -> [129] }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_5[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_5[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

	UBuffer after address tighten--- hw_weight_global_wrapper_stencil_BANK_5
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_5[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5[2] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_5[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_5[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5[2] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25

getting rddom
rddom = { hw_weight_global_wrapper_stencil_BANK_5[2] }
Vectorization buffer capacity: 1

	UBuffer after cgpl optimization--- hw_weight_global_wrapper_stencil_BANK_5
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] -> hw_weight_global_wrapper_stencil_BANK_5[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 1] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5[2] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_5[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_5[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5[2] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25

find bd for op :op_hcompute_conv_stencil_1
	find candidate: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_read
find bd for op :op_hcompute_hw_weight_global_wrapper_stencil
	find candidate: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
remove dimension: {2, 1}
remove dimension: {2, 1}
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(2)] }
	div dim: 0
getting rddom
rddom = { hw_weight_global_wrapper_stencil_BANK_5[2] }
vectorization buffer capacity: 1
vectorization buf name: hw_weight_global_wrapper_stencil_BANK_5
	 original range input access map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5[2] }
	 dim id: -1
Ext by dim: {1}
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 4
	input pt schedule: { op_hcompute_hw_weight_global_wrapper_stencil[root] -> [(129)] }
	agg2sram schedule: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
	sram2tb schedule: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
	input pt access map: { op_hcompute_hw_weight_global_wrapper_stencil[root] -> [(2)] }
	input pt access map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5[2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 0
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 2
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 3
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [3] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 0
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 2
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 3
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [3] }
--- hw_weight_global_wrapper_stencil_BANK_5_0_agg
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[2] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_agg[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_3

--- hw_weight_global_wrapper_stencil_BANK_5_sram
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_sram[3] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_sram[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_3

	output pt access map: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(2)] }
--- hw_weight_global_wrapper_stencil_BANK_5_0_tb
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_tb[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_tb[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_tb[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_tb[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[3] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_5_0_tb[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[2] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_read_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_5_0_agg
--- hw_weight_global_wrapper_stencil_BANK_5_0_agg
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [129] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[2] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_agg[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_agg[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_3

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_5_0_tb
--- hw_weight_global_wrapper_stencil_BANK_5_0_tb
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_tb[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_tb[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_tb[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_tb[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[3] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_5_0_tb[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_0_tb[2] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_read_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_5_sram
--- hw_weight_global_wrapper_stencil_BANK_5_sram
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_sram[3] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
			min location: { hw_weight_global_wrapper_stencil_BANK_5_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_5_sram[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_3

CGPL level :0
impl inputs: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
impl outpts: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19}
rddom: { hw_weight_global_wrapper_stencil[a_0 = 0, a_1] : (a_1) mod 3 = 2 and 0 <= a_1 <= 2 }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] }
v = 0
--- hw_weight_global_wrapper_stencil_BANK_6
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_6[0, 2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6[0, 2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6[0, 2] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_6[0, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_6[0, 2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6[0, 2] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19

    cons rem: {1, 0}
    prod rem: {1, 0}
    its: {1, 0}
    Dim:1 will be project out: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_6[0, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    Dim:1 will be project out: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_6[0, 2] }
after ubuffer regen: --- hw_weight_global_wrapper_stencil_BANK_6
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_6[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6[0] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_6[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_6[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6[0] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19

addr need tight: {}
before dim id set :{ op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_6[0] }
After dim id set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_6[0] }
before dim id set :{ op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] -> [2] }
After dim id set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] -> [2] }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_6[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_6[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

	UBuffer after address tighten--- hw_weight_global_wrapper_stencil_BANK_6
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_6[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6[0] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_6[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_6[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6[0] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19

getting rddom
rddom = { hw_weight_global_wrapper_stencil_BANK_6[0] }
Vectorization buffer capacity: 1

	UBuffer after cgpl optimization--- hw_weight_global_wrapper_stencil_BANK_6
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_6[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 0, hw_weight_global_wrapper_s0_x = 2] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6[0] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_6[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_6[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6[0] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19

find bd for op :op_hcompute_conv_stencil_1
	find candidate: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_read
find bd for op :op_hcompute_hw_weight_global_wrapper_stencil
	find candidate: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
remove dimension: {2, 1}
remove dimension: {2, 1}
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(0)] }
	div dim: 0
getting rddom
rddom = { hw_weight_global_wrapper_stencil_BANK_6[0] }
vectorization buffer capacity: 1
vectorization buf name: hw_weight_global_wrapper_stencil_BANK_6
	 original range input access map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6[0] }
	 dim id: -1
Ext by dim: {1}
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 4
	input pt schedule: { op_hcompute_hw_weight_global_wrapper_stencil[root] -> [(2)] }
	agg2sram schedule: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
	sram2tb schedule: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
	input pt access map: { op_hcompute_hw_weight_global_wrapper_stencil[root] -> [(0)] }
	input pt access map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6[0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 0
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 2
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 3
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [3] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 0
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 2
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 3
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [3] }
--- hw_weight_global_wrapper_stencil_BANK_6_0_agg
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[0] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_agg[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_3

--- hw_weight_global_wrapper_stencil_BANK_6_sram
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_sram[3] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_sram[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_3

	output pt access map: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(0)] }
--- hw_weight_global_wrapper_stencil_BANK_6_0_tb
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_tb[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_tb[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_tb[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_tb[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[3] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_6_0_tb[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[0] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_read_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_6_0_agg
--- hw_weight_global_wrapper_stencil_BANK_6_0_agg
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [2] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[0] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_agg[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_agg[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_3

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_6_0_tb
--- hw_weight_global_wrapper_stencil_BANK_6_0_tb
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_tb[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_tb[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_tb[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_tb[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[3] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_6_0_tb[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_0_tb[0] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_read_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_6_sram
--- hw_weight_global_wrapper_stencil_BANK_6_sram
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_sram[3] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
			min location: { hw_weight_global_wrapper_stencil_BANK_6_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_6_sram[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_3

CGPL level :0
impl inputs: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
impl outpts: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22}
rddom: { hw_weight_global_wrapper_stencil[a_0 = 1, a_1] : (a_1) mod 3 = 2 and 0 <= a_1 <= 2 }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] }
v = 0
--- hw_weight_global_wrapper_stencil_BANK_7
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_7[1, 2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7[1, 2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7[1, 2] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_7[1, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_7[1, 2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7[1, 2] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22

    cons rem: {1, 0}
    prod rem: {1, 0}
    its: {1, 0}
    Dim:1 will be project out: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_7[1, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    Dim:1 will be project out: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_7[1, 2] }
after ubuffer regen: --- hw_weight_global_wrapper_stencil_BANK_7
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_7[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7[1] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_7[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_7[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7[1] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22

addr need tight: {}
before dim id set :{ op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_7[1] }
After dim id set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_7[1] }
before dim id set :{ op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] -> [66] }
After dim id set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] -> [66] }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_7[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_7[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

	UBuffer after address tighten--- hw_weight_global_wrapper_stencil_BANK_7
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_7[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7[1] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_7[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_7[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7[1] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22

getting rddom
rddom = { hw_weight_global_wrapper_stencil_BANK_7[1] }
Vectorization buffer capacity: 1

	UBuffer after cgpl optimization--- hw_weight_global_wrapper_stencil_BANK_7
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_7[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 1, hw_weight_global_wrapper_s0_x = 2] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7[1] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_7[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_7[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7[1] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22

find bd for op :op_hcompute_conv_stencil_1
	find candidate: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_read
find bd for op :op_hcompute_hw_weight_global_wrapper_stencil
	find candidate: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
remove dimension: {2, 1}
remove dimension: {2, 1}
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(1)] }
	div dim: 0
getting rddom
rddom = { hw_weight_global_wrapper_stencil_BANK_7[1] }
vectorization buffer capacity: 1
vectorization buf name: hw_weight_global_wrapper_stencil_BANK_7
	 original range input access map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7[1] }
	 dim id: -1
Ext by dim: {1}
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 4
	input pt schedule: { op_hcompute_hw_weight_global_wrapper_stencil[root] -> [(66)] }
	agg2sram schedule: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
	sram2tb schedule: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
	input pt access map: { op_hcompute_hw_weight_global_wrapper_stencil[root] -> [(1)] }
	input pt access map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7[1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 0
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 2
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 3
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [3] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 0
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 2
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 3
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [3] }
--- hw_weight_global_wrapper_stencil_BANK_7_0_agg
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[1] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_agg[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_3

--- hw_weight_global_wrapper_stencil_BANK_7_sram
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_sram[3] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_sram[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_3

	output pt access map: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(1)] }
--- hw_weight_global_wrapper_stencil_BANK_7_0_tb
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_tb[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_tb[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_tb[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_tb[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[3] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_7_0_tb[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[1] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_read_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_7_0_agg
--- hw_weight_global_wrapper_stencil_BANK_7_0_agg
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [66] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[1] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_agg[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_agg[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_3

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_7_0_tb
--- hw_weight_global_wrapper_stencil_BANK_7_0_tb
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_tb[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_tb[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_tb[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_tb[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[3] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_7_0_tb[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_0_tb[1] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_read_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_7_sram
--- hw_weight_global_wrapper_stencil_BANK_7_sram
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_sram[3] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
			min location: { hw_weight_global_wrapper_stencil_BANK_7_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_7_sram[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_3

CGPL level :0
impl inputs: {hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0}
impl outpts: {hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24}
rddom: { hw_weight_global_wrapper_stencil[a_0 = 2, a_1 = 2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] }
v = 0
--- hw_weight_global_wrapper_stencil_BANK_8
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_8[2, 2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8[2, 2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8[2, 2] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_8[2, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_8[2, 2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8[2, 2] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24

    cons rem: {1, 0}
    prod rem: {1, 0}
    its: {1, 0}
    Dim:1 will be project out: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_8[2, 2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
    Dim:1 will be project out: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_8[2, 2] }
after ubuffer regen: --- hw_weight_global_wrapper_stencil_BANK_8
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_8[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8[2] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_8[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_8[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8[2] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24

addr need tight: {}
before dim id set :{ op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_8[2] }
After dim id set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_8[2] }
before dim id set :{ op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] -> [130] }
After dim id set: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] -> [130] }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_8[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_8[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
before dim id set :{ op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
After dim id set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

	UBuffer after address tighten--- hw_weight_global_wrapper_stencil_BANK_8
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_8[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8[2] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_8[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_8[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8[2] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24

getting rddom
rddom = { hw_weight_global_wrapper_stencil_BANK_8[2] }
Vectorization buffer capacity: 1

	UBuffer after cgpl optimization--- hw_weight_global_wrapper_stencil_BANK_8
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] -> hw_weight_global_wrapper_stencil_BANK_8[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y = 2, hw_weight_global_wrapper_s0_x = 2] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8[2] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_8[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_8[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8[2] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_read
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24

find bd for op :op_hcompute_conv_stencil_1
	find candidate: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_read
find bd for op :op_hcompute_hw_weight_global_wrapper_stencil
	find candidate: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write
remove dimension: {2, 1}
remove dimension: {2, 1}
	aff : { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(2)] }
	div dim: 0
getting rddom
rddom = { hw_weight_global_wrapper_stencil_BANK_8[2] }
vectorization buffer capacity: 1
vectorization buf name: hw_weight_global_wrapper_stencil_BANK_8
	 original range input access map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8[2] }
	 dim id: -1
Ext by dim: {1}
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 4
	input pt schedule: { op_hcompute_hw_weight_global_wrapper_stencil[root] -> [(130)] }
	agg2sram schedule: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
	sram2tb schedule: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
	input pt access map: { op_hcompute_hw_weight_global_wrapper_stencil[root] -> [(2)] }
	input pt access map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8[2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 0
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 2
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 3
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [3] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 0
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [0] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 1
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [1] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 2
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [2] }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root] }
v = 3
		 rewrite agg am: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0] -> [3] }
--- hw_weight_global_wrapper_stencil_BANK_8_0_agg
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[2] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_agg[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_3

--- hw_weight_global_wrapper_stencil_BANK_8_sram
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_sram[3] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_sram[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_3

	output pt access map: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(2)] }
--- hw_weight_global_wrapper_stencil_BANK_8_0_tb
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_tb[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_tb[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_tb[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_tb[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[3] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_8_0_tb[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[2] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_read_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_8_0_agg
--- hw_weight_global_wrapper_stencil_BANK_8_0_agg
	---- 1 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [130] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[2] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_agg[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_agg[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_agg[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_agg[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_agg[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_3

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_8_0_tb
--- hw_weight_global_wrapper_stencil_BANK_8_0_tb
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_tb[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_tb[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_tb[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_tb[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[3] }

	---- 1 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out
			dom : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			acc : { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_8_0_tb[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_0_tb[2] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_read_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out

after vectorization codegen: hw_weight_global_wrapper_stencil_BANK_8_sram
--- hw_weight_global_wrapper_stencil_BANK_8_sram
	---- 4 in ports
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_sram[3] }

	---- 4 out ports:
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_0
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[0] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_sram[0] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_sram[0] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_1
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[1] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_sram[1] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_sram[1] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_2
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[2] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_sram[2] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_sram[2] }

		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_3
			dom : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] }
			acc : { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[3] }
			sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
			min location: { hw_weight_global_wrapper_stencil_BANK_8_sram[3] }
			max location: { hw_weight_global_wrapper_stencil_BANK_8_sram[3] }

	---- Input Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2
			hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3
	---- Output Bundles
		hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_read_out
		---- Ports...
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_0
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_1
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_2
			hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_3

bank id: 0
rd dom: { hw_weight_global_wrapper_stencil[a_0 = 0, a_1 = 0] }
	rel map: {0}
	rel dim: -1
	rel dim stride: 4
out_fetch_ii: 4
bank id: 1
rd dom: { hw_weight_global_wrapper_stencil[a_0 = 1, a_1] : (a_1) mod 3 = 0 and 0 <= a_1 <= 2 }
	rel map: {0}
	rel dim: -1
	rel dim stride: 68
out_fetch_ii: 68
bank id: 2
rd dom: { hw_weight_global_wrapper_stencil[a_0 = 2, a_1] : (a_1) mod 3 = 0 and 0 <= a_1 <= 2 }
	rel map: {0}
	rel dim: -1
	rel dim stride: 132
out_fetch_ii: 132
bank id: 3
rd dom: { hw_weight_global_wrapper_stencil[a_0 = 0, a_1] : (a_1) mod 3 = 1 and 0 <= a_1 <= 2 }
	rel map: {0}
	rel dim: -1
	rel dim stride: 5
out_fetch_ii: 5
bank id: 4
rd dom: { hw_weight_global_wrapper_stencil[a_0 = 1, a_1] : (a_1) mod 3 = 1 and 0 <= a_1 <= 2 }
	rel map: {0}
	rel dim: -1
	rel dim stride: 69
out_fetch_ii: 69
bank id: 5
rd dom: { hw_weight_global_wrapper_stencil[a_0 = 2, a_1] : (a_1) mod 3 = 1 and 0 <= a_1 <= 2 }
	rel map: {0}
	rel dim: -1
	rel dim stride: 133
out_fetch_ii: 133
bank id: 6
rd dom: { hw_weight_global_wrapper_stencil[a_0 = 0, a_1] : (a_1) mod 3 = 2 and 0 <= a_1 <= 2 }
	rel map: {0}
	rel dim: -1
	rel dim stride: 6
out_fetch_ii: 6
bank id: 7
rd dom: { hw_weight_global_wrapper_stencil[a_0 = 1, a_1] : (a_1) mod 3 = 2 and 0 <= a_1 <= 2 }
	rel map: {0}
	rel dim: -1
	rel dim stride: 70
out_fetch_ii: 70
bank id: 8
rd dom: { hw_weight_global_wrapper_stencil[a_0 = 2, a_1 = 2] }
	rel map: {0}
	rel dim: -1
	rel dim stride: 134
out_fetch_ii: 134
bank id: 1, to be merged: {1}
bank id: 0, to be merged: {0}
add input: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0 to pt2wire
add output: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17 to pt2wire
add output: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18 to pt2wire
add output: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19 to pt2wire
add output: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20 to pt2wire
add output: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21 to pt2wire
add output: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22 to pt2wire
add output: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23 to pt2wire
add output: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24 to pt2wire
add output: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25 to pt2wire
agg2sram_opt debug start 
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_0 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_1 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_2 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_out_3 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
op_hcompute_hw_weight_global_wrapper_stencil: {{hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in, 0} }
op_hcompute_hw_weight_global_wrapper_stencil_single_pixel: {{hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_17_read_out, 0} }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [0] }
op_name: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0, extent_0: 1, stride_0: 0
write map: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_agg[0] }
{ hw_weight_global_wrapper_stencil_BANK_0_0_agg[3]; hw_weight_global_wrapper_stencil_BANK_0_0_agg[2]; hw_weight_global_wrapper_stencil_BANK_0_0_agg[1]; hw_weight_global_wrapper_stencil_BANK_0_0_agg[0] }
read map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_agg[0] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_tb[0] }
{ hw_weight_global_wrapper_stencil_BANK_0_0_tb[3]; hw_weight_global_wrapper_stencil_BANK_0_0_tb[2]; hw_weight_global_wrapper_stencil_BANK_0_0_tb[1]; hw_weight_global_wrapper_stencil_BANK_0_0_tb[0] }
read map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_0_0_tb[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }
write map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[0] }
{ hw_weight_global_wrapper_stencil_BANK_0_sram[3]; hw_weight_global_wrapper_stencil_BANK_0_sram[0]; hw_weight_global_wrapper_stencil_BANK_0_sram[2]; hw_weight_global_wrapper_stencil_BANK_0_sram[1] }
read map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[0] }
	op name: op_hcompute_conv_stencil_1_tb2out_0
	Sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",138,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_0_0_tb[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [1] }

"dimensionality",1,0
"cycle_starting_addr",1,0
"extent_0",1,0
"cycle_stride_0",0,0
adding new agg2sram opt cfg for: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0: mode 0, agg_read_padding 1, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_agg[0] }
"read_data_starting_addr",0,0
"read_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [0] }

"dimensionality",1,0
"cycle_starting_addr",0,0
"extent_0",1,0
"cycle_stride_0",0,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_agg[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [4] }

"dimensionality",1,0
"cycle_starting_addr",4,0
"extent_0",1,0
"cycle_stride_0",0,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_0_tb[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_0_sram[0] }
"read_data_starting_addr",0,0
"read_data_stride_0",0,0
{"agg2sram_0":{"agg_read_padding":[1],"cycle_starting_addr":[1],"cycle_stride":[0],"delay":[0],"dimensionality":0,"extent":[1],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[0],"write_data_starting_addr":[0],"write_data_stride":[0]},"in2agg_0":{"cycle_starting_addr":[0],"cycle_stride":[0],"dimensionality":0,"extent":[1],"write_data_starting_addr":[0],"write_data_stride":[0]},"sram2tb_0":{"cycle_starting_addr":[4],"cycle_stride":[0],"dimensionality":0,"extent":[1],"read_data_starting_addr":[0],"read_data_stride":[0],"write_data_starting_addr":[0],"write_data_stride":[0]},"tb2out_0":{"cycle_starting_addr":[138],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"read_data_starting_addr":[0],"read_data_stride":[0,0]}}
Add lake node:ub_hw_weight_global_wrapper_stencil_BANK_0 with input_num = 1, output_num = 1
Config mode: lake
Generating Verilog Testing Collateral for: ub_hw_weight_global_wrapper_stencil_BANK_0
Module: cgralib.Mem_amber(ID:_U15, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U15__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
agg2sram_opt debug start 
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_0 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_1 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_2 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_out_3 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
op_hcompute_hw_weight_global_wrapper_stencil: {{hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in, 0} }
op_hcompute_hw_weight_global_wrapper_stencil_single_pixel: {{hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_20_read_out, 0} }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [64] }
op_name: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0, extent_0: 1, stride_0: 0
write map: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_agg[1] }
{ hw_weight_global_wrapper_stencil_BANK_1_0_agg[3]; hw_weight_global_wrapper_stencil_BANK_1_0_agg[2]; hw_weight_global_wrapper_stencil_BANK_1_0_agg[1]; hw_weight_global_wrapper_stencil_BANK_1_0_agg[0] }
read map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_agg[0] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_tb[0] }
{ hw_weight_global_wrapper_stencil_BANK_1_0_tb[3]; hw_weight_global_wrapper_stencil_BANK_1_0_tb[2]; hw_weight_global_wrapper_stencil_BANK_1_0_tb[1]; hw_weight_global_wrapper_stencil_BANK_1_0_tb[0] }
read map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_1_0_tb[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }
write map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[0] }
{ hw_weight_global_wrapper_stencil_BANK_1_sram[3]; hw_weight_global_wrapper_stencil_BANK_1_sram[0]; hw_weight_global_wrapper_stencil_BANK_1_sram[2]; hw_weight_global_wrapper_stencil_BANK_1_sram[1] }
read map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[0] }
	op name: op_hcompute_conv_stencil_1_tb2out_0
	Sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",138,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_1_0_tb[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
"read_data_starting_addr",1,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [65] }

"dimensionality",1,0
"cycle_starting_addr",65,0
"extent_0",1,0
"cycle_stride_0",0,0
adding new agg2sram opt cfg for: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0: mode 0, agg_read_padding 1, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_agg[0] }
"read_data_starting_addr",0,0
"read_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [64] }

"dimensionality",1,0
"cycle_starting_addr",64,0
"extent_0",1,0
"cycle_stride_0",0,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_agg[1] }
"write_data_starting_addr",1,0
"write_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [68] }

"dimensionality",1,0
"cycle_starting_addr",68,0
"extent_0",1,0
"cycle_stride_0",0,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_0_tb[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_1_sram[0] }
"read_data_starting_addr",0,0
"read_data_stride_0",0,0
{"agg2sram_0":{"agg_read_padding":[1],"cycle_starting_addr":[65],"cycle_stride":[0],"delay":[0],"dimensionality":0,"extent":[1],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[0],"write_data_starting_addr":[0],"write_data_stride":[0]},"in2agg_0":{"cycle_starting_addr":[64],"cycle_stride":[0],"dimensionality":0,"extent":[1],"write_data_starting_addr":[1],"write_data_stride":[0]},"sram2tb_0":{"cycle_starting_addr":[68],"cycle_stride":[0],"dimensionality":0,"extent":[1],"read_data_starting_addr":[0],"read_data_stride":[0],"write_data_starting_addr":[0],"write_data_stride":[0]},"tb2out_0":{"cycle_starting_addr":[138],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"read_data_starting_addr":[1],"read_data_stride":[0,0]}}
Add lake node:ub_hw_weight_global_wrapper_stencil_BANK_1 with input_num = 1, output_num = 1
Config mode: lake
Generating Verilog Testing Collateral for: ub_hw_weight_global_wrapper_stencil_BANK_1
Module: cgralib.Mem_amber(ID:_U16, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U16__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
agg2sram_opt debug start 
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_0 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_1 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_2 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_out_3 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
op_hcompute_hw_weight_global_wrapper_stencil: {{hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in, 0} }
op_hcompute_hw_weight_global_wrapper_stencil_single_pixel: {{hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_23_read_out, 0} }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [128] }
op_name: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0, extent_0: 1, stride_0: 0
write map: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_agg[2] }
{ hw_weight_global_wrapper_stencil_BANK_2_0_agg[3]; hw_weight_global_wrapper_stencil_BANK_2_0_agg[2]; hw_weight_global_wrapper_stencil_BANK_2_0_agg[0]; hw_weight_global_wrapper_stencil_BANK_2_0_agg[1] }
read map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_agg[0] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_tb[0] }
{ hw_weight_global_wrapper_stencil_BANK_2_0_tb[3]; hw_weight_global_wrapper_stencil_BANK_2_0_tb[2]; hw_weight_global_wrapper_stencil_BANK_2_0_tb[0]; hw_weight_global_wrapper_stencil_BANK_2_0_tb[1] }
read map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_2_0_tb[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }
write map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[0] }
{ hw_weight_global_wrapper_stencil_BANK_2_sram[3]; hw_weight_global_wrapper_stencil_BANK_2_sram[0]; hw_weight_global_wrapper_stencil_BANK_2_sram[2]; hw_weight_global_wrapper_stencil_BANK_2_sram[1] }
read map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[0] }
	op name: op_hcompute_conv_stencil_1_tb2out_0
	Sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",138,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_2_0_tb[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
"read_data_starting_addr",2,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [129] }

"dimensionality",1,0
"cycle_starting_addr",129,0
"extent_0",1,0
"cycle_stride_0",0,0
adding new agg2sram opt cfg for: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0: mode 0, agg_read_padding 1, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_agg[0] }
"read_data_starting_addr",0,0
"read_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [128] }

"dimensionality",1,0
"cycle_starting_addr",128,0
"extent_0",1,0
"cycle_stride_0",0,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_agg[2] }
"write_data_starting_addr",2,0
"write_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [132] }

"dimensionality",1,0
"cycle_starting_addr",132,0
"extent_0",1,0
"cycle_stride_0",0,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_0_tb[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_2_sram[0] }
"read_data_starting_addr",0,0
"read_data_stride_0",0,0
{"agg2sram_0":{"agg_read_padding":[1],"cycle_starting_addr":[129],"cycle_stride":[0],"delay":[0],"dimensionality":0,"extent":[1],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[0],"write_data_starting_addr":[0],"write_data_stride":[0]},"in2agg_0":{"cycle_starting_addr":[128],"cycle_stride":[0],"dimensionality":0,"extent":[1],"write_data_starting_addr":[2],"write_data_stride":[0]},"sram2tb_0":{"cycle_starting_addr":[132],"cycle_stride":[0],"dimensionality":0,"extent":[1],"read_data_starting_addr":[0],"read_data_stride":[0],"write_data_starting_addr":[0],"write_data_stride":[0]},"tb2out_0":{"cycle_starting_addr":[138],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"read_data_starting_addr":[2],"read_data_stride":[0,0]}}
Add lake node:ub_hw_weight_global_wrapper_stencil_BANK_2 with input_num = 1, output_num = 1
Config mode: lake
Generating Verilog Testing Collateral for: ub_hw_weight_global_wrapper_stencil_BANK_2
Module: cgralib.Mem_amber(ID:_U17, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U17__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
agg2sram_opt debug start 
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_0 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_1 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_2 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_out_3 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
op_hcompute_hw_weight_global_wrapper_stencil: {{hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in, 0} }
op_hcompute_hw_weight_global_wrapper_stencil_single_pixel: {{hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_18_read_out, 0} }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [1] }
op_name: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0, extent_0: 1, stride_0: 0
write map: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_agg[0] }
{ hw_weight_global_wrapper_stencil_BANK_3_0_agg[3]; hw_weight_global_wrapper_stencil_BANK_3_0_agg[2]; hw_weight_global_wrapper_stencil_BANK_3_0_agg[1]; hw_weight_global_wrapper_stencil_BANK_3_0_agg[0] }
read map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_agg[0] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_tb[0] }
{ hw_weight_global_wrapper_stencil_BANK_3_0_tb[3]; hw_weight_global_wrapper_stencil_BANK_3_0_tb[2]; hw_weight_global_wrapper_stencil_BANK_3_0_tb[1]; hw_weight_global_wrapper_stencil_BANK_3_0_tb[0] }
read map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_3_0_tb[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }
write map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[0] }
{ hw_weight_global_wrapper_stencil_BANK_3_sram[3]; hw_weight_global_wrapper_stencil_BANK_3_sram[0]; hw_weight_global_wrapper_stencil_BANK_3_sram[2]; hw_weight_global_wrapper_stencil_BANK_3_sram[1] }
read map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[0] }
	op name: op_hcompute_conv_stencil_1_tb2out_0
	Sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",138,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_3_0_tb[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [2] }

"dimensionality",1,0
"cycle_starting_addr",2,0
"extent_0",1,0
"cycle_stride_0",0,0
adding new agg2sram opt cfg for: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0: mode 0, agg_read_padding 1, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_agg[0] }
"read_data_starting_addr",0,0
"read_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [1] }

"dimensionality",1,0
"cycle_starting_addr",1,0
"extent_0",1,0
"cycle_stride_0",0,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_agg[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [5] }

"dimensionality",1,0
"cycle_starting_addr",5,0
"extent_0",1,0
"cycle_stride_0",0,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_0_tb[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_3_sram[0] }
"read_data_starting_addr",0,0
"read_data_stride_0",0,0
{"agg2sram_0":{"agg_read_padding":[1],"cycle_starting_addr":[2],"cycle_stride":[0],"delay":[0],"dimensionality":0,"extent":[1],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[0],"write_data_starting_addr":[0],"write_data_stride":[0]},"in2agg_0":{"cycle_starting_addr":[1],"cycle_stride":[0],"dimensionality":0,"extent":[1],"write_data_starting_addr":[0],"write_data_stride":[0]},"sram2tb_0":{"cycle_starting_addr":[5],"cycle_stride":[0],"dimensionality":0,"extent":[1],"read_data_starting_addr":[0],"read_data_stride":[0],"write_data_starting_addr":[0],"write_data_stride":[0]},"tb2out_0":{"cycle_starting_addr":[138],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"read_data_starting_addr":[0],"read_data_stride":[0,0]}}
Add lake node:ub_hw_weight_global_wrapper_stencil_BANK_3 with input_num = 1, output_num = 1
Config mode: lake
Generating Verilog Testing Collateral for: ub_hw_weight_global_wrapper_stencil_BANK_3
Module: cgralib.Mem_amber(ID:_U18, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U18__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
agg2sram_opt debug start 
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_0 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_1 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_2 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_out_3 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
op_hcompute_hw_weight_global_wrapper_stencil: {{hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in, 0} }
op_hcompute_hw_weight_global_wrapper_stencil_single_pixel: {{hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_21_read_out, 0} }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [65] }
op_name: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0, extent_0: 1, stride_0: 0
write map: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_agg[1] }
{ hw_weight_global_wrapper_stencil_BANK_4_0_agg[3]; hw_weight_global_wrapper_stencil_BANK_4_0_agg[2]; hw_weight_global_wrapper_stencil_BANK_4_0_agg[1]; hw_weight_global_wrapper_stencil_BANK_4_0_agg[0] }
read map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_agg[0] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_tb[0] }
{ hw_weight_global_wrapper_stencil_BANK_4_0_tb[3]; hw_weight_global_wrapper_stencil_BANK_4_0_tb[2]; hw_weight_global_wrapper_stencil_BANK_4_0_tb[1]; hw_weight_global_wrapper_stencil_BANK_4_0_tb[0] }
read map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_4_0_tb[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }
write map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[0] }
{ hw_weight_global_wrapper_stencil_BANK_4_sram[3]; hw_weight_global_wrapper_stencil_BANK_4_sram[0]; hw_weight_global_wrapper_stencil_BANK_4_sram[2]; hw_weight_global_wrapper_stencil_BANK_4_sram[1] }
read map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[0] }
	op name: op_hcompute_conv_stencil_1_tb2out_0
	Sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",138,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_4_0_tb[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
"read_data_starting_addr",1,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [66] }

"dimensionality",1,0
"cycle_starting_addr",66,0
"extent_0",1,0
"cycle_stride_0",0,0
adding new agg2sram opt cfg for: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0: mode 0, agg_read_padding 1, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_agg[0] }
"read_data_starting_addr",0,0
"read_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [65] }

"dimensionality",1,0
"cycle_starting_addr",65,0
"extent_0",1,0
"cycle_stride_0",0,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_agg[1] }
"write_data_starting_addr",1,0
"write_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [69] }

"dimensionality",1,0
"cycle_starting_addr",69,0
"extent_0",1,0
"cycle_stride_0",0,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_0_tb[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_4_sram[0] }
"read_data_starting_addr",0,0
"read_data_stride_0",0,0
{"agg2sram_0":{"agg_read_padding":[1],"cycle_starting_addr":[66],"cycle_stride":[0],"delay":[0],"dimensionality":0,"extent":[1],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[0],"write_data_starting_addr":[0],"write_data_stride":[0]},"in2agg_0":{"cycle_starting_addr":[65],"cycle_stride":[0],"dimensionality":0,"extent":[1],"write_data_starting_addr":[1],"write_data_stride":[0]},"sram2tb_0":{"cycle_starting_addr":[69],"cycle_stride":[0],"dimensionality":0,"extent":[1],"read_data_starting_addr":[0],"read_data_stride":[0],"write_data_starting_addr":[0],"write_data_stride":[0]},"tb2out_0":{"cycle_starting_addr":[138],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"read_data_starting_addr":[1],"read_data_stride":[0,0]}}
Add lake node:ub_hw_weight_global_wrapper_stencil_BANK_4 with input_num = 1, output_num = 1
Config mode: lake
Generating Verilog Testing Collateral for: ub_hw_weight_global_wrapper_stencil_BANK_4
Module: cgralib.Mem_amber(ID:_U19, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U19__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
agg2sram_opt debug start 
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_0 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_1 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_2 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_out_3 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
op_hcompute_hw_weight_global_wrapper_stencil: {{hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in, 0} }
op_hcompute_hw_weight_global_wrapper_stencil_single_pixel: {{hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_25_read_out, 0} }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [129] }
op_name: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0, extent_0: 1, stride_0: 0
write map: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_agg[2] }
{ hw_weight_global_wrapper_stencil_BANK_5_0_agg[3]; hw_weight_global_wrapper_stencil_BANK_5_0_agg[2]; hw_weight_global_wrapper_stencil_BANK_5_0_agg[0]; hw_weight_global_wrapper_stencil_BANK_5_0_agg[1] }
read map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_agg[0] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_tb[0] }
{ hw_weight_global_wrapper_stencil_BANK_5_0_tb[3]; hw_weight_global_wrapper_stencil_BANK_5_0_tb[2]; hw_weight_global_wrapper_stencil_BANK_5_0_tb[0]; hw_weight_global_wrapper_stencil_BANK_5_0_tb[1] }
read map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_5_0_tb[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }
write map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[0] }
{ hw_weight_global_wrapper_stencil_BANK_5_sram[3]; hw_weight_global_wrapper_stencil_BANK_5_sram[0]; hw_weight_global_wrapper_stencil_BANK_5_sram[2]; hw_weight_global_wrapper_stencil_BANK_5_sram[1] }
read map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[0] }
	op name: op_hcompute_conv_stencil_1_tb2out_0
	Sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",138,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_5_0_tb[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
"read_data_starting_addr",2,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [130] }

"dimensionality",1,0
"cycle_starting_addr",130,0
"extent_0",1,0
"cycle_stride_0",0,0
adding new agg2sram opt cfg for: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0: mode 0, agg_read_padding 1, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_agg[0] }
"read_data_starting_addr",0,0
"read_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [129] }

"dimensionality",1,0
"cycle_starting_addr",129,0
"extent_0",1,0
"cycle_stride_0",0,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_agg[2] }
"write_data_starting_addr",2,0
"write_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [133] }

"dimensionality",1,0
"cycle_starting_addr",133,0
"extent_0",1,0
"cycle_stride_0",0,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_0_tb[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_5_sram[0] }
"read_data_starting_addr",0,0
"read_data_stride_0",0,0
{"agg2sram_0":{"agg_read_padding":[1],"cycle_starting_addr":[130],"cycle_stride":[0],"delay":[0],"dimensionality":0,"extent":[1],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[0],"write_data_starting_addr":[0],"write_data_stride":[0]},"in2agg_0":{"cycle_starting_addr":[129],"cycle_stride":[0],"dimensionality":0,"extent":[1],"write_data_starting_addr":[2],"write_data_stride":[0]},"sram2tb_0":{"cycle_starting_addr":[133],"cycle_stride":[0],"dimensionality":0,"extent":[1],"read_data_starting_addr":[0],"read_data_stride":[0],"write_data_starting_addr":[0],"write_data_stride":[0]},"tb2out_0":{"cycle_starting_addr":[138],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"read_data_starting_addr":[2],"read_data_stride":[0,0]}}
Add lake node:ub_hw_weight_global_wrapper_stencil_BANK_5 with input_num = 1, output_num = 1
Config mode: lake
Generating Verilog Testing Collateral for: ub_hw_weight_global_wrapper_stencil_BANK_5
Module: cgralib.Mem_amber(ID:_U20, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U20__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
agg2sram_opt debug start 
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_0 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_1 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_2 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_out_3 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
op_hcompute_hw_weight_global_wrapper_stencil: {{hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in, 0} }
op_hcompute_hw_weight_global_wrapper_stencil_single_pixel: {{hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_19_read_out, 0} }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [2] }
op_name: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0, extent_0: 1, stride_0: 0
write map: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_agg[0] }
{ hw_weight_global_wrapper_stencil_BANK_6_0_agg[3]; hw_weight_global_wrapper_stencil_BANK_6_0_agg[2]; hw_weight_global_wrapper_stencil_BANK_6_0_agg[1]; hw_weight_global_wrapper_stencil_BANK_6_0_agg[0] }
read map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_agg[0] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_tb[0] }
{ hw_weight_global_wrapper_stencil_BANK_6_0_tb[3]; hw_weight_global_wrapper_stencil_BANK_6_0_tb[2]; hw_weight_global_wrapper_stencil_BANK_6_0_tb[1]; hw_weight_global_wrapper_stencil_BANK_6_0_tb[0] }
read map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_6_0_tb[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }
write map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[0] }
{ hw_weight_global_wrapper_stencil_BANK_6_sram[3]; hw_weight_global_wrapper_stencil_BANK_6_sram[0]; hw_weight_global_wrapper_stencil_BANK_6_sram[2]; hw_weight_global_wrapper_stencil_BANK_6_sram[1] }
read map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[0] }
	op name: op_hcompute_conv_stencil_1_tb2out_0
	Sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",138,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_6_0_tb[0] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [3] }

"dimensionality",1,0
"cycle_starting_addr",3,0
"extent_0",1,0
"cycle_stride_0",0,0
adding new agg2sram opt cfg for: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0: mode 0, agg_read_padding 1, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_agg[0] }
"read_data_starting_addr",0,0
"read_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [2] }

"dimensionality",1,0
"cycle_starting_addr",2,0
"extent_0",1,0
"cycle_stride_0",0,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_agg[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [6] }

"dimensionality",1,0
"cycle_starting_addr",6,0
"extent_0",1,0
"cycle_stride_0",0,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_0_tb[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_6_sram[0] }
"read_data_starting_addr",0,0
"read_data_stride_0",0,0
{"agg2sram_0":{"agg_read_padding":[1],"cycle_starting_addr":[3],"cycle_stride":[0],"delay":[0],"dimensionality":0,"extent":[1],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[0],"write_data_starting_addr":[0],"write_data_stride":[0]},"in2agg_0":{"cycle_starting_addr":[2],"cycle_stride":[0],"dimensionality":0,"extent":[1],"write_data_starting_addr":[0],"write_data_stride":[0]},"sram2tb_0":{"cycle_starting_addr":[6],"cycle_stride":[0],"dimensionality":0,"extent":[1],"read_data_starting_addr":[0],"read_data_stride":[0],"write_data_starting_addr":[0],"write_data_stride":[0]},"tb2out_0":{"cycle_starting_addr":[138],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"read_data_starting_addr":[0],"read_data_stride":[0,0]}}
Add lake node:ub_hw_weight_global_wrapper_stencil_BANK_6 with input_num = 1, output_num = 1
Config mode: lake
Generating Verilog Testing Collateral for: ub_hw_weight_global_wrapper_stencil_BANK_6
Module: cgralib.Mem_amber(ID:_U21, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U21__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
agg2sram_opt debug start 
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_0 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_1 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_2 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_out_3 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
op_hcompute_hw_weight_global_wrapper_stencil: {{hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in, 0} }
op_hcompute_hw_weight_global_wrapper_stencil_single_pixel: {{hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_22_read_out, 0} }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [66] }
op_name: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0, extent_0: 1, stride_0: 0
write map: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_agg[1] }
{ hw_weight_global_wrapper_stencil_BANK_7_0_agg[3]; hw_weight_global_wrapper_stencil_BANK_7_0_agg[2]; hw_weight_global_wrapper_stencil_BANK_7_0_agg[1]; hw_weight_global_wrapper_stencil_BANK_7_0_agg[0] }
read map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_agg[0] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_tb[0] }
{ hw_weight_global_wrapper_stencil_BANK_7_0_tb[3]; hw_weight_global_wrapper_stencil_BANK_7_0_tb[2]; hw_weight_global_wrapper_stencil_BANK_7_0_tb[1]; hw_weight_global_wrapper_stencil_BANK_7_0_tb[0] }
read map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_7_0_tb[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }
write map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[0] }
{ hw_weight_global_wrapper_stencil_BANK_7_sram[3]; hw_weight_global_wrapper_stencil_BANK_7_sram[0]; hw_weight_global_wrapper_stencil_BANK_7_sram[2]; hw_weight_global_wrapper_stencil_BANK_7_sram[1] }
read map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[0] }
	op name: op_hcompute_conv_stencil_1_tb2out_0
	Sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",138,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_7_0_tb[1] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
"read_data_starting_addr",1,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [67] }

"dimensionality",1,0
"cycle_starting_addr",67,0
"extent_0",1,0
"cycle_stride_0",0,0
adding new agg2sram opt cfg for: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0: mode 0, agg_read_padding 1, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_agg[0] }
"read_data_starting_addr",0,0
"read_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [66] }

"dimensionality",1,0
"cycle_starting_addr",66,0
"extent_0",1,0
"cycle_stride_0",0,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_agg[1] }
"write_data_starting_addr",1,0
"write_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [70] }

"dimensionality",1,0
"cycle_starting_addr",70,0
"extent_0",1,0
"cycle_stride_0",0,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_0_tb[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_7_sram[0] }
"read_data_starting_addr",0,0
"read_data_stride_0",0,0
{"agg2sram_0":{"agg_read_padding":[1],"cycle_starting_addr":[67],"cycle_stride":[0],"delay":[0],"dimensionality":0,"extent":[1],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[0],"write_data_starting_addr":[0],"write_data_stride":[0]},"in2agg_0":{"cycle_starting_addr":[66],"cycle_stride":[0],"dimensionality":0,"extent":[1],"write_data_starting_addr":[1],"write_data_stride":[0]},"sram2tb_0":{"cycle_starting_addr":[70],"cycle_stride":[0],"dimensionality":0,"extent":[1],"read_data_starting_addr":[0],"read_data_stride":[0],"write_data_starting_addr":[0],"write_data_stride":[0]},"tb2out_0":{"cycle_starting_addr":[138],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"read_data_starting_addr":[1],"read_data_stride":[0,0]}}
Add lake node:ub_hw_weight_global_wrapper_stencil_BANK_7 with input_num = 1, output_num = 1
Config mode: lake
Generating Verilog Testing Collateral for: ub_hw_weight_global_wrapper_stencil_BANK_7
Module: cgralib.Mem_amber(ID:_U22, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U22__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
agg2sram_opt debug start 
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_0 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_1 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_2 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_read_out
sched: hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_out_3 { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_0 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_1 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_2 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
for each schedule: 
bundle: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in
sched: hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_in_3 { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
domain name of sched: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
stmt_name_before_vec: op_hcompute_hw_weight_global_wrapper_stencil after vec 0
op_hcompute_hw_weight_global_wrapper_stencil: {{hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_0_write_in, 0} }
op_hcompute_hw_weight_global_wrapper_stencil_single_pixel: {{hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_24_read_out, 0} }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [130] }
op_name: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0, extent_0: 1, stride_0: 0
write map: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_agg[2] }
{ hw_weight_global_wrapper_stencil_BANK_8_0_agg[3]; hw_weight_global_wrapper_stencil_BANK_8_0_agg[2]; hw_weight_global_wrapper_stencil_BANK_8_0_agg[0]; hw_weight_global_wrapper_stencil_BANK_8_0_agg[1] }
read map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_agg[0] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
write map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_tb[0] }
{ hw_weight_global_wrapper_stencil_BANK_8_0_tb[3]; hw_weight_global_wrapper_stencil_BANK_8_0_tb[2]; hw_weight_global_wrapper_stencil_BANK_8_0_tb[0]; hw_weight_global_wrapper_stencil_BANK_8_0_tb[1] }
read map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_8_0_tb[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }
sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }
write map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[0] }
{ hw_weight_global_wrapper_stencil_BANK_8_sram[3]; hw_weight_global_wrapper_stencil_BANK_8_sram[0]; hw_weight_global_wrapper_stencil_BANK_8_sram[2]; hw_weight_global_wrapper_stencil_BANK_8_sram[1] }
read map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[0] }
	op name: op_hcompute_conv_stencil_1_tb2out_0
	Sched: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> [138 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",138,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv_stencil_1_tb2out_0[root = 0, conv_s1_y, conv_s1_x] -> hw_weight_global_wrapper_stencil_BANK_8_0_tb[2] : 0 <= conv_s1_y <= 61 and 0 <= conv_s1_x <= 61 }
"read_data_starting_addr",2,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> [131] }

"dimensionality",1,0
"cycle_starting_addr",131,0
"extent_0",1,0
"cycle_stride_0",0,0
adding new agg2sram opt cfg for: op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0: mode 0, agg_read_padding 1, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_agg2sram_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_agg[0] }
"read_data_starting_addr",0,0
"read_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> [130] }

"dimensionality",1,0
"cycle_starting_addr",130,0
"extent_0",1,0
"cycle_stride_0",0,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_in2agg_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_agg[2] }
"write_data_starting_addr",2,0
"write_data_stride_0",0,0
	op name: op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0
	Sched: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> [134] }

"dimensionality",1,0
"cycle_starting_addr",134,0
"extent_0",1,0
"cycle_stride_0",0,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_0_tb[0] }
"write_data_starting_addr",0,0
"write_data_stride_0",0,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil_single_pixel_sram2tb_0[root = 0] -> hw_weight_global_wrapper_stencil_BANK_8_sram[0] }
"read_data_starting_addr",0,0
"read_data_stride_0",0,0
{"agg2sram_0":{"agg_read_padding":[1],"cycle_starting_addr":[131],"cycle_stride":[0],"delay":[0],"dimensionality":0,"extent":[1],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[0],"write_data_starting_addr":[0],"write_data_stride":[0]},"in2agg_0":{"cycle_starting_addr":[130],"cycle_stride":[0],"dimensionality":0,"extent":[1],"write_data_starting_addr":[2],"write_data_stride":[0]},"sram2tb_0":{"cycle_starting_addr":[134],"cycle_stride":[0],"dimensionality":0,"extent":[1],"read_data_starting_addr":[0],"read_data_stride":[0],"write_data_starting_addr":[0],"write_data_stride":[0]},"tb2out_0":{"cycle_starting_addr":[138],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"read_data_starting_addr":[2],"read_data_stride":[0,0]}}
Add lake node:ub_hw_weight_global_wrapper_stencil_BANK_8 with input_num = 1, output_num = 1
Config mode: lake
Generating Verilog Testing Collateral for: ub_hw_weight_global_wrapper_stencil_BANK_8
Module: cgralib.Mem_amber(ID:_U23, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U23__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
addr need tight: {}
Global range: { hw_weight_stencil[i0, i1] : 0 <= i0 <= 2 and 0 <= i1 <= 2 }
Sorted ops: {op_hcompute_hw_weight_global_wrapper_stencil}
  Before Merge: 
    acc map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
    sched: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
    reduce_map: { hw_weight_stencil[d0, d1] -> hw_weight_stencil[3d0 + d1] }
  Dim: 2
    Schedule dom range: 3, current_level_stride : 1, up_level_stride : 64
    Address dom range: 3, current_level_stride : 1, up_level_stride : 3
Find dim: 2 pad = 61
span range: 3, up_level_stride : 3
span range: 3, up_level_stride : 64
	access map merge pair: {{0, 1} }
	schedule merge pair: {}
  After Merge: 
    schedule: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
"dimensionality",3,0
"cycle_starting_addr",0,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",3,0
"cycle_stride_1",64,0
"extent_0",3,0
"cycle_stride_0",1,0
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",3,0
"read_data_stride_0",1,0
	Read map: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> hw_weight_stencil[hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
{"glb2out_0":{"cycle_starting_addr":[0],"cycle_stride":[1,64],"dimensionality":2,"extent":[3,3],"read_data_starting_addr":[0],"read_data_stride":[1,3]}}
Visit op: op_hcompute_hw_output_stencil
Schedule to generate affine controller: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
pma: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi)] : root = 0 and 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
sched = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(138 + 64hw_output_s0_y_yi + hw_output_s0_x_xi)] }
  dom = { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 61 and 0 <= hw_output_s0_x_xi <= 61 }
ls = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] }
v = 0
Add ub node to be aff ctrl
"dimensionality",3,0
"cycle_starting_addr",138,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
Generating Verilog Testing Collateral for: op_hcompute_hw_output_stencil_port_controller
Module: cgralib.Mem_amber(ID:_U24, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'stencil_valid':Bit, 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U24__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validTrue__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
Find compute
Done Finding compute , op Latency : 0, read Latency: 0
Delaying read
Returning delayed...
Delaying exe
Returning delayed...
Delaying writes
Returning delayed...
getting incoming buffers to op_hcompute_hw_output_stencil
  consumed: conv_stencil
Visit op: op_hcompute_conv_stencil_1
getting incoming buffers to op_hcompute_conv_stencil_1
  consumed: conv_stencil_clkwrk_dsa0
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
  consumed: hw_weight_global_wrapper_stencil
Visit op: op_hcompute_conv_stencil
getting incoming buffers to op_hcompute_conv_stencil
Visit op: op_hcompute_hw_weight_global_wrapper_stencil
getting incoming buffers to op_hcompute_hw_weight_global_wrapper_stencil
  consumed: hw_weight_stencil
Schedule to generate affine controller: { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
pma: { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [(64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x)] : root = 0 and 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
sched = { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] -> [(64hw_weight_global_wrapper_s0_y + hw_weight_global_wrapper_s0_x)] }
  dom = { op_hcompute_hw_weight_global_wrapper_stencil[root = 0, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] : 0 <= hw_weight_global_wrapper_s0_y <= 2 and 0 <= hw_weight_global_wrapper_s0_x <= 2 }
ls = { op_hcompute_hw_weight_global_wrapper_stencil[root, hw_weight_global_wrapper_s0_y, hw_weight_global_wrapper_s0_x] }
v = 0
Add ub node to be aff ctrl
"dimensionality",3,0
"cycle_starting_addr",0,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",3,0
"cycle_stride_1",64,0
"extent_0",3,0
"cycle_stride_0",1,0
Generating Verilog Testing Collateral for: op_hcompute_hw_weight_global_wrapper_stencil_port_controller
Module: cgralib.Mem_amber(ID:_U28, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'stencil_valid':Bit, 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U28__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validTrue__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
Find compute
Done Finding compute , op Latency : 0, read Latency: 0
Delaying read
Returning delayed...
Delaying exe
Returning delayed...
Delaying writes
Returning delayed...
Visit op: op_hcompute_hw_input_global_wrapper_stencil
getting incoming buffers to op_hcompute_hw_input_global_wrapper_stencil
  consumed: hw_input_stencil
Schedule to generate affine controller: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
pma: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x)] : root = 0 and 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
sched = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x)] }
  dom = { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
ls = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
v = 0
Add ub node to be aff ctrl
"dimensionality",3,0
"cycle_starting_addr",0,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
Generating Verilog Testing Collateral for: op_hcompute_hw_input_global_wrapper_stencil_port_controller
Module: cgralib.Mem_amber(ID:_U33, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'stencil_valid':Bit, 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U33__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validTrue__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
Find compute
Done Finding compute , op Latency : 0, read Latency: 0
Delaying read
Returning delayed...
Delaying exe
Returning delayed...
Delaying writes
Returning delayed...
Module: global.conv_2input
  Type: {'clk':coreir.clkIn, 'reset':BitIn, 'hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read_en':Bit, 'hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read':BitIn[16][1], 'hw_output_stencil_op_hcompute_hw_output_stencil_write_valid':Bit, 'hw_output_stencil_op_hcompute_hw_output_stencil_write':Bit[16][1], 'hw_weight_stencil_op_hcompute_hw_weight_global_wrapper_stencil_read_en':Bit, 'hw_weight_stencil_op_hcompute_hw_weight_global_wrapper_stencil_read':BitIn[16][1]}
  Def? Yes
  Def:
    Instances:
      _U32 : reg(has_clr:False, has_en:False, has_rst:False, width:16)
      _U37 : reg(has_clr:False, has_en:False, has_rst:False, width:16)
      conv_stencil : conv_stencil_ub
      conv_stencil_clkwrk_dsa0 : conv_stencil_clkwrk_dsa0_ub
      hw_input_global_wrapper_stencil : hw_input_global_wrapper_stencil_ub
      hw_weight_global_wrapper_stencil : hw_weight_global_wrapper_stencil_ub
      op_hcompute_conv_stencil : cu_op_hcompute_conv_stencil
      op_hcompute_conv_stencil_1 : cu_op_hcompute_conv_stencil_1
      op_hcompute_hw_input_global_wrapper_stencil : cu_op_hcompute_hw_input_global_wrapper_stencil
      op_hcompute_hw_input_global_wrapper_stencil_exe_start : op_hcompute_hw_input_global_wrapper_stencil_exe_start_pt__U35
      op_hcompute_hw_input_global_wrapper_stencil_port_controller : Mem_amber(ID:_U33, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
      op_hcompute_hw_input_global_wrapper_stencil_port_controller_clk_en_const : const
      op_hcompute_hw_input_global_wrapper_stencil_read_start : op_hcompute_hw_input_global_wrapper_stencil_read_start_pt__U34
      op_hcompute_hw_input_global_wrapper_stencil_write_start : op_hcompute_hw_input_global_wrapper_stencil_write_start_pt__U36
      op_hcompute_hw_output_stencil : cu_op_hcompute_hw_output_stencil
      op_hcompute_hw_output_stencil_exe_start : op_hcompute_hw_output_stencil_exe_start_pt__U26
      op_hcompute_hw_output_stencil_port_controller : Mem_amber(ID:_U24, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
      op_hcompute_hw_output_stencil_port_controller_clk_en_const : const
      op_hcompute_hw_output_stencil_read_start : op_hcompute_hw_output_stencil_read_start_pt__U25
      op_hcompute_hw_output_stencil_write_start : op_hcompute_hw_output_stencil_write_start_pt__U27
      op_hcompute_hw_weight_global_wrapper_stencil : cu_op_hcompute_hw_weight_global_wrapper_stencil
      op_hcompute_hw_weight_global_wrapper_stencil_exe_start : op_hcompute_hw_weight_global_wrapper_stencil_exe_start_pt__U30
      op_hcompute_hw_weight_global_wrapper_stencil_port_controller : Mem_amber(ID:_U28, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
      op_hcompute_hw_weight_global_wrapper_stencil_port_controller_clk_en_const : const
      op_hcompute_hw_weight_global_wrapper_stencil_read_start : op_hcompute_hw_weight_global_wrapper_stencil_read_start_pt__U29
      op_hcompute_hw_weight_global_wrapper_stencil_write_start : op_hcompute_hw_weight_global_wrapper_stencil_write_start_pt__U31
    Connections:
      conv_stencil.reset <=> self.reset
      conv_stencil_clkwrk_dsa0.reset <=> self.reset
      hw_input_global_wrapper_stencil.reset <=> self.reset
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.flush <=> self.reset
      hw_weight_global_wrapper_stencil.reset <=> self.reset
      op_hcompute_hw_output_stencil_port_controller.flush <=> self.reset
      op_hcompute_hw_weight_global_wrapper_stencil_port_controller.flush <=> self.reset
      op_hcompute_hw_weight_global_wrapper_stencil_port_controller.clk_en <=> op_hcompute_hw_weight_global_wrapper_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_weight_global_wrapper_stencil_port_controller.rst_n <=> op_hcompute_hw_weight_global_wrapper_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_weight_global_wrapper_stencil_port_controller.stencil_valid <=> op_hcompute_hw_weight_global_wrapper_stencil_read_start.in
      op_hcompute_hw_weight_global_wrapper_stencil_exe_start.in <=> op_hcompute_hw_weight_global_wrapper_stencil_port_controller.stencil_valid
      op_hcompute_hw_weight_global_wrapper_stencil_port_controller.stencil_valid <=> op_hcompute_hw_weight_global_wrapper_stencil_write_start.in
      op_hcompute_hw_output_stencil.hw_output_stencil_op_hcompute_hw_output_stencil_write <=> self.hw_output_stencil_op_hcompute_hw_output_stencil_write
      op_hcompute_hw_weight_global_wrapper_stencil_read_start.out <=> self.hw_weight_stencil_op_hcompute_hw_weight_global_wrapper_stencil_read_en
      hw_input_global_wrapper_stencil.op_hcompute_hw_input_global_wrapper_stencil_write <=> op_hcompute_hw_input_global_wrapper_stencil.hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_write
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.clk <=> self.clk
      op_hcompute_hw_weight_global_wrapper_stencil.hw_weight_stencil_op_hcompute_hw_weight_global_wrapper_stencil_read <=> self.hw_weight_stencil_op_hcompute_hw_weight_global_wrapper_stencil_read
      _U32.in <=> self.hw_weight_stencil_op_hcompute_hw_weight_global_wrapper_stencil_read[0]
      op_hcompute_hw_output_stencil_port_controller.clk <=> self.clk
      op_hcompute_hw_weight_global_wrapper_stencil_port_controller.clk <=> self.clk
      op_hcompute_hw_output_stencil_port_controller.clk_en <=> op_hcompute_hw_output_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_output_stencil_port_controller.rst_n <=> op_hcompute_hw_output_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_output_stencil_port_controller.stencil_valid <=> op_hcompute_hw_output_stencil_read_start.in
      op_hcompute_hw_output_stencil_exe_start.in <=> op_hcompute_hw_output_stencil_port_controller.stencil_valid
      op_hcompute_hw_output_stencil_port_controller.stencil_valid <=> op_hcompute_hw_output_stencil_write_start.in
      op_hcompute_hw_output_stencil_write_start.out <=> self.hw_output_stencil_op_hcompute_hw_output_stencil_write_valid
      conv_stencil.op_hcompute_hw_output_stencil_read <=> op_hcompute_hw_output_stencil.conv_stencil_op_hcompute_hw_output_stencil_read
      conv_stencil.op_hcompute_conv_stencil_1_write <=> op_hcompute_conv_stencil_1.conv_stencil_op_hcompute_conv_stencil_1_write
      conv_stencil_clkwrk_dsa0.op_hcompute_conv_stencil_1_read <=> op_hcompute_conv_stencil_1.conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_read
      hw_input_global_wrapper_stencil.op_hcompute_conv_stencil_1_read <=> op_hcompute_conv_stencil_1.hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_read
      hw_weight_global_wrapper_stencil.op_hcompute_conv_stencil_1_read <=> op_hcompute_conv_stencil_1.hw_weight_global_wrapper_stencil_op_hcompute_conv_stencil_1_read
      conv_stencil_clkwrk_dsa0.op_hcompute_conv_stencil_write <=> op_hcompute_conv_stencil.conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_write
      hw_weight_global_wrapper_stencil.op_hcompute_hw_weight_global_wrapper_stencil_write <=> op_hcompute_hw_weight_global_wrapper_stencil.hw_weight_global_wrapper_stencil_op_hcompute_hw_weight_global_wrapper_stencil_write
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.clk_en <=> op_hcompute_hw_input_global_wrapper_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.rst_n <=> op_hcompute_hw_input_global_wrapper_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.stencil_valid <=> op_hcompute_hw_input_global_wrapper_stencil_read_start.in
      op_hcompute_hw_input_global_wrapper_stencil_exe_start.in <=> op_hcompute_hw_input_global_wrapper_stencil_port_controller.stencil_valid
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.stencil_valid <=> op_hcompute_hw_input_global_wrapper_stencil_write_start.in
      op_hcompute_hw_input_global_wrapper_stencil_read_start.out <=> self.hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read_en
      op_hcompute_hw_input_global_wrapper_stencil.hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read <=> self.hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read
      _U37.in <=> self.hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read[0]

Find top interface: clk
Find top interface: hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read
Find top interface: hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read_en
Find top interface: hw_output_stencil_op_hcompute_hw_output_stencil_write
Find top interface: hw_output_stencil_op_hcompute_hw_output_stencil_write_valid
Find top interface: hw_weight_stencil_op_hcompute_hw_weight_global_wrapper_stencil_read
Find top interface: hw_weight_stencil_op_hcompute_hw_weight_global_wrapper_stencil_read_en
Find top interface: reset
    Connect the read directly to write port of GLB!
    ub_hw_input_global_wrapper_stencil_bank_2(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    op_hcompute_hw_weight_global_wrapper_stencil_port_controller(ID:_U28, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
    Connect the read directly to write port of GLB!
    op_hcompute_hw_input_global_wrapper_stencil_port_controller(ID:_U33, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
    Connect the read directly to write port of GLB!
    ub_hw_weight_global_wrapper_stencil_BANK_0(ID:_U15, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    ub_hw_weight_global_wrapper_stencil_BANK_1(ID:_U16, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    ub_hw_weight_global_wrapper_stencil_BANK_2(ID:_U17, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    ub_hw_weight_global_wrapper_stencil_BANK_3(ID:_U18, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    ub_hw_weight_global_wrapper_stencil_BANK_4(ID:_U19, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    ub_hw_weight_global_wrapper_stencil_BANK_5(ID:_U20, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    ub_hw_weight_global_wrapper_stencil_BANK_6(ID:_U21, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    ub_hw_weight_global_wrapper_stencil_BANK_7(ID:_U22, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    ub_hw_weight_global_wrapper_stencil_BANK_8(ID:_U23, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    op_hcompute_hw_output_stencil_port_controller(ID:_U24, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
inlining op_hcompute_hw_weight_global_wrapper_stencil_write_start
inlining op_hcompute_hw_weight_global_wrapper_stencil_read_start
inlining op_hcompute_hw_weight_global_wrapper_stencil_exe_start
inlining op_hcompute_hw_output_stencil_write_start
inlining op_hcompute_hw_output_stencil_read_start
inlining op_hcompute_hw_output_stencil_exe_start
inlining op_hcompute_hw_input_global_wrapper_stencil_write_start
inlining op_hcompute_hw_input_global_wrapper_stencil_read_start
inlining op_hcompute_hw_input_global_wrapper_stencil_exe_start
inlining inner_compute$i2132_i2133_i131
inlining inner_compute$add_413_429_430_tree$_join_i2175_i1808
inlining inner_compute$add_413_429_430_tree$opN_0$_join_i2167_i364
inlining inner_compute$add_413_429_430_tree$opN_0$opN_0$opN_0$_join_i2143_i1110
inlining inner_compute$add_413_429_430_tree$opN_0$opN_0$opN_1$_join_i2150_i2127
inlining inner_compute$add_413_429_430_tree$opN_0$opN_1$_join_i2166_i1808
inlining inner_compute$add_413_429_430_tree$opN_0$opN_1$opN_0$_join_i2158_i2127
inlining inner_compute$add_413_429_430_tree$opN_0$opN_1$opN_1$_join_i2165_i2127
inlining inner_compute$add_413_429_430_tree$opN_1$_join_i2174_i2127
inlining inner_compute$mul_hw_weight_global_wrapper_stencil_2_hw_input_global_wrapper_stencil_2_414_i2146_i1461
inlining inner_compute$mul_hw_weight_global_wrapper_stencil_4_hw_input_global_wrapper_stencil_4_416_i2154_i1461
inlining inner_compute$mul_hw_weight_global_wrapper_stencil_6_hw_input_global_wrapper_stencil_6_418_i2161_i1461
inlining inner_compute$mul_hw_weight_global_wrapper_stencil_8_hw_input_global_wrapper_stencil_8_420_i2170_i1461
inlining i2132_i2133_i131
inlining add_413_429_430_tree$_join_i2175_i1808
inlining add_413_429_430_tree$opN_0$_join_i2167_i364
inlining add_413_429_430_tree$opN_0$opN_0$opN_0$_join_i2143_i1110
inlining add_413_429_430_tree$opN_0$opN_0$opN_1$_join_i2150_i2127
inlining add_413_429_430_tree$opN_0$opN_1$_join_i2166_i1808
inlining add_413_429_430_tree$opN_0$opN_1$opN_0$_join_i2158_i2127
inlining add_413_429_430_tree$opN_0$opN_1$opN_1$_join_i2165_i2127
inlining add_413_429_430_tree$opN_1$_join_i2174_i2127
inlining mul_hw_weight_global_wrapper_stencil_2_hw_input_global_wrapper_stencil_2_414_i2146_i1461
inlining mul_hw_weight_global_wrapper_stencil_4_hw_input_global_wrapper_stencil_4_416_i2154_i1461
inlining mul_hw_weight_global_wrapper_stencil_6_hw_input_global_wrapper_stencil_6_418_i2161_i1461
inlining mul_hw_weight_global_wrapper_stencil_8_hw_input_global_wrapper_stencil_8_420_i2170_i1461
inlining _U32
inlining _U37
inlining d_reg__U1
inlining d_reg__U10
inlining d_reg__U11
inlining d_reg__U12
inlining d_reg__U13
inlining d_reg__U14
inlining d_reg__U2
inlining d_reg__U3
inlining d_reg__U4
inlining d_reg__U5
inlining d_reg__U6
inlining d_reg__U7
inlining d_reg__U8
inlining d_reg__U9
inlining op_hcompute_hw_weight_global_wrapper_stencil
inlining op_hcompute_hw_output_stencil
inlining op_hcompute_hw_input_global_wrapper_stencil
inlining inner_compute$c0
inlining inner_compute$c0
inlining inner_compute$c1
inlining inner_compute$c10
inlining inner_compute$c11
inlining inner_compute$c2
inlining inner_compute$c3
inlining inner_compute$c4
inlining inner_compute$c5
inlining inner_compute$c6
inlining inner_compute$c7
inlining inner_compute$c8
inlining inner_compute$c9
inlining c0
inlining c0
inlining c1
inlining c10
inlining c11
inlining c2
inlining c3
inlining c4
inlining c5
inlining c6
inlining c7
inlining c8
inlining c9
inlining op_hcompute_conv_stencil_1
inlining op_hcompute_conv_stencil
inlining op_hcompute_hw_input_global_wrapper_stencil_port_controller_clk_en_const
inlining op_hcompute_hw_output_stencil_port_controller_clk_en_const
inlining op_hcompute_hw_weight_global_wrapper_stencil_port_controller_clk_en_const
inlining ub_hw_input_global_wrapper_stencil_bank_2_clk_en_const
inlining ub_hw_weight_global_wrapper_stencil_BANK_0_clk_en_const
inlining ub_hw_weight_global_wrapper_stencil_BANK_1_clk_en_const
inlining ub_hw_weight_global_wrapper_stencil_BANK_2_clk_en_const
inlining ub_hw_weight_global_wrapper_stencil_BANK_3_clk_en_const
inlining ub_hw_weight_global_wrapper_stencil_BANK_4_clk_en_const
inlining ub_hw_weight_global_wrapper_stencil_BANK_5_clk_en_const
inlining ub_hw_weight_global_wrapper_stencil_BANK_6_clk_en_const
inlining ub_hw_weight_global_wrapper_stencil_BANK_7_clk_en_const
inlining ub_hw_weight_global_wrapper_stencil_BANK_8_clk_en_const
inlining conv_stencil
inlining conv_stencil_clkwrk_dsa0
inlining op_hcompute_hw_input_global_wrapper_stencil_port_controller
inlining op_hcompute_hw_weight_global_wrapper_stencil_port_controller
inlining op_hcompute_hw_output_stencil_port_controller
inlining ub_hw_weight_global_wrapper_stencil_BANK_8
inlining ub_hw_weight_global_wrapper_stencil_BANK_7
inlining ub_hw_weight_global_wrapper_stencil_BANK_6
inlining ub_hw_weight_global_wrapper_stencil_BANK_5
inlining ub_hw_weight_global_wrapper_stencil_BANK_4
inlining ub_hw_weight_global_wrapper_stencil_BANK_3
inlining ub_hw_weight_global_wrapper_stencil_BANK_2
inlining ub_hw_weight_global_wrapper_stencil_BANK_1
inlining ub_hw_weight_global_wrapper_stencil_BANK_0
inlining hw_weight_global_wrapper_stencil
inlining ub_hw_input_global_wrapper_stencil_bank_2
inlining hw_input_global_wrapper_stencil
    new memory syntax transformation!
    ub_hw_input_global_wrapper_stencil_bank_2(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    op_hcompute_hw_weight_global_wrapper_stencil_port_controller(ID:_U28, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: stencil_valid to O4
Connecting cnst_port: flush
    new memory syntax transformation!
    op_hcompute_hw_input_global_wrapper_stencil_port_controller(ID:_U33, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: stencil_valid to O4
Connecting cnst_port: flush
    new memory syntax transformation!
    ub_hw_weight_global_wrapper_stencil_BANK_0(ID:_U15, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    ub_hw_weight_global_wrapper_stencil_BANK_1(ID:_U16, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    ub_hw_weight_global_wrapper_stencil_BANK_2(ID:_U17, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    ub_hw_weight_global_wrapper_stencil_BANK_3(ID:_U18, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    ub_hw_weight_global_wrapper_stencil_BANK_4(ID:_U19, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    ub_hw_weight_global_wrapper_stencil_BANK_5(ID:_U20, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    ub_hw_weight_global_wrapper_stencil_BANK_6(ID:_U21, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    ub_hw_weight_global_wrapper_stencil_BANK_7(ID:_U22, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    ub_hw_weight_global_wrapper_stencil_BANK_8(ID:_U23, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    op_hcompute_hw_output_stencil_port_controller(ID:_U24, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: stencil_valid to O4
Connecting cnst_port: flush
    new memory syntax transformation!
    hw_weight_global_wrapper_stencil$ub_hw_weight_global_wrapper_stencil_BANK_0(ID:_U15, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    hw_weight_global_wrapper_stencil$ub_hw_weight_global_wrapper_stencil_BANK_1(ID:_U16, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    hw_weight_global_wrapper_stencil$ub_hw_weight_global_wrapper_stencil_BANK_2(ID:_U17, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    hw_weight_global_wrapper_stencil$ub_hw_weight_global_wrapper_stencil_BANK_3(ID:_U18, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    hw_weight_global_wrapper_stencil$ub_hw_weight_global_wrapper_stencil_BANK_4(ID:_U19, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    hw_weight_global_wrapper_stencil$ub_hw_weight_global_wrapper_stencil_BANK_5(ID:_U20, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    hw_weight_global_wrapper_stencil$ub_hw_weight_global_wrapper_stencil_BANK_6(ID:_U21, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    hw_weight_global_wrapper_stencil$ub_hw_weight_global_wrapper_stencil_BANK_7(ID:_U22, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    hw_weight_global_wrapper_stencil$ub_hw_weight_global_wrapper_stencil_BANK_8(ID:_U23, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting cnst_port: flush
    new memory syntax transformation!
    hw_input_global_wrapper_stencil$ub_hw_input_global_wrapper_stencil_bank_2(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
