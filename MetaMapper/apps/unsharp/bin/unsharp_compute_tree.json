{
"namespaces":{
  "cgralib":{
    "modules":{
      "BitIO":{
        "type":["Record",[
          ["in","BitIn"],
          ["out","Bit"]
        ]],
        "modparams":{"mode":"String"}
      }
    },
    "generators":{
      "IO":{
        "typegen":"cgralib.unary",
        "genparams":{"width":"Int"}
      },
      "Mem":{
        "typegen":"cgralib.cgralib_mem_type",
        "genparams":{"ID":"String", "ctrl_width":"Int", "has_chain_en":"Bool", "has_external_addrgen":"Bool", "has_flush":"Bool", "has_read_valid":"Bool", "has_reset":"Bool", "has_stencil_valid":"Bool", "has_valid":"Bool", "is_rom":"Bool", "num_inputs":"Int", "num_outputs":"Int", "use_prebuilt_mem":"Bool", "width":"Int"},
        "defaultgenargs":{"ID":["String",""], "ctrl_width":["Int",16], "has_chain_en":["Bool",true], "has_external_addrgen":["Bool",false], "has_flush":["Bool",false], "has_read_valid":["Bool",false], "has_reset":["Bool",false], "has_stencil_valid":["Bool",false], "has_valid":["Bool",false], "num_inputs":["Int",1], "num_outputs":["Int",1], "use_prebuilt_mem":["Bool",false]}
      },
      "Mem_amber":{
        "typegen":"cgralib.cgralib_mem_amber_type",
        "genparams":{"ID":"String", "ctrl_width":"Int", "has_chain_en":"Bool", "has_external_addrgen":"Bool", "has_flush":"Bool", "has_read_valid":"Bool", "has_reset":"Bool", "has_stencil_valid":"Bool", "has_valid":"Bool", "is_rom":"Bool", "num_inputs":"Int", "num_outputs":"Int", "use_prebuilt_mem":"Bool", "width":"Int"},
        "defaultgenargs":{"ID":["String",""], "ctrl_width":["Int",16], "has_chain_en":["Bool",true], "has_external_addrgen":["Bool",false], "has_flush":["Bool",false], "has_read_valid":["Bool",false], "has_reset":["Bool",false], "has_stencil_valid":["Bool",false], "has_valid":["Bool",false], "is_rom":["Bool",false], "num_inputs":["Int",1], "num_outputs":["Int",1], "use_prebuilt_mem":["Bool",false]}
      },
      "Mem_jade":{
        "typegen":"cgralib.MemType",
        "genparams":{"total_depth":"Int", "width":"Int"},
        "defaultgenargs":{"total_depth":["Int",1024], "width":["Int",16]}
      },
      "PE":{
        "typegen":"cgralib.PEType",
        "genparams":{"numbitports":"Int", "numdataports":"Int", "op_kind":"String", "width":"Int"},
        "defaultgenargs":{"numbitports":["Int",3], "numdataports":["Int",2], "width":["Int",16]}
      },
      "Pond":{
        "typegen":"cgralib.cgralib_pond_type",
        "genparams":{"ID":"String", "num_inputs":"Int", "num_outputs":"Int", "width":"Int"},
        "defaultgenargs":{"ID":["String",""], "num_inputs":["Int",1], "num_outputs":["Int",1]}
      },
      "Pond_amber":{
        "typegen":"cgralib.cgralib_pond_amber_type",
        "genparams":{"ID":"String", "num_inputs":"Int", "num_outputs":"Int", "width":"Int"},
        "defaultgenargs":{"ID":["String",""], "num_inputs":["Int",1], "num_outputs":["Int",1]}
      }
    },
    "typegens":{
      "MemType":[{"total_depth":"Int", "width":"Int"},"implicit"],
      "PEType":[{"numbitports":"Int", "numdataports":"Int", "op_kind":"String", "width":"Int"},"implicit"],
      "cgralib_mem_amber_type":[{"ID":"String", "ctrl_width":"Int", "has_chain_en":"Bool", "has_external_addrgen":"Bool", "has_flush":"Bool", "has_read_valid":"Bool", "has_reset":"Bool", "has_stencil_valid":"Bool", "has_valid":"Bool", "is_rom":"Bool", "num_inputs":"Int", "num_outputs":"Int", "use_prebuilt_mem":"Bool", "width":"Int"},"implicit"],
      "cgralib_mem_type":[{"ID":"String", "ctrl_width":"Int", "has_chain_en":"Bool", "has_external_addrgen":"Bool", "has_flush":"Bool", "has_read_valid":"Bool", "has_reset":"Bool", "has_stencil_valid":"Bool", "has_valid":"Bool", "is_rom":"Bool", "num_inputs":"Int", "num_outputs":"Int", "use_prebuilt_mem":"Bool", "width":"Int"},"implicit"],
      "cgralib_pond_amber_type":[{"ID":"String", "num_inputs":"Int", "num_outputs":"Int", "width":"Int"},"implicit"],
      "cgralib_pond_type":[{"ID":"String", "num_inputs":"Int", "num_outputs":"Int", "width":"Int"},"implicit"],
      "unary":[{"width":"Int"},"implicit"]
    }
  },
  "commonlib":{
    "generators":{
      "MAD":{
        "typegen":"coreir.ternary",
        "genparams":{"width":"Int"}
      },
      "abs":{
        "typegen":"coreir.unary",
        "genparams":{"width":"Int"}
      },
      "absd":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "accumulation_register":{
        "typegen":"commonlib.accumulation_register_type",
        "genparams":{"iterations":"Int", "width":"Int"}
      },
      "bitopn":{
        "typegen":"commonlib.bitopN_type",
        "genparams":{"N":"Int", "operator":"String"}
      },
      "const_array":{
        "typegen":"coreir.constArrayTG",
        "genparams":{"type":"CoreIRType", "value":"Int"},
        "defaultgenargs":{"value":["Int",0]}
      },
      "counter":{
        "typegen":"commonlib.counter_type",
        "genparams":{"inc":"Int", "max":"Int", "min":"Int", "width":"Int"}
      },
      "deserializer":{
        "typegen":"commonlib.deserializer_type",
        "genparams":{"rate":"Int", "width":"Int"}
      },
      "div":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "lutN":{
        "typegen":"commonlib.lutNType",
        "genparams":{"N":"Int"},
        "metadata":{"verilog":{"definition":"  assign out = init[in];","interface":["input [N-1:0] in","output out"],"parameters":["init"]}}
      },
      "mult_high":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "mult_middle":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"},
        "modules":[
          [{"width":["Int",16]},{
              "type":["Record",[
                ["in0",["Array",16,"BitIn"]],
                ["in1",["Array",16,"BitIn"]],
                ["out",["Array",16,"Bit"]]
              ]]
            }]
        ]
      },
      "muxn":{
        "typegen":"commonlib.muxN_type",
        "genparams":{"N":"Int", "width":"Int"}
      },
      "opn":{
        "typegen":"commonlib.opN_type",
        "genparams":{"N":"Int", "operator":"String", "width":"Int"},
        "modules":[
          [{"N":["Int",3], "operator":["String","coreir.add"], "width":["Int",16]},{
              "type":["Record",[
                ["in",["Array",3,["Array",16,"BitIn"]]],
                ["out",["Array",16,"Bit"]]
              ]]
            }],
          [{"N":["Int",46], "operator":["String","coreir.add"], "width":["Int",16]},{
              "type":["Record",[
                ["in",["Array",46,["Array",16,"BitIn"]]],
                ["out",["Array",16,"Bit"]]
              ]]
            }]
        ]
      },
      "reg_array":{
        "typegen":"coreir.regArrayTG",
        "genparams":{"has_clr":"Bool", "has_en":"Bool", "has_rst":"Bool", "init":"Int", "type":"CoreIRType"},
        "defaultgenargs":{"has_clr":["Bool",false], "has_en":["Bool",false], "has_rst":["Bool",false], "init":["Int",0]}
      },
      "reshape":{
        "typegen":"commonlib.reshape_type",
        "genparams":{"input_type":"CoreIRType", "output_type":"CoreIRType"}
      },
      "sclamp":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "serializer":{
        "typegen":"commonlib.serializer_type",
        "genparams":{"rate":"Int", "width":"Int"}
      },
      "smax":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"},
        "modules":[
          [{"width":["Int",16]},{
              "type":["Record",[
                ["in0",["Array",16,"BitIn"]],
                ["in1",["Array",16,"BitIn"]],
                ["out",["Array",16,"Bit"]]
              ]]
            }]
        ]
      },
      "smin":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"},
        "modules":[
          [{"width":["Int",16]},{
              "type":["Record",[
                ["in0",["Array",16,"BitIn"]],
                ["in1",["Array",16,"BitIn"]],
                ["out",["Array",16,"Bit"]]
              ]]
            }]
        ]
      },
      "transpose":{
        "typegen":"commonlib.transpose_type",
        "genparams":{"input_type":"CoreIRType"}
      },
      "transpose_reshape":{
        "typegen":"commonlib.reshape_type",
        "genparams":{"input_type":"CoreIRType", "output_type":"CoreIRType"}
      },
      "uclamp":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "umax":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"},
        "modules":[
          [{"width":["Int",16]},{
              "type":["Record",[
                ["in0",["Array",16,"BitIn"]],
                ["in1",["Array",16,"BitIn"]],
                ["out",["Array",16,"Bit"]]
              ]]
            }]
        ]
      },
      "umin":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      }
    },
    "typegens":{
      "accumulation_register_type":[{"iterations":"Int", "width":"Int"},"implicit"],
      "bitopN_type":[{"N":"Int", "operator":"String"},"implicit"],
      "counter_type":[{"inc":"Int", "max":"Int", "min":"Int", "width":"Int"},"implicit"],
      "deserializer_type":[{"rate":"Int", "width":"Int"},"implicit"],
      "lutNType":[{"N":"Int"},"implicit"],
      "muxN_type":[{"N":"Int", "width":"Int"},"implicit"],
      "opN_type":[{"N":"Int", "operator":"String", "width":"Int"},"sparse",[
        [{"N":["Int",3], "operator":["String","coreir.add"], "width":["Int",16]},["Record",[["in",["Array",3,["Array",16,"BitIn"]]],["out",["Array",16,"Bit"]]]]],
        [{"N":["Int",46], "operator":["String","coreir.add"], "width":["Int",16]},["Record",[["in",["Array",46,["Array",16,"BitIn"]]],["out",["Array",16,"Bit"]]]]]
      ]],
      "reshape_type":[{"input_type":"CoreIRType", "output_type":"CoreIRType"},"implicit"],
      "serializer_type":[{"rate":"Int", "width":"Int"},"implicit"],
      "transpose_type":[{"input_type":"CoreIRType"},"implicit"]
    }
  },
  "corebit":{
    "modules":{
      "and":{
        "type":["Record",[
          ["in0","BitIn"],
          ["in1","BitIn"],
          ["out","Bit"]
        ]]
      },
      "concat":{
        "type":["Record",[
          ["in0","BitIn"],
          ["in1","BitIn"],
          ["out",["Array",2,"Bit"]]
        ]]
      },
      "const":{
        "type":["Record",[
          ["out","Bit"]
        ]],
        "modparams":{"value":"Bool"}
      },
      "ibuf":{
        "type":["Record",[
          ["in","BitInOut"],
          ["out","Bit"]
        ]]
      },
      "mux":{
        "type":["Record",[
          ["in0","BitIn"],
          ["in1","BitIn"],
          ["sel","BitIn"],
          ["out","Bit"]
        ]]
      },
      "not":{
        "type":["Record",[
          ["in","BitIn"],
          ["out","Bit"]
        ]]
      },
      "or":{
        "type":["Record",[
          ["in0","BitIn"],
          ["in1","BitIn"],
          ["out","Bit"]
        ]]
      },
      "pullresistor":{
        "type":["Record",[
          ["out","BitInOut"]
        ]],
        "modparams":{"value":"Bool"}
      },
      "reg":{
        "type":["Record",[
          ["clk",["Named","coreir.clkIn"]],
          ["in","BitIn"],
          ["out","Bit"]
        ]],
        "modparams":{"clk_posedge":"Bool", "init":"Bool"},
        "defaultmodargs":{"clk_posedge":["Bool",true], "init":["Bool",false]}
      },
      "reg_arst":{
        "type":["Record",[
          ["clk",["Named","coreir.clkIn"]],
          ["arst",["Named","coreir.arstIn"]],
          ["in","BitIn"],
          ["out","Bit"]
        ]],
        "modparams":{"arst_posedge":"Bool", "clk_posedge":"Bool", "init":"Bool"},
        "defaultmodargs":{"arst_posedge":["Bool",true], "clk_posedge":["Bool",true], "init":["Bool",false]}
      },
      "term":{
        "type":["Record",[
          ["in","BitIn"]
        ]]
      },
      "tribuf":{
        "type":["Record",[
          ["in","BitIn"],
          ["en","BitIn"],
          ["out","BitInOut"]
        ]]
      },
      "undriven":{
        "type":["Record",[
          ["out","Bit"]
        ]]
      },
      "wire":{
        "type":["Record",[
          ["in","BitIn"],
          ["out","Bit"]
        ]]
      },
      "xnor":{
        "type":["Record",[
          ["in0","BitIn"],
          ["in1","BitIn"],
          ["out","Bit"]
        ]]
      },
      "xor":{
        "type":["Record",[
          ["in0","BitIn"],
          ["in1","BitIn"],
          ["out","Bit"]
        ]]
      }
    }
  },
  "coreir":{
    "generators":{
      "add":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"},
        "modules":[
          [{"width":["Int",16]},{
              "type":["Record",[
                ["in0",["Array",16,"BitIn"]],
                ["in1",["Array",16,"BitIn"]],
                ["out",["Array",16,"Bit"]]
              ]]
            }]
        ]
      },
      "and":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "andr":{
        "typegen":"coreir.unaryReduce",
        "genparams":{"width":"Int"}
      },
      "ashr":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "concat":{
        "typegen":"coreir.concatTypeFun",
        "genparams":{"width0":"Int", "width1":"Int"}
      },
      "const":{
        "typegen":"coreir.singleOutType",
        "genparams":{"width":"Int"},
        "modules":[
          [{"width":["Int",16]},{
              "type":["Record",[
                ["out",["Array",16,"Bit"]]
              ]],
              "modparams":{"value":["BitVector",16]}
            }]
        ]
      },
      "eq":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "ibuf":{
        "typegen":"coreir.iBuf",
        "genparams":{"width":"Int"}
      },
      "lshr":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"},
        "modules":[
          [{"width":["Int",16]},{
              "type":["Record",[
                ["in0",["Array",16,"BitIn"]],
                ["in1",["Array",16,"BitIn"]],
                ["out",["Array",16,"Bit"]]
              ]]
            }]
        ]
      },
      "mem":{
        "typegen":"coreir.memType",
        "genparams":{"depth":"Int", "has_init":"Bool", "sync_read":"Bool", "width":"Int"},
        "defaultgenargs":{"has_init":["Bool",false], "sync_read":["Bool",false]}
      },
      "mul":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"},
        "modules":[
          [{"width":["Int",16]},{
              "type":["Record",[
                ["in0",["Array",16,"BitIn"]],
                ["in1",["Array",16,"BitIn"]],
                ["out",["Array",16,"Bit"]]
              ]]
            }]
        ]
      },
      "mux":{
        "typegen":"coreir.muxType",
        "genparams":{"width":"Int"}
      },
      "neg":{
        "typegen":"coreir.unary",
        "genparams":{"width":"Int"}
      },
      "neq":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "not":{
        "typegen":"coreir.unary",
        "genparams":{"width":"Int"}
      },
      "or":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "orr":{
        "typegen":"coreir.unaryReduce",
        "genparams":{"width":"Int"}
      },
      "pullresistor":{
        "typegen":"coreir.pullResistor",
        "genparams":{"width":"Int"}
      },
      "reg":{
        "typegen":"coreir.regType",
        "genparams":{"width":"Int"}
      },
      "reg_arst":{
        "typegen":"coreir.regRstType",
        "genparams":{"width":"Int"}
      },
      "sdiv":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "sext":{
        "typegen":"coreir.extTypeFun",
        "genparams":{"width_in":"Int", "width_out":"Int"}
      },
      "sge":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "sgt":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "shl":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "sle":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "slice":{
        "typegen":"coreir.sliceTypeFun",
        "genparams":{"hi":"Int", "lo":"Int", "width":"Int"},
        "defaultgenargs":{"hi":["Int",1], "lo":["Int",0]}
      },
      "slt":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "smod":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "srem":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "strip":{
        "typegen":"coreir.stripTypeFun",
        "genparams":{"type":"CoreIRType"}
      },
      "sub":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"},
        "modules":[
          [{"width":["Int",16]},{
              "type":["Record",[
                ["in0",["Array",16,"BitIn"]],
                ["in1",["Array",16,"BitIn"]],
                ["out",["Array",16,"Bit"]]
              ]]
            }]
        ]
      },
      "term":{
        "typegen":"coreir.sngleInType",
        "genparams":{"width":"Int"}
      },
      "tribuf":{
        "typegen":"coreir.triBuf",
        "genparams":{"width":"Int"}
      },
      "udiv":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "uge":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "ugt":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "ule":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "ult":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "undriven":{
        "typegen":"coreir.singleOutType",
        "genparams":{"width":"Int"}
      },
      "urem":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "wire":{
        "typegen":"coreir.unary",
        "genparams":{"width":"Int"}
      },
      "wrap":{
        "typegen":"coreir.wrapTypeFun",
        "genparams":{"type":"CoreIRType"}
      },
      "xor":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "xorr":{
        "typegen":"coreir.unaryReduce",
        "genparams":{"width":"Int"}
      },
      "zext":{
        "typegen":"coreir.extTypeFun",
        "genparams":{"width_in":"Int", "width_out":"Int"}
      }
    },
    "typegens":{
      "binary":[{"width":"Int"},"sparse",[
        [{"width":["Int",16]},["Record",[["in0",["Array",16,"BitIn"]],["in1",["Array",16,"BitIn"]],["out",["Array",16,"Bit"]]]]]
      ]],
      "binaryReduce":[{"width":"Int"},"implicit"],
      "concatTypeFun":[{"width0":"Int", "width1":"Int"},"implicit"],
      "constArrayTG":[{"type":"CoreIRType", "value":"Int"},"implicit"],
      "extTypeFun":[{"width_in":"Int", "width_out":"Int"},"implicit"],
      "iBuf":[{"width":"Int"},"implicit"],
      "memType":[{"depth":"Int", "has_init":"Bool", "sync_read":"Bool", "width":"Int"},"implicit"],
      "muxType":[{"width":"Int"},"implicit"],
      "pullResistor":[{"width":"Int"},"implicit"],
      "regArrayTG":[{"has_clr":"Bool", "has_en":"Bool", "has_rst":"Bool", "init":"Int", "type":"CoreIRType"},"implicit"],
      "regRstType":[{"width":"Int"},"implicit"],
      "regType":[{"width":"Int"},"implicit"],
      "singleOutType":[{"width":"Int"},"sparse",[
        [{"width":["Int",16]},["Record",[["out",["Array",16,"Bit"]]]]]
      ]],
      "sliceTypeFun":[{"hi":"Int", "lo":"Int", "width":"Int"},"implicit"],
      "sngleInType":[{"width":"Int"},"implicit"],
      "stripTypeFun":[{"type":"CoreIRType"},"implicit"],
      "ternary":[{"width":"Int"},"implicit"],
      "triBuf":[{"width":"Int"},"implicit"],
      "unary":[{"width":"Int"},"implicit"],
      "unaryReduce":[{"width":"Int"},"implicit"],
      "wrapTypeFun":[{"type":"CoreIRType"},"implicit"]
    }
  },
  "float":{
    "generators":{
      "abs":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "acos":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "add":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "asin":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "atan":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "atan2":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "ceil":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "cos":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "div":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "eq":{
        "typegen":"float.binaryReduce",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "exp":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "flr":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "ge":{
        "typegen":"float.binaryReduce",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "gt":{
        "typegen":"float.binaryReduce",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "le":{
        "typegen":"float.binaryReduce",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "ln":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "lt":{
        "typegen":"float.binaryReduce",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "max":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "min":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "mul":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "mux":{
        "typegen":"float.muxType",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "neg":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "neq":{
        "typegen":"float.binaryReduce",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "power":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "rem":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "rnd":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "sin":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "sqr":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "sqrt":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "sub":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "tan":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "tanh":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      }
    },
    "typegens":{
      "binary":[{"exp_bits":"Int", "frac_bits":"Int"},"implicit"],
      "binaryReduce":[{"exp_bits":"Int", "frac_bits":"Int"},"implicit"],
      "muxType":[{"exp_bits":"Int", "frac_bits":"Int"},"implicit"],
      "unary":[{"exp_bits":"Int", "frac_bits":"Int"},"implicit"]
    }
  },
  "float_DW":{
    "generators":{
      "fp_add":{
        "typegen":"float_DW.binary",
        "genparams":{"exp_width":"Int", "ieee_compliance":"Bool", "sig_width":"Int"},
        "metadata":{"verilog":{"definition":"DW_fp_add #(.sig_width(sig_width), .exp_width(exp_width), .ieee_compliance(ieee_compliance)) add_inst (.a(a),.b(b),.rnd(rnd),.z(z),.status(status));","interface":["input [exp_width+sig_width:0] a","input [exp_width+sig_width:0] b","input [2:0] rnd","output [exp_width+sig_width:0] z","output [7:0] status"]}}
      },
      "fp_mul":{
        "typegen":"float_DW.binary",
        "genparams":{"exp_width":"Int", "ieee_compliance":"Bool", "sig_width":"Int"},
        "metadata":{"verilog":{"definition":"DW_fp_mult #(.sig_width(sig_width), .exp_width(exp_width), .ieee_compliance(ieee_compliance)) mul_inst (.a(a),.b(b),.rnd(rnd),.z(z),.status(status));","interface":["input [exp_width+sig_width:0] a","input [exp_width+sig_width:0] b","input [2:0] rnd","output [exp_width+sig_width:0] z","output [7:0] status"]}}
      }
    },
    "typegens":{
      "binary":[{"exp_width":"Int", "ieee_compliance":"Bool", "sig_width":"Int"},"implicit"]
    }
  },
  "global":{
    "modules":{
      "hcompute_blur_unnormalized_stencil":{
        "type":["Record",[
          ["out_blur_unnormalized_stencil",["Array",16,"Bit"]]
        ]],
        "instances":{
          "const_p0__963":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0000"]}
          }
        },
        "connections":[
          ["self.out_blur_unnormalized_stencil","const_p0__963.out"]
        ]
      },
      "hcompute_blur_unnormalized_stencil_1":{
        "type":["Record",[
          ["out_blur_unnormalized_stencil",["Array",16,"Bit"]],
          ["in0_blur_unnormalized_stencil",["Array",1,["Array",16,"BitIn"]]],
          ["in1_gray_stencil",["Array",45,["Array",16,"BitIn"]]]
        ]],
        "instances":{
          "add_gray_stencil_2_1141_1142_tree":{
            "genref":"commonlib.opn",
            "genargs":{"N":["Int",46], "operator":["String","coreir.add"], "width":["Int",16]}
          },
          "const_p12__1068":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h000c"]}
          },
          "const_p12__1068$1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h000c"]}
          },
          "const_p12__1068$2":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h000c"]}
          },
          "const_p12__1068$3":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h000c"]}
          },
          "const_p15__1070":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h000f"]}
          },
          "const_p15__1070$1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h000f"]}
          },
          "const_p15__1070$2":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h000f"]}
          },
          "const_p15__1070$3":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h000f"]}
          },
          "const_p18__1078":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0012"]}
          },
          "const_p2__1054":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0002"]}
          },
          "const_p2__1054$1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0002"]}
          },
          "const_p2__1054$10":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0002"]}
          },
          "const_p2__1054$11":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0002"]}
          },
          "const_p2__1054$2":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0002"]}
          },
          "const_p2__1054$3":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0002"]}
          },
          "const_p2__1054$4":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0002"]}
          },
          "const_p2__1054$5":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0002"]}
          },
          "const_p2__1054$6":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0002"]}
          },
          "const_p2__1054$7":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0002"]}
          },
          "const_p2__1054$8":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0002"]}
          },
          "const_p2__1054$9":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0002"]}
          },
          "const_p3__1058":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0003"]}
          },
          "const_p3__1058$1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0003"]}
          },
          "const_p3__1058$2":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0003"]}
          },
          "const_p3__1058$3":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0003"]}
          },
          "const_p6__1060":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0006"]}
          },
          "const_p6__1060$1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0006"]}
          },
          "const_p6__1060$2":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0006"]}
          },
          "const_p6__1060$3":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0006"]}
          },
          "const_p6__1060$4":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0006"]}
          },
          "const_p6__1060$5":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0006"]}
          },
          "const_p6__1060$6":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0006"]}
          },
          "const_p6__1060$7":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0006"]}
          },
          "const_p7__1062":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0007"]}
          },
          "const_p7__1062$1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0007"]}
          },
          "const_p7__1062$2":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0007"]}
          },
          "const_p7__1062$3":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0007"]}
          },
          "mul_gray_stencil_10_1062_1063":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_11_1060_1064":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_12_1058_1065":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_14_1054_1066":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_15_1060_1067":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_16_1068_1069":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_17_1070_1071":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_18_1068_1072":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_19_1060_1073":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_20_1054_1074":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_21_1054_1075":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_22_1062_1076":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_23_1070_1077":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_24_1078_1079":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_25_1070_1080":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_26_1062_1081":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_27_1054_1082":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_28_1054_1083":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_29_1060_1084":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_30_1068_1085":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_31_1070_1086":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_32_1068_1087":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_33_1060_1088":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_34_1054_1089":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_36_1058_1090":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_37_1060_1091":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_38_1062_1092":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_39_1060_1093":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_3_1054_1055":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_40_1058_1094":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_43_1054_1095":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_44_1054_1096":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_46_1054_1097":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_4_1054_1056":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_5_1054_1057":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_8_1058_1059":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_gray_stencil_9_1060_1061":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          }
        },
        "connections":[
          ["self.in1_gray_stencil.10","add_gray_stencil_2_1141_1142_tree.in.0"],
          ["mul_gray_stencil_11_1060_1064.out","add_gray_stencil_2_1141_1142_tree.in.10"],
          ["mul_gray_stencil_12_1058_1065.out","add_gray_stencil_2_1141_1142_tree.in.11"],
          ["self.in1_gray_stencil.3","add_gray_stencil_2_1141_1142_tree.in.12"],
          ["mul_gray_stencil_14_1054_1066.out","add_gray_stencil_2_1141_1142_tree.in.13"],
          ["mul_gray_stencil_15_1060_1067.out","add_gray_stencil_2_1141_1142_tree.in.14"],
          ["mul_gray_stencil_16_1068_1069.out","add_gray_stencil_2_1141_1142_tree.in.15"],
          ["mul_gray_stencil_17_1070_1071.out","add_gray_stencil_2_1141_1142_tree.in.16"],
          ["mul_gray_stencil_18_1068_1072.out","add_gray_stencil_2_1141_1142_tree.in.17"],
          ["mul_gray_stencil_19_1060_1073.out","add_gray_stencil_2_1141_1142_tree.in.18"],
          ["mul_gray_stencil_20_1054_1074.out","add_gray_stencil_2_1141_1142_tree.in.19"],
          ["self.in0_blur_unnormalized_stencil.0","add_gray_stencil_2_1141_1142_tree.in.1"],
          ["mul_gray_stencil_21_1054_1075.out","add_gray_stencil_2_1141_1142_tree.in.20"],
          ["mul_gray_stencil_22_1062_1076.out","add_gray_stencil_2_1141_1142_tree.in.21"],
          ["mul_gray_stencil_23_1070_1077.out","add_gray_stencil_2_1141_1142_tree.in.22"],
          ["mul_gray_stencil_24_1078_1079.out","add_gray_stencil_2_1141_1142_tree.in.23"],
          ["mul_gray_stencil_25_1070_1080.out","add_gray_stencil_2_1141_1142_tree.in.24"],
          ["mul_gray_stencil_26_1062_1081.out","add_gray_stencil_2_1141_1142_tree.in.25"],
          ["mul_gray_stencil_27_1054_1082.out","add_gray_stencil_2_1141_1142_tree.in.26"],
          ["mul_gray_stencil_28_1054_1083.out","add_gray_stencil_2_1141_1142_tree.in.27"],
          ["mul_gray_stencil_29_1060_1084.out","add_gray_stencil_2_1141_1142_tree.in.28"],
          ["mul_gray_stencil_30_1068_1085.out","add_gray_stencil_2_1141_1142_tree.in.29"],
          ["mul_gray_stencil_3_1054_1055.out","add_gray_stencil_2_1141_1142_tree.in.2"],
          ["mul_gray_stencil_31_1070_1086.out","add_gray_stencil_2_1141_1142_tree.in.30"],
          ["mul_gray_stencil_32_1068_1087.out","add_gray_stencil_2_1141_1142_tree.in.31"],
          ["mul_gray_stencil_33_1060_1088.out","add_gray_stencil_2_1141_1142_tree.in.32"],
          ["mul_gray_stencil_34_1054_1089.out","add_gray_stencil_2_1141_1142_tree.in.33"],
          ["self.in1_gray_stencil.27","add_gray_stencil_2_1141_1142_tree.in.34"],
          ["mul_gray_stencil_36_1058_1090.out","add_gray_stencil_2_1141_1142_tree.in.35"],
          ["mul_gray_stencil_37_1060_1091.out","add_gray_stencil_2_1141_1142_tree.in.36"],
          ["mul_gray_stencil_38_1062_1092.out","add_gray_stencil_2_1141_1142_tree.in.37"],
          ["mul_gray_stencil_39_1060_1093.out","add_gray_stencil_2_1141_1142_tree.in.38"],
          ["mul_gray_stencil_40_1058_1094.out","add_gray_stencil_2_1141_1142_tree.in.39"],
          ["mul_gray_stencil_4_1054_1056.out","add_gray_stencil_2_1141_1142_tree.in.3"],
          ["self.in1_gray_stencil.34","add_gray_stencil_2_1141_1142_tree.in.40"],
          ["self.in1_gray_stencil.35","add_gray_stencil_2_1141_1142_tree.in.41"],
          ["mul_gray_stencil_43_1054_1095.out","add_gray_stencil_2_1141_1142_tree.in.42"],
          ["mul_gray_stencil_44_1054_1096.out","add_gray_stencil_2_1141_1142_tree.in.43"],
          ["self.in1_gray_stencil.38","add_gray_stencil_2_1141_1142_tree.in.44"],
          ["mul_gray_stencil_46_1054_1097.out","add_gray_stencil_2_1141_1142_tree.in.45"],
          ["mul_gray_stencil_5_1054_1057.out","add_gray_stencil_2_1141_1142_tree.in.4"],
          ["self.in1_gray_stencil.41","add_gray_stencil_2_1141_1142_tree.in.5"],
          ["self.in1_gray_stencil.42","add_gray_stencil_2_1141_1142_tree.in.6"],
          ["mul_gray_stencil_8_1058_1059.out","add_gray_stencil_2_1141_1142_tree.in.7"],
          ["mul_gray_stencil_9_1060_1061.out","add_gray_stencil_2_1141_1142_tree.in.8"],
          ["mul_gray_stencil_10_1062_1063.out","add_gray_stencil_2_1141_1142_tree.in.9"],
          ["self.out_blur_unnormalized_stencil","add_gray_stencil_2_1141_1142_tree.out"],
          ["mul_gray_stencil_18_1068_1072.in1","const_p12__1068$1.out"],
          ["mul_gray_stencil_30_1068_1085.in1","const_p12__1068$2.out"],
          ["mul_gray_stencil_32_1068_1087.in1","const_p12__1068$3.out"],
          ["mul_gray_stencil_16_1068_1069.in1","const_p12__1068.out"],
          ["mul_gray_stencil_23_1070_1077.in1","const_p15__1070$1.out"],
          ["mul_gray_stencil_25_1070_1080.in1","const_p15__1070$2.out"],
          ["mul_gray_stencil_31_1070_1086.in1","const_p15__1070$3.out"],
          ["mul_gray_stencil_17_1070_1071.in1","const_p15__1070.out"],
          ["mul_gray_stencil_24_1078_1079.in1","const_p18__1078.out"],
          ["mul_gray_stencil_4_1054_1056.in1","const_p2__1054$1.out"],
          ["mul_gray_stencil_44_1054_1096.in1","const_p2__1054$10.out"],
          ["mul_gray_stencil_46_1054_1097.in1","const_p2__1054$11.out"],
          ["mul_gray_stencil_5_1054_1057.in1","const_p2__1054$2.out"],
          ["mul_gray_stencil_14_1054_1066.in1","const_p2__1054$3.out"],
          ["mul_gray_stencil_20_1054_1074.in1","const_p2__1054$4.out"],
          ["mul_gray_stencil_21_1054_1075.in1","const_p2__1054$5.out"],
          ["mul_gray_stencil_27_1054_1082.in1","const_p2__1054$6.out"],
          ["mul_gray_stencil_28_1054_1083.in1","const_p2__1054$7.out"],
          ["mul_gray_stencil_34_1054_1089.in1","const_p2__1054$8.out"],
          ["mul_gray_stencil_43_1054_1095.in1","const_p2__1054$9.out"],
          ["mul_gray_stencil_3_1054_1055.in1","const_p2__1054.out"],
          ["mul_gray_stencil_12_1058_1065.in1","const_p3__1058$1.out"],
          ["mul_gray_stencil_36_1058_1090.in1","const_p3__1058$2.out"],
          ["mul_gray_stencil_40_1058_1094.in1","const_p3__1058$3.out"],
          ["mul_gray_stencil_8_1058_1059.in1","const_p3__1058.out"],
          ["mul_gray_stencil_11_1060_1064.in1","const_p6__1060$1.out"],
          ["mul_gray_stencil_15_1060_1067.in1","const_p6__1060$2.out"],
          ["mul_gray_stencil_19_1060_1073.in1","const_p6__1060$3.out"],
          ["mul_gray_stencil_29_1060_1084.in1","const_p6__1060$4.out"],
          ["mul_gray_stencil_33_1060_1088.in1","const_p6__1060$5.out"],
          ["mul_gray_stencil_37_1060_1091.in1","const_p6__1060$6.out"],
          ["mul_gray_stencil_39_1060_1093.in1","const_p6__1060$7.out"],
          ["mul_gray_stencil_9_1060_1061.in1","const_p6__1060.out"],
          ["mul_gray_stencil_22_1062_1076.in1","const_p7__1062$1.out"],
          ["mul_gray_stencil_26_1062_1081.in1","const_p7__1062$2.out"],
          ["mul_gray_stencil_38_1062_1092.in1","const_p7__1062$3.out"],
          ["mul_gray_stencil_10_1062_1063.in1","const_p7__1062.out"],
          ["self.in1_gray_stencil.0","mul_gray_stencil_10_1062_1063.in0"],
          ["self.in1_gray_stencil.1","mul_gray_stencil_11_1060_1064.in0"],
          ["self.in1_gray_stencil.2","mul_gray_stencil_12_1058_1065.in0"],
          ["self.in1_gray_stencil.4","mul_gray_stencil_14_1054_1066.in0"],
          ["self.in1_gray_stencil.5","mul_gray_stencil_15_1060_1067.in0"],
          ["self.in1_gray_stencil.6","mul_gray_stencil_16_1068_1069.in0"],
          ["self.in1_gray_stencil.7","mul_gray_stencil_17_1070_1071.in0"],
          ["self.in1_gray_stencil.8","mul_gray_stencil_18_1068_1072.in0"],
          ["self.in1_gray_stencil.9","mul_gray_stencil_19_1060_1073.in0"],
          ["self.in1_gray_stencil.11","mul_gray_stencil_20_1054_1074.in0"],
          ["self.in1_gray_stencil.12","mul_gray_stencil_21_1054_1075.in0"],
          ["self.in1_gray_stencil.13","mul_gray_stencil_22_1062_1076.in0"],
          ["self.in1_gray_stencil.14","mul_gray_stencil_23_1070_1077.in0"],
          ["self.in1_gray_stencil.15","mul_gray_stencil_24_1078_1079.in0"],
          ["self.in1_gray_stencil.16","mul_gray_stencil_25_1070_1080.in0"],
          ["self.in1_gray_stencil.17","mul_gray_stencil_26_1062_1081.in0"],
          ["self.in1_gray_stencil.18","mul_gray_stencil_27_1054_1082.in0"],
          ["self.in1_gray_stencil.19","mul_gray_stencil_28_1054_1083.in0"],
          ["self.in1_gray_stencil.20","mul_gray_stencil_29_1060_1084.in0"],
          ["self.in1_gray_stencil.22","mul_gray_stencil_30_1068_1085.in0"],
          ["self.in1_gray_stencil.23","mul_gray_stencil_31_1070_1086.in0"],
          ["self.in1_gray_stencil.24","mul_gray_stencil_32_1068_1087.in0"],
          ["self.in1_gray_stencil.25","mul_gray_stencil_33_1060_1088.in0"],
          ["self.in1_gray_stencil.26","mul_gray_stencil_34_1054_1089.in0"],
          ["self.in1_gray_stencil.28","mul_gray_stencil_36_1058_1090.in0"],
          ["self.in1_gray_stencil.29","mul_gray_stencil_37_1060_1091.in0"],
          ["self.in1_gray_stencil.30","mul_gray_stencil_38_1062_1092.in0"],
          ["self.in1_gray_stencil.31","mul_gray_stencil_39_1060_1093.in0"],
          ["self.in1_gray_stencil.21","mul_gray_stencil_3_1054_1055.in0"],
          ["self.in1_gray_stencil.33","mul_gray_stencil_40_1058_1094.in0"],
          ["self.in1_gray_stencil.36","mul_gray_stencil_43_1054_1095.in0"],
          ["self.in1_gray_stencil.37","mul_gray_stencil_44_1054_1096.in0"],
          ["self.in1_gray_stencil.39","mul_gray_stencil_46_1054_1097.in0"],
          ["self.in1_gray_stencil.32","mul_gray_stencil_4_1054_1056.in0"],
          ["self.in1_gray_stencil.40","mul_gray_stencil_5_1054_1057.in0"],
          ["self.in1_gray_stencil.43","mul_gray_stencil_8_1058_1059.in0"],
          ["self.in1_gray_stencil.44","mul_gray_stencil_9_1060_1061.in0"]
        ]
      },
      "hcompute_gray_stencil":{
        "type":["Record",[
          ["out_gray_stencil",["Array",16,"Bit"]],
          ["in0_hw_input_global_wrapper_stencil",["Array",3,["Array",16,"BitIn"]]]
        ]],
        "instances":{
          "add_410_415_416_tree":{
            "genref":"commonlib.opn",
            "genargs":{"N":["Int",3], "operator":["String","coreir.add"], "width":["Int",16]}
          },
          "const_p150__409":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0096"]}
          },
          "const_p29__411":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h001d"]}
          },
          "const_p77__413":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h004d"]}
          },
          "const_p8__417":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0008"]}
          },
          "lshr_416_417_418":{
            "genref":"coreir.lshr",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_1_409_410":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_2_411_412":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_3_413_414":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          }
        },
        "connections":[
          ["mul_hw_input_global_wrapper_stencil_1_409_410.out","add_410_415_416_tree.in.0"],
          ["mul_hw_input_global_wrapper_stencil_2_411_412.out","add_410_415_416_tree.in.1"],
          ["mul_hw_input_global_wrapper_stencil_3_413_414.out","add_410_415_416_tree.in.2"],
          ["lshr_416_417_418.in0","add_410_415_416_tree.out"],
          ["mul_hw_input_global_wrapper_stencil_1_409_410.in1","const_p150__409.out"],
          ["mul_hw_input_global_wrapper_stencil_2_411_412.in1","const_p29__411.out"],
          ["mul_hw_input_global_wrapper_stencil_3_413_414.in1","const_p77__413.out"],
          ["lshr_416_417_418.in1","const_p8__417.out"],
          ["self.out_gray_stencil","lshr_416_417_418.out"],
          ["self.in0_hw_input_global_wrapper_stencil.0","mul_hw_input_global_wrapper_stencil_1_409_410.in0"],
          ["self.in0_hw_input_global_wrapper_stencil.1","mul_hw_input_global_wrapper_stencil_2_411_412.in0"],
          ["self.in0_hw_input_global_wrapper_stencil.2","mul_hw_input_global_wrapper_stencil_3_413_414.in0"]
        ]
      },
      "hcompute_hw_input_global_wrapper_stencil":{
        "type":["Record",[
          ["out_hw_input_global_wrapper_stencil",["Array",16,"Bit"]],
          ["in0_hw_input_stencil",["Array",1,["Array",16,"BitIn"]]]
        ]],
        "connections":[
          ["self.out_hw_input_global_wrapper_stencil","self.in0_hw_input_stencil.0"]
        ]
      },
      "hcompute_hw_input_global_wrapper_stencil_1":{
        "type":["Record",[
          ["out_hw_input_global_wrapper_stencil",["Array",16,"Bit"]],
          ["in0_hw_input_stencil",["Array",1,["Array",16,"BitIn"]]]
        ]],
        "connections":[
          ["self.out_hw_input_global_wrapper_stencil","self.in0_hw_input_stencil.0"]
        ]
      },
      "hcompute_hw_input_global_wrapper_stencil_2":{
        "type":["Record",[
          ["out_hw_input_global_wrapper_stencil",["Array",16,"Bit"]],
          ["in0_hw_input_stencil",["Array",1,["Array",16,"BitIn"]]]
        ]],
        "connections":[
          ["self.out_hw_input_global_wrapper_stencil","self.in0_hw_input_stencil.0"]
        ]
      },
      "hcompute_hw_output_stencil":{
        "type":["Record",[
          ["out_hw_output_stencil",["Array",16,"Bit"]],
          ["in0_hw_input_global_wrapper_stencil",["Array",1,["Array",16,"BitIn"]]],
          ["in1_ratio_stencil",["Array",1,["Array",16,"BitIn"]]]
        ]],
        "instances":{
          "mult_middle_1343_1344_1345":{
            "genref":"commonlib.mult_middle",
            "genargs":{"width":["Int",16]}
          }
        },
        "connections":[
          ["self.in1_ratio_stencil.0","mult_middle_1343_1344_1345.in0"],
          ["self.in0_hw_input_global_wrapper_stencil.0","mult_middle_1343_1344_1345.in1"],
          ["self.out_hw_output_stencil","mult_middle_1343_1344_1345.out"]
        ]
      },
      "hcompute_hw_output_stencil_1":{
        "type":["Record",[
          ["out_hw_output_stencil",["Array",16,"Bit"]],
          ["in0_hw_input_global_wrapper_stencil",["Array",1,["Array",16,"BitIn"]]],
          ["in1_ratio_stencil",["Array",1,["Array",16,"BitIn"]]]
        ]],
        "instances":{
          "mult_middle_1360_1361_1362":{
            "genref":"commonlib.mult_middle",
            "genargs":{"width":["Int",16]}
          }
        },
        "connections":[
          ["self.in1_ratio_stencil.0","mult_middle_1360_1361_1362.in0"],
          ["self.in0_hw_input_global_wrapper_stencil.0","mult_middle_1360_1361_1362.in1"],
          ["self.out_hw_output_stencil","mult_middle_1360_1361_1362.out"]
        ]
      },
      "hcompute_hw_output_stencil_2":{
        "type":["Record",[
          ["out_hw_output_stencil",["Array",16,"Bit"]],
          ["in0_hw_input_global_wrapper_stencil",["Array",1,["Array",16,"BitIn"]]],
          ["in1_ratio_stencil",["Array",1,["Array",16,"BitIn"]]]
        ]],
        "instances":{
          "mult_middle_1377_1378_1379":{
            "genref":"commonlib.mult_middle",
            "genargs":{"width":["Int",16]}
          }
        },
        "connections":[
          ["self.in1_ratio_stencil.0","mult_middle_1377_1378_1379.in0"],
          ["self.in0_hw_input_global_wrapper_stencil.0","mult_middle_1377_1378_1379.in1"],
          ["self.out_hw_output_stencil","mult_middle_1377_1378_1379.out"]
        ]
      },
      "hcompute_ratio_stencil":{
        "type":["Record",[
          ["out_ratio_stencil",["Array",16,"Bit"]],
          ["in0_reciprocal_stencil",["Array",1,["Array",16,"BitIn"]]],
          ["in1_sharpen_stencil",["Array",1,["Array",16,"BitIn"]]]
        ]],
        "instances":{
          "mul_sharpen_stencil_1_reciprocal_stencil_1_1334":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          }
        },
        "connections":[
          ["self.in1_sharpen_stencil.0","mul_sharpen_stencil_1_reciprocal_stencil_1_1334.in0"],
          ["self.in0_reciprocal_stencil.0","mul_sharpen_stencil_1_reciprocal_stencil_1_1334.in1"],
          ["self.out_ratio_stencil","mul_sharpen_stencil_1_reciprocal_stencil_1_1334.out"]
        ]
      },
      "hcompute_reciprocal_stencil":{
        "type":["Record",[
          ["out_reciprocal_stencil",["Array",16,"Bit"]],
          ["in0_gray_stencil",["Array",1,["Array",16,"BitIn"]]]
        ]],
        "instances":{
          "add_951n1_952":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",16]}
          },
          "const_n1_n1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'hffff"]}
          },
          "const_p1__949":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0001"]}
          },
          "rom_rom_div_lookupa0":{
            "genref":"memory.rom2",
            "genargs":{"depth":["Int",256], "width":["Int",16]},
            "modargs":{"init":["Json",[256,128,85,64,51,42,36,32,28,25,23,21,19,18,17,16,15,14,13,12,12,11,11,10,10,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,153]]}
          },
          "rom_rom_div_lookupa0_ren":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "umax_gray_stencil_1_949_950":{
            "genref":"commonlib.umax",
            "genargs":{"width":["Int",16]}
          }
        },
        "connections":[
          ["umax_gray_stencil_1_949_950.out","add_951n1_952.in0"],
          ["const_n1_n1.out","add_951n1_952.in1"],
          ["rom_rom_div_lookupa0.raddr","add_951n1_952.out"],
          ["umax_gray_stencil_1_949_950.in1","const_p1__949.out"],
          ["self.out_reciprocal_stencil","rom_rom_div_lookupa0.rdata"],
          ["rom_rom_div_lookupa0_ren.out","rom_rom_div_lookupa0.ren"],
          ["umax_gray_stencil_1_949_950.in0","self.in0_gray_stencil.0"]
        ]
      },
      "hcompute_sharpen_stencil":{
        "type":["Record",[
          ["out_sharpen_stencil",["Array",16,"Bit"]],
          ["in0_blur_unnormalized_stencil",["Array",1,["Array",16,"BitIn"]]],
          ["in1_gray_stencil",["Array",1,["Array",16,"BitIn"]]]
        ]],
        "instances":{
          "const_p0__1313":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0000"]}
          },
          "const_p255__1311":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h00ff"]}
          },
          "const_p2__1304":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0002"]}
          },
          "const_p8__1306$1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0008"]}
          },
          "lshr_blur_unnormalized_stencil_2_1306_1307":{
            "genref":"coreir.lshr",
            "genargs":{"width":["Int",16]}
          },
          "mul_1303_1304_1305":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "smax_1312_1313_1314":{
            "genref":"commonlib.smax",
            "genargs":{"width":["Int",16]}
          },
          "smin_1310_1311_1312":{
            "genref":"commonlib.smin",
            "genargs":{"width":["Int",16]}
          },
          "sub_1305_1309_1310":{
            "genref":"coreir.sub",
            "genargs":{"width":["Int",16]}
          }
        },
        "connections":[
          ["smax_1312_1313_1314.in1","const_p0__1313.out"],
          ["smin_1310_1311_1312.in1","const_p255__1311.out"],
          ["mul_1303_1304_1305.in1","const_p2__1304.out"],
          ["lshr_blur_unnormalized_stencil_2_1306_1307.in1","const_p8__1306$1.out"],
          ["self.in0_blur_unnormalized_stencil.0","lshr_blur_unnormalized_stencil_2_1306_1307.in0"],
          ["sub_1305_1309_1310.in1","lshr_blur_unnormalized_stencil_2_1306_1307.out"],
          ["self.in1_gray_stencil.0","mul_1303_1304_1305.in0"],
          ["sub_1305_1309_1310.in0","mul_1303_1304_1305.out"],
          ["smax_1312_1313_1314.out","self.out_sharpen_stencil"],
          ["smin_1310_1311_1312.out","smax_1312_1313_1314.in0"],
          ["sub_1305_1309_1310.out","smin_1310_1311_1312.in0"]
        ]
      }
    }
  },
  "lakelib":{
    "generators":{
      "FifoMem":{
        "typegen":"lakelib.FifoMemType",
        "genparams":{"depth":"Int", "width":"Int"},
        "defaultgenargs":{"depth":["Int",1024], "width":["Int",16]}
      },
      "LinebufferMem":{
        "typegen":"lakelib.LinebufferMemType",
        "genparams":{"depth":"Int", "width":"Int"},
        "defaultgenargs":{"depth":["Int",1024], "width":["Int",16]}
      },
      "Ram":{
        "typegen":"lakelib.RamType",
        "genparams":{"depth":"Int", "width":"Int"}
      },
      "abstract_unified_buffer":{
        "typegen":"lakelib.abstract_unified_buffer_type",
        "genparams":{"capacity":"CoreIRType", "dim_ref":"CoreIRType", "input_ports":"CoreIRType", "output_ports":"CoreIRType", "range":"CoreIRType", "stride":"CoreIRType"}
      },
      "linebuffer":{
        "typegen":"lakelib.lb_type",
        "genparams":{"has_stencil_valid":"Bool", "has_valid":"Bool", "image_type":"CoreIRType", "input_type":"CoreIRType", "output_type":"CoreIRType"},
        "defaultgenargs":{"has_stencil_valid":["Bool",false], "has_valid":["Bool",false]}
      },
      "linebuffer_recursive":{
        "typegen":"lakelib.lb_recursive_type",
        "genparams":{"has_stencil_valid":"Bool", "has_valid":"Bool", "image_type":"CoreIRType", "input_type":"CoreIRType", "is_last_lb":"Bool", "output_type":"CoreIRType"}
      },
      "new_unified_buffer":{
        "typegen":"lakelib.new_unified_buffer_type",
        "genparams":{"chain_en":"Bool", "chain_idx":"Int", "init":"Json", "istreams":"Json", "logical_size":"Json", "ostreams":"Json", "width":"Int"},
        "defaultgenargs":{"init":["Json",{"init":[0]}], "istreams":["Json",{"input0":{"input_block":[1],"input_chunk":[1],"input_range":[1],"input_starting_addrs":[0],"input_stride":[0],"num_input_ports":[1]}}], "ostreams":["Json",{"output0":{"iter_cnt":1,"num_output_ports":1,"num_stencil_acc_dim":[0],"output_block":[1],"output_range":[1],"output_starting_addrs":[0],"output_stencil":[1],"output_stride":[1],"stencil_width":[1]}}]}
      },
      "unified_buffer":{
        "typegen":"lakelib.unified_buffer_type",
        "genparams":{"chain_en":"Bool", "chain_idx":"Int", "depth":"Int", "dimensionality":"Int", "init":"Json", "input_chunk":"Json", "input_range_0":"Int", "input_range_1":"Int", "input_range_2":"Int", "input_range_3":"Int", "input_range_4":"Int", "input_range_5":"Int", "input_starting_addrs":"Json", "input_stride_0":"Int", "input_stride_1":"Int", "input_stride_2":"Int", "input_stride_3":"Int", "input_stride_4":"Int", "input_stride_5":"Int", "iter_cnt":"Int", "logical_size":"Json", "num_input_ports":"Int", "num_output_ports":"Int", "num_reduction_iter":"Int", "num_stencil_acc_dim":"Int", "output_starting_addrs":"Json", "output_stencil":"Json", "range_0":"Int", "range_1":"Int", "range_2":"Int", "range_3":"Int", "range_4":"Int", "range_5":"Int", "rate_matched":"Bool", "stencil_width":"Int", "stride_0":"Int", "stride_1":"Int", "stride_2":"Int", "stride_3":"Int", "stride_4":"Int", "stride_5":"Int", "width":"Int"},
        "defaultgenargs":{"init":["Json",{"init":[0]}], "input_chunk":["Json",{"input_chunk":[1]}], "input_range_0":["Int",1], "input_range_1":["Int",0], "input_range_2":["Int",0], "input_range_3":["Int",0], "input_range_4":["Int",0], "input_range_5":["Int",0], "input_starting_addrs":["Json",{"input_start":[0]}], "input_stride_0":["Int",0], "input_stride_1":["Int",0], "input_stride_2":["Int",0], "input_stride_3":["Int",0], "input_stride_4":["Int",0], "input_stride_5":["Int",0], "num_input_ports":["Int",1], "num_output_ports":["Int",1], "num_reduction_iter":["Int",1], "num_stencil_acc_dim":["Int",0], "output_starting_addrs":["Json",{"output_start":[0],"output_stencil":[1]}], "output_stencil":["Json",null], "range_0":["Int",1], "range_1":["Int",0], "range_2":["Int",0], "range_3":["Int",0], "range_4":["Int",0], "range_5":["Int",0], "stride_0":["Int",1], "stride_1":["Int",0], "stride_2":["Int",0], "stride_3":["Int",0], "stride_4":["Int",0], "stride_5":["Int",0]}
      }
    },
    "typegens":{
      "FifoMemType":[{"depth":"Int", "width":"Int"},"implicit"],
      "LinebufferMemType":[{"depth":"Int", "width":"Int"},"implicit"],
      "RamType":[{"depth":"Int", "width":"Int"},"implicit"],
      "abstract_unified_buffer_type":[{"capacity":"CoreIRType", "dim_ref":"CoreIRType", "input_ports":"CoreIRType", "output_ports":"CoreIRType", "range":"CoreIRType", "stride":"CoreIRType"},"implicit"],
      "lb_recursive_type":[{"has_stencil_valid":"Bool", "has_valid":"Bool", "image_type":"CoreIRType", "input_type":"CoreIRType", "is_last_lb":"Bool", "output_type":"CoreIRType"},"implicit"],
      "lb_type":[{"has_stencil_valid":"Bool", "has_valid":"Bool", "image_type":"CoreIRType", "input_type":"CoreIRType", "output_type":"CoreIRType"},"implicit"],
      "new_unified_buffer_type":[{"chain_en":"Bool", "chain_idx":"Int", "init":"Json", "istreams":"Json", "logical_size":"Json", "ostreams":"Json", "width":"Int"},"implicit"],
      "unified_buffer_type":[{"chain_en":"Bool", "chain_idx":"Int", "depth":"Int", "dimensionality":"Int", "init":"Json", "input_chunk":"Json", "input_range_0":"Int", "input_range_1":"Int", "input_range_2":"Int", "input_range_3":"Int", "input_range_4":"Int", "input_range_5":"Int", "input_starting_addrs":"Json", "input_stride_0":"Int", "input_stride_1":"Int", "input_stride_2":"Int", "input_stride_3":"Int", "input_stride_4":"Int", "input_stride_5":"Int", "iter_cnt":"Int", "logical_size":"Json", "num_input_ports":"Int", "num_output_ports":"Int", "num_reduction_iter":"Int", "num_stencil_acc_dim":"Int", "output_starting_addrs":"Json", "output_stencil":"Json", "range_0":"Int", "range_1":"Int", "range_2":"Int", "range_3":"Int", "range_4":"Int", "range_5":"Int", "rate_matched":"Bool", "stencil_width":"Int", "stride_0":"Int", "stride_1":"Int", "stride_2":"Int", "stride_3":"Int", "stride_4":"Int", "stride_5":"Int", "width":"Int"},"implicit"]
    }
  },
  "mantle":{
    "generators":{
      "add":{
        "typegen":"mantle.addType",
        "genparams":{"has_cin":"Bool", "has_cout":"Bool", "width":"Int"},
        "defaultgenargs":{"has_cin":["Bool",false], "has_cout":["Bool",false]}
      },
      "counter":{
        "typegen":"mantle.counter_type",
        "genparams":{"has_en":"Bool", "has_max":"Bool", "has_srst":"Bool", "width":"Int"},
        "defaultgenargs":{"has_en":["Bool",false], "has_max":["Bool",false], "has_srst":["Bool",false]}
      },
      "reg":{
        "typegen":"mantle.regType",
        "genparams":{"has_clr":"Bool", "has_en":"Bool", "has_rst":"Bool", "width":"Int"},
        "defaultgenargs":{"has_clr":["Bool",false], "has_en":["Bool",false], "has_rst":["Bool",false]}
      },
      "regCE":{
        "typegen":"mantle.regCEType",
        "genparams":{"width":"Int"},
        "metadata":{"verilog":{"definition":"  reg [width-1:0] value;\n  always @(posedge clk) begin\n    if (ce) begin\n      value <= in;\n    end\n  end\n  assign out = value;","interface":["input [width-1:0] in","input ce","output [width-1:0] out","input clk"]}}
      },
      "regCE_arst":{
        "typegen":"mantle.regCEArstType",
        "genparams":{"width":"Int"},
        "metadata":{"verilog":{"definition":"  reg [width-1:0] value;\n  always @(posedge clk, posedge arst) begin\n    if (arst) begin\n      value <= init;\n    end\n    else if (ce) begin\n      value <= in;\n    end\n  end\n  assign out = value;","interface":["input [width-1:0] in","input ce","output [width-1:0] out","input clk","input arst"],"parameters":["init"]}}
      },
      "sub":{
        "typegen":"mantle.addType",
        "genparams":{"has_cin":"Bool", "has_cout":"Bool", "width":"Int"},
        "defaultgenargs":{"has_cin":["Bool",false], "has_cout":["Bool",false]}
      },
      "wire":{
        "typegen":"mantle.wire",
        "genparams":{"type":"CoreIRType"}
      }
    },
    "typegens":{
      "addType":[{"has_cin":"Bool", "has_cout":"Bool", "width":"Int"},"implicit"],
      "counter_type":[{"has_en":"Bool", "has_max":"Bool", "has_srst":"Bool", "width":"Int"},"implicit"],
      "regCEArstType":[{"width":"Int"},"implicit"],
      "regCEType":[{"width":"Int"},"implicit"],
      "regType":[{"has_clr":"Bool", "has_en":"Bool", "has_rst":"Bool", "width":"Int"},"implicit"],
      "wire":[{"type":"CoreIRType"},"implicit"]
    }
  },
  "memory":{
    "generators":{
      "fifo":{
        "typegen":"memory.FifoMemType",
        "genparams":{"depth":"Int", "width":"Int"},
        "defaultgenargs":{"depth":["Int",1024], "width":["Int",16]}
      },
      "ram":{
        "typegen":"memory.RamType",
        "genparams":{"depth":"Int", "width":"Int"}
      },
      "ram2":{
        "typegen":"memory.RamType2",
        "genparams":{"depth":"Int", "width":"Int"}
      },
      "rom":{
        "typegen":"memory.RomType",
        "genparams":{"depth":"Int", "width":"Int"}
      },
      "rom2":{
        "typegen":"memory.Rom2Type",
        "genparams":{"depth":"Int", "width":"Int"},
        "modules":[
          [{"depth":["Int",256], "width":["Int",16]},{
              "type":["Record",[
                ["clk",["Named","coreir.clkIn"]],
                ["rdata",["Array",16,"Bit"]],
                ["raddr",["Array",16,"BitIn"]],
                ["ren","BitIn"]
              ]],
              "modparams":{"init":"Json"}
            }]
        ]
      },
      "rowbuffer":{
        "typegen":"memory.rowbufferType",
        "genparams":{"depth":"Int", "width":"Int"}
      },
      "rowbuffer_stencil_valid":{
        "typegen":"memory.rowbufferWithStencilValidType",
        "genparams":{"depth":"Int", "stencil_width":"Int", "width":"Int"}
      },
      "sync_read_mem":{
        "typegen":"memory.syncReadMemType",
        "genparams":{"depth":"Int", "has_init":"Bool", "width":"Int"},
        "defaultgenargs":{"has_init":["Bool",false]}
      }
    },
    "typegens":{
      "FifoMemType":[{"depth":"Int", "width":"Int"},"implicit"],
      "RamType":[{"depth":"Int", "width":"Int"},"implicit"],
      "RamType2":[{"depth":"Int", "width":"Int"},"implicit"],
      "Rom2Type":[{"depth":"Int", "width":"Int"},"sparse",[
        [{"depth":["Int",256], "width":["Int",16]},["Record",[["clk",["Named","coreir.clkIn"]],["rdata",["Array",16,"Bit"]],["raddr",["Array",16,"BitIn"]],["ren","BitIn"]]]]
      ]],
      "RomType":[{"depth":"Int", "width":"Int"},"implicit"],
      "rowbufferType":[{"depth":"Int", "width":"Int"},"implicit"],
      "rowbufferWithStencilValidType":[{"depth":"Int", "stencil_width":"Int", "width":"Int"},"implicit"],
      "syncReadMemType":[{"depth":"Int", "has_init":"Bool", "width":"Int"},"implicit"]
    }
  }
}
}
