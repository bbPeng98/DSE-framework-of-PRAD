program: conv_2_2
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 63; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 63; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil[conv_s0_y, conv_s0_x] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 63; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 63; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y, conv_s1_x] = hcompute_conv_stencil_1(conv_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 1), conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 1)])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 63; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 63; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
Is rate matchable
reduced kernel : conv_stencil
insert kernel: conv_s0_y to producer buffer: conv_stencil
insert kernel: conv_s1_y to producer buffer: conv_stencil
insert kernel: hw_input_global_wrapper_s0_y to producer buffer: hw_input_global_wrapper_stencil
insert kernel: hw_output_s0_y_yi to producer buffer: hw_output_stencil
Producer kernels...
  conv_stencil -> conv_s0_y conv_s1_y 
    MULTIPLE PRODUCERS
  hw_input_global_wrapper_stencil -> hw_input_global_wrapper_s0_y 
  hw_output_stencil -> hw_output_s0_y_yi 
conv_stencil has 2 producers
  conv_s0_y
  conv_s1_y
program: conv_2_2
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 63; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 63; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil[conv_s0_y, conv_s0_x] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 63; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 63; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y, conv_s1_x] = hcompute_conv_stencil_1(conv_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 1), conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 1)])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 63; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 63; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
conv_stencil has 2 producers
  conv_s0_y
  conv_s1_y
program: conv_2_2
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 63; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 63; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil[conv_s0_y, conv_s0_x] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 63; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 63; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y, conv_s1_x] = hcompute_conv_stencil_1(conv_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 1), conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 1)])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 63; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 63; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
Multi-write buffers
  conv_stencil
Built initializer / update maps
  # multi_write buffers = 1
program: conv_2_2
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 63; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 63; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 63; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 63; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y, conv_s1_x] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 1), conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 1)])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 63; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 63; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
Unoptimized schedule...
  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
{
  for (int c3 = 0; c3 <= 63; c3 += 1)
    for (int c5 = 0; c5 <= 63; c5 += 1)
      op_hcompute_hw_input_global_wrapper_stencil(0, c3, c5);
  for (int c3 = 0; c3 <= 62; c3 += 1)
    for (int c5 = 0; c5 <= 62; c5 += 1)
      op_hcompute_conv_stencil(0, c3, c5);
  for (int c3 = 0; c3 <= 62; c3 += 1)
    for (int c5 = 0; c5 <= 62; c5 += 1)
      op_hcompute_conv_stencil_1(0, c3, c5);
  for (int c3 = 0; c3 <= 62; c3 += 1)
    for (int c5 = 0; c5 <= 62; c5 += 1)
      op_hcompute_hw_output_stencil(0, c3, c5);
}
Creating ports for op: hw_output_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] }
	Adding output port: hw_output_stencil_op_hcompute_hw_output_stencil_0
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
current out port name: 
	hw_output_stencil_op_hcompute_hw_output_stencil_0
Creating ports for op: conv_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] }
	Adding output port: conv_stencil_op_hcompute_hw_output_stencil_1
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
SDom     : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom ITS  : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Per group...
  dspace_id       = op_hcompute_hw_output_stencil
  other_dspace_id = op_hcompute_hw_output_stencil
  Schedule domain set: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
  Domain set from prg: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
  ITS: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
ITS      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
current out port name: 
	conv_stencil_op_hcompute_hw_output_stencil_1
Creating ports for op: hw_input_global_wrapper_stencil
cond = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
		Consumed: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Creating ports for op: hw_input_stencil
cond = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
	Adding output port: hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_3
		Consumed: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom      : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
SDom     : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom ITS  : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Per group...
  dspace_id       = op_hcompute_hw_input_global_wrapper_stencil
  other_dspace_id = op_hcompute_hw_input_global_wrapper_stencil
  Schedule domain set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  Domain set from prg: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  ITS: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
ITS      : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
current out port name: 
	hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_3
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] }
	Adding output port: conv_stencil_op_hcompute_conv_stencil_1_4
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
current out port name: 
	conv_stencil_op_hcompute_conv_stencil_1_4
Creating ports for op: conv_stencil_clkwrk_dsa0
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x] }
	Adding output port: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
SDom     : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
current out port name: 
	conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
SDom     : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 1), conv_s1_x] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
SDom     : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 1)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [0, 0, 1, conv_s0_y, 0, conv_s0_x, 0] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [0, 0, 3, hw_output_s0_y_yi, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
SDom     : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [0, 0, 2, conv_s1_y, 0, conv_s1_x, 0] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
cond = { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] }
	Adding output port: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9
		Consumed: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
current out port name: 
	conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9
generating banks for buffer: conv_stencil
getting rddom
rddom = { conv_stencil[i0, i1] : 0 <= i0 <= 62 and 0 <= i1 <= 62 }
Adding bank between conv_stencil_op_hcompute_conv_stencil_1_4 and conv_stencil_op_hcompute_hw_output_stencil_1
Done generating register-file style banks for conv_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: conv_stencil_all_inputs_to_all_outputs
	input: 
    conv_stencil_op_hcompute_conv_stencil_1_4
	 output: 
    conv_stencil_op_hcompute_hw_output_stencil_1
extracting box from { conv_stencil[i0, i1] : 0 <= i0 <= 62 and 0 <= i1 <= 62 }
extracting box from { conv_stencil[i0, i1] : 0 <= i0 <= 62 and 0 <= i1 <= 62 }
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(62 - conv_s1_y)] }
cg = (((62 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(62 - conv_s1_x)] }
cg = (((62 + -1*conv_s1_x)) >= 0)
Input port:conv_stencil_op_hcompute_conv_stencil_1_4, Get ram string: (((1*conv_s1_y)) - 0) * 1 + (((1*conv_s1_x)) - 0) * 63
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(hw_output_s0_y_yi)] }
cg = (((1*hw_output_s0_y_yi)) >= 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(62 - hw_output_s0_y_yi)] }
cg = (((62 + -1*hw_output_s0_y_yi)) >= 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
cg = (((1*hw_output_s0_x_xi)) >= 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(62 - hw_output_s0_x_xi)] }
cg = (((62 + -1*hw_output_s0_x_xi)) >= 0)
generating banks for buffer: conv_stencil_clkwrk_dsa0
getting rddom
rddom = { conv_stencil_clkwrk_dsa0[i0, i1] : 0 <= i0 <= 62 and 0 <= i1 <= 62 }
Adding bank between conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9 and conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
Done generating register-file style banks for conv_stencil_clkwrk_dsa0, bank list size = 1
  after banking there are 1 banks
  Bank name: conv_stencil_clkwrk_dsa0_all_inputs_to_all_outputs
	input: 
    conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9
	 output: 
    conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
extracting box from { conv_stencil_clkwrk_dsa0[i0, i1] : 0 <= i0 <= 62 and 0 <= i1 <= 62 }
extracting box from { conv_stencil_clkwrk_dsa0[i0, i1] : 0 <= i0 <= 62 and 0 <= i1 <= 62 }
Constraint aff with div: { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [(conv_s0_y)] }
cg = (((1*conv_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [(62 - conv_s0_y)] }
cg = (((62 + -1*conv_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [(conv_s0_x)] }
cg = (((1*conv_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [(62 - conv_s0_x)] }
cg = (((62 + -1*conv_s0_x)) >= 0)
Input port:conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9, Get ram string: (((1*conv_s0_y)) - 0) * 1 + (((1*conv_s0_x)) - 0) * 63
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(62 - conv_s1_y)] }
cg = (((62 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(62 - conv_s1_x)] }
cg = (((62 + -1*conv_s1_x)) >= 0)
generating banks for buffer: hw_input_global_wrapper_stencil
getting rddom
rddom = { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
Done generating register-file style banks for hw_input_global_wrapper_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: hw_input_global_wrapper_stencil_all_inputs_to_all_outputs
	input: 
    hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	 output: 
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
    hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
extracting box from { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
extracting box from { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_y)] }
cg = (((1*hw_input_global_wrapper_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(63 - hw_input_global_wrapper_s0_y)] }
cg = (((63 + -1*hw_input_global_wrapper_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_x)] }
cg = (((1*hw_input_global_wrapper_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(63 - hw_input_global_wrapper_s0_x)] }
cg = (((63 + -1*hw_input_global_wrapper_s0_x)) >= 0)
Input port:hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2, Get ram string: (((1*hw_input_global_wrapper_s0_y)) - 0) * 1 + (((1*hw_input_global_wrapper_s0_x)) - 0) * 64
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(62 - conv_s1_y)] }
cg = (((62 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(62 - conv_s1_x)] }
cg = (((62 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(62 - conv_s1_y)] }
cg = (((62 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(62 - conv_s1_x)] }
cg = (((62 + -1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_y)] }
cg = (((1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(62 - conv_s1_y)] }
cg = (((62 + -1*conv_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(conv_s1_x)] }
cg = (((1*conv_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [(62 - conv_s1_x)] }
cg = (((62 + -1*conv_s1_x)) >= 0)
Prog: unoptimized_conv_2_2
Generating compute for: op_hcompute_hw_input_global_wrapper_stencil
Got srcs
Got iteration variables
got in_buffers
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_conv_stencil
Got srcs
Got iteration variables
got in_buffers
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_conv_stencil_1
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_conv_stencil_1
op = op_hcompute_conv_stencil_1
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_hw_output_stencil
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_hw_output_stencil
created res
finding out buffers
Checking if program is a boundary
Trying to find hw_input_stencil in buffers
Trying bundle: op_hcompute_hw_input_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_input_stencil
No bundle for input: hw_input_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-1 + i2)] }
cg = (((-1 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(62 - i3)] }
cg = (((62 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(62 - i5)] }
cg = (((62 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i2)] }
cg = (((1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(63 - i3)] }
cg = (((63 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(63 - i5)] }
cg = (((63 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-2 + i2)] }
cg = (((-2 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(62 - i3)] }
cg = (((62 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(62 - i5)] }
cg = (((62 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-3 + i2)] }
cg = (((-3 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(62 - i3)] }
cg = (((62 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(62 - i5)] }
cg = (((62 + -1*i5)) >= 0)
Trying to find hw_input_stencil in buffers
Trying bundle: op_hcompute_hw_input_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_input_stencil
No bundle for input: hw_input_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
Trying to find hw_input_stencil in buffers
Trying bundle: op_hcompute_hw_input_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_input_stencil
No bundle for input: hw_input_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
Generating accel wrapper
# in bundles: 1
Generating arg list
Generating driver function
buf = hw_input_stencil
Generated accel wrapper
Generating accel wrapper
Generating arg list
Generating driver function
Generating bmp harness
Generated channels
Generating inputs
in dim = 0
Trying to find hw_input_stencil in buffers
Trying bundle: op_hcompute_hw_input_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_input_stencil
No bundle for input: hw_input_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
Built unoptimized code
cmd: echo $CLKWRK_PATH
/home/dai-dirk/MetaMapper/MetaMapper/clockwork
cmd: g++ -fstack-protector-all -std=c++11 -I $CLKWRK_PATH regression_tb_unoptimized_conv_2_2.cpp unoptimized_conv_2_2.cpp
Running CGRA flow on conv_2_2
program: conv_2_2
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 63; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 63; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 63; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 63; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y, conv_s1_x] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x], hw_input_global_wrapper_stencil[(conv_s1_y + 1), conv_s1_x], hw_input_global_wrapper_stencil[conv_s1_y, (conv_s1_x + 1)])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 63; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 63; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi])
    }
  }
}
Buffer: conv_stencil
  Producers...
Got consumers
Writes: { conv_stencil[i0, i1] : 0 <= i0 <= 62 and 0 <= i1 <= 62 }
    Min offset (counting only writers): 0, 0
Visit produce locations: conv_stencil: addr =  [conv_s1_y, conv_s1_x]
New produce locations: conv_stencil: addr =  [conv_s1_y+0,  conv_s1_x+0]
Visit consume locations: conv_stencil: addr =  [hw_output_s0_y_yi, hw_output_s0_x_xi]
New consume locations: conv_stencil: addr =  [hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0]
Buffer: conv_stencil_clkwrk_dsa0
  Producers...
Got consumers
Writes: { conv_stencil_clkwrk_dsa0[i0, i1] : 0 <= i0 <= 62 and 0 <= i1 <= 62 }
    Min offset (counting only writers): 0, 0
Visit produce locations: conv_stencil_clkwrk_dsa0: addr =  [conv_s0_y, conv_s0_x]
New produce locations: conv_stencil_clkwrk_dsa0: addr =  [conv_s0_y+0,  conv_s0_x+0]
Visit consume locations: conv_stencil_clkwrk_dsa0: addr =  [conv_s1_y, conv_s1_x]
New consume locations: conv_stencil_clkwrk_dsa0: addr =  [conv_s1_y+0,  conv_s1_x+0]
Buffer: hw_input_global_wrapper_stencil
  Producers...
Got consumers
Writes: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 and ((i0 > 0 and i1 <= 62) or (i0 <= 62 and i1 > 0) or (i0 <= 62 and i1 <= 62)) }
    Min offset (counting only writers): 0, 0
Visit produce locations: hw_input_global_wrapper_stencil: addr =  [hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x]
New produce locations: hw_input_global_wrapper_stencil: addr =  [hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [conv_s1_y, conv_s1_x]
New consume locations: hw_input_global_wrapper_stencil: addr =  [conv_s1_y+0,  conv_s1_x+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 1), conv_s1_x]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv_s1_y + 1)+0,  conv_s1_x+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [conv_s1_y, (conv_s1_x + 1)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [conv_s1_y+0,  (conv_s1_x + 1)+0]
Buffer: hw_input_stencil
  Producers...
4
Got consumers
Writes: { hw_input_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
    Min offset (counting only writers): 0, 0
Visit consume locations: hw_input_stencil: addr =  [hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x]
New consume locations: hw_input_stencil: addr =  [hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0]
Buffer: hw_output_stencil
  Producers...
Got consumers
    Min offset (counting only writers): 0, 0
Visit produce locations: hw_output_stencil: addr =  [hw_output_s0_y_yi, hw_output_s0_x_xi]
New produce locations: hw_output_stencil: addr =  [hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0]
program: conv_2_2
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 63; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 63; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_y+0,  conv_s0_x+0] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 63; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 63; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y+0,  conv_s1_x+0] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 63; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 63; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
    }
  }
}
cmd: mkdir -p ./map_result/conv_2_2
After Loop Perfection
program: conv_2_2
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 63; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 63; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_y+0,  conv_s0_x+0] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 63; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 63; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y+0,  conv_s1_x+0] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 63; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 63; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
    }
  }
}
hcompute_hw_input_global_wrapper_stencil
	Buffer <hw_input_global_wrapper_stencil> 
	producer map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	capacity: 4096
	hierarchy level: glb
	Buffer <hw_input_stencil> 
	producer map: {  }
	capacity: 4096
	hierarchy level: glb
hcompute_conv_stencil
	Buffer <conv_stencil_clkwrk_dsa0> 
	producer map: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
	capacity: 3969
	hierarchy level: glb
hcompute_conv_stencil_1
	Buffer <conv_stencil> 
	producer map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
	capacity: 3969
	hierarchy level: glb
	Buffer <conv_stencil_clkwrk_dsa0> 
	producer map: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
	capacity: 3969
	hierarchy level: glb
	Buffer <hw_input_global_wrapper_stencil> 
	producer map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	capacity: 4096
	hierarchy level: glb
hcompute_hw_output_stencil
	Buffer <conv_stencil> 
	producer map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
	capacity: 3969
	hierarchy level: glb
	Buffer <hw_output_stencil> 
	producer map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
	capacity: 3969
	hierarchy level: glb
hcompute_conv_stencil: 0 
hcompute_conv_stencil_1: 0 
hcompute_hw_input_global_wrapper_stencil: 0 
hcompute_hw_output_stencil: 0 

hcompute_conv_stencil: 0 
hcompute_conv_stencil_1: 0 
hcompute_hw_input_global_wrapper_stencil: 0 
hcompute_hw_output_stencil: 0 

Compute file dse found
No compute unit file: 
program: conv_2_2
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 63; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 63; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_y+0,  conv_s0_x+0] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 63; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 63; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y+0,  conv_s1_x+0] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 63; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 63; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
    }
  }
}
program: conv_2_2
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 63; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 63; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_y+0,  conv_s0_x+0] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 63; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 63; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y+0,  conv_s1_x+0] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 63; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 63; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
    }
  }
}
program: conv_2_2
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 63; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 63; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_y+0,  conv_s0_x+0] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 63; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 63; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y+0,  conv_s1_x+0] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 63; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 63; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
    }
  }
}
conv_2_2 is a stencil pipeline
Computing validity deps for conv_stencil
Computing validity deps for conv_stencil_clkwrk_dsa0
Computing validity deps for hw_input_global_wrapper_stencil
Computing validity deps for hw_input_stencil
Computing validity deps for hw_output_stencil
Finite validity: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = conv_s0_y, conv_s1_x = conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_yi = conv_s1_y, hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  Dep = { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = conv_s0_y, conv_s1_x = conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
  Dep = { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 63 }
  Dep = { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_yi = conv_s1_y, hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Got deps
Schedule dim = 3
  scheduling dimension 0
  { op_hcompute_conv_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_output_stencil[root' = 0] }
Consumed data...
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_conv_stencil[root' = 0] }
bound: { op_hcompute_conv_stencil_1[root] -> op_hcompute_conv_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[root] -> [(0)] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0] }
bound: { op_hcompute_conv_stencil_1[root] -> op_hcompute_hw_input_global_wrapper_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[root] -> [(0)] }
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
bound: { op_hcompute_hw_output_stencil[root] -> op_hcompute_conv_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_hw_output_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[root] -> [(0)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv_stencil_1, s_op_hcompute_conv_stencil, s_op_hcompute_hw_input_global_wrapper_stencil, s_op_hcompute_hw_output_stencil] : s_op_hcompute_conv_stencil_1 > 0 and s_op_hcompute_conv_stencil > 0 and s_op_hcompute_hw_input_global_wrapper_stencil > 0 and s_op_hcompute_hw_output_stencil > 0 }
Writing problem to mod file...
  # of constraints: 4
  legal point  : { [1, 1, 1, 1] }
  minimal point: 0
Schedule params...
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_conv_stencil[root' = 0] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0] }
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(i)] }
  scheduling dimension 1
  { op_hcompute_conv_stencil[conv_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = conv_s0_y] : 0 <= conv_s0_y <= 62 }
  { op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = hw_input_global_wrapper_s0_y] : 0 <= hw_input_global_wrapper_s0_y <= 62; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = -1 + hw_input_global_wrapper_s0_y] : 0 < hw_input_global_wrapper_s0_y <= 63 }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_output_stencil[hw_output_s0_y_yi = conv_s1_y] : 0 <= conv_s1_y <= 62 }
Consumed data...
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_conv_stencil[conv_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 62 }
bound: { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_conv_stencil[(conv_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(conv_s1_y)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 62 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(conv_s1_y)] }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 1 + conv_s1_y] : 0 <= conv_s1_y <= 62; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 62 }
bound: { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[(1 + conv_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(1 + conv_s1_y)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 62 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(1 + conv_s1_y)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_conv_stencil_1[conv_s1_y = hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 62 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_conv_stencil_1[(hw_output_s0_y_yi)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> [(hw_output_s0_y_yi)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 62 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> [(hw_output_s0_y_yi)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv_stencil_1, s_op_hcompute_conv_stencil, s_op_hcompute_hw_input_global_wrapper_stencil, s_op_hcompute_hw_output_stencil] : s_op_hcompute_conv_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_input_global_wrapper_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil_1 > 0 }
Writing problem to mod file...
  # of constraints: 7
  legal point  : { [1, 1, 1, 1] }
  minimal point: -4
Schedule params...
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_conv_stencil[conv_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 62 }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 1 + conv_s1_y] : 0 <= conv_s1_y <= 62; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 62 }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_conv_stencil_1[conv_s1_y = hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 62 }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(1 + i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(1 + i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(1 + i)] }
  scheduling dimension 2
  { op_hcompute_conv_stencil[conv_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = conv_s0_x] : 0 <= conv_s0_x <= 62 }
  { op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_output_stencil[hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_x <= 62 }
Consumed data...
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_conv_stencil[conv_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 62 }
bound: { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_conv_stencil[(conv_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(conv_s1_x)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 62 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(conv_s1_x)] }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 62 }
bound: { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[(1 + conv_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(1 + conv_s1_x)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 62 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(1 + conv_s1_x)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv_stencil_1[conv_s1_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 62 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv_stencil_1[(hw_output_s0_x_xi)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 62 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv_stencil_1, s_op_hcompute_conv_stencil, s_op_hcompute_hw_output_stencil, s_op_hcompute_hw_input_global_wrapper_stencil] : s_op_hcompute_conv_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_input_global_wrapper_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil_1 > 0 }
Writing problem to mod file...
  # of constraints: 7
  legal point  : { [1, 1, 1, 1] }
  minimal point: -4
Schedule params...
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_conv_stencil[conv_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 62 }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv_stencil_1[conv_s1_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 62 }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 62 }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(1 + i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(1 + i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(1 + i)] }
Final schedule...
  op_hcompute_conv_stencil
    1*d2*1*1 + 1*1
    1*d1*1*1 + 1*1
    1*d0*1*1 + 1*0

  op_hcompute_conv_stencil_1
    1*d2*1*1 + 1*1
    1*d1*1*1 + 1*1
    1*d0*1*1 + 1*0

  op_hcompute_hw_input_global_wrapper_stencil
    1*d2*1*1 + 1*0
    1*d1*1*1 + 1*0
    1*d0*1*1 + 1*0

  op_hcompute_hw_output_stencil
    1*d2*1*1 + 1*1
    1*d1*1*1 + 1*1
    1*d0*1*1 + 1*0

Sched expr: 1*d2 + 1
Sched expr: 1*d1 + 1
Sched expr: 1*d0 + 0
Map str: { op_hcompute_conv_stencil[d0, d1, d2] -> [1*d2 + 1, 1*d1 + 1, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 1
Sched expr: 1*d1 + 1
Sched expr: 1*d0 + 0
Map str: { op_hcompute_conv_stencil_1[d0, d1, d2] -> [1*d2 + 1, 1*d1 + 1, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 0
Sched expr: 1*d1 + 0
Sched expr: 1*d0 + 0
Map str: { op_hcompute_hw_input_global_wrapper_stencil[d0, d1, d2] -> [1*d2 + 0, 1*d1 + 0, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 1
Sched expr: 1*d1 + 1
Sched expr: 1*d0 + 0
Map str: { op_hcompute_hw_output_stencil[d0, d1, d2] -> [1*d2 + 1, 1*d1 + 1, 1*d0 + 0] }
map got str
Clockwork schedule...
  { op_hcompute_conv_stencil[d0, d1, d2] -> [1 + d2, 1 + d1, d0] }
  { op_hcompute_conv_stencil_1[d0, d1, d2] -> [1 + d2, 1 + d1, d0] }
  { op_hcompute_hw_output_stencil[d0, d1, d2] -> [1 + d2, 1 + d1, d0] }
  { op_hcompute_hw_input_global_wrapper_stencil[d0, d1, d2] -> [d2, d1, d0] }
Domain...
  { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
bounds...{ [i0, i1, 0] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
lengths
1
64
64
1
Fused iis
  4096
  64
  1
Finite validity: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = conv_s0_y, conv_s1_x = conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_yi = conv_s1_y, hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  Dep = { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = conv_s0_y, conv_s1_x = conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
  Dep = { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 63 }
  Dep = { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_yi = conv_s1_y, hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Got deps
Schedule dim = 3
  scheduling dimension 0
  { op_hcompute_conv_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_output_stencil[root' = 0] }
Consumed data...
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_conv_stencil[root' = 0] }
bound: { op_hcompute_conv_stencil_1[root] -> op_hcompute_conv_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[root] -> [(0)] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0] }
bound: { op_hcompute_conv_stencil_1[root] -> op_hcompute_hw_input_global_wrapper_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[root] -> [(0)] }
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
bound: { op_hcompute_hw_output_stencil[root] -> op_hcompute_conv_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_hw_output_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[root] -> [(0)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv_stencil_1, s_op_hcompute_conv_stencil, s_op_hcompute_hw_input_global_wrapper_stencil, s_op_hcompute_hw_output_stencil] : s_op_hcompute_conv_stencil_1 > 0 and s_op_hcompute_conv_stencil > 0 and s_op_hcompute_hw_input_global_wrapper_stencil > 0 and s_op_hcompute_hw_output_stencil > 0 }
Writing problem to mod file...
  # of constraints: 4
  legal point  : { [1, 1, 1, 1] }
  minimal point: 0
Schedule params...
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_conv_stencil[root' = 0] }
  { op_hcompute_conv_stencil_1[root = 0] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0] }
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_conv_stencil_1[root' = 0] }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(i)] }
  scheduling dimension 1
  { op_hcompute_conv_stencil[conv_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = conv_s0_y] : 0 <= conv_s0_y <= 62 }
  { op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = hw_input_global_wrapper_s0_y] : 0 <= hw_input_global_wrapper_s0_y <= 62; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv_stencil_1[conv_s1_y = -1 + hw_input_global_wrapper_s0_y] : 0 < hw_input_global_wrapper_s0_y <= 63 }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_output_stencil[hw_output_s0_y_yi = conv_s1_y] : 0 <= conv_s1_y <= 62 }
Consumed data...
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_conv_stencil[conv_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 62 }
bound: { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_conv_stencil[(conv_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(conv_s1_y)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 62 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(conv_s1_y)] }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 1 + conv_s1_y] : 0 <= conv_s1_y <= 62; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 62 }
bound: { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[(1 + conv_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(1 + conv_s1_y)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_y] : 0 <= conv_s1_y <= 62 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_y] -> [(1 + conv_s1_y)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_conv_stencil_1[conv_s1_y = hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 62 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_conv_stencil_1[(hw_output_s0_y_yi)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> [(hw_output_s0_y_yi)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 62 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> [(hw_output_s0_y_yi)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv_stencil_1, s_op_hcompute_conv_stencil, s_op_hcompute_hw_output_stencil, s_op_hcompute_hw_input_global_wrapper_stencil] : s_op_hcompute_conv_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_input_global_wrapper_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil_1 > 0 }
Writing problem to mod file...
  # of constraints: 7
  legal point  : { [1, 1, 1, 1] }
  minimal point: -4
Schedule params...
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_conv_stencil[conv_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 62 }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_yi] -> op_hcompute_conv_stencil_1[conv_s1_y = hw_output_s0_y_yi] : 0 <= hw_output_s0_y_yi <= 62 }
  { op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 1 + conv_s1_y] : 0 <= conv_s1_y <= 62; op_hcompute_conv_stencil_1[conv_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = conv_s1_y] : 0 <= conv_s1_y <= 62 }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(1 + i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(1 + i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(1 + i)] }
  scheduling dimension 2
  { op_hcompute_conv_stencil[conv_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = conv_s0_x] : 0 <= conv_s0_x <= 62 }
  { op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv_stencil_1[conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_output_stencil[hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_x <= 62 }
Consumed data...
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_conv_stencil[conv_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 62 }
bound: { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_conv_stencil[(conv_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(conv_s1_x)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 62 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(conv_s1_x)] }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 62 }
bound: { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[(1 + conv_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(1 + conv_s1_x)] }
      domain of bound: { op_hcompute_conv_stencil_1[conv_s1_x] : 0 <= conv_s1_x <= 62 }
Extracting linear rational approximation: { op_hcompute_conv_stencil_1[conv_s1_x] -> [(1 + conv_s1_x)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv_stencil_1[conv_s1_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 62 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv_stencil_1[(hw_output_s0_x_xi)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 62 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv_stencil_1, s_op_hcompute_conv_stencil, s_op_hcompute_hw_input_global_wrapper_stencil, s_op_hcompute_hw_output_stencil] : s_op_hcompute_conv_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_input_global_wrapper_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_conv_stencil_1 and s_op_hcompute_conv_stencil_1 > 0 }
Writing problem to mod file...
  # of constraints: 7
  legal point  : { [1, 1, 1, 1] }
  minimal point: -4
Schedule params...
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_conv_stencil[conv_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 62 }
  { op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 1 + conv_s1_x] : 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil_1[conv_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = conv_s1_x] : 0 <= conv_s1_x <= 62 }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv_stencil_1[conv_s1_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 62 }
Done with schedule
Clockwork schedules...
  op_hcompute_conv_stencil: { [i] -> [(1 + i)] }
  op_hcompute_conv_stencil_1: { [i] -> [(1 + i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(1 + i)] }
Original Loop iis
op_hcompute_hw_input_global_wrapper_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_hw_input_global_wrapper_stencil
  hw_input_global_wrapper_s0_y q: 1, d = 0
    ii = 64
op_hcompute_hw_input_global_wrapper_stencil
  hw_input_global_wrapper_s0_x q: 1, d = 0
    ii = 1
op_hcompute_conv_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_conv_stencil
  conv_s0_y q: 1, d = 1
    ii = 64
op_hcompute_conv_stencil
  conv_s0_x q: 1, d = 1
    ii = 1
op_hcompute_conv_stencil_1
  root q: 1, d = 0
    ii = 4096
op_hcompute_conv_stencil_1
  conv_s1_y q: 1, d = 1
    ii = 64
op_hcompute_conv_stencil_1
  conv_s1_x q: 1, d = 1
    ii = 1
op_hcompute_hw_output_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_hw_output_stencil
  hw_output_s0_y_yi q: 1, d = 1
    ii = 64
op_hcompute_hw_output_stencil
  hw_output_s0_x_xi q: 1, d = 1
    ii = 1
inner ops: op_hcompute_hw_input_global_wrapper_stencil
inner ops: op_hcompute_hw_input_global_wrapper_stencil, offset: 0
inner ops: op_hcompute_conv_stencil
inner ops: op_hcompute_conv_stencil, offset: 0
inner ops: op_hcompute_conv_stencil_1
force inner op: op_hcompute_conv_stencil, has same offset as update: 0
inner ops: op_hcompute_conv_stencil_1, offset: 0
inner ops: op_hcompute_hw_output_stencil
inner ops: op_hcompute_hw_output_stencil, offset: 0
schedule for n: { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
Start times...
{ start_op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; start_op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62; start_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; start_op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [65 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
  pre adjustment min: { [0] }
Adjusting delays of conv_2_2
schedule for n: { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
sorted kernel: {}
sorted kernel: {conv_s0_y}
sorted kernel: {conv_s0_y}
sorted kernel: {conv_s0_y, hw_input_global_wrapper_s0_y}
sorted kernel: {conv_s0_y, hw_input_global_wrapper_s0_y, conv_s1_y}
Adjusting delay of conv_s0_y
Adjusting delay of hw_input_global_wrapper_s0_y
read map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Kernel <hw_input_global_wrapper_s0_y> has Delay slack: 0
Offset with in parent: 0
Adjusting delay of conv_s1_y
read map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
write map: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
writes: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Schedule...
  { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [65 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Time to write: { [i0] -> conv_stencil_clkwrk_dsa0[o0, -65 + i0 - 64o0] : 0 <= o0 <= 62 and -127 + i0 <= 64o0 <= -65 + i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -1 + i0 - 64o0] : 0 < o0 <= 63 and -63 + i0 <= 64o0 < i0; [i0] -> hw_input_global_wrapper_stencil[o0, -64 + i0 - 64o0] : 0 <= o0 <= 62 and -127 + i0 <= 64o0 <= -65 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -65 + i0 - 64o0] : 0 <= o0 <= 62 and -127 + i0 <= 64o0 <= -65 + i0; [i0] -> conv_stencil_clkwrk_dsa0[o0, -65 + i0 - 64o0] : 0 <= o0 <= 62 and -127 + i0 <= 64o0 <= -65 + i0 }
PC times     : { [i0] -> [i0] : 64 <= i0 <= 4095 and 64*floor((i0)/64) < i0 }
DDs          : { [0] }
    Producers: op_hcompute_conv_stencil
    sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [65 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
    Consumers: op_hcompute_conv_stencil_1
    sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
write map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Schedule...
  { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [65 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -1 + i0 - 64o0] : 0 < o0 <= 63 and -63 + i0 <= 64o0 < i0; [i0] -> hw_input_global_wrapper_stencil[o0, -64 + i0 - 64o0] : 0 <= o0 <= 62 and -127 + i0 <= 64o0 <= -65 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -65 + i0 - 64o0] : 0 <= o0 <= 62 and -127 + i0 <= 64o0 <= -65 + i0; [i0] -> conv_stencil_clkwrk_dsa0[o0, -65 + i0 - 64o0] : 0 <= o0 <= 62 and -127 + i0 <= 64o0 <= -65 + i0 }
PC times     : { [i0] -> [65 + i0] : -1 <= i0 <= 4030 and 64*floor((1 + i0)/64) <= i0; [i0] -> [64 + i0] : 0 <= i0 <= 4031 and 64*floor((i0)/64) < i0; [i0] -> [1 + i0] : 63 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= i0 }
DDs          : { [65]; [64]; [1] }
    Producers: op_hcompute_hw_input_global_wrapper_stencil
    sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
    Consumers: op_hcompute_conv_stencil_1
    sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Kernel <conv_s1_y> has Delay slack: 0
Offset with in parent: 64
Adjusting delay of hw_output_s0_y_yi
read map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
write map: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
writes: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
reads : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Schedule...
  { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [65 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Time to write: { [i0] -> conv_stencil[o0, -65 + i0 - 64o0] : 0 <= o0 <= 62 and -127 + i0 <= 64o0 <= -65 + i0 }
Time to read : { [i0] -> conv_stencil[o0, -65 + i0 - 64o0] : 0 <= o0 <= 62 and -127 + i0 <= 64o0 <= -65 + i0 }
PC times     : { [i0] -> [i0] : 64 <= i0 <= 4095 and 64*floor((i0)/64) < i0 }
DDs          : { [0] }
    Producers: op_hcompute_conv_stencil_1
    sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
    Consumers: op_hcompute_hw_output_stencil
    sched: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Kernel <hw_output_s0_y_yi> has Delay slack: 0
Offset with in parent: 64
    Find buffers need to be rewritten: conv_stencil_clkwrk_dsa0
    Find buffers need to be rewritten: hw_input_global_wrapper_stencil

Filter buffers...

schedule for n: { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
Final schedule after relax: { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
Final end schedule after relax: { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
Computing validity deps for conv_stencil
Computing validity deps for conv_stencil_clkwrk_dsa0
Computing validity deps for hw_input_global_wrapper_stencil
Computing validity deps for hw_input_stencil
Computing validity deps for hw_output_stencil
program: conv_2_2
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int conv_s0_y = 0; conv_s0_y < 63; conv_s0_y++) {
    for (int conv_s0_x = 0; conv_s0_x < 63; conv_s0_x++) {
      op_hcompute_conv_stencil: conv_stencil_clkwrk_dsa0[conv_s0_y+0,  conv_s0_x+0] = hcompute_conv_stencil()
    }
  }
  for (int conv_s1_y = 0; conv_s1_y < 63; conv_s1_y++) {
    for (int conv_s1_x = 0; conv_s1_x < 63; conv_s1_x++) {
      op_hcompute_conv_stencil_1: conv_stencil[conv_s1_y+0,  conv_s1_x+0] = hcompute_conv_stencil_1(conv_stencil_clkwrk_dsa0[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0], hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0])
    }
  }
  for (int hw_output_s0_y_yi = 0; hw_output_s0_y_yi < 63; hw_output_s0_y_yi++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 63; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0])
    }
  }
}
schedule for n: { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
Start times...
  { start_op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  { start_op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
  { start_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { start_op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [65 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
  min: { [0] }
schedule for n: { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedule for n: { end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
Schedule...
  { start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
  { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
  { start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
  { start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
  Cycle deps: { end_op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = conv_s0_y, conv_s1_x = conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; end_op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> start_op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_yi = conv_s1_y, hw_output_s0_x_xi = conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 62; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = -1 + hw_input_global_wrapper_s0_y, conv_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 62; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root' = 0, conv_s1_y = hw_input_global_wrapper_s0_y, conv_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 63 }
  Earlier deps: { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x >= -64 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv_s0_y; start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_y', conv_s1_x'] : conv_s1_x' > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64conv_s1_y'; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64conv_s0_y; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 66 + 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> start_op_hcompute_conv_stencil[root', conv_s0_y', conv_s0_x'] : conv_s0_x' > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64conv_s0_y'; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64conv_s1_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64conv_s1_y; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_y', conv_s1_x'] : conv_s1_x' > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64conv_s1_y'; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_output_s0_y_yi'; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x >= -64 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv_s1_y; start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64conv_s1_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x >= -64 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv_s0_y; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_y', conv_s1_x'] : conv_s1_x' > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64conv_s1_y'; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -64 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 66 + 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -64 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> start_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64conv_s0_y; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> end_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64conv_s0_y; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64conv_s1_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_x'] : hw_input_global_wrapper_s0_x' > 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y'; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x >= -64 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv_s1_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 66 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 66 + 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64conv_s1_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 66 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64conv_s0_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x >= -64 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv_s0_y; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64conv_s1_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -64 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> end_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64conv_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 66 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64conv_s0_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x >= -64 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv_s1_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_x'] : hw_input_global_wrapper_s0_x' > 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y'; start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 66 + 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 66 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> end_op_hcompute_conv_stencil[root', conv_s0_y', conv_s0_x'] : conv_s0_x' > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64conv_s0_y'; start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 66 + 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_output_s0_y_yi; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 66 + 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_output_s0_y_yi'; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_output_s0_y_yi'; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 66 + 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x >= -64 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv_s1_y; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_y', conv_s1_x'] : conv_s1_x' > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64conv_s1_y'; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x >= -64 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv_s0_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_x'] : hw_input_global_wrapper_s0_x' > 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y'; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -64 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64conv_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi - 4096root' - 64hw_output_s0_y_yi'; start_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> start_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64conv_s1_y; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 66 + 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> end_op_hcompute_conv_stencil[root', conv_s0_y', conv_s0_x'] : conv_s0_x' > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64conv_s0_y'; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_x'] : hw_input_global_wrapper_s0_x' > 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y'; start_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> start_op_hcompute_conv_stencil[root', conv_s0_y, conv_s0_x] : conv_s0_x > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64conv_s0_y; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> start_op_hcompute_conv_stencil[root', conv_s0_y', conv_s0_x'] : conv_s0_x' > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64conv_s0_y'; end_op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_yi, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv_s1_y + conv_s1_x - 4096root' - 64hw_output_s0_y_yi; end_op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> end_op_hcompute_conv_stencil_1[root', conv_s1_y, conv_s1_x] : conv_s1_x > 4096root + 64conv_s0_y + conv_s0_x - 4096root' - 64conv_s1_y }
  Violated deps: {  }
schedule for n: { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedmap = { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x] }
schedule for n: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi] }
schedmap = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> [65 + 4096root + 64conv_s1_y + conv_s1_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 4096root + 64hw_output_s0_y_yi + hw_output_s0_x_xi]; op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> [65 + 4096root + 64conv_s0_y + conv_s0_x]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
result schedule: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [65 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Creating ports for op: hw_output_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] }
	Adding output port: hw_output_stencil_op_hcompute_hw_output_stencil_0
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
current out port name: 
	hw_output_stencil_op_hcompute_hw_output_stencil_0
Creating ports for op: conv_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_y_yi+0,  hw_output_s0_x_xi+0] }
	Adding output port: conv_stencil_op_hcompute_hw_output_stencil_1
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [65 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
SDom     : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom ITS  : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Per group...
  dspace_id       = op_hcompute_hw_output_stencil
  other_dspace_id = op_hcompute_hw_output_stencil
  Schedule domain set: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
  Domain set from prg: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
  ITS: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
ITS      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
current out port name: 
	conv_stencil_op_hcompute_hw_output_stencil_1
Creating ports for op: hw_input_global_wrapper_stencil
cond = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
		Consumed: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Creating ports for op: hw_input_stencil
cond = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] }
	Adding output port: hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_3
		Consumed: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [65 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom      : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
SDom     : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom ITS  : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Per group...
  dspace_id       = op_hcompute_hw_input_global_wrapper_stencil
  other_dspace_id = op_hcompute_hw_input_global_wrapper_stencil
  Schedule domain set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  Domain set from prg: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  ITS: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
ITS      : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
current out port name: 
	hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_3
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y+0,  conv_s1_x+0] }
	Adding output port: conv_stencil_op_hcompute_conv_stencil_1_4
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
current out port name: 
	conv_stencil_op_hcompute_conv_stencil_1_4
Creating ports for op: conv_stencil_clkwrk_dsa0
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y+0,  conv_s1_x+0] }
	Adding output port: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [65 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
SDom     : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
current out port name: 
	conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y+0,  conv_s1_x+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [65 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
SDom     : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[(conv_s1_y + 1)+0,  conv_s1_x+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [65 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
SDom     : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
cond = { op_hcompute_conv_stencil_1[root, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y+0,  (conv_s1_x + 1)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
		Consumed: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Opt sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [65 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
SDom     : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Dom ITS  : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Dom UNN  : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Per group...
  dspace_id       = op_hcompute_conv_stencil_1
  other_dspace_id = op_hcompute_conv_stencil_1
  Schedule domain set: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  Domain set from prg: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  ITS: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
ITS      : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7	hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
cond = { op_hcompute_conv_stencil[root, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y+0,  conv_s0_x+0] }
	Adding output port: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9
		Consumed: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
current out port name: 
	conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9
Latency of application is: { [4095] }
Global schedule: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [65 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
# in bundles: 1
Generating compute unit for op_hcompute_hw_input_global_wrapper_stencil
getting incoming buffers to op_hcompute_hw_input_global_wrapper_stencil
  consumed: hw_input_stencil
Found compute file for conv_2_2
getting incoming buffers to op_hcompute_hw_input_global_wrapper_stencil
  consumed: hw_input_stencil
Looking for connection for hw_input_stencil.op_hcompute_hw_input_global_wrapper_stencil_read
# of selects = 0
inner_compute() : global.hcompute_hw_input_global_wrapper_stencil
name = in0_hw_input_stencil
More than oune outgoing bundle
# of selects = 1
inner_compute() : global.hcompute_hw_input_global_wrapper_stencil
  name = in0_hw_input_stencil
  bundle.first = hw_input_global_wrapper_stencil
  after split  = hw_input_global_wrapper_stencil
  name = out_hw_input_global_wrapper_stencil
  bundle.first = hw_input_global_wrapper_stencil
  after split  = hw_input_global_wrapper_stencil
Generating compute unit for op_hcompute_conv_stencil
getting incoming buffers to op_hcompute_conv_stencil
Found compute file for conv_2_2
getting incoming buffers to op_hcompute_conv_stencil
More than oune outgoing bundle
# of selects = 0
inner_compute() : global.hcompute_conv_stencil
  name = out_conv_stencil
  bundle.first = conv_stencil_clkwrk_dsa0
  after split  = conv_stencil
Generating compute unit for op_hcompute_conv_stencil_1
getting incoming buffers to op_hcompute_conv_stencil_1
  consumed: conv_stencil_clkwrk_dsa0
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
Found compute file for conv_2_2
getting incoming buffers to op_hcompute_conv_stencil_1
  consumed: conv_stencil_clkwrk_dsa0
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
Looking for connection for conv_stencil_clkwrk_dsa0.op_hcompute_conv_stencil_1_read
# of selects = 0
inner_compute() : global.hcompute_conv_stencil_1
name = in0_conv_stencil
Looking for connection for hw_input_global_wrapper_stencil.op_hcompute_conv_stencil_1_read
# of selects = 1
inner_compute() : global.hcompute_conv_stencil_1
name = in0_conv_stencil
name = in1_hw_input_global_wrapper_stencil
More than oune outgoing bundle
# of selects = 2
inner_compute() : global.hcompute_conv_stencil_1
  name = in0_conv_stencil
  bundle.first = conv_stencil
  after split  = conv_stencil
  name = in1_hw_input_global_wrapper_stencil
  bundle.first = conv_stencil
  after split  = conv_stencil
  name = out_conv_stencil
  bundle.first = conv_stencil
  after split  = conv_stencil
Generating compute unit for op_hcompute_hw_output_stencil
getting incoming buffers to op_hcompute_hw_output_stencil
  consumed: conv_stencil
Found compute file for conv_2_2
getting incoming buffers to op_hcompute_hw_output_stencil
  consumed: conv_stencil
Looking for connection for conv_stencil.op_hcompute_hw_output_stencil_read
# of selects = 0
inner_compute() : global.hcompute_hw_output_stencil
name = in0_conv_stencil
More than oune outgoing bundle
# of selects = 1
inner_compute() : global.hcompute_hw_output_stencil
  name = in0_conv_stencil
  bundle.first = hw_output_stencil
  after split  = hw_output_stencil
  name = out_hw_output_stencil
  bundle.first = hw_output_stencil
  after split  = hw_output_stencil
create shift register for --- conv_stencil
	---- 1 in ports
		conv_stencil_op_hcompute_conv_stencil_1_4
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			min location: { conv_stencil[0, 0] }
			max location: { conv_stencil[62, 62] }

	---- 1 out ports:
		conv_stencil_op_hcompute_hw_output_stencil_1
			dom : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
			acc : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
			sched: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
			min location: { conv_stencil[0, 0] }
			max location: { conv_stencil[62, 62] }

	---- Input Bundles
		op_hcompute_conv_stencil_1_write
		---- Ports...
			conv_stencil_op_hcompute_conv_stencil_1_4
	---- Output Bundles
		op_hcompute_hw_output_stencil_read
		---- Ports...
			conv_stencil_op_hcompute_hw_output_stencil_1

==== No reduce ops on this buffer
writes: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
reads : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
Time to write: { [i0] -> conv_stencil[o0, -65 + i0 - 64o0] : 0 <= o0 <= 62 and -127 + i0 <= 64o0 <= -65 + i0 }
Time to read : { [i0] -> conv_stencil[o0, -65 + i0 - 64o0] : 0 <= o0 <= 62 and -127 + i0 <= 64o0 <= -65 + i0 }
PC times     : { [i0] -> [i0] : 64 <= i0 <= 4095 and 64*floor((i0)/64) < i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_conv_stencil_1
DG: ...
# nodes: 2
# edges: 1
Group:     conv_stencil_op_hcompute_conv_stencil_1_4
        conv_stencil_op_hcompute_conv_stencil_1_4 -> (0) conv_stencil_op_hcompute_hw_output_stencil_1

Shift registers...
# nodes: 2
# edges: 1
Group:     conv_stencil_op_hcompute_conv_stencil_1_4
        conv_stencil_op_hcompute_conv_stencil_1_4 -> (0) conv_stencil_op_hcompute_hw_output_stencil_1

  conv_stencil_op_hcompute_hw_output_stencil_1 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     conv_stencil_op_hcompute_conv_stencil_1_4
        conv_stencil_op_hcompute_conv_stencil_1_4 -> (0) conv_stencil_op_hcompute_hw_output_stencil_1

edge: conv_stencil_op_hcompute_conv_stencil_1_4=>conv_stencil_op_hcompute_hw_output_stencil_1, w=0
after sort: outpt->conv_stencil_op_hcompute_hw_output_stencil_1, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     conv_stencil_op_hcompute_conv_stencil_1_4
        conv_stencil_op_hcompute_conv_stencil_1_4 -> (0) conv_stencil_op_hcompute_hw_output_stencil_1
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_op_hcompute_conv_stencil_1_4->conv_stencil_op_hcompute_hw_output_stencil_1, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_op_hcompute_conv_stencil_1_4->conv_stencil_op_hcompute_hw_output_stencil_1, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_op_hcompute_conv_stencil_1_4->conv_stencil_op_hcompute_hw_output_stencil_1, delay = 0
	register IO:: 

Done ports: {conv_stencil_op_hcompute_hw_output_stencil_1}
reduced buffer: --- conv_stencil
	---- 1 in ports
		conv_stencil_op_hcompute_conv_stencil_1_4
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			min location: { conv_stencil[0, 0] }
			max location: { conv_stencil[62, 62] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_conv_stencil_1_write
		---- Ports...
			conv_stencil_op_hcompute_conv_stencil_1_4
	---- Output Bundles

SR outputs: {conv_stencil_op_hcompute_hw_output_stencil_1}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_op_hcompute_conv_stencil_1_4->conv_stencil_op_hcompute_hw_output_stencil_1, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_op_hcompute_conv_stencil_1_4->conv_stencil_op_hcompute_hw_output_stencil_1, delay = 0
	register IO:: 

add input: conv_stencil_op_hcompute_conv_stencil_1_4 to pt2wire
add output: conv_stencil_op_hcompute_hw_output_stencil_1 to pt2wire
--- conv_stencil
	---- 1 in ports
		conv_stencil_op_hcompute_conv_stencil_1_4
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			min location: { conv_stencil[0, 0] }
			max location: { conv_stencil[62, 62] }

	---- 1 out ports:
		conv_stencil_op_hcompute_hw_output_stencil_1
			dom : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
			acc : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> conv_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
			sched: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
			min location: { conv_stencil[0, 0] }
			max location: { conv_stencil[62, 62] }

	---- Input Bundles
		op_hcompute_conv_stencil_1_write
		---- Ports...
			conv_stencil_op_hcompute_conv_stencil_1_4
	---- Output Bundles
		op_hcompute_hw_output_stencil_read
		---- Ports...
			conv_stencil_op_hcompute_hw_output_stencil_1

create shift register for --- conv_stencil_clkwrk_dsa0
	---- 1 in ports
		conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9
			dom : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
			acc : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
			sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [65 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
			min location: { conv_stencil_clkwrk_dsa0[0, 0] }
			max location: { conv_stencil_clkwrk_dsa0[62, 62] }

	---- 1 out ports:
		conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			min location: { conv_stencil_clkwrk_dsa0[0, 0] }
			max location: { conv_stencil_clkwrk_dsa0[62, 62] }

	---- Input Bundles
		op_hcompute_conv_stencil_write
		---- Ports...
			conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9
	---- Output Bundles
		op_hcompute_conv_stencil_1_read
		---- Ports...
			conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5

==== No reduce ops on this buffer
writes: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [65 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
Time to write: { [i0] -> conv_stencil_clkwrk_dsa0[o0, -65 + i0 - 64o0] : 0 <= o0 <= 62 and -127 + i0 <= 64o0 <= -65 + i0 }
Time to read : { [i0] -> conv_stencil_clkwrk_dsa0[o0, -65 + i0 - 64o0] : 0 <= o0 <= 62 and -127 + i0 <= 64o0 <= -65 + i0 }
PC times     : { [i0] -> [i0] : 64 <= i0 <= 4095 and 64*floor((i0)/64) < i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_conv_stencil
DG: ...
# nodes: 2
# edges: 1
Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9 -> (0) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5

Shift registers...
# nodes: 2
# edges: 1
Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9 -> (0) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5

  conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9 -> (0) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5

edge: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9=>conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5, w=0
after sort: outpt->conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9
        conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9 -> (0) conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9->conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9->conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9->conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5, delay = 0
	register IO:: 

Done ports: {conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5}
reduced buffer: --- conv_stencil_clkwrk_dsa0
	---- 1 in ports
		conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9
			dom : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
			acc : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
			sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [65 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
			min location: { conv_stencil_clkwrk_dsa0[0, 0] }
			max location: { conv_stencil_clkwrk_dsa0[62, 62] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_conv_stencil_write
		---- Ports...
			conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9
	---- Output Bundles

SR outputs: {conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9->conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9->conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5, delay = 0
	register IO:: 

add input: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9 to pt2wire
add output: conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5 to pt2wire
--- conv_stencil_clkwrk_dsa0
	---- 1 in ports
		conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9
			dom : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
			acc : { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> conv_stencil_clkwrk_dsa0[conv_s0_y, conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
			sched: { op_hcompute_conv_stencil[root = 0, conv_s0_y, conv_s0_x] -> [65 + 64conv_s0_y + conv_s0_x] : 0 <= conv_s0_y <= 62 and 0 <= conv_s0_x <= 62 }
			min location: { conv_stencil_clkwrk_dsa0[0, 0] }
			max location: { conv_stencil_clkwrk_dsa0[62, 62] }

	---- 1 out ports:
		conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> conv_stencil_clkwrk_dsa0[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			min location: { conv_stencil_clkwrk_dsa0[0, 0] }
			max location: { conv_stencil_clkwrk_dsa0[62, 62] }

	---- Input Bundles
		op_hcompute_conv_stencil_write
		---- Ports...
			conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_9
	---- Output Bundles
		op_hcompute_conv_stencil_1_read
		---- Ports...
			conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_5

create shift register for --- hw_input_global_wrapper_stencil
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil[0, 0] }
			max location: { hw_input_global_wrapper_stencil[63, 63] }

	---- 3 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			min location: { hw_input_global_wrapper_stencil[0, 0] }
			max location: { hw_input_global_wrapper_stencil[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			min location: { hw_input_global_wrapper_stencil[1, 0] }
			max location: { hw_input_global_wrapper_stencil[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			min location: { hw_input_global_wrapper_stencil[0, 1] }
			max location: { hw_input_global_wrapper_stencil[62, 63] }

	---- Input Bundles
		op_hcompute_hw_input_global_wrapper_stencil_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		op_hcompute_conv_stencil_1_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8

==== No reduce ops on this buffer
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -65 + i0 - 64o0] : 0 <= o0 <= 62 and -127 + i0 <= 64o0 <= -65 + i0 }
PC times     : { [i0] -> [65 + i0] : -1 <= i0 <= 4030 and 64*floor((1 + i0)/64) <= i0 }
DDs          : { [65] }
DD           : 65
writer op    : op_hcompute_hw_input_global_wrapper_stencil
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -1 + i0 - 64o0] : 0 < o0 <= 63 and -63 + i0 <= 64o0 < i0 }
PC times     : { [i0] -> [1 + i0] : 63 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= i0 }
DDs          : { [1] }
DD           : 1
writer op    : op_hcompute_hw_input_global_wrapper_stencil
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
Schedule...
  { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -64 + i0 - 64o0] : 0 <= o0 <= 62 and -127 + i0 <= 64o0 <= -65 + i0 }
PC times     : { [i0] -> [64 + i0] : 0 <= i0 <= 4031 and 64*floor((i0)/64) < i0 }
DDs          : { [64] }
DD           : 64
writer op    : op_hcompute_hw_input_global_wrapper_stencil
DG: ...
# nodes: 4
# edges: 3
Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (65) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (64) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8

Shift registers...
# nodes: 4
# edges: 3
Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (65) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (64) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8

  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7 -(1)-> 1
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8 -(64)-> 64
  hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6 -(65)-> 65
Groups...
  Group...
  Group...
# nodes: 4
# edges: 3
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (64) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8

edge: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2=>hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7, w=1
edge: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2=>hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, w=64
after sort: outpt->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, w=64
after sort: outpt->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7, w=1
	subbranch size: 0
	delay of hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8 = 1
	subbranch size: 1
# nodes: 4
# edges: 3
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
        hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (64) hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, delay = 64
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6, delay = 1
Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, delay = 64
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6, delay = 1

After shift register optimization: Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, delay = 64
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6, delay = 1

Done ports: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8}
reduced buffer: --- hw_input_global_wrapper_stencil
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil[0, 0] }
			max location: { hw_input_global_wrapper_stencil[63, 63] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_hw_input_global_wrapper_stencil_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles

SR outputs: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7, hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8}
BUF outputs: {}
After banking optimization: Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, delay = 64
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6, delay = 1

After bank merging: Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, delay = 64
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6, delay = 1

add input: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8 to pt2wire
CGPL level :0
impl inputs: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
impl outpts: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8}
rddom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
ls = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
v = 0
Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8, delay = 64
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8->hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6, delay = 1

--- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8

Stride inner most:  1
{hw_input_global_wrapper_stencil[d0, d1] -> hw_input_global_wrapper_stencil[floor((1*d1 + 64*d0)/1)] }
reduce map: { hw_input_global_wrapper_stencil_BANK_0[d0, d1] -> hw_input_global_wrapper_stencil_BANK_0[64d0 + d1] }
linear map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
linear map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
after ubuffer regen: --- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8

addr need tight: {}
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }

	UBuffer after address tighten--- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8

getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_0[i0] : 0 <= i0 <= 4095 }
Vectorization buffer capacity: 4096

	UBuffer after cgpl optimization--- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8

find bd for op :op_hcompute_hw_input_global_wrapper_stencil
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
find bd for op :op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x)] }
	div dim: 0
getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_0[i0] : 0 <= i0 <= 4095 }
Vectorization buffer capacity: 4096
vectorization buf name: hw_input_global_wrapper_stencil_BANK_0
	 original range input access map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	 dim id: 2
Ext by dim: {4096}
  buffer_vectorization Vectorizing: hw_input_global_wrapper_stencil_BANK_0
   On addr dim: 0, fetch_width: 4
--- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8

in bundle  = 1
out bundle = 1
Vectorize input port bundle: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
	vectorize input port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [4096, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

origin: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }, transform: { hw_input_global_wrapper_stencil_BANK_0[d0] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[d0] }
access map : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] -> op_hcompute_hw_input_global_wrapper_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	sched after trans: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_0[i0] -> hw_input_global_wrapper_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
trans max: 1023 , origin max: 1023
agg2sram sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
AGG : --- hw_input_global_wrapper_stencil_BANK_0_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

AGG Schedule: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Vectorize output port bundle: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
	Vectorize output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_0[i0] -> hw_input_global_wrapper_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
Range slice: { hw_input_global_wrapper_stencil_BANK_0[i0] -> hw_input_global_wrapper_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
after slice{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(16hw_input_global_wrapper_s0_y + floor((hw_input_global_wrapper_s0_x)/4))] }
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(16hw_input_global_wrapper_s0_y + floor((hw_input_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 2 denom: 4
	Trans str{op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[d0, d1, d2]->op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[d0, d1, floor(d2/4), d2%4]}
{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[d0, d1, d2] -> op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[d0, d1, o2, o3] : (-d2 + o3) mod 4 = 0 and -3 + d2 <= 4o2 <= d2 and 0 <= o3 <= 3 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Domain space on <i3> is: [0, 3]
Stride : 1	Origin: 1
ADDR dim <0> range: 1024, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 16, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
access map expr:[16*i1+i2]
{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
access map : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0 = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Vectorization dimension: 2
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
	div dim: 0
rem: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0 = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
new: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
base_str : {op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0=0, i1=0, i2=0, i3]}
	{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0 = 0, i1 = 0, i2 = 0, i3] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0, i1, i2, i3 = 0] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0, i1, i2, i3 = 0] }
remove dimension: {3}
before:{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0 = 0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
after:{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0 = 0, i1, i2, i3 = 0] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
remove dimension: {3}
sched before projection: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[0, i1, i2] -> [64 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vectorization dimension after irrelevant dimension removal: 2
sched before adjust: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[0, i1, i2] -> [64 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
	 output sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[0, i1, i2] -> [64 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
	 temp sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
final schedule: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
final access: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [4096, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] }
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+1]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+2]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+3]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] }
	Add TB output port: hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
origin: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }, transform: { hw_input_global_wrapper_stencil_BANK_0[d0] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[d0] }
access map expr:[64*i1+i2]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[64i1 + i2] }
	Access map decouple reuse: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
TB  : --- hw_input_global_wrapper_stencil_BANK_0_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out

before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
TB  : --- hw_input_global_wrapper_stencil_BANK_0_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out

TB Schedule: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
SRAM: --- hw_input_global_wrapper_stencil_BANK_0_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3

SRAM Schedule: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15; op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After vectorization codegen: hw_input_global_wrapper_stencil_BANK_0_0_agg
--- hw_input_global_wrapper_stencil_BANK_0_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

After vectorization codegen: hw_input_global_wrapper_stencil_BANK_0_0_tb
--- hw_input_global_wrapper_stencil_BANK_0_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out

After vectorization codegen: hw_input_global_wrapper_stencil_BANK_0_sram
--- hw_input_global_wrapper_stencil_BANK_0_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8_out_3

sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
write map: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
{ hw_input_global_wrapper_stencil_BANK_0_0_agg[i0] : -3 <= i0 <= 4095 and (i0 >= 0 or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 4092 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 4093 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
write map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
{ hw_input_global_wrapper_stencil_BANK_0_0_tb[i0] : -3 <= i0 <= 4095 and (i0 >= 0 or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 4092 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 4093 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
write map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
{ hw_input_global_wrapper_stencil_BANK_0_sram[i0] : -3 <= i0 <= 4095 and (((2 + i0) mod 4 = 0 and -1 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 4092 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 4093 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
	Sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"dimensionality",3,0
"cycle_starting_addr",4,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",16,0
"write_data_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	Sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
"dimensionality",3,0
"cycle_starting_addr",0,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"dimensionality",3,0
"cycle_starting_addr",62,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	Sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
"dimensionality",3,0
"cycle_starting_addr",64,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
{"agg2sram_0":{"cycle_starting_addr":[4],"cycle_stride":[4,64],"dimensionality":2,"extent":[16,64],"read_data_starting_addr":[0],"read_data_stride":[1,0],"write_data_starting_addr":[0],"write_data_stride":[1,16]},"in2agg_0":{"cycle_starting_addr":[0],"cycle_stride":[1,64],"dimensionality":2,"extent":[64,64],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_0":{"cycle_starting_addr":[62],"cycle_stride":[4,64],"dimensionality":2,"extent":[16,64],"read_data_starting_addr":[0],"read_data_stride":[1,16],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"tb2out_0":{"cycle_starting_addr":[64],"cycle_stride":[1,64],"dimensionality":2,"extent":[64,64],"read_data_starting_addr":[0],"read_data_stride":[1,0]}}
Add lake node:ub_hw_input_global_wrapper_stencil_BANK_0 with input_num = 1, output_num = 1
Config mode: lake
Generating Verilog Testing Collateral for: ub_hw_input_global_wrapper_stencil_BANK_0
Module: cgralib.Mem_amber(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U0__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
--- hw_input_global_wrapper_stencil
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil[0, 0] }
			max location: { hw_input_global_wrapper_stencil[63, 63] }

	---- 3 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			min location: { hw_input_global_wrapper_stencil[0, 0] }
			max location: { hw_input_global_wrapper_stencil[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			min location: { hw_input_global_wrapper_stencil[1, 0] }
			max location: { hw_input_global_wrapper_stencil[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			min location: { hw_input_global_wrapper_stencil[0, 1] }
			max location: { hw_input_global_wrapper_stencil[62, 63] }

	---- Input Bundles
		op_hcompute_hw_input_global_wrapper_stencil_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		op_hcompute_conv_stencil_1_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8

--- hw_input_global_wrapper_stencil
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil[0, 0] }
			max location: { hw_input_global_wrapper_stencil[63, 63] }

	---- 3 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			min location: { hw_input_global_wrapper_stencil[0, 0] }
			max location: { hw_input_global_wrapper_stencil[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[1 + conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			min location: { hw_input_global_wrapper_stencil[1, 0] }
			max location: { hw_input_global_wrapper_stencil[63, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8
			dom : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			acc : { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> hw_input_global_wrapper_stencil[conv_s1_y, 1 + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			sched: { op_hcompute_conv_stencil_1[root = 0, conv_s1_y, conv_s1_x] -> [65 + 64conv_s1_y + conv_s1_x] : 0 <= conv_s1_y <= 62 and 0 <= conv_s1_x <= 62 }
			min location: { hw_input_global_wrapper_stencil[0, 1] }
			max location: { hw_input_global_wrapper_stencil[62, 63] }

	---- Input Bundles
		op_hcompute_hw_input_global_wrapper_stencil_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		op_hcompute_conv_stencil_1_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_6
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_7
			hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_8

addr need tight: {}
Global range: { hw_input_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Sorted ops: {op_hcompute_hw_input_global_wrapper_stencil}
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
    sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
    reduce_map: { hw_input_stencil[d0, d1] -> hw_input_stencil[64d0 + d1] }
  Dim: 2
    Schedule dom range: 64, current_level_stride : 1, up_level_stride : 64
    Address dom range: 64, current_level_stride : 1, up_level_stride : 64
span range: 64, up_level_stride : 64
span range: 64, up_level_stride : 64
	access map merge pair: {{0, 1} }
	schedule merge pair: {{0, 1} }
merge pair: {0, 1} , {0, 1} 
access map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  After Merge: 
    schedule: { op_hcompute_hw_input_global_wrapper_stencil[0, i1] -> [i1] : 0 <= i1 <= 4095 }
"dimensionality",2,0
"cycle_starting_addr",0,0
"extent_1",1,0
"cycle_stride_1",0,0
"extent_0",4096,0
"cycle_stride_0",1,0
"read_data_starting_addr",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	Read map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
{"glb2out_0":{"cycle_starting_addr":[0],"cycle_stride":[1],"dimensionality":1,"extent":[4096],"read_data_starting_addr":[0],"read_data_stride":[1]}}
addr need tight: {}
Global range: { hw_output_stencil[i0, i1] : 0 <= i0 <= 62 and 0 <= i1 <= 62 }
Sorted ops: {op_hcompute_hw_output_stencil}
  Before Merge: 
    acc map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
    sched: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
    reduce_map: { hw_output_stencil[d0, d1] -> hw_output_stencil[63d0 + d1] }
    1d acc map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[63hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
  Dim: 2
    Schedule dom range: 63, current_level_stride : 1, up_level_stride : 64
    Address dom range: 63, current_level_stride : 1, up_level_stride : 63
Find dim: 2 pad = 1
span range: 63, up_level_stride : 63
span range: 63, up_level_stride : 64
	access map merge pair: {{0, 1} }
	schedule merge pair: {}
  After Merge: 
    schedule: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
"dimensionality",3,0
"cycle_starting_addr",65,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",63,0
"cycle_stride_1",64,0
"extent_0",63,0
"cycle_stride_0",1,0
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",63,0
"write_data_stride_0",1,0
	Write map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
{"in2glb_0":{"cycle_starting_addr":[65],"cycle_stride":[1,64],"dimensionality":2,"extent":[63,63],"write_data_starting_addr":[0],"write_data_stride":[1,63]}}
Visit op: op_hcompute_hw_output_stencil
Schedule to generate affine controller: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
pma: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi)] : root = 0 and 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
sched = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] -> [(65 + 64hw_output_s0_y_yi + hw_output_s0_x_xi)] }
  dom = { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_yi, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_yi <= 62 and 0 <= hw_output_s0_x_xi <= 62 }
ls = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_yi, hw_output_s0_x_xi] }
v = 0
Add ub node to be aff ctrl
"dimensionality",3,0
"cycle_starting_addr",65,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",63,0
"cycle_stride_1",64,0
"extent_0",63,0
"cycle_stride_0",1,0
Generating Verilog Testing Collateral for: op_hcompute_hw_output_stencil_port_controller
Module: cgralib.Mem_amber(ID:_U3, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'stencil_valid':Bit, 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U3__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validTrue__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
Find compute
Done Finding compute , op Latency : 0, read Latency: 0
Delaying read
Returning delayed...
Delaying exe
Returning delayed...
Delaying writes
Returning delayed...
getting incoming buffers to op_hcompute_hw_output_stencil
  consumed: conv_stencil
Visit op: op_hcompute_conv_stencil_1
getting incoming buffers to op_hcompute_conv_stencil_1
  consumed: conv_stencil_clkwrk_dsa0
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
Visit op: op_hcompute_conv_stencil
getting incoming buffers to op_hcompute_conv_stencil
Visit op: op_hcompute_hw_input_global_wrapper_stencil
getting incoming buffers to op_hcompute_hw_input_global_wrapper_stencil
  consumed: hw_input_stencil
Schedule to generate affine controller: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
pma: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x)] : root = 0 and 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
sched = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x)] }
  dom = { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
ls = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
v = 0
Add ub node to be aff ctrl
"dimensionality",3,0
"cycle_starting_addr",0,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
Generating Verilog Testing Collateral for: op_hcompute_hw_input_global_wrapper_stencil_port_controller
Module: cgralib.Mem_amber(ID:_U7, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'stencil_valid':Bit, 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U7__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validTrue__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
Find compute
Done Finding compute , op Latency : 0, read Latency: 0
Delaying read
Returning delayed...
Delaying exe
Returning delayed...
Delaying writes
Returning delayed...
Module: global.conv_2_2
  Type: {'clk':coreir.clkIn, 'reset':BitIn, 'hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read_en':Bit, 'hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read':BitIn[16][1], 'hw_output_stencil_op_hcompute_hw_output_stencil_write_valid':Bit, 'hw_output_stencil_op_hcompute_hw_output_stencil_write':Bit[16][1]}
  Def? Yes
  Def:
    Instances:
      _U11 : reg(has_clr:False, has_en:False, has_rst:False, width:16)
      conv_stencil : conv_stencil_ub
      conv_stencil_clkwrk_dsa0 : conv_stencil_clkwrk_dsa0_ub
      hw_input_global_wrapper_stencil : hw_input_global_wrapper_stencil_ub
      op_hcompute_conv_stencil : cu_op_hcompute_conv_stencil
      op_hcompute_conv_stencil_1 : cu_op_hcompute_conv_stencil_1
      op_hcompute_hw_input_global_wrapper_stencil : cu_op_hcompute_hw_input_global_wrapper_stencil
      op_hcompute_hw_input_global_wrapper_stencil_exe_start : op_hcompute_hw_input_global_wrapper_stencil_exe_start_pt__U9
      op_hcompute_hw_input_global_wrapper_stencil_port_controller : Mem_amber(ID:_U7, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
      op_hcompute_hw_input_global_wrapper_stencil_port_controller_clk_en_const : const
      op_hcompute_hw_input_global_wrapper_stencil_read_start : op_hcompute_hw_input_global_wrapper_stencil_read_start_pt__U8
      op_hcompute_hw_input_global_wrapper_stencil_write_start : op_hcompute_hw_input_global_wrapper_stencil_write_start_pt__U10
      op_hcompute_hw_output_stencil : cu_op_hcompute_hw_output_stencil
      op_hcompute_hw_output_stencil_exe_start : op_hcompute_hw_output_stencil_exe_start_pt__U5
      op_hcompute_hw_output_stencil_port_controller : Mem_amber(ID:_U3, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
      op_hcompute_hw_output_stencil_port_controller_clk_en_const : const
      op_hcompute_hw_output_stencil_read_start : op_hcompute_hw_output_stencil_read_start_pt__U4
      op_hcompute_hw_output_stencil_write_start : op_hcompute_hw_output_stencil_write_start_pt__U6
    Connections:
      conv_stencil.reset <=> self.reset
      conv_stencil_clkwrk_dsa0.reset <=> self.reset
      hw_input_global_wrapper_stencil.reset <=> self.reset
      op_hcompute_hw_output_stencil_port_controller.flush <=> self.reset
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.flush <=> self.reset
      op_hcompute_hw_output_stencil.hw_output_stencil_op_hcompute_hw_output_stencil_write <=> self.hw_output_stencil_op_hcompute_hw_output_stencil_write
      op_hcompute_hw_output_stencil_port_controller.clk <=> self.clk
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.clk <=> self.clk
      op_hcompute_hw_output_stencil_port_controller.clk_en <=> op_hcompute_hw_output_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_output_stencil_port_controller.rst_n <=> op_hcompute_hw_output_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_output_stencil_port_controller.stencil_valid <=> op_hcompute_hw_output_stencil_read_start.in
      op_hcompute_hw_output_stencil_exe_start.in <=> op_hcompute_hw_output_stencil_port_controller.stencil_valid
      op_hcompute_hw_output_stencil_port_controller.stencil_valid <=> op_hcompute_hw_output_stencil_write_start.in
      op_hcompute_hw_output_stencil_write_start.out <=> self.hw_output_stencil_op_hcompute_hw_output_stencil_write_valid
      conv_stencil.op_hcompute_hw_output_stencil_read <=> op_hcompute_hw_output_stencil.conv_stencil_op_hcompute_hw_output_stencil_read
      conv_stencil.op_hcompute_conv_stencil_1_write <=> op_hcompute_conv_stencil_1.conv_stencil_op_hcompute_conv_stencil_1_write
      conv_stencil_clkwrk_dsa0.op_hcompute_conv_stencil_1_read <=> op_hcompute_conv_stencil_1.conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_1_read
      hw_input_global_wrapper_stencil.op_hcompute_conv_stencil_1_read <=> op_hcompute_conv_stencil_1.hw_input_global_wrapper_stencil_op_hcompute_conv_stencil_1_read
      conv_stencil_clkwrk_dsa0.op_hcompute_conv_stencil_write <=> op_hcompute_conv_stencil.conv_stencil_clkwrk_dsa0_op_hcompute_conv_stencil_write
      hw_input_global_wrapper_stencil.op_hcompute_hw_input_global_wrapper_stencil_write <=> op_hcompute_hw_input_global_wrapper_stencil.hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_write
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.clk_en <=> op_hcompute_hw_input_global_wrapper_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.rst_n <=> op_hcompute_hw_input_global_wrapper_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.stencil_valid <=> op_hcompute_hw_input_global_wrapper_stencil_read_start.in
      op_hcompute_hw_input_global_wrapper_stencil_exe_start.in <=> op_hcompute_hw_input_global_wrapper_stencil_port_controller.stencil_valid
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.stencil_valid <=> op_hcompute_hw_input_global_wrapper_stencil_write_start.in
      op_hcompute_hw_input_global_wrapper_stencil_read_start.out <=> self.hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read_en
      op_hcompute_hw_input_global_wrapper_stencil.hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read <=> self.hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read
      _U11.in <=> self.hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read[0]

Find top interface: clk
Find top interface: hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read
Find top interface: hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read_en
Find top interface: hw_output_stencil_op_hcompute_hw_output_stencil_write
Find top interface: hw_output_stencil_op_hcompute_hw_output_stencil_write_valid
Find top interface: reset
    Connect the read directly to write port of GLB!
    ub_hw_input_global_wrapper_stencil_BANK_0(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    op_hcompute_hw_output_stencil_port_controller(ID:_U3, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
    Connect the read directly to write port of GLB!
    op_hcompute_hw_input_global_wrapper_stencil_port_controller(ID:_U7, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
inlining op_hcompute_hw_output_stencil_write_start
inlining op_hcompute_hw_output_stencil_read_start
inlining op_hcompute_hw_output_stencil_exe_start
inlining op_hcompute_hw_input_global_wrapper_stencil_write_start
inlining op_hcompute_hw_input_global_wrapper_stencil_read_start
inlining op_hcompute_hw_input_global_wrapper_stencil_exe_start
inlining inner_compute$i2132_i2133_i131
inlining inner_compute$add_270_276_277_tree$_join_i2150_i364
inlining inner_compute$add_270_276_277_tree$opN_1$_join_i2149_i1110
inlining inner_compute$mul_hw_input_global_wrapper_stencil_1_269_270_i2139_i1461
inlining inner_compute$mul_hw_input_global_wrapper_stencil_3_273_274_i2148_i1461
inlining i2132_i2133_i131
inlining add_270_276_277_tree$_join_i2150_i364
inlining add_270_276_277_tree$opN_1$_join_i2149_i1110
inlining mul_hw_input_global_wrapper_stencil_1_269_270_i2139_i1461
inlining mul_hw_input_global_wrapper_stencil_3_273_274_i2148_i1461
inlining _U11
inlining d_reg__U1
inlining d_reg__U2
inlining op_hcompute_hw_output_stencil
inlining op_hcompute_hw_input_global_wrapper_stencil
inlining inner_compute$c0
inlining inner_compute$c0
inlining inner_compute$c1
inlining inner_compute$c2
inlining inner_compute$c3
inlining c0
inlining c0
inlining c1
inlining c2
inlining c3
inlining op_hcompute_conv_stencil_1
inlining op_hcompute_conv_stencil
inlining op_hcompute_hw_input_global_wrapper_stencil_port_controller_clk_en_const
inlining op_hcompute_hw_output_stencil_port_controller_clk_en_const
inlining ub_hw_input_global_wrapper_stencil_BANK_0_clk_en_const
inlining conv_stencil
inlining conv_stencil_clkwrk_dsa0
inlining op_hcompute_hw_input_global_wrapper_stencil_port_controller
inlining op_hcompute_hw_output_stencil_port_controller
inlining ub_hw_input_global_wrapper_stencil_BANK_0
inlining hw_input_global_wrapper_stencil
    new memory syntax transformation!
    ub_hw_input_global_wrapper_stencil_BANK_0(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Not Connecting cnst_port: rst_n
Not Connecting cnst_port: clk_en
Not Connecting cnst_port: clk
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0
Connecting cnst_port: flush
    new memory syntax transformation!
    op_hcompute_hw_output_stencil_port_controller(ID:_U3, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
Not Connecting cnst_port: rst_n
Not Connecting cnst_port: clk_en
Not Connecting cnst_port: clk
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0
Connecting output cnst_port: stencil_valid
Connecting cnst_port: flush
    new memory syntax transformation!
    op_hcompute_hw_input_global_wrapper_stencil_port_controller(ID:_U7, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
Not Connecting cnst_port: rst_n
Not Connecting cnst_port: clk_en
Not Connecting cnst_port: clk
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0
Connecting output cnst_port: stencil_valid
Connecting cnst_port: flush
    new memory syntax transformation!
    hw_input_global_wrapper_stencil$ub_hw_input_global_wrapper_stencil_BANK_0(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: flush
    Sel: rst_n
Not Connecting cnst_port: rst_n
Not Connecting cnst_port: clk_en
Not Connecting cnst_port: clk
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0
Connecting cnst_port: flush
