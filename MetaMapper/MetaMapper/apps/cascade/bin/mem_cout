program: cascade
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int conv1_s0_y = 0; conv1_s0_y < 62; conv1_s0_y++) {
    for (int conv1_s0_x = 0; conv1_s0_x < 62; conv1_s0_x++) {
      op_hcompute_conv1_stencil: conv1_stencil[conv1_s0_y, conv1_s0_x] = hcompute_conv1_stencil()
    }
  }
  for (int conv1_s1_y = 0; conv1_s1_y < 62; conv1_s1_y++) {
    for (int conv1_s1_x = 0; conv1_s1_x < 62; conv1_s1_x++) {
      op_hcompute_conv1_stencil_1: conv1_stencil[conv1_s1_y, conv1_s1_x] = hcompute_conv1_stencil_1(conv1_stencil[conv1_s1_y, conv1_s1_x], hw_input_global_wrapper_stencil[conv1_s1_y, conv1_s1_x], hw_input_global_wrapper_stencil[conv1_s1_y, (conv1_s1_x + 1)], hw_input_global_wrapper_stencil[conv1_s1_y, (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), conv1_s1_x], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), (conv1_s1_x + 1)], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), conv1_s1_x], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), (conv1_s1_x + 1)])
    }
  }
  for (int conv1_shift_s0_y = 0; conv1_shift_s0_y < 62; conv1_shift_s0_y++) {
    for (int conv1_shift_s0_x = 0; conv1_shift_s0_x < 62; conv1_shift_s0_x++) {
      op_hcompute_conv1_shift_stencil: conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] = hcompute_conv1_shift_stencil(conv1_stencil[conv1_shift_s0_y, conv1_shift_s0_x])
    }
  }
  for (int conv2_s0_y = 0; conv2_s0_y < 60; conv2_s0_y++) {
    for (int conv2_s0_x = 0; conv2_s0_x < 60; conv2_s0_x++) {
      op_hcompute_conv2_stencil: conv2_stencil[conv2_s0_y, conv2_s0_x] = hcompute_conv2_stencil()
    }
  }
  for (int conv2_s1_y = 0; conv2_s1_y < 60; conv2_s1_y++) {
    for (int conv2_s1_x = 0; conv2_s1_x < 60; conv2_s1_x++) {
      op_hcompute_conv2_stencil_1: conv2_stencil[conv2_s1_y, conv2_s1_x] = hcompute_conv2_stencil_1(conv1_shift_stencil[conv2_s1_y, conv2_s1_x], conv1_shift_stencil[conv2_s1_y, (conv2_s1_x + 1)], conv1_shift_stencil[conv2_s1_y, (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 1), conv2_s1_x], conv1_shift_stencil[(conv2_s1_y + 1), (conv2_s1_x + 1)], conv1_shift_stencil[(conv2_s1_y + 1), (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 2), conv2_s1_x], conv1_shift_stencil[(conv2_s1_y + 2), (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 2), (conv2_s1_x + 1)], conv2_stencil[conv2_s1_y, conv2_s1_x])
    }
  }
  for (int hw_output_s0_y_xo = 0; hw_output_s0_y_xo < 60; hw_output_s0_y_xo++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 60; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv2_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi])
    }
  }
}
Is rate matchable
reduced kernel : conv1_stencil
reduced kernel : conv2_stencil
insert kernel: conv1_s0_y to producer buffer: conv1_stencil
insert kernel: conv1_s1_y to producer buffer: conv1_stencil
insert kernel: conv1_shift_s0_y to producer buffer: conv1_shift_stencil
insert kernel: conv2_s0_y to producer buffer: conv2_stencil
insert kernel: conv2_s1_y to producer buffer: conv2_stencil
insert kernel: hw_input_global_wrapper_s0_y to producer buffer: hw_input_global_wrapper_stencil
insert kernel: hw_output_s0_y_xo to producer buffer: hw_output_stencil
Producer kernels...
  conv1_shift_stencil -> conv1_shift_s0_y 
  conv1_stencil -> conv1_s0_y conv1_s1_y 
    MULTIPLE PRODUCERS
  conv2_stencil -> conv2_s0_y conv2_s1_y 
    MULTIPLE PRODUCERS
  hw_input_global_wrapper_stencil -> hw_input_global_wrapper_s0_y 
  hw_output_stencil -> hw_output_s0_y_xo 
conv1_stencil has 2 producers
  conv1_s0_y
  conv1_s1_y
program: cascade
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int conv1_s0_y = 0; conv1_s0_y < 62; conv1_s0_y++) {
    for (int conv1_s0_x = 0; conv1_s0_x < 62; conv1_s0_x++) {
      op_hcompute_conv1_stencil: conv1_stencil[conv1_s0_y, conv1_s0_x] = hcompute_conv1_stencil()
    }
  }
  for (int conv1_s1_y = 0; conv1_s1_y < 62; conv1_s1_y++) {
    for (int conv1_s1_x = 0; conv1_s1_x < 62; conv1_s1_x++) {
      op_hcompute_conv1_stencil_1: conv1_stencil[conv1_s1_y, conv1_s1_x] = hcompute_conv1_stencil_1(conv1_stencil[conv1_s1_y, conv1_s1_x], hw_input_global_wrapper_stencil[conv1_s1_y, conv1_s1_x], hw_input_global_wrapper_stencil[conv1_s1_y, (conv1_s1_x + 1)], hw_input_global_wrapper_stencil[conv1_s1_y, (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), conv1_s1_x], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), (conv1_s1_x + 1)], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), conv1_s1_x], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), (conv1_s1_x + 1)])
    }
  }
  for (int conv1_shift_s0_y = 0; conv1_shift_s0_y < 62; conv1_shift_s0_y++) {
    for (int conv1_shift_s0_x = 0; conv1_shift_s0_x < 62; conv1_shift_s0_x++) {
      op_hcompute_conv1_shift_stencil: conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] = hcompute_conv1_shift_stencil(conv1_stencil[conv1_shift_s0_y, conv1_shift_s0_x])
    }
  }
  for (int conv2_s0_y = 0; conv2_s0_y < 60; conv2_s0_y++) {
    for (int conv2_s0_x = 0; conv2_s0_x < 60; conv2_s0_x++) {
      op_hcompute_conv2_stencil: conv2_stencil[conv2_s0_y, conv2_s0_x] = hcompute_conv2_stencil()
    }
  }
  for (int conv2_s1_y = 0; conv2_s1_y < 60; conv2_s1_y++) {
    for (int conv2_s1_x = 0; conv2_s1_x < 60; conv2_s1_x++) {
      op_hcompute_conv2_stencil_1: conv2_stencil[conv2_s1_y, conv2_s1_x] = hcompute_conv2_stencil_1(conv1_shift_stencil[conv2_s1_y, conv2_s1_x], conv1_shift_stencil[conv2_s1_y, (conv2_s1_x + 1)], conv1_shift_stencil[conv2_s1_y, (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 1), conv2_s1_x], conv1_shift_stencil[(conv2_s1_y + 1), (conv2_s1_x + 1)], conv1_shift_stencil[(conv2_s1_y + 1), (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 2), conv2_s1_x], conv1_shift_stencil[(conv2_s1_y + 2), (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 2), (conv2_s1_x + 1)], conv2_stencil[conv2_s1_y, conv2_s1_x])
    }
  }
  for (int hw_output_s0_y_xo = 0; hw_output_s0_y_xo < 60; hw_output_s0_y_xo++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 60; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv2_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi])
    }
  }
}
conv1_stencil has 2 producers
  conv1_s0_y
  conv1_s1_y
program: cascade
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int conv1_s0_y = 0; conv1_s0_y < 62; conv1_s0_y++) {
    for (int conv1_s0_x = 0; conv1_s0_x < 62; conv1_s0_x++) {
      op_hcompute_conv1_stencil: conv1_stencil[conv1_s0_y, conv1_s0_x] = hcompute_conv1_stencil()
    }
  }
  for (int conv1_s1_y = 0; conv1_s1_y < 62; conv1_s1_y++) {
    for (int conv1_s1_x = 0; conv1_s1_x < 62; conv1_s1_x++) {
      op_hcompute_conv1_stencil_1: conv1_stencil[conv1_s1_y, conv1_s1_x] = hcompute_conv1_stencil_1(conv1_stencil[conv1_s1_y, conv1_s1_x], hw_input_global_wrapper_stencil[conv1_s1_y, conv1_s1_x], hw_input_global_wrapper_stencil[conv1_s1_y, (conv1_s1_x + 1)], hw_input_global_wrapper_stencil[conv1_s1_y, (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), conv1_s1_x], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), (conv1_s1_x + 1)], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), conv1_s1_x], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), (conv1_s1_x + 1)])
    }
  }
  for (int conv1_shift_s0_y = 0; conv1_shift_s0_y < 62; conv1_shift_s0_y++) {
    for (int conv1_shift_s0_x = 0; conv1_shift_s0_x < 62; conv1_shift_s0_x++) {
      op_hcompute_conv1_shift_stencil: conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] = hcompute_conv1_shift_stencil(conv1_stencil[conv1_shift_s0_y, conv1_shift_s0_x])
    }
  }
  for (int conv2_s0_y = 0; conv2_s0_y < 60; conv2_s0_y++) {
    for (int conv2_s0_x = 0; conv2_s0_x < 60; conv2_s0_x++) {
      op_hcompute_conv2_stencil: conv2_stencil[conv2_s0_y, conv2_s0_x] = hcompute_conv2_stencil()
    }
  }
  for (int conv2_s1_y = 0; conv2_s1_y < 60; conv2_s1_y++) {
    for (int conv2_s1_x = 0; conv2_s1_x < 60; conv2_s1_x++) {
      op_hcompute_conv2_stencil_1: conv2_stencil[conv2_s1_y, conv2_s1_x] = hcompute_conv2_stencil_1(conv1_shift_stencil[conv2_s1_y, conv2_s1_x], conv1_shift_stencil[conv2_s1_y, (conv2_s1_x + 1)], conv1_shift_stencil[conv2_s1_y, (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 1), conv2_s1_x], conv1_shift_stencil[(conv2_s1_y + 1), (conv2_s1_x + 1)], conv1_shift_stencil[(conv2_s1_y + 1), (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 2), conv2_s1_x], conv1_shift_stencil[(conv2_s1_y + 2), (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 2), (conv2_s1_x + 1)], conv2_stencil[conv2_s1_y, conv2_s1_x])
    }
  }
  for (int hw_output_s0_y_xo = 0; hw_output_s0_y_xo < 60; hw_output_s0_y_xo++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 60; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv2_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi])
    }
  }
}
conv2_stencil has 2 producers
  conv2_s0_y
  conv2_s1_y
program: cascade
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int conv1_s0_y = 0; conv1_s0_y < 62; conv1_s0_y++) {
    for (int conv1_s0_x = 0; conv1_s0_x < 62; conv1_s0_x++) {
      op_hcompute_conv1_stencil: conv1_stencil[conv1_s0_y, conv1_s0_x] = hcompute_conv1_stencil()
    }
  }
  for (int conv1_s1_y = 0; conv1_s1_y < 62; conv1_s1_y++) {
    for (int conv1_s1_x = 0; conv1_s1_x < 62; conv1_s1_x++) {
      op_hcompute_conv1_stencil_1: conv1_stencil[conv1_s1_y, conv1_s1_x] = hcompute_conv1_stencil_1(conv1_stencil[conv1_s1_y, conv1_s1_x], hw_input_global_wrapper_stencil[conv1_s1_y, conv1_s1_x], hw_input_global_wrapper_stencil[conv1_s1_y, (conv1_s1_x + 1)], hw_input_global_wrapper_stencil[conv1_s1_y, (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), conv1_s1_x], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), (conv1_s1_x + 1)], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), conv1_s1_x], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), (conv1_s1_x + 1)])
    }
  }
  for (int conv1_shift_s0_y = 0; conv1_shift_s0_y < 62; conv1_shift_s0_y++) {
    for (int conv1_shift_s0_x = 0; conv1_shift_s0_x < 62; conv1_shift_s0_x++) {
      op_hcompute_conv1_shift_stencil: conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] = hcompute_conv1_shift_stencil(conv1_stencil[conv1_shift_s0_y, conv1_shift_s0_x])
    }
  }
  for (int conv2_s0_y = 0; conv2_s0_y < 60; conv2_s0_y++) {
    for (int conv2_s0_x = 0; conv2_s0_x < 60; conv2_s0_x++) {
      op_hcompute_conv2_stencil: conv2_stencil[conv2_s0_y, conv2_s0_x] = hcompute_conv2_stencil()
    }
  }
  for (int conv2_s1_y = 0; conv2_s1_y < 60; conv2_s1_y++) {
    for (int conv2_s1_x = 0; conv2_s1_x < 60; conv2_s1_x++) {
      op_hcompute_conv2_stencil_1: conv2_stencil[conv2_s1_y, conv2_s1_x] = hcompute_conv2_stencil_1(conv1_shift_stencil[conv2_s1_y, conv2_s1_x], conv1_shift_stencil[conv2_s1_y, (conv2_s1_x + 1)], conv1_shift_stencil[conv2_s1_y, (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 1), conv2_s1_x], conv1_shift_stencil[(conv2_s1_y + 1), (conv2_s1_x + 1)], conv1_shift_stencil[(conv2_s1_y + 1), (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 2), conv2_s1_x], conv1_shift_stencil[(conv2_s1_y + 2), (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 2), (conv2_s1_x + 1)], conv2_stencil[conv2_s1_y, conv2_s1_x])
    }
  }
  for (int hw_output_s0_y_xo = 0; hw_output_s0_y_xo < 60; hw_output_s0_y_xo++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 60; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv2_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi])
    }
  }
}
conv2_stencil has 2 producers
  conv2_s0_y
  conv2_s1_y
program: cascade
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int conv1_s0_y = 0; conv1_s0_y < 62; conv1_s0_y++) {
    for (int conv1_s0_x = 0; conv1_s0_x < 62; conv1_s0_x++) {
      op_hcompute_conv1_stencil: conv1_stencil[conv1_s0_y, conv1_s0_x] = hcompute_conv1_stencil()
    }
  }
  for (int conv1_s1_y = 0; conv1_s1_y < 62; conv1_s1_y++) {
    for (int conv1_s1_x = 0; conv1_s1_x < 62; conv1_s1_x++) {
      op_hcompute_conv1_stencil_1: conv1_stencil[conv1_s1_y, conv1_s1_x] = hcompute_conv1_stencil_1(conv1_stencil[conv1_s1_y, conv1_s1_x], hw_input_global_wrapper_stencil[conv1_s1_y, conv1_s1_x], hw_input_global_wrapper_stencil[conv1_s1_y, (conv1_s1_x + 1)], hw_input_global_wrapper_stencil[conv1_s1_y, (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), conv1_s1_x], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), (conv1_s1_x + 1)], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), conv1_s1_x], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), (conv1_s1_x + 1)])
    }
  }
  for (int conv1_shift_s0_y = 0; conv1_shift_s0_y < 62; conv1_shift_s0_y++) {
    for (int conv1_shift_s0_x = 0; conv1_shift_s0_x < 62; conv1_shift_s0_x++) {
      op_hcompute_conv1_shift_stencil: conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] = hcompute_conv1_shift_stencil(conv1_stencil[conv1_shift_s0_y, conv1_shift_s0_x])
    }
  }
  for (int conv2_s0_y = 0; conv2_s0_y < 60; conv2_s0_y++) {
    for (int conv2_s0_x = 0; conv2_s0_x < 60; conv2_s0_x++) {
      op_hcompute_conv2_stencil: conv2_stencil[conv2_s0_y, conv2_s0_x] = hcompute_conv2_stencil()
    }
  }
  for (int conv2_s1_y = 0; conv2_s1_y < 60; conv2_s1_y++) {
    for (int conv2_s1_x = 0; conv2_s1_x < 60; conv2_s1_x++) {
      op_hcompute_conv2_stencil_1: conv2_stencil[conv2_s1_y, conv2_s1_x] = hcompute_conv2_stencil_1(conv1_shift_stencil[conv2_s1_y, conv2_s1_x], conv1_shift_stencil[conv2_s1_y, (conv2_s1_x + 1)], conv1_shift_stencil[conv2_s1_y, (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 1), conv2_s1_x], conv1_shift_stencil[(conv2_s1_y + 1), (conv2_s1_x + 1)], conv1_shift_stencil[(conv2_s1_y + 1), (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 2), conv2_s1_x], conv1_shift_stencil[(conv2_s1_y + 2), (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 2), (conv2_s1_x + 1)], conv2_stencil[conv2_s1_y, conv2_s1_x])
    }
  }
  for (int hw_output_s0_y_xo = 0; hw_output_s0_y_xo < 60; hw_output_s0_y_xo++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 60; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv2_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi])
    }
  }
}
Multi-write buffers
  conv1_stencil
  conv2_stencil
Built initializer / update maps
  # multi_write buffers = 2
program: cascade
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int conv1_s0_y = 0; conv1_s0_y < 62; conv1_s0_y++) {
    for (int conv1_s0_x = 0; conv1_s0_x < 62; conv1_s0_x++) {
      op_hcompute_conv1_stencil: conv1_stencil_clkwrk_dsa0[conv1_s0_y, conv1_s0_x] = hcompute_conv1_stencil()
    }
  }
  for (int conv1_s1_y = 0; conv1_s1_y < 62; conv1_s1_y++) {
    for (int conv1_s1_x = 0; conv1_s1_x < 62; conv1_s1_x++) {
      op_hcompute_conv1_stencil_1: conv1_stencil[conv1_s1_y, conv1_s1_x] = hcompute_conv1_stencil_1(conv1_stencil_clkwrk_dsa0[conv1_s1_y, conv1_s1_x], hw_input_global_wrapper_stencil[conv1_s1_y, conv1_s1_x], hw_input_global_wrapper_stencil[conv1_s1_y, (conv1_s1_x + 1)], hw_input_global_wrapper_stencil[conv1_s1_y, (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), conv1_s1_x], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), (conv1_s1_x + 1)], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), conv1_s1_x], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), (conv1_s1_x + 1)])
    }
  }
  for (int conv1_shift_s0_y = 0; conv1_shift_s0_y < 62; conv1_shift_s0_y++) {
    for (int conv1_shift_s0_x = 0; conv1_shift_s0_x < 62; conv1_shift_s0_x++) {
      op_hcompute_conv1_shift_stencil: conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] = hcompute_conv1_shift_stencil(conv1_stencil[conv1_shift_s0_y, conv1_shift_s0_x])
    }
  }
  for (int conv2_s0_y = 0; conv2_s0_y < 60; conv2_s0_y++) {
    for (int conv2_s0_x = 0; conv2_s0_x < 60; conv2_s0_x++) {
      op_hcompute_conv2_stencil: conv2_stencil_clkwrk_dsa1[conv2_s0_y, conv2_s0_x] = hcompute_conv2_stencil()
    }
  }
  for (int conv2_s1_y = 0; conv2_s1_y < 60; conv2_s1_y++) {
    for (int conv2_s1_x = 0; conv2_s1_x < 60; conv2_s1_x++) {
      op_hcompute_conv2_stencil_1: conv2_stencil[conv2_s1_y, conv2_s1_x] = hcompute_conv2_stencil_1(conv1_shift_stencil[conv2_s1_y, conv2_s1_x], conv1_shift_stencil[conv2_s1_y, (conv2_s1_x + 1)], conv1_shift_stencil[conv2_s1_y, (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 1), conv2_s1_x], conv1_shift_stencil[(conv2_s1_y + 1), (conv2_s1_x + 1)], conv1_shift_stencil[(conv2_s1_y + 1), (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 2), conv2_s1_x], conv1_shift_stencil[(conv2_s1_y + 2), (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 2), (conv2_s1_x + 1)], conv2_stencil_clkwrk_dsa1[conv2_s1_y, conv2_s1_x])
    }
  }
  for (int hw_output_s0_y_xo = 0; hw_output_s0_y_xo < 60; hw_output_s0_y_xo++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 60; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv2_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi])
    }
  }
}
Unoptimized schedule...
  : { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
{
  for (int c3 = 0; c3 <= 63; c3 += 1)
    for (int c5 = 0; c5 <= 63; c5 += 1)
      op_hcompute_hw_input_global_wrapper_stencil(0, c3, c5);
  for (int c3 = 0; c3 <= 61; c3 += 1)
    for (int c5 = 0; c5 <= 61; c5 += 1)
      op_hcompute_conv1_stencil(0, c3, c5);
  for (int c3 = 0; c3 <= 61; c3 += 1)
    for (int c5 = 0; c5 <= 61; c5 += 1)
      op_hcompute_conv1_stencil_1(0, c3, c5);
  for (int c3 = 0; c3 <= 61; c3 += 1)
    for (int c5 = 0; c5 <= 61; c5 += 1)
      op_hcompute_conv1_shift_stencil(0, c3, c5);
  for (int c3 = 0; c3 <= 59; c3 += 1)
    for (int c5 = 0; c5 <= 59; c5 += 1)
      op_hcompute_conv2_stencil(0, c3, c5);
  for (int c3 = 0; c3 <= 59; c3 += 1)
    for (int c5 = 0; c5 <= 59; c5 += 1)
      op_hcompute_conv2_stencil_1(0, c3, c5);
  for (int c3 = 0; c3 <= 59; c3 += 1)
    for (int c5 = 0; c5 <= 59; c5 += 1)
      op_hcompute_hw_output_stencil(0, c3, c5);
}
Creating ports for op: hw_output_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] }
	Adding output port: hw_output_stencil_op_hcompute_hw_output_stencil_0
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
current out port name: 
	hw_output_stencil_op_hcompute_hw_output_stencil_0
Creating ports for op: conv2_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> conv2_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] }
	Adding output port: conv2_stencil_op_hcompute_hw_output_stencil_1
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> conv2_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_hw_output_stencil
  other_dspace_id = op_hcompute_hw_output_stencil
  Schedule domain set: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
  Domain set from prg: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
  ITS: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
ITS      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
current out port name: 
	conv2_stencil_op_hcompute_hw_output_stencil_1
Creating ports for op: hw_input_global_wrapper_stencil
cond = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
		Consumed: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Creating ports for op: hw_input_stencil
cond = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
	Adding output port: hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_3
		Consumed: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_hw_input_global_wrapper_stencil
  other_dspace_id = op_hcompute_hw_input_global_wrapper_stencil
  Schedule domain set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  Domain set from prg: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  ITS: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
ITS      : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
current out port name: 
	hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_3
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv2_stencil[conv2_s1_y, conv2_s1_x] }
	Adding output port: conv2_stencil_op_hcompute_conv2_stencil_1_4
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv2_stencil[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv2_stencil_op_hcompute_conv2_stencil_1_4
Creating ports for op: conv1_shift_stencil
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, conv2_s1_x] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_5
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv2_stencil_1_5
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, (conv2_s1_x + 1)] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_6
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv2_stencil_1_5	conv1_shift_stencil_op_hcompute_conv2_stencil_1_6
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, (conv2_s1_x + 2)] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv2_stencil_1_5	conv1_shift_stencil_op_hcompute_conv2_stencil_1_6	conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[(conv2_s1_y + 1), conv2_s1_x] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_8
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv2_stencil_1_5	conv1_shift_stencil_op_hcompute_conv2_stencil_1_6	conv1_shift_stencil_op_hcompute_conv2_stencil_1_7	conv1_shift_stencil_op_hcompute_conv2_stencil_1_8
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[(conv2_s1_y + 1), (conv2_s1_x + 1)] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv2_stencil_1_5	conv1_shift_stencil_op_hcompute_conv2_stencil_1_6	conv1_shift_stencil_op_hcompute_conv2_stencil_1_7	conv1_shift_stencil_op_hcompute_conv2_stencil_1_8	conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[(conv2_s1_y + 1), (conv2_s1_x + 2)] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv2_stencil_1_10	conv1_shift_stencil_op_hcompute_conv2_stencil_1_5	conv1_shift_stencil_op_hcompute_conv2_stencil_1_6	conv1_shift_stencil_op_hcompute_conv2_stencil_1_7	conv1_shift_stencil_op_hcompute_conv2_stencil_1_8	conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[(conv2_s1_y + 2), conv2_s1_x] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_11
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv2_stencil_1_10	conv1_shift_stencil_op_hcompute_conv2_stencil_1_11	conv1_shift_stencil_op_hcompute_conv2_stencil_1_5	conv1_shift_stencil_op_hcompute_conv2_stencil_1_6	conv1_shift_stencil_op_hcompute_conv2_stencil_1_7	conv1_shift_stencil_op_hcompute_conv2_stencil_1_8	conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[(conv2_s1_y + 2), (conv2_s1_x + 2)] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_12
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv2_stencil_1_10	conv1_shift_stencil_op_hcompute_conv2_stencil_1_11	conv1_shift_stencil_op_hcompute_conv2_stencil_1_12	conv1_shift_stencil_op_hcompute_conv2_stencil_1_5	conv1_shift_stencil_op_hcompute_conv2_stencil_1_6	conv1_shift_stencil_op_hcompute_conv2_stencil_1_7	conv1_shift_stencil_op_hcompute_conv2_stencil_1_8	conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[(conv2_s1_y + 2), (conv2_s1_x + 1)] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_13
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv2_stencil_1_10	conv1_shift_stencil_op_hcompute_conv2_stencil_1_11	conv1_shift_stencil_op_hcompute_conv2_stencil_1_12	conv1_shift_stencil_op_hcompute_conv2_stencil_1_13	conv1_shift_stencil_op_hcompute_conv2_stencil_1_5	conv1_shift_stencil_op_hcompute_conv2_stencil_1_6	conv1_shift_stencil_op_hcompute_conv2_stencil_1_7	conv1_shift_stencil_op_hcompute_conv2_stencil_1_8	conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
Creating ports for op: conv2_stencil_clkwrk_dsa1
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv2_stencil_clkwrk_dsa1[conv2_s1_y, conv2_s1_x] }
	Adding output port: conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv2_stencil_clkwrk_dsa1[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14
cond = { op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> conv2_stencil_clkwrk_dsa1[conv2_s0_y, conv2_s0_x] }
	Adding output port: conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
		Consumed: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> conv2_stencil_clkwrk_dsa1[conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
current out port name: 
	conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
Creating ports for op: conv1_stencil
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> conv1_stencil[conv1_s1_y, conv1_s1_x] }
	Adding output port: conv1_stencil_op_hcompute_conv1_stencil_1_16
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> conv1_stencil[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	conv1_stencil_op_hcompute_conv1_stencil_1_16
Creating ports for op: conv1_stencil_clkwrk_dsa0
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> conv1_stencil_clkwrk_dsa0[conv1_s1_y, conv1_s1_x] }
	Adding output port: conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> conv1_stencil_clkwrk_dsa0[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, conv1_s1_x] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, (conv1_s1_x + 1)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, (conv1_s1_x + 2)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[(conv1_s1_y + 1), conv1_s1_x] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[(conv1_s1_y + 1), (conv1_s1_x + 1)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[(conv1_s1_y + 1), (conv1_s1_x + 2)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[(conv1_s1_y + 2), conv1_s1_x] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[(conv1_s1_y + 2), (conv1_s1_x + 2)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[(conv1_s1_y + 2), (conv1_s1_x + 1)] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26
cond = { op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> conv1_stencil_clkwrk_dsa0[conv1_s0_y, conv1_s0_x] }
	Adding output port: conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
		Consumed: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> conv1_stencil_clkwrk_dsa0[conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
current out port name: 
	conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
cond = { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
		Consumed: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
cond = { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_stencil[conv1_shift_s0_y, conv1_shift_s0_x] }
	Adding output port: conv1_stencil_op_hcompute_conv1_shift_stencil_29
		Consumed: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
Opt sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [0, 0, 1, conv1_s0_y, 0, conv1_s0_x, 0] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [0, 0, 5, conv2_s1_y, 0, conv2_s1_x, 0] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [0, 0, 2, conv1_s1_y, 0, conv1_s1_x, 0] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [0, 0, 0, hw_input_global_wrapper_s0_y, 0, hw_input_global_wrapper_s0_x, 0] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [0, 0, 4, conv2_s0_y, 0, conv2_s0_x, 0] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [0, 0, 6, hw_output_s0_y_xo, 0, hw_output_s0_x_xi, 0] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom      : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_shift_stencil
  other_dspace_id = op_hcompute_conv1_shift_stencil
  Schedule domain set: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
  ITS: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
ITS      : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [0, 0, 3, conv1_shift_s0_y, 0, conv1_shift_s0_x, 0] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
current out port name: 
	conv1_stencil_op_hcompute_conv1_shift_stencil_29
generating banks for buffer: conv1_shift_stencil
getting rddom
rddom = { conv1_shift_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Adding bank between conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 and conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
Adding bank between conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 and conv1_shift_stencil_op_hcompute_conv2_stencil_1_11
Adding bank between conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 and conv1_shift_stencil_op_hcompute_conv2_stencil_1_12
Adding bank between conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 and conv1_shift_stencil_op_hcompute_conv2_stencil_1_13
Adding bank between conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 and conv1_shift_stencil_op_hcompute_conv2_stencil_1_5
Adding bank between conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 and conv1_shift_stencil_op_hcompute_conv2_stencil_1_6
Adding bank between conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 and conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
Adding bank between conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 and conv1_shift_stencil_op_hcompute_conv2_stencil_1_8
Adding bank between conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 and conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
Done generating register-file style banks for conv1_shift_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: conv1_shift_stencil_all_inputs_to_all_outputs
	input: 
    conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
	 output: 
    conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
    conv1_shift_stencil_op_hcompute_conv2_stencil_1_11
    conv1_shift_stencil_op_hcompute_conv2_stencil_1_12
    conv1_shift_stencil_op_hcompute_conv2_stencil_1_13
    conv1_shift_stencil_op_hcompute_conv2_stencil_1_5
    conv1_shift_stencil_op_hcompute_conv2_stencil_1_6
    conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
    conv1_shift_stencil_op_hcompute_conv2_stencil_1_8
    conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
extracting box from { conv1_shift_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
extracting box from { conv1_shift_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Constraint aff with div: { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(conv1_shift_s0_y)] }
cg = (((1*conv1_shift_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(61 - conv1_shift_s0_y)] }
cg = (((61 + -1*conv1_shift_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(conv1_shift_s0_x)] }
cg = (((1*conv1_shift_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(61 - conv1_shift_s0_x)] }
cg = (((61 + -1*conv1_shift_s0_x)) >= 0)
Input port:conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28, Get ram string: (((1*conv1_shift_s0_y)) - 0) * 1 + (((1*conv1_shift_s0_x)) - 0) * 62
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_y)] }
cg = (((1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_y)] }
cg = (((59 + -1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_x)] }
cg = (((1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_x)] }
cg = (((59 + -1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_y)] }
cg = (((1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_y)] }
cg = (((59 + -1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_x)] }
cg = (((1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_x)] }
cg = (((59 + -1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_y)] }
cg = (((1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_y)] }
cg = (((59 + -1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_x)] }
cg = (((1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_x)] }
cg = (((59 + -1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_y)] }
cg = (((1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_y)] }
cg = (((59 + -1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_x)] }
cg = (((1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_x)] }
cg = (((59 + -1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_y)] }
cg = (((1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_y)] }
cg = (((59 + -1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_x)] }
cg = (((1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_x)] }
cg = (((59 + -1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_y)] }
cg = (((1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_y)] }
cg = (((59 + -1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_x)] }
cg = (((1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_x)] }
cg = (((59 + -1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_y)] }
cg = (((1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_y)] }
cg = (((59 + -1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_x)] }
cg = (((1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_x)] }
cg = (((59 + -1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_y)] }
cg = (((1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_y)] }
cg = (((59 + -1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_x)] }
cg = (((1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_x)] }
cg = (((59 + -1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_y)] }
cg = (((1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_y)] }
cg = (((59 + -1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_x)] }
cg = (((1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_x)] }
cg = (((59 + -1*conv2_s1_x)) >= 0)
generating banks for buffer: conv1_stencil
getting rddom
rddom = { conv1_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Adding bank between conv1_stencil_op_hcompute_conv1_stencil_1_16 and conv1_stencil_op_hcompute_conv1_shift_stencil_29
Done generating register-file style banks for conv1_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: conv1_stencil_all_inputs_to_all_outputs
	input: 
    conv1_stencil_op_hcompute_conv1_stencil_1_16
	 output: 
    conv1_stencil_op_hcompute_conv1_shift_stencil_29
extracting box from { conv1_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
extracting box from { conv1_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_y)] }
cg = (((1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_y)] }
cg = (((61 + -1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_x)] }
cg = (((1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_x)] }
cg = (((61 + -1*conv1_s1_x)) >= 0)
Input port:conv1_stencil_op_hcompute_conv1_stencil_1_16, Get ram string: (((1*conv1_s1_y)) - 0) * 1 + (((1*conv1_s1_x)) - 0) * 62
Constraint aff with div: { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(conv1_shift_s0_y)] }
cg = (((1*conv1_shift_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(61 - conv1_shift_s0_y)] }
cg = (((61 + -1*conv1_shift_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(conv1_shift_s0_x)] }
cg = (((1*conv1_shift_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(61 - conv1_shift_s0_x)] }
cg = (((61 + -1*conv1_shift_s0_x)) >= 0)
generating banks for buffer: conv1_stencil_clkwrk_dsa0
getting rddom
rddom = { conv1_stencil_clkwrk_dsa0[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Adding bank between conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27 and conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17
Done generating register-file style banks for conv1_stencil_clkwrk_dsa0, bank list size = 1
  after banking there are 1 banks
  Bank name: conv1_stencil_clkwrk_dsa0_all_inputs_to_all_outputs
	input: 
    conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
	 output: 
    conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17
extracting box from { conv1_stencil_clkwrk_dsa0[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
extracting box from { conv1_stencil_clkwrk_dsa0[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
Constraint aff with div: { op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [(conv1_s0_y)] }
cg = (((1*conv1_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [(61 - conv1_s0_y)] }
cg = (((61 + -1*conv1_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [(conv1_s0_x)] }
cg = (((1*conv1_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [(61 - conv1_s0_x)] }
cg = (((61 + -1*conv1_s0_x)) >= 0)
Input port:conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27, Get ram string: (((1*conv1_s0_y)) - 0) * 1 + (((1*conv1_s0_x)) - 0) * 62
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_y)] }
cg = (((1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_y)] }
cg = (((61 + -1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_x)] }
cg = (((1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_x)] }
cg = (((61 + -1*conv1_s1_x)) >= 0)
generating banks for buffer: conv2_stencil
getting rddom
rddom = { conv2_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Adding bank between conv2_stencil_op_hcompute_conv2_stencil_1_4 and conv2_stencil_op_hcompute_hw_output_stencil_1
Done generating register-file style banks for conv2_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: conv2_stencil_all_inputs_to_all_outputs
	input: 
    conv2_stencil_op_hcompute_conv2_stencil_1_4
	 output: 
    conv2_stencil_op_hcompute_hw_output_stencil_1
extracting box from { conv2_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
extracting box from { conv2_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_y)] }
cg = (((1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_y)] }
cg = (((59 + -1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_x)] }
cg = (((1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_x)] }
cg = (((59 + -1*conv2_s1_x)) >= 0)
Input port:conv2_stencil_op_hcompute_conv2_stencil_1_4, Get ram string: (((1*conv2_s1_y)) - 0) * 1 + (((1*conv2_s1_x)) - 0) * 60
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [(hw_output_s0_y_xo)] }
cg = (((1*hw_output_s0_y_xo)) >= 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [(59 - hw_output_s0_y_xo)] }
cg = (((59 + -1*hw_output_s0_y_xo)) >= 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
cg = (((1*hw_output_s0_x_xi)) >= 0)
Constraint aff with div: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [(59 - hw_output_s0_x_xi)] }
cg = (((59 + -1*hw_output_s0_x_xi)) >= 0)
generating banks for buffer: conv2_stencil_clkwrk_dsa1
getting rddom
rddom = { conv2_stencil_clkwrk_dsa1[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Adding bank between conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15 and conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14
Done generating register-file style banks for conv2_stencil_clkwrk_dsa1, bank list size = 1
  after banking there are 1 banks
  Bank name: conv2_stencil_clkwrk_dsa1_all_inputs_to_all_outputs
	input: 
    conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
	 output: 
    conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14
extracting box from { conv2_stencil_clkwrk_dsa1[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
extracting box from { conv2_stencil_clkwrk_dsa1[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Constraint aff with div: { op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [(conv2_s0_y)] }
cg = (((1*conv2_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [(59 - conv2_s0_y)] }
cg = (((59 + -1*conv2_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [(conv2_s0_x)] }
cg = (((1*conv2_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [(59 - conv2_s0_x)] }
cg = (((59 + -1*conv2_s0_x)) >= 0)
Input port:conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15, Get ram string: (((1*conv2_s0_y)) - 0) * 1 + (((1*conv2_s0_x)) - 0) * 60
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_y)] }
cg = (((1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_y)] }
cg = (((59 + -1*conv2_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(conv2_s1_x)] }
cg = (((1*conv2_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [(59 - conv2_s1_x)] }
cg = (((59 + -1*conv2_s1_x)) >= 0)
generating banks for buffer: hw_input_global_wrapper_stencil
getting rddom
rddom = { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25
Adding bank between hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 and hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26
Done generating register-file style banks for hw_input_global_wrapper_stencil, bank list size = 1
  after banking there are 1 banks
  Bank name: hw_input_global_wrapper_stencil_all_inputs_to_all_outputs
	input: 
    hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	 output: 
    hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18
    hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19
    hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
    hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21
    hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22
    hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
    hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24
    hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25
    hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26
extracting box from { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
extracting box from { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_y)] }
cg = (((1*hw_input_global_wrapper_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(63 - hw_input_global_wrapper_s0_y)] }
cg = (((63 + -1*hw_input_global_wrapper_s0_y)) >= 0)
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_x)] }
cg = (((1*hw_input_global_wrapper_s0_x)) >= 0)
Constraint aff with div: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(63 - hw_input_global_wrapper_s0_x)] }
cg = (((63 + -1*hw_input_global_wrapper_s0_x)) >= 0)
Input port:hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2, Get ram string: (((1*hw_input_global_wrapper_s0_y)) - 0) * 1 + (((1*hw_input_global_wrapper_s0_x)) - 0) * 64
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_y)] }
cg = (((1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_y)] }
cg = (((61 + -1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_x)] }
cg = (((1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_x)] }
cg = (((61 + -1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_y)] }
cg = (((1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_y)] }
cg = (((61 + -1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_x)] }
cg = (((1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_x)] }
cg = (((61 + -1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_y)] }
cg = (((1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_y)] }
cg = (((61 + -1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_x)] }
cg = (((1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_x)] }
cg = (((61 + -1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_y)] }
cg = (((1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_y)] }
cg = (((61 + -1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_x)] }
cg = (((1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_x)] }
cg = (((61 + -1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_y)] }
cg = (((1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_y)] }
cg = (((61 + -1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_x)] }
cg = (((1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_x)] }
cg = (((61 + -1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_y)] }
cg = (((1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_y)] }
cg = (((61 + -1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_x)] }
cg = (((1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_x)] }
cg = (((61 + -1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_y)] }
cg = (((1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_y)] }
cg = (((61 + -1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_x)] }
cg = (((1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_x)] }
cg = (((61 + -1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_y)] }
cg = (((1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_y)] }
cg = (((61 + -1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_x)] }
cg = (((1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_x)] }
cg = (((61 + -1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(root)] }
cg = (((1*root)) == 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_y)] }
cg = (((1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_y)] }
cg = (((61 + -1*conv1_s1_y)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(conv1_s1_x)] }
cg = (((1*conv1_s1_x)) >= 0)
Constraint aff with div: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [(61 - conv1_s1_x)] }
cg = (((61 + -1*conv1_s1_x)) >= 0)
Prog: unoptimized_cascade
Generating compute for: op_hcompute_hw_input_global_wrapper_stencil
Got srcs
Got iteration variables
got in_buffers
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_conv1_stencil
Got srcs
Got iteration variables
got in_buffers
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_conv1_stencil_1
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_conv1_stencil_1
op = op_hcompute_conv1_stencil_1
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_conv1_shift_stencil
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_conv1_shift_stencil
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_conv2_stencil
Got srcs
Got iteration variables
got in_buffers
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_conv2_stencil_1
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_conv2_stencil_1
op = op_hcompute_conv2_stencil_1
created res
finding out buffers
Checking if program is a boundary
Generating compute for: op_hcompute_hw_output_stencil
Got srcs
Got iteration variables
got in_buffers
op = op_hcompute_hw_output_stencil
created res
finding out buffers
Checking if program is a boundary
Trying to find hw_input_stencil in buffers
Trying bundle: op_hcompute_hw_input_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_input_stencil
No bundle for input: hw_input_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-1 + i2)] }
cg = (((-1 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(61 - i3)] }
cg = (((61 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(61 - i5)] }
cg = (((61 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-5 + i2)] }
cg = (((-5 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i3)] }
cg = (((59 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i5)] }
cg = (((59 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-2 + i2)] }
cg = (((-2 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(61 - i3)] }
cg = (((61 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(61 - i5)] }
cg = (((61 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i2)] }
cg = (((1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(63 - i3)] }
cg = (((63 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(63 - i5)] }
cg = (((63 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-3 + i2)] }
cg = (((-3 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(61 - i3)] }
cg = (((61 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(61 - i5)] }
cg = (((61 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-4 + i2)] }
cg = (((-4 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i3)] }
cg = (((59 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i5)] }
cg = (((59 + -1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i6)] }
cg = (((1*i6)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i4)] }
cg = (((1*i4)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(-6 + i2)] }
cg = (((-6 + 1*i2)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i1)] }
cg = (((1*i1)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i0)] }
cg = (((1*i0)) == 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i3)] }
cg = (((1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i3)] }
cg = (((59 + -1*i3)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(i5)] }
cg = (((1*i5)) >= 0)
Constraint aff with div: { [i0, i1, i2, i3, i4, i5, i6] -> [(59 - i5)] }
cg = (((59 + -1*i5)) >= 0)
Trying to find hw_input_stencil in buffers
Trying bundle: op_hcompute_hw_input_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_input_stencil
No bundle for input: hw_input_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
Trying to find hw_input_stencil in buffers
Trying bundle: op_hcompute_hw_input_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_input_stencil
No bundle for input: hw_input_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
Generating accel wrapper
# in bundles: 1
Generating arg list
Generating driver function
buf = hw_input_stencil
Generated accel wrapper
Generating accel wrapper
Generating arg list
Generating driver function
Generating bmp harness
Generated channels
Generating inputs
in dim = 0
Trying to find hw_input_stencil in buffers
Trying bundle: op_hcompute_hw_input_global_wrapper_stencil_read
done trying bundles
No bundle for input: hw_input_stencil
No bundle for input: hw_input_stencil
Trying bundle: op_hcompute_hw_output_stencil_write
done trying bundle
No bundle for input: hw_output_stencil
Got args
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
# in bundles: 1
Built unoptimized code
cmd: echo $CLKWRK_PATH
/home/dai-dirk/MetaMapper/MetaMapper/clockwork
cmd: g++ -fstack-protector-all -std=c++11 -I $CLKWRK_PATH regression_tb_unoptimized_cascade.cpp unoptimized_cascade.cpp
Running CGRA flow on cascade
program: cascade
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x])
    }
  }
  for (int conv1_s0_y = 0; conv1_s0_y < 62; conv1_s0_y++) {
    for (int conv1_s0_x = 0; conv1_s0_x < 62; conv1_s0_x++) {
      op_hcompute_conv1_stencil: conv1_stencil_clkwrk_dsa0[conv1_s0_y, conv1_s0_x] = hcompute_conv1_stencil()
    }
  }
  for (int conv1_s1_y = 0; conv1_s1_y < 62; conv1_s1_y++) {
    for (int conv1_s1_x = 0; conv1_s1_x < 62; conv1_s1_x++) {
      op_hcompute_conv1_stencil_1: conv1_stencil[conv1_s1_y, conv1_s1_x] = hcompute_conv1_stencil_1(conv1_stencil_clkwrk_dsa0[conv1_s1_y, conv1_s1_x], hw_input_global_wrapper_stencil[conv1_s1_y, conv1_s1_x], hw_input_global_wrapper_stencil[conv1_s1_y, (conv1_s1_x + 1)], hw_input_global_wrapper_stencil[conv1_s1_y, (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), conv1_s1_x], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), (conv1_s1_x + 1)], hw_input_global_wrapper_stencil[(conv1_s1_y + 1), (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), conv1_s1_x], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), (conv1_s1_x + 2)], hw_input_global_wrapper_stencil[(conv1_s1_y + 2), (conv1_s1_x + 1)])
    }
  }
  for (int conv1_shift_s0_y = 0; conv1_shift_s0_y < 62; conv1_shift_s0_y++) {
    for (int conv1_shift_s0_x = 0; conv1_shift_s0_x < 62; conv1_shift_s0_x++) {
      op_hcompute_conv1_shift_stencil: conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] = hcompute_conv1_shift_stencil(conv1_stencil[conv1_shift_s0_y, conv1_shift_s0_x])
    }
  }
  for (int conv2_s0_y = 0; conv2_s0_y < 60; conv2_s0_y++) {
    for (int conv2_s0_x = 0; conv2_s0_x < 60; conv2_s0_x++) {
      op_hcompute_conv2_stencil: conv2_stencil_clkwrk_dsa1[conv2_s0_y, conv2_s0_x] = hcompute_conv2_stencil()
    }
  }
  for (int conv2_s1_y = 0; conv2_s1_y < 60; conv2_s1_y++) {
    for (int conv2_s1_x = 0; conv2_s1_x < 60; conv2_s1_x++) {
      op_hcompute_conv2_stencil_1: conv2_stencil[conv2_s1_y, conv2_s1_x] = hcompute_conv2_stencil_1(conv1_shift_stencil[conv2_s1_y, conv2_s1_x], conv1_shift_stencil[conv2_s1_y, (conv2_s1_x + 1)], conv1_shift_stencil[conv2_s1_y, (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 1), conv2_s1_x], conv1_shift_stencil[(conv2_s1_y + 1), (conv2_s1_x + 1)], conv1_shift_stencil[(conv2_s1_y + 1), (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 2), conv2_s1_x], conv1_shift_stencil[(conv2_s1_y + 2), (conv2_s1_x + 2)], conv1_shift_stencil[(conv2_s1_y + 2), (conv2_s1_x + 1)], conv2_stencil_clkwrk_dsa1[conv2_s1_y, conv2_s1_x])
    }
  }
  for (int hw_output_s0_y_xo = 0; hw_output_s0_y_xo < 60; hw_output_s0_y_xo++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 60; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] = hcompute_hw_output_stencil(conv2_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi])
    }
  }
}
Buffer: conv1_shift_stencil
  Producers...
Got consumers
Writes: { conv1_shift_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 and ((i0 >= 2 and i1 >= 2) or (i0 >= 2 and 0 < i1 <= 60) or (i0 >= 2 and i1 <= 59) or (0 < i0 <= 60 and i1 >= 2) or (0 < i0 <= 60 and 0 < i1 <= 60) or (0 < i0 <= 60 and i1 <= 59) or (i0 <= 59 and i1 >= 2) or (i0 <= 59 and 0 < i1 <= 60) or (i0 <= 59 and i1 <= 59)) }
    Min offset (counting only writers): 0, 0
Visit produce locations: conv1_shift_stencil: addr =  [conv1_shift_s0_y, conv1_shift_s0_x]
New produce locations: conv1_shift_stencil: addr =  [conv1_shift_s0_y+0,  conv1_shift_s0_x+0]
Visit consume locations: conv1_shift_stencil: addr =  [conv2_s1_y, conv2_s1_x]
New consume locations: conv1_shift_stencil: addr =  [conv2_s1_y+0,  conv2_s1_x+0]
Visit consume locations: conv1_shift_stencil: addr =  [conv2_s1_y, (conv2_s1_x + 1)]
New consume locations: conv1_shift_stencil: addr =  [conv2_s1_y+0,  (conv2_s1_x + 1)+0]
Visit consume locations: conv1_shift_stencil: addr =  [conv2_s1_y, (conv2_s1_x + 2)]
New consume locations: conv1_shift_stencil: addr =  [conv2_s1_y+0,  (conv2_s1_x + 2)+0]
Visit consume locations: conv1_shift_stencil: addr =  [(conv2_s1_y + 1), conv2_s1_x]
New consume locations: conv1_shift_stencil: addr =  [(conv2_s1_y + 1)+0,  conv2_s1_x+0]
Visit consume locations: conv1_shift_stencil: addr =  [(conv2_s1_y + 1), (conv2_s1_x + 1)]
New consume locations: conv1_shift_stencil: addr =  [(conv2_s1_y + 1)+0,  (conv2_s1_x + 1)+0]
Visit consume locations: conv1_shift_stencil: addr =  [(conv2_s1_y + 1), (conv2_s1_x + 2)]
New consume locations: conv1_shift_stencil: addr =  [(conv2_s1_y + 1)+0,  (conv2_s1_x + 2)+0]
Visit consume locations: conv1_shift_stencil: addr =  [(conv2_s1_y + 2), conv2_s1_x]
New consume locations: conv1_shift_stencil: addr =  [(conv2_s1_y + 2)+0,  conv2_s1_x+0]
Visit consume locations: conv1_shift_stencil: addr =  [(conv2_s1_y + 2), (conv2_s1_x + 2)]
New consume locations: conv1_shift_stencil: addr =  [(conv2_s1_y + 2)+0,  (conv2_s1_x + 2)+0]
Visit consume locations: conv1_shift_stencil: addr =  [(conv2_s1_y + 2), (conv2_s1_x + 1)]
New consume locations: conv1_shift_stencil: addr =  [(conv2_s1_y + 2)+0,  (conv2_s1_x + 1)+0]
Buffer: conv1_stencil
  Producers...
Got consumers
Writes: { conv1_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
    Min offset (counting only writers): 0, 0
Visit produce locations: conv1_stencil: addr =  [conv1_s1_y, conv1_s1_x]
New produce locations: conv1_stencil: addr =  [conv1_s1_y+0,  conv1_s1_x+0]
Visit consume locations: conv1_stencil: addr =  [conv1_shift_s0_y, conv1_shift_s0_x]
New consume locations: conv1_stencil: addr =  [conv1_shift_s0_y+0,  conv1_shift_s0_x+0]
Buffer: conv1_stencil_clkwrk_dsa0
  Producers...
Got consumers
Writes: { conv1_stencil_clkwrk_dsa0[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
    Min offset (counting only writers): 0, 0
Visit produce locations: conv1_stencil_clkwrk_dsa0: addr =  [conv1_s0_y, conv1_s0_x]
New produce locations: conv1_stencil_clkwrk_dsa0: addr =  [conv1_s0_y+0,  conv1_s0_x+0]
Visit consume locations: conv1_stencil_clkwrk_dsa0: addr =  [conv1_s1_y, conv1_s1_x]
New consume locations: conv1_stencil_clkwrk_dsa0: addr =  [conv1_s1_y+0,  conv1_s1_x+0]
Buffer: conv2_stencil
  Producers...
Got consumers
Writes: { conv2_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
    Min offset (counting only writers): 0, 0
Visit produce locations: conv2_stencil: addr =  [conv2_s1_y, conv2_s1_x]
New produce locations: conv2_stencil: addr =  [conv2_s1_y+0,  conv2_s1_x+0]
Visit consume locations: conv2_stencil: addr =  [hw_output_s0_y_xo, hw_output_s0_x_xi]
New consume locations: conv2_stencil: addr =  [hw_output_s0_y_xo+0,  hw_output_s0_x_xi+0]
Buffer: conv2_stencil_clkwrk_dsa1
  Producers...
Got consumers
Writes: { conv2_stencil_clkwrk_dsa1[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
    Min offset (counting only writers): 0, 0
Visit produce locations: conv2_stencil_clkwrk_dsa1: addr =  [conv2_s0_y, conv2_s0_x]
New produce locations: conv2_stencil_clkwrk_dsa1: addr =  [conv2_s0_y+0,  conv2_s0_x+0]
Visit consume locations: conv2_stencil_clkwrk_dsa1: addr =  [conv2_s1_y, conv2_s1_x]
New consume locations: conv2_stencil_clkwrk_dsa1: addr =  [conv2_s1_y+0,  conv2_s1_x+0]
Buffer: hw_input_global_wrapper_stencil
  Producers...
Got consumers
Writes: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 and ((i0 >= 2 and i1 >= 2) or (i0 >= 2 and 0 < i1 <= 62) or (i0 >= 2 and i1 <= 61) or (0 < i0 <= 62 and i1 >= 2) or (0 < i0 <= 62 and 0 < i1 <= 62) or (0 < i0 <= 62 and i1 <= 61) or (i0 <= 61 and i1 >= 2) or (i0 <= 61 and 0 < i1 <= 62) or (i0 <= 61 and i1 <= 61)) }
    Min offset (counting only writers): 0, 0
Visit produce locations: hw_input_global_wrapper_stencil: addr =  [hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x]
New produce locations: hw_input_global_wrapper_stencil: addr =  [hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [conv1_s1_y, conv1_s1_x]
New consume locations: hw_input_global_wrapper_stencil: addr =  [conv1_s1_y+0,  conv1_s1_x+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [conv1_s1_y, (conv1_s1_x + 1)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [conv1_s1_y+0,  (conv1_s1_x + 1)+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [conv1_s1_y, (conv1_s1_x + 2)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [conv1_s1_y+0,  (conv1_s1_x + 2)+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv1_s1_y + 1), conv1_s1_x]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv1_s1_y + 1)+0,  conv1_s1_x+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv1_s1_y + 1), (conv1_s1_x + 1)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv1_s1_y + 1)+0,  (conv1_s1_x + 1)+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv1_s1_y + 1), (conv1_s1_x + 2)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv1_s1_y + 1)+0,  (conv1_s1_x + 2)+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv1_s1_y + 2), conv1_s1_x]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv1_s1_y + 2)+0,  conv1_s1_x+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv1_s1_y + 2), (conv1_s1_x + 2)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv1_s1_y + 2)+0,  (conv1_s1_x + 2)+0]
Visit consume locations: hw_input_global_wrapper_stencil: addr =  [(conv1_s1_y + 2), (conv1_s1_x + 1)]
New consume locations: hw_input_global_wrapper_stencil: addr =  [(conv1_s1_y + 2)+0,  (conv1_s1_x + 1)+0]
Buffer: hw_input_stencil
  Producers...
7
Got consumers
Writes: { hw_input_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
    Min offset (counting only writers): 0, 0
Visit consume locations: hw_input_stencil: addr =  [hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x]
New consume locations: hw_input_stencil: addr =  [hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0]
Buffer: hw_output_stencil
  Producers...
Got consumers
    Min offset (counting only writers): 0, 0
Visit produce locations: hw_output_stencil: addr =  [hw_output_s0_y_xo, hw_output_s0_x_xi]
New produce locations: hw_output_stencil: addr =  [hw_output_s0_y_xo+0,  hw_output_s0_x_xi+0]
program: cascade
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int conv1_s0_y = 0; conv1_s0_y < 62; conv1_s0_y++) {
    for (int conv1_s0_x = 0; conv1_s0_x < 62; conv1_s0_x++) {
      op_hcompute_conv1_stencil: conv1_stencil_clkwrk_dsa0[conv1_s0_y+0,  conv1_s0_x+0] = hcompute_conv1_stencil()
    }
  }
  for (int conv1_s1_y = 0; conv1_s1_y < 62; conv1_s1_y++) {
    for (int conv1_s1_x = 0; conv1_s1_x < 62; conv1_s1_x++) {
      op_hcompute_conv1_stencil_1: conv1_stencil[conv1_s1_y+0,  conv1_s1_x+0] = hcompute_conv1_stencil_1(conv1_stencil_clkwrk_dsa0[conv1_s1_y+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[conv1_s1_y+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[conv1_s1_y+0,  (conv1_s1_x + 1)+0], hw_input_global_wrapper_stencil[conv1_s1_y+0,  (conv1_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  (conv1_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  (conv1_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  (conv1_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  (conv1_s1_x + 1)+0])
    }
  }
  for (int conv1_shift_s0_y = 0; conv1_shift_s0_y < 62; conv1_shift_s0_y++) {
    for (int conv1_shift_s0_x = 0; conv1_shift_s0_x < 62; conv1_shift_s0_x++) {
      op_hcompute_conv1_shift_stencil: conv1_shift_stencil[conv1_shift_s0_y+0,  conv1_shift_s0_x+0] = hcompute_conv1_shift_stencil(conv1_stencil[conv1_shift_s0_y+0,  conv1_shift_s0_x+0])
    }
  }
  for (int conv2_s0_y = 0; conv2_s0_y < 60; conv2_s0_y++) {
    for (int conv2_s0_x = 0; conv2_s0_x < 60; conv2_s0_x++) {
      op_hcompute_conv2_stencil: conv2_stencil_clkwrk_dsa1[conv2_s0_y+0,  conv2_s0_x+0] = hcompute_conv2_stencil()
    }
  }
  for (int conv2_s1_y = 0; conv2_s1_y < 60; conv2_s1_y++) {
    for (int conv2_s1_x = 0; conv2_s1_x < 60; conv2_s1_x++) {
      op_hcompute_conv2_stencil_1: conv2_stencil[conv2_s1_y+0,  conv2_s1_x+0] = hcompute_conv2_stencil_1(conv1_shift_stencil[conv2_s1_y+0,  conv2_s1_x+0], conv1_shift_stencil[conv2_s1_y+0,  (conv2_s1_x + 1)+0], conv1_shift_stencil[conv2_s1_y+0,  (conv2_s1_x + 2)+0], conv1_shift_stencil[(conv2_s1_y + 1)+0,  conv2_s1_x+0], conv1_shift_stencil[(conv2_s1_y + 1)+0,  (conv2_s1_x + 1)+0], conv1_shift_stencil[(conv2_s1_y + 1)+0,  (conv2_s1_x + 2)+0], conv1_shift_stencil[(conv2_s1_y + 2)+0,  conv2_s1_x+0], conv1_shift_stencil[(conv2_s1_y + 2)+0,  (conv2_s1_x + 2)+0], conv1_shift_stencil[(conv2_s1_y + 2)+0,  (conv2_s1_x + 1)+0], conv2_stencil_clkwrk_dsa1[conv2_s1_y+0,  conv2_s1_x+0])
    }
  }
  for (int hw_output_s0_y_xo = 0; hw_output_s0_y_xo < 60; hw_output_s0_y_xo++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 60; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_xo+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv2_stencil[hw_output_s0_y_xo+0,  hw_output_s0_x_xi+0])
    }
  }
}
cmd: mkdir -p ./map_result/cascade
After Loop Perfection
program: cascade
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int conv1_s0_y = 0; conv1_s0_y < 62; conv1_s0_y++) {
    for (int conv1_s0_x = 0; conv1_s0_x < 62; conv1_s0_x++) {
      op_hcompute_conv1_stencil: conv1_stencil_clkwrk_dsa0[conv1_s0_y+0,  conv1_s0_x+0] = hcompute_conv1_stencil()
    }
  }
  for (int conv1_s1_y = 0; conv1_s1_y < 62; conv1_s1_y++) {
    for (int conv1_s1_x = 0; conv1_s1_x < 62; conv1_s1_x++) {
      op_hcompute_conv1_stencil_1: conv1_stencil[conv1_s1_y+0,  conv1_s1_x+0] = hcompute_conv1_stencil_1(conv1_stencil_clkwrk_dsa0[conv1_s1_y+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[conv1_s1_y+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[conv1_s1_y+0,  (conv1_s1_x + 1)+0], hw_input_global_wrapper_stencil[conv1_s1_y+0,  (conv1_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  (conv1_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  (conv1_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  (conv1_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  (conv1_s1_x + 1)+0])
    }
  }
  for (int conv1_shift_s0_y = 0; conv1_shift_s0_y < 62; conv1_shift_s0_y++) {
    for (int conv1_shift_s0_x = 0; conv1_shift_s0_x < 62; conv1_shift_s0_x++) {
      op_hcompute_conv1_shift_stencil: conv1_shift_stencil[conv1_shift_s0_y+0,  conv1_shift_s0_x+0] = hcompute_conv1_shift_stencil(conv1_stencil[conv1_shift_s0_y+0,  conv1_shift_s0_x+0])
    }
  }
  for (int conv2_s0_y = 0; conv2_s0_y < 60; conv2_s0_y++) {
    for (int conv2_s0_x = 0; conv2_s0_x < 60; conv2_s0_x++) {
      op_hcompute_conv2_stencil: conv2_stencil_clkwrk_dsa1[conv2_s0_y+0,  conv2_s0_x+0] = hcompute_conv2_stencil()
    }
  }
  for (int conv2_s1_y = 0; conv2_s1_y < 60; conv2_s1_y++) {
    for (int conv2_s1_x = 0; conv2_s1_x < 60; conv2_s1_x++) {
      op_hcompute_conv2_stencil_1: conv2_stencil[conv2_s1_y+0,  conv2_s1_x+0] = hcompute_conv2_stencil_1(conv1_shift_stencil[conv2_s1_y+0,  conv2_s1_x+0], conv1_shift_stencil[conv2_s1_y+0,  (conv2_s1_x + 1)+0], conv1_shift_stencil[conv2_s1_y+0,  (conv2_s1_x + 2)+0], conv1_shift_stencil[(conv2_s1_y + 1)+0,  conv2_s1_x+0], conv1_shift_stencil[(conv2_s1_y + 1)+0,  (conv2_s1_x + 1)+0], conv1_shift_stencil[(conv2_s1_y + 1)+0,  (conv2_s1_x + 2)+0], conv1_shift_stencil[(conv2_s1_y + 2)+0,  conv2_s1_x+0], conv1_shift_stencil[(conv2_s1_y + 2)+0,  (conv2_s1_x + 2)+0], conv1_shift_stencil[(conv2_s1_y + 2)+0,  (conv2_s1_x + 1)+0], conv2_stencil_clkwrk_dsa1[conv2_s1_y+0,  conv2_s1_x+0])
    }
  }
  for (int hw_output_s0_y_xo = 0; hw_output_s0_y_xo < 60; hw_output_s0_y_xo++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 60; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_xo+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv2_stencil[hw_output_s0_y_xo+0,  hw_output_s0_x_xi+0])
    }
  }
}
hcompute_hw_input_global_wrapper_stencil
	Buffer <hw_input_global_wrapper_stencil> 
	producer map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	capacity: 4096
	hierarchy level: glb
	Buffer <hw_input_stencil> 
	producer map: {  }
	capacity: 4096
	hierarchy level: glb
hcompute_conv1_stencil
	Buffer <conv1_stencil_clkwrk_dsa0> 
	producer map: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> conv1_stencil_clkwrk_dsa0[conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
	capacity: 3844
	hierarchy level: glb
hcompute_conv1_stencil_1
	Buffer <conv1_stencil> 
	producer map: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> conv1_stencil[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
	capacity: 3844
	hierarchy level: glb
	Buffer <conv1_stencil_clkwrk_dsa0> 
	producer map: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> conv1_stencil_clkwrk_dsa0[conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
	capacity: 3844
	hierarchy level: glb
	Buffer <hw_input_global_wrapper_stencil> 
	producer map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	capacity: 4096
	hierarchy level: glb
hcompute_conv1_shift_stencil
	Buffer <conv1_shift_stencil> 
	producer map: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
	capacity: 3844
	hierarchy level: glb
	Buffer <conv1_stencil> 
	producer map: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> conv1_stencil[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
	capacity: 3844
	hierarchy level: glb
hcompute_conv2_stencil
	Buffer <conv2_stencil_clkwrk_dsa1> 
	producer map: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> conv2_stencil_clkwrk_dsa1[conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
	capacity: 3600
	hierarchy level: glb
hcompute_conv2_stencil_1
	Buffer <conv1_shift_stencil> 
	producer map: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
	capacity: 3844
	hierarchy level: glb
	Buffer <conv2_stencil> 
	producer map: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv2_stencil[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
	capacity: 3600
	hierarchy level: glb
	Buffer <conv2_stencil_clkwrk_dsa1> 
	producer map: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> conv2_stencil_clkwrk_dsa1[conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
	capacity: 3600
	hierarchy level: glb
hcompute_hw_output_stencil
	Buffer <conv2_stencil> 
	producer map: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv2_stencil[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
	capacity: 3600
	hierarchy level: glb
	Buffer <hw_output_stencil> 
	producer map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
	capacity: 3600
	hierarchy level: glb
hcompute_conv1_shift_stencil: 0 
hcompute_conv1_stencil: 0 
hcompute_conv1_stencil_1: 0 
hcompute_conv2_stencil: 0 
hcompute_conv2_stencil_1: 0 
hcompute_hw_input_global_wrapper_stencil: 0 
hcompute_hw_output_stencil: 0 

hcompute_conv1_shift_stencil: 0 
hcompute_conv1_stencil: 0 
hcompute_conv1_stencil_1: 0 
hcompute_conv2_stencil: 0 
hcompute_conv2_stencil_1: 0 
hcompute_hw_input_global_wrapper_stencil: 0 
hcompute_hw_output_stencil: 0 

Compute file dse found
No compute unit file: 
program: cascade
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int conv1_s0_y = 0; conv1_s0_y < 62; conv1_s0_y++) {
    for (int conv1_s0_x = 0; conv1_s0_x < 62; conv1_s0_x++) {
      op_hcompute_conv1_stencil: conv1_stencil_clkwrk_dsa0[conv1_s0_y+0,  conv1_s0_x+0] = hcompute_conv1_stencil()
    }
  }
  for (int conv1_s1_y = 0; conv1_s1_y < 62; conv1_s1_y++) {
    for (int conv1_s1_x = 0; conv1_s1_x < 62; conv1_s1_x++) {
      op_hcompute_conv1_stencil_1: conv1_stencil[conv1_s1_y+0,  conv1_s1_x+0] = hcompute_conv1_stencil_1(conv1_stencil_clkwrk_dsa0[conv1_s1_y+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[conv1_s1_y+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[conv1_s1_y+0,  (conv1_s1_x + 1)+0], hw_input_global_wrapper_stencil[conv1_s1_y+0,  (conv1_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  (conv1_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  (conv1_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  (conv1_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  (conv1_s1_x + 1)+0])
    }
  }
  for (int conv1_shift_s0_y = 0; conv1_shift_s0_y < 62; conv1_shift_s0_y++) {
    for (int conv1_shift_s0_x = 0; conv1_shift_s0_x < 62; conv1_shift_s0_x++) {
      op_hcompute_conv1_shift_stencil: conv1_shift_stencil[conv1_shift_s0_y+0,  conv1_shift_s0_x+0] = hcompute_conv1_shift_stencil(conv1_stencil[conv1_shift_s0_y+0,  conv1_shift_s0_x+0])
    }
  }
  for (int conv2_s0_y = 0; conv2_s0_y < 60; conv2_s0_y++) {
    for (int conv2_s0_x = 0; conv2_s0_x < 60; conv2_s0_x++) {
      op_hcompute_conv2_stencil: conv2_stencil_clkwrk_dsa1[conv2_s0_y+0,  conv2_s0_x+0] = hcompute_conv2_stencil()
    }
  }
  for (int conv2_s1_y = 0; conv2_s1_y < 60; conv2_s1_y++) {
    for (int conv2_s1_x = 0; conv2_s1_x < 60; conv2_s1_x++) {
      op_hcompute_conv2_stencil_1: conv2_stencil[conv2_s1_y+0,  conv2_s1_x+0] = hcompute_conv2_stencil_1(conv1_shift_stencil[conv2_s1_y+0,  conv2_s1_x+0], conv1_shift_stencil[conv2_s1_y+0,  (conv2_s1_x + 1)+0], conv1_shift_stencil[conv2_s1_y+0,  (conv2_s1_x + 2)+0], conv1_shift_stencil[(conv2_s1_y + 1)+0,  conv2_s1_x+0], conv1_shift_stencil[(conv2_s1_y + 1)+0,  (conv2_s1_x + 1)+0], conv1_shift_stencil[(conv2_s1_y + 1)+0,  (conv2_s1_x + 2)+0], conv1_shift_stencil[(conv2_s1_y + 2)+0,  conv2_s1_x+0], conv1_shift_stencil[(conv2_s1_y + 2)+0,  (conv2_s1_x + 2)+0], conv1_shift_stencil[(conv2_s1_y + 2)+0,  (conv2_s1_x + 1)+0], conv2_stencil_clkwrk_dsa1[conv2_s1_y+0,  conv2_s1_x+0])
    }
  }
  for (int hw_output_s0_y_xo = 0; hw_output_s0_y_xo < 60; hw_output_s0_y_xo++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 60; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_xo+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv2_stencil[hw_output_s0_y_xo+0,  hw_output_s0_x_xi+0])
    }
  }
}
program: cascade
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int conv1_s0_y = 0; conv1_s0_y < 62; conv1_s0_y++) {
    for (int conv1_s0_x = 0; conv1_s0_x < 62; conv1_s0_x++) {
      op_hcompute_conv1_stencil: conv1_stencil_clkwrk_dsa0[conv1_s0_y+0,  conv1_s0_x+0] = hcompute_conv1_stencil()
    }
  }
  for (int conv1_s1_y = 0; conv1_s1_y < 62; conv1_s1_y++) {
    for (int conv1_s1_x = 0; conv1_s1_x < 62; conv1_s1_x++) {
      op_hcompute_conv1_stencil_1: conv1_stencil[conv1_s1_y+0,  conv1_s1_x+0] = hcompute_conv1_stencil_1(conv1_stencil_clkwrk_dsa0[conv1_s1_y+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[conv1_s1_y+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[conv1_s1_y+0,  (conv1_s1_x + 1)+0], hw_input_global_wrapper_stencil[conv1_s1_y+0,  (conv1_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  (conv1_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  (conv1_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  (conv1_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  (conv1_s1_x + 1)+0])
    }
  }
  for (int conv1_shift_s0_y = 0; conv1_shift_s0_y < 62; conv1_shift_s0_y++) {
    for (int conv1_shift_s0_x = 0; conv1_shift_s0_x < 62; conv1_shift_s0_x++) {
      op_hcompute_conv1_shift_stencil: conv1_shift_stencil[conv1_shift_s0_y+0,  conv1_shift_s0_x+0] = hcompute_conv1_shift_stencil(conv1_stencil[conv1_shift_s0_y+0,  conv1_shift_s0_x+0])
    }
  }
  for (int conv2_s0_y = 0; conv2_s0_y < 60; conv2_s0_y++) {
    for (int conv2_s0_x = 0; conv2_s0_x < 60; conv2_s0_x++) {
      op_hcompute_conv2_stencil: conv2_stencil_clkwrk_dsa1[conv2_s0_y+0,  conv2_s0_x+0] = hcompute_conv2_stencil()
    }
  }
  for (int conv2_s1_y = 0; conv2_s1_y < 60; conv2_s1_y++) {
    for (int conv2_s1_x = 0; conv2_s1_x < 60; conv2_s1_x++) {
      op_hcompute_conv2_stencil_1: conv2_stencil[conv2_s1_y+0,  conv2_s1_x+0] = hcompute_conv2_stencil_1(conv1_shift_stencil[conv2_s1_y+0,  conv2_s1_x+0], conv1_shift_stencil[conv2_s1_y+0,  (conv2_s1_x + 1)+0], conv1_shift_stencil[conv2_s1_y+0,  (conv2_s1_x + 2)+0], conv1_shift_stencil[(conv2_s1_y + 1)+0,  conv2_s1_x+0], conv1_shift_stencil[(conv2_s1_y + 1)+0,  (conv2_s1_x + 1)+0], conv1_shift_stencil[(conv2_s1_y + 1)+0,  (conv2_s1_x + 2)+0], conv1_shift_stencil[(conv2_s1_y + 2)+0,  conv2_s1_x+0], conv1_shift_stencil[(conv2_s1_y + 2)+0,  (conv2_s1_x + 2)+0], conv1_shift_stencil[(conv2_s1_y + 2)+0,  (conv2_s1_x + 1)+0], conv2_stencil_clkwrk_dsa1[conv2_s1_y+0,  conv2_s1_x+0])
    }
  }
  for (int hw_output_s0_y_xo = 0; hw_output_s0_y_xo < 60; hw_output_s0_y_xo++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 60; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_xo+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv2_stencil[hw_output_s0_y_xo+0,  hw_output_s0_x_xi+0])
    }
  }
}
program: cascade
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int conv1_s0_y = 0; conv1_s0_y < 62; conv1_s0_y++) {
    for (int conv1_s0_x = 0; conv1_s0_x < 62; conv1_s0_x++) {
      op_hcompute_conv1_stencil: conv1_stencil_clkwrk_dsa0[conv1_s0_y+0,  conv1_s0_x+0] = hcompute_conv1_stencil()
    }
  }
  for (int conv1_s1_y = 0; conv1_s1_y < 62; conv1_s1_y++) {
    for (int conv1_s1_x = 0; conv1_s1_x < 62; conv1_s1_x++) {
      op_hcompute_conv1_stencil_1: conv1_stencil[conv1_s1_y+0,  conv1_s1_x+0] = hcompute_conv1_stencil_1(conv1_stencil_clkwrk_dsa0[conv1_s1_y+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[conv1_s1_y+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[conv1_s1_y+0,  (conv1_s1_x + 1)+0], hw_input_global_wrapper_stencil[conv1_s1_y+0,  (conv1_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  (conv1_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  (conv1_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  (conv1_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  (conv1_s1_x + 1)+0])
    }
  }
  for (int conv1_shift_s0_y = 0; conv1_shift_s0_y < 62; conv1_shift_s0_y++) {
    for (int conv1_shift_s0_x = 0; conv1_shift_s0_x < 62; conv1_shift_s0_x++) {
      op_hcompute_conv1_shift_stencil: conv1_shift_stencil[conv1_shift_s0_y+0,  conv1_shift_s0_x+0] = hcompute_conv1_shift_stencil(conv1_stencil[conv1_shift_s0_y+0,  conv1_shift_s0_x+0])
    }
  }
  for (int conv2_s0_y = 0; conv2_s0_y < 60; conv2_s0_y++) {
    for (int conv2_s0_x = 0; conv2_s0_x < 60; conv2_s0_x++) {
      op_hcompute_conv2_stencil: conv2_stencil_clkwrk_dsa1[conv2_s0_y+0,  conv2_s0_x+0] = hcompute_conv2_stencil()
    }
  }
  for (int conv2_s1_y = 0; conv2_s1_y < 60; conv2_s1_y++) {
    for (int conv2_s1_x = 0; conv2_s1_x < 60; conv2_s1_x++) {
      op_hcompute_conv2_stencil_1: conv2_stencil[conv2_s1_y+0,  conv2_s1_x+0] = hcompute_conv2_stencil_1(conv1_shift_stencil[conv2_s1_y+0,  conv2_s1_x+0], conv1_shift_stencil[conv2_s1_y+0,  (conv2_s1_x + 1)+0], conv1_shift_stencil[conv2_s1_y+0,  (conv2_s1_x + 2)+0], conv1_shift_stencil[(conv2_s1_y + 1)+0,  conv2_s1_x+0], conv1_shift_stencil[(conv2_s1_y + 1)+0,  (conv2_s1_x + 1)+0], conv1_shift_stencil[(conv2_s1_y + 1)+0,  (conv2_s1_x + 2)+0], conv1_shift_stencil[(conv2_s1_y + 2)+0,  conv2_s1_x+0], conv1_shift_stencil[(conv2_s1_y + 2)+0,  (conv2_s1_x + 2)+0], conv1_shift_stencil[(conv2_s1_y + 2)+0,  (conv2_s1_x + 1)+0], conv2_stencil_clkwrk_dsa1[conv2_s1_y+0,  conv2_s1_x+0])
    }
  }
  for (int hw_output_s0_y_xo = 0; hw_output_s0_y_xo < 60; hw_output_s0_y_xo++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 60; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_xo+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv2_stencil[hw_output_s0_y_xo+0,  hw_output_s0_x_xi+0])
    }
  }
}
cascade is a stencil pipeline
Computing validity deps for conv1_shift_stencil
Computing validity deps for conv1_stencil
Computing validity deps for conv1_stencil_clkwrk_dsa0
Computing validity deps for conv2_stencil
Computing validity deps for conv2_stencil_clkwrk_dsa1
Computing validity deps for hw_input_global_wrapper_stencil
Computing validity deps for hw_input_stencil
Computing validity deps for hw_output_stencil
Finite validity: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = conv1_s0_y, conv1_s1_x = conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv1_shift_s0_y, conv2_s1_x = conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 59 and 0 <= conv1_shift_s0_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -1 + conv1_shift_s0_y, conv2_s1_x = conv1_shift_s0_x] : 0 < conv1_shift_s0_y <= 60 and 0 <= conv1_shift_s0_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -2 + conv1_shift_s0_y, conv2_s1_x = conv1_shift_s0_x] : 2 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv1_shift_s0_y, conv2_s1_x = -1 + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 59 and 0 < conv1_shift_s0_x <= 60; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -1 + conv1_shift_s0_y, conv2_s1_x = -1 + conv1_shift_s0_x] : 0 < conv1_shift_s0_y <= 60 and 0 < conv1_shift_s0_x <= 60; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -2 + conv1_shift_s0_y, conv2_s1_x = -1 + conv1_shift_s0_x] : 2 <= conv1_shift_s0_y <= 61 and 0 < conv1_shift_s0_x <= 60; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv1_shift_s0_y, conv2_s1_x = -2 + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 59 and 2 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -1 + conv1_shift_s0_y, conv2_s1_x = -2 + conv1_shift_s0_x] : 0 < conv1_shift_s0_y <= 60 and 2 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -2 + conv1_shift_s0_y, conv2_s1_x = -2 + conv1_shift_s0_x] : 2 <= conv1_shift_s0_y <= 61 and 2 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_xo = conv2_s1_y, hw_output_s0_x_xi = conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = hw_input_global_wrapper_s0_y, conv1_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -1 + hw_input_global_wrapper_s0_y, conv1_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -2 + hw_input_global_wrapper_s0_y, conv1_s1_x = hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = hw_input_global_wrapper_s0_y, conv1_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -1 + hw_input_global_wrapper_s0_y, conv1_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -2 + hw_input_global_wrapper_s0_y, conv1_s1_x = -1 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = hw_input_global_wrapper_s0_y, conv1_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -1 + hw_input_global_wrapper_s0_y, conv1_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -2 + hw_input_global_wrapper_s0_y, conv1_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv2_s0_y, conv2_s1_x = conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> op_hcompute_conv1_shift_stencil[root' = 0, conv1_shift_s0_y = conv1_s1_y, conv1_shift_s0_x = conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Dep = { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = conv1_s0_y, conv1_s1_x = conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
  Dep = { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv1_shift_s0_y, conv2_s1_x = conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 59 and 0 <= conv1_shift_s0_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -1 + conv1_shift_s0_y, conv2_s1_x = conv1_shift_s0_x] : 0 < conv1_shift_s0_y <= 60 and 0 <= conv1_shift_s0_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -2 + conv1_shift_s0_y, conv2_s1_x = conv1_shift_s0_x] : 2 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv1_shift_s0_y, conv2_s1_x = -1 + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 59 and 0 < conv1_shift_s0_x <= 60; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -1 + conv1_shift_s0_y, conv2_s1_x = -1 + conv1_shift_s0_x] : 0 < conv1_shift_s0_y <= 60 and 0 < conv1_shift_s0_x <= 60; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -2 + conv1_shift_s0_y, conv2_s1_x = -1 + conv1_shift_s0_x] : 2 <= conv1_shift_s0_y <= 61 and 0 < conv1_shift_s0_x <= 60; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv1_shift_s0_y, conv2_s1_x = -2 + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 59 and 2 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -1 + conv1_shift_s0_y, conv2_s1_x = -2 + conv1_shift_s0_x] : 0 < conv1_shift_s0_y <= 60 and 2 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -2 + conv1_shift_s0_y, conv2_s1_x = -2 + conv1_shift_s0_x] : 2 <= conv1_shift_s0_y <= 61 and 2 <= conv1_shift_s0_x <= 61 }
  Dep = { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_xo = conv2_s1_y, hw_output_s0_x_xi = conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Dep = { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = hw_input_global_wrapper_s0_y, conv1_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -1 + hw_input_global_wrapper_s0_y, conv1_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -2 + hw_input_global_wrapper_s0_y, conv1_s1_x = hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = hw_input_global_wrapper_s0_y, conv1_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -1 + hw_input_global_wrapper_s0_y, conv1_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -2 + hw_input_global_wrapper_s0_y, conv1_s1_x = -1 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = hw_input_global_wrapper_s0_y, conv1_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -1 + hw_input_global_wrapper_s0_y, conv1_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -2 + hw_input_global_wrapper_s0_y, conv1_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 2 <= hw_input_global_wrapper_s0_x <= 63 }
  Dep = { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv2_s0_y, conv2_s1_x = conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
  Dep = { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> op_hcompute_conv1_shift_stencil[root' = 0, conv1_shift_s0_y = conv1_s1_y, conv1_shift_s0_x = conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Got deps
Schedule dim = 3
  scheduling dimension 0
  { op_hcompute_conv1_stencil[root = 0] -> op_hcompute_conv1_stencil_1[root' = 0] }
  { op_hcompute_conv1_shift_stencil[root = 0] -> op_hcompute_conv2_stencil_1[root' = 0] }
  { op_hcompute_conv2_stencil_1[root = 0] -> op_hcompute_hw_output_stencil[root' = 0] }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0] -> op_hcompute_conv1_stencil_1[root' = 0] }
  { op_hcompute_conv2_stencil[root = 0] -> op_hcompute_conv2_stencil_1[root' = 0] }
  { op_hcompute_conv1_stencil_1[root = 0] -> op_hcompute_conv1_shift_stencil[root' = 0] }
Consumed data...
  { op_hcompute_conv1_stencil_1[root = 0] -> op_hcompute_conv1_stencil[root' = 0] }
bound: { op_hcompute_conv1_stencil_1[root] -> op_hcompute_conv1_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv1_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv1_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv1_stencil_1[root] -> [(0)] }
  { op_hcompute_conv2_stencil_1[root = 0] -> op_hcompute_conv1_shift_stencil[root' = 0] }
bound: { op_hcompute_conv2_stencil_1[root] -> op_hcompute_conv1_shift_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv2_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv2_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv2_stencil_1[root] -> [(0)] }
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_conv2_stencil_1[root' = 0] }
bound: { op_hcompute_hw_output_stencil[root] -> op_hcompute_conv2_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_hw_output_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[root] -> [(0)] }
  { op_hcompute_conv1_stencil_1[root = 0] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0] }
bound: { op_hcompute_conv1_stencil_1[root] -> op_hcompute_hw_input_global_wrapper_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv1_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv1_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv1_stencil_1[root] -> [(0)] }
  { op_hcompute_conv2_stencil_1[root = 0] -> op_hcompute_conv2_stencil[root' = 0] }
bound: { op_hcompute_conv2_stencil_1[root] -> op_hcompute_conv2_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv2_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv2_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv2_stencil_1[root] -> [(0)] }
  { op_hcompute_conv1_shift_stencil[root = 0] -> op_hcompute_conv1_stencil_1[root' = 0] }
bound: { op_hcompute_conv1_shift_stencil[root] -> op_hcompute_conv1_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_conv1_shift_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_conv1_shift_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv1_shift_stencil[root] -> [(0)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv1_stencil_1, s_op_hcompute_conv1_stencil, s_op_hcompute_hw_output_stencil, s_op_hcompute_conv2_stencil_1, s_op_hcompute_conv2_stencil, s_op_hcompute_conv1_shift_stencil, s_op_hcompute_hw_input_global_wrapper_stencil] : s_op_hcompute_conv1_stencil_1 > 0 and s_op_hcompute_conv1_stencil > 0 and s_op_hcompute_hw_output_stencil > 0 and s_op_hcompute_conv2_stencil_1 > 0 and s_op_hcompute_conv2_stencil > 0 and s_op_hcompute_conv1_shift_stencil > 0 and s_op_hcompute_hw_input_global_wrapper_stencil > 0 }
Writing problem to mod file...
  # of constraints: 7
  legal point  : { [1, 1, 1, 1, 1, 1, 1] }
  minimal point: 0
Schedule params...
  { op_hcompute_conv1_stencil_1[root = 0] -> op_hcompute_conv1_stencil[root' = 0] }
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_conv2_stencil_1[root' = 0] }
  { op_hcompute_conv2_stencil_1[root = 0] -> op_hcompute_conv2_stencil[root' = 0] }
  { op_hcompute_conv1_shift_stencil[root = 0] -> op_hcompute_conv1_stencil_1[root' = 0] }
  { op_hcompute_conv2_stencil_1[root = 0] -> op_hcompute_conv1_shift_stencil[root' = 0] }
  { op_hcompute_conv1_stencil_1[root = 0] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0] }
Done with schedule
Clockwork schedules...
  op_hcompute_conv1_shift_stencil: { [i] -> [(i)] }
  op_hcompute_conv1_stencil: { [i] -> [(i)] }
  op_hcompute_conv1_stencil_1: { [i] -> [(i)] }
  op_hcompute_conv2_stencil: { [i] -> [(i)] }
  op_hcompute_conv2_stencil_1: { [i] -> [(i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(i)] }
  scheduling dimension 1
  { op_hcompute_conv1_stencil[conv1_s0_y] -> op_hcompute_conv1_stencil_1[conv1_s1_y = conv1_s0_y] : 0 <= conv1_s0_y <= 61 }
  { op_hcompute_conv1_shift_stencil[conv1_shift_s0_y] -> op_hcompute_conv2_stencil_1[conv2_s1_y = conv1_shift_s0_y] : 0 <= conv1_shift_s0_y <= 59; op_hcompute_conv1_shift_stencil[conv1_shift_s0_y] -> op_hcompute_conv2_stencil_1[conv2_s1_y = -1 + conv1_shift_s0_y] : 0 < conv1_shift_s0_y <= 60; op_hcompute_conv1_shift_stencil[conv1_shift_s0_y] -> op_hcompute_conv2_stencil_1[conv2_s1_y = -2 + conv1_shift_s0_y] : 2 <= conv1_shift_s0_y <= 61 }
  { op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_hw_output_stencil[hw_output_s0_y_xo = conv2_s1_y] : 0 <= conv2_s1_y <= 59 }
  { op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv1_stencil_1[conv1_s1_y = hw_input_global_wrapper_s0_y] : 0 <= hw_input_global_wrapper_s0_y <= 61; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv1_stencil_1[conv1_s1_y = -1 + hw_input_global_wrapper_s0_y] : 0 < hw_input_global_wrapper_s0_y <= 62; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv1_stencil_1[conv1_s1_y = -2 + hw_input_global_wrapper_s0_y] : 2 <= hw_input_global_wrapper_s0_y <= 63 }
  { op_hcompute_conv2_stencil[conv2_s0_y] -> op_hcompute_conv2_stencil_1[conv2_s1_y = conv2_s0_y] : 0 <= conv2_s0_y <= 59 }
  { op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_y = conv1_s1_y] : 0 <= conv1_s1_y <= 61 }
Consumed data...
  { op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_conv1_stencil[conv1_s0_y = conv1_s1_y] : 0 <= conv1_s1_y <= 61 }
bound: { op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_conv1_stencil[(conv1_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv1_stencil_1[conv1_s1_y] -> [(conv1_s1_y)] }
      domain of bound: { op_hcompute_conv1_stencil_1[conv1_s1_y] : 0 <= conv1_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_conv1_stencil_1[conv1_s1_y] -> [(conv1_s1_y)] }
  { op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_y = 2 + conv2_s1_y] : 0 <= conv2_s1_y <= 59; op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_y = 1 + conv2_s1_y] : 0 <= conv2_s1_y <= 59; op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_y = conv2_s1_y] : 0 <= conv2_s1_y <= 59 }
bound: { op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv1_shift_stencil[(2 + conv2_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv2_stencil_1[conv2_s1_y] -> [(2 + conv2_s1_y)] }
      domain of bound: { op_hcompute_conv2_stencil_1[conv2_s1_y] : 0 <= conv2_s1_y <= 59 }
Extracting linear rational approximation: { op_hcompute_conv2_stencil_1[conv2_s1_y] -> [(2 + conv2_s1_y)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_xo] -> op_hcompute_conv2_stencil_1[conv2_s1_y = hw_output_s0_y_xo] : 0 <= hw_output_s0_y_xo <= 59 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_xo] -> op_hcompute_conv2_stencil_1[(hw_output_s0_y_xo)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_y_xo] -> [(hw_output_s0_y_xo)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_xo] : 0 <= hw_output_s0_y_xo <= 59 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_y_xo] -> [(hw_output_s0_y_xo)] }
  { op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 2 + conv1_s1_y] : 0 <= conv1_s1_y <= 61; op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 1 + conv1_s1_y] : 0 <= conv1_s1_y <= 61; op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = conv1_s1_y] : 0 <= conv1_s1_y <= 61 }
bound: { op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[(2 + conv1_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv1_stencil_1[conv1_s1_y] -> [(2 + conv1_s1_y)] }
      domain of bound: { op_hcompute_conv1_stencil_1[conv1_s1_y] : 0 <= conv1_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_conv1_stencil_1[conv1_s1_y] -> [(2 + conv1_s1_y)] }
  { op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv2_stencil[conv2_s0_y = conv2_s1_y] : 0 <= conv2_s1_y <= 59 }
bound: { op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv2_stencil[(conv2_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv2_stencil_1[conv2_s1_y] -> [(conv2_s1_y)] }
      domain of bound: { op_hcompute_conv2_stencil_1[conv2_s1_y] : 0 <= conv2_s1_y <= 59 }
Extracting linear rational approximation: { op_hcompute_conv2_stencil_1[conv2_s1_y] -> [(conv2_s1_y)] }
  { op_hcompute_conv1_shift_stencil[conv1_shift_s0_y] -> op_hcompute_conv1_stencil_1[conv1_s1_y = conv1_shift_s0_y] : 0 <= conv1_shift_s0_y <= 61 }
bound: { op_hcompute_conv1_shift_stencil[conv1_shift_s0_y] -> op_hcompute_conv1_stencil_1[(conv1_shift_s0_y)] }
    affine upper bound on data needed: { op_hcompute_conv1_shift_stencil[conv1_shift_s0_y] -> [(conv1_shift_s0_y)] }
      domain of bound: { op_hcompute_conv1_shift_stencil[conv1_shift_s0_y] : 0 <= conv1_shift_s0_y <= 61 }
Extracting linear rational approximation: { op_hcompute_conv1_shift_stencil[conv1_shift_s0_y] -> [(conv1_shift_s0_y)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv2_stencil_1, s_op_hcompute_conv1_shift_stencil, s_op_hcompute_conv1_stencil_1, s_op_hcompute_conv1_stencil, s_op_hcompute_hw_output_stencil, s_op_hcompute_conv2_stencil, s_op_hcompute_hw_input_global_wrapper_stencil] : s_op_hcompute_conv1_shift_stencil = s_op_hcompute_conv2_stencil_1 and s_op_hcompute_conv1_stencil_1 = s_op_hcompute_conv2_stencil_1 and s_op_hcompute_conv1_stencil = s_op_hcompute_conv2_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_conv2_stencil_1 and s_op_hcompute_conv2_stencil = s_op_hcompute_conv2_stencil_1 and s_op_hcompute_hw_input_global_wrapper_stencil = s_op_hcompute_conv2_stencil_1 and s_op_hcompute_conv2_stencil_1 > 0 }
Writing problem to mod file...
  # of constraints: 13
  legal point  : { [1, 1, 1, 1, 1, 1, 1] }
  minimal point: -7
Schedule params...
  { op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_y = 2 + conv2_s1_y] : 0 <= conv2_s1_y <= 59; op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_y = 1 + conv2_s1_y] : 0 <= conv2_s1_y <= 59; op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_y = conv2_s1_y] : 0 <= conv2_s1_y <= 59 }
  { op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_conv1_stencil[conv1_s0_y = conv1_s1_y] : 0 <= conv1_s1_y <= 61 }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_xo] -> op_hcompute_conv2_stencil_1[conv2_s1_y = hw_output_s0_y_xo] : 0 <= hw_output_s0_y_xo <= 59 }
  { op_hcompute_conv1_shift_stencil[conv1_shift_s0_y] -> op_hcompute_conv1_stencil_1[conv1_s1_y = conv1_shift_s0_y] : 0 <= conv1_shift_s0_y <= 61 }
  { op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv2_stencil[conv2_s0_y = conv2_s1_y] : 0 <= conv2_s1_y <= 59 }
  { op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 2 + conv1_s1_y] : 0 <= conv1_s1_y <= 61; op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 1 + conv1_s1_y] : 0 <= conv1_s1_y <= 61; op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = conv1_s1_y] : 0 <= conv1_s1_y <= 61 }
Done with schedule
Clockwork schedules...
  op_hcompute_conv1_shift_stencil: { [i] -> [(2 + i)] }
  op_hcompute_conv1_stencil: { [i] -> [(2 + i)] }
  op_hcompute_conv1_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_conv2_stencil: { [i] -> [(4 + i)] }
  op_hcompute_conv2_stencil_1: { [i] -> [(4 + i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(4 + i)] }
  scheduling dimension 2
  { op_hcompute_conv1_stencil[conv1_s0_x] -> op_hcompute_conv1_stencil_1[conv1_s1_x = conv1_s0_x] : 0 <= conv1_s0_x <= 61 }
  { op_hcompute_conv1_shift_stencil[conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[conv2_s1_x = conv1_shift_s0_x] : 0 <= conv1_shift_s0_x <= 59; op_hcompute_conv1_shift_stencil[conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[conv2_s1_x = -1 + conv1_shift_s0_x] : 0 < conv1_shift_s0_x <= 60; op_hcompute_conv1_shift_stencil[conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[conv2_s1_x = -2 + conv1_shift_s0_x] : 2 <= conv1_shift_s0_x <= 61 }
  { op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_hw_output_stencil[hw_output_s0_x_xi = conv2_s1_x] : 0 <= conv2_s1_x <= 59 }
  { op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[conv1_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[conv1_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[conv1_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv2_stencil[conv2_s0_x] -> op_hcompute_conv2_stencil_1[conv2_s1_x = conv2_s0_x] : 0 <= conv2_s0_x <= 59 }
  { op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_x = conv1_s1_x] : 0 <= conv1_s1_x <= 61 }
Consumed data...
  { op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_conv1_stencil[conv1_s0_x = conv1_s1_x] : 0 <= conv1_s1_x <= 61 }
bound: { op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_conv1_stencil[(conv1_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv1_stencil_1[conv1_s1_x] -> [(conv1_s1_x)] }
      domain of bound: { op_hcompute_conv1_stencil_1[conv1_s1_x] : 0 <= conv1_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_conv1_stencil_1[conv1_s1_x] -> [(conv1_s1_x)] }
  { op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_x = 2 + conv2_s1_x] : 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_x = 1 + conv2_s1_x] : 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_x = conv2_s1_x] : 0 <= conv2_s1_x <= 59 }
bound: { op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv1_shift_stencil[(2 + conv2_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv2_stencil_1[conv2_s1_x] -> [(2 + conv2_s1_x)] }
      domain of bound: { op_hcompute_conv2_stencil_1[conv2_s1_x] : 0 <= conv2_s1_x <= 59 }
Extracting linear rational approximation: { op_hcompute_conv2_stencil_1[conv2_s1_x] -> [(2 + conv2_s1_x)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv2_stencil_1[conv2_s1_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 59 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv2_stencil_1[(hw_output_s0_x_xi)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 59 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
  { op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 2 + conv1_s1_x] : 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 1 + conv1_s1_x] : 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = conv1_s1_x] : 0 <= conv1_s1_x <= 61 }
bound: { op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[(2 + conv1_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv1_stencil_1[conv1_s1_x] -> [(2 + conv1_s1_x)] }
      domain of bound: { op_hcompute_conv1_stencil_1[conv1_s1_x] : 0 <= conv1_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_conv1_stencil_1[conv1_s1_x] -> [(2 + conv1_s1_x)] }
  { op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv2_stencil[conv2_s0_x = conv2_s1_x] : 0 <= conv2_s1_x <= 59 }
bound: { op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv2_stencil[(conv2_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv2_stencil_1[conv2_s1_x] -> [(conv2_s1_x)] }
      domain of bound: { op_hcompute_conv2_stencil_1[conv2_s1_x] : 0 <= conv2_s1_x <= 59 }
Extracting linear rational approximation: { op_hcompute_conv2_stencil_1[conv2_s1_x] -> [(conv2_s1_x)] }
  { op_hcompute_conv1_shift_stencil[conv1_shift_s0_x] -> op_hcompute_conv1_stencil_1[conv1_s1_x = conv1_shift_s0_x] : 0 <= conv1_shift_s0_x <= 61 }
bound: { op_hcompute_conv1_shift_stencil[conv1_shift_s0_x] -> op_hcompute_conv1_stencil_1[(conv1_shift_s0_x)] }
    affine upper bound on data needed: { op_hcompute_conv1_shift_stencil[conv1_shift_s0_x] -> [(conv1_shift_s0_x)] }
      domain of bound: { op_hcompute_conv1_shift_stencil[conv1_shift_s0_x] : 0 <= conv1_shift_s0_x <= 61 }
Extracting linear rational approximation: { op_hcompute_conv1_shift_stencil[conv1_shift_s0_x] -> [(conv1_shift_s0_x)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv1_stencil_1, s_op_hcompute_conv1_stencil, s_op_hcompute_conv2_stencil_1, s_op_hcompute_conv1_shift_stencil, s_op_hcompute_hw_output_stencil, s_op_hcompute_hw_input_global_wrapper_stencil, s_op_hcompute_conv2_stencil] : s_op_hcompute_conv1_stencil = s_op_hcompute_conv1_stencil_1 and s_op_hcompute_conv2_stencil_1 = s_op_hcompute_conv1_stencil_1 and s_op_hcompute_conv1_shift_stencil = s_op_hcompute_conv1_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_conv1_stencil_1 and s_op_hcompute_hw_input_global_wrapper_stencil = s_op_hcompute_conv1_stencil_1 and s_op_hcompute_conv2_stencil = s_op_hcompute_conv1_stencil_1 and s_op_hcompute_conv1_stencil_1 > 0 }
Writing problem to mod file...
  # of constraints: 13
  legal point  : { [1, 1, 1, 1, 1, 1, 1] }
  minimal point: -7
Schedule params...
  { op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_conv1_stencil[conv1_s0_x = conv1_s1_x] : 0 <= conv1_s1_x <= 61 }
  { op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_x = 2 + conv2_s1_x] : 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_x = 1 + conv2_s1_x] : 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_x = conv2_s1_x] : 0 <= conv2_s1_x <= 59 }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv2_stencil_1[conv2_s1_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 59 }
  { op_hcompute_conv1_shift_stencil[conv1_shift_s0_x] -> op_hcompute_conv1_stencil_1[conv1_s1_x = conv1_shift_s0_x] : 0 <= conv1_shift_s0_x <= 61 }
  { op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 2 + conv1_s1_x] : 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 1 + conv1_s1_x] : 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = conv1_s1_x] : 0 <= conv1_s1_x <= 61 }
  { op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv2_stencil[conv2_s0_x = conv2_s1_x] : 0 <= conv2_s1_x <= 59 }
Done with schedule
Clockwork schedules...
  op_hcompute_conv1_shift_stencil: { [i] -> [(2 + i)] }
  op_hcompute_conv1_stencil: { [i] -> [(2 + i)] }
  op_hcompute_conv1_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_conv2_stencil: { [i] -> [(4 + i)] }
  op_hcompute_conv2_stencil_1: { [i] -> [(4 + i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(4 + i)] }
Final schedule...
  op_hcompute_conv1_shift_stencil
    1*d2*1*1 + 1*2
    1*d1*1*1 + 1*2
    1*d0*1*1 + 1*0

  op_hcompute_conv1_stencil
    1*d2*1*1 + 1*2
    1*d1*1*1 + 1*2
    1*d0*1*1 + 1*0

  op_hcompute_conv1_stencil_1
    1*d2*1*1 + 1*2
    1*d1*1*1 + 1*2
    1*d0*1*1 + 1*0

  op_hcompute_conv2_stencil
    1*d2*1*1 + 1*4
    1*d1*1*1 + 1*4
    1*d0*1*1 + 1*0

  op_hcompute_conv2_stencil_1
    1*d2*1*1 + 1*4
    1*d1*1*1 + 1*4
    1*d0*1*1 + 1*0

  op_hcompute_hw_input_global_wrapper_stencil
    1*d2*1*1 + 1*0
    1*d1*1*1 + 1*0
    1*d0*1*1 + 1*0

  op_hcompute_hw_output_stencil
    1*d2*1*1 + 1*4
    1*d1*1*1 + 1*4
    1*d0*1*1 + 1*0

Sched expr: 1*d2 + 2
Sched expr: 1*d1 + 2
Sched expr: 1*d0 + 0
Map str: { op_hcompute_conv1_shift_stencil[d0, d1, d2] -> [1*d2 + 2, 1*d1 + 2, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 2
Sched expr: 1*d1 + 2
Sched expr: 1*d0 + 0
Map str: { op_hcompute_conv1_stencil[d0, d1, d2] -> [1*d2 + 2, 1*d1 + 2, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 2
Sched expr: 1*d1 + 2
Sched expr: 1*d0 + 0
Map str: { op_hcompute_conv1_stencil_1[d0, d1, d2] -> [1*d2 + 2, 1*d1 + 2, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 4
Sched expr: 1*d1 + 4
Sched expr: 1*d0 + 0
Map str: { op_hcompute_conv2_stencil[d0, d1, d2] -> [1*d2 + 4, 1*d1 + 4, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 4
Sched expr: 1*d1 + 4
Sched expr: 1*d0 + 0
Map str: { op_hcompute_conv2_stencil_1[d0, d1, d2] -> [1*d2 + 4, 1*d1 + 4, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 0
Sched expr: 1*d1 + 0
Sched expr: 1*d0 + 0
Map str: { op_hcompute_hw_input_global_wrapper_stencil[d0, d1, d2] -> [1*d2 + 0, 1*d1 + 0, 1*d0 + 0] }
map got str
Sched expr: 1*d2 + 4
Sched expr: 1*d1 + 4
Sched expr: 1*d0 + 0
Map str: { op_hcompute_hw_output_stencil[d0, d1, d2] -> [1*d2 + 4, 1*d1 + 4, 1*d0 + 0] }
map got str
Clockwork schedule...
  { op_hcompute_conv2_stencil[d0, d1, d2] -> [4 + d2, 4 + d1, d0] }
  { op_hcompute_conv1_shift_stencil[d0, d1, d2] -> [2 + d2, 2 + d1, d0] }
  { op_hcompute_conv1_stencil[d0, d1, d2] -> [2 + d2, 2 + d1, d0] }
  { op_hcompute_conv2_stencil_1[d0, d1, d2] -> [4 + d2, 4 + d1, d0] }
  { op_hcompute_hw_output_stencil[d0, d1, d2] -> [4 + d2, 4 + d1, d0] }
  { op_hcompute_hw_input_global_wrapper_stencil[d0, d1, d2] -> [d2, d1, d0] }
  { op_hcompute_conv1_stencil_1[d0, d1, d2] -> [2 + d2, 2 + d1, d0] }
Domain...
  { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
  { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
  { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
bounds...{ [i0, i1, 0] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
lengths
1
64
64
1
Fused iis
  4096
  64
  1
Finite validity: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = conv1_s0_y, conv1_s1_x = conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv1_shift_s0_y, conv2_s1_x = conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 59 and 0 <= conv1_shift_s0_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -1 + conv1_shift_s0_y, conv2_s1_x = conv1_shift_s0_x] : 0 < conv1_shift_s0_y <= 60 and 0 <= conv1_shift_s0_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -2 + conv1_shift_s0_y, conv2_s1_x = conv1_shift_s0_x] : 2 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv1_shift_s0_y, conv2_s1_x = -1 + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 59 and 0 < conv1_shift_s0_x <= 60; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -1 + conv1_shift_s0_y, conv2_s1_x = -1 + conv1_shift_s0_x] : 0 < conv1_shift_s0_y <= 60 and 0 < conv1_shift_s0_x <= 60; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -2 + conv1_shift_s0_y, conv2_s1_x = -1 + conv1_shift_s0_x] : 2 <= conv1_shift_s0_y <= 61 and 0 < conv1_shift_s0_x <= 60; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv1_shift_s0_y, conv2_s1_x = -2 + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 59 and 2 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -1 + conv1_shift_s0_y, conv2_s1_x = -2 + conv1_shift_s0_x] : 0 < conv1_shift_s0_y <= 60 and 2 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -2 + conv1_shift_s0_y, conv2_s1_x = -2 + conv1_shift_s0_x] : 2 <= conv1_shift_s0_y <= 61 and 2 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_xo = conv2_s1_y, hw_output_s0_x_xi = conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = hw_input_global_wrapper_s0_y, conv1_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -1 + hw_input_global_wrapper_s0_y, conv1_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -2 + hw_input_global_wrapper_s0_y, conv1_s1_x = hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = hw_input_global_wrapper_s0_y, conv1_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -1 + hw_input_global_wrapper_s0_y, conv1_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -2 + hw_input_global_wrapper_s0_y, conv1_s1_x = -1 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = hw_input_global_wrapper_s0_y, conv1_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -1 + hw_input_global_wrapper_s0_y, conv1_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -2 + hw_input_global_wrapper_s0_y, conv1_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv2_s0_y, conv2_s1_x = conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> op_hcompute_conv1_shift_stencil[root' = 0, conv1_shift_s0_y = conv1_s1_y, conv1_shift_s0_x = conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Dep = { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = conv1_s0_y, conv1_s1_x = conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
  Dep = { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv1_shift_s0_y, conv2_s1_x = conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 59 and 0 <= conv1_shift_s0_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -1 + conv1_shift_s0_y, conv2_s1_x = conv1_shift_s0_x] : 0 < conv1_shift_s0_y <= 60 and 0 <= conv1_shift_s0_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -2 + conv1_shift_s0_y, conv2_s1_x = conv1_shift_s0_x] : 2 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv1_shift_s0_y, conv2_s1_x = -1 + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 59 and 0 < conv1_shift_s0_x <= 60; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -1 + conv1_shift_s0_y, conv2_s1_x = -1 + conv1_shift_s0_x] : 0 < conv1_shift_s0_y <= 60 and 0 < conv1_shift_s0_x <= 60; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -2 + conv1_shift_s0_y, conv2_s1_x = -1 + conv1_shift_s0_x] : 2 <= conv1_shift_s0_y <= 61 and 0 < conv1_shift_s0_x <= 60; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv1_shift_s0_y, conv2_s1_x = -2 + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 59 and 2 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -1 + conv1_shift_s0_y, conv2_s1_x = -2 + conv1_shift_s0_x] : 0 < conv1_shift_s0_y <= 60 and 2 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -2 + conv1_shift_s0_y, conv2_s1_x = -2 + conv1_shift_s0_x] : 2 <= conv1_shift_s0_y <= 61 and 2 <= conv1_shift_s0_x <= 61 }
  Dep = { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_xo = conv2_s1_y, hw_output_s0_x_xi = conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Dep = { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = hw_input_global_wrapper_s0_y, conv1_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -1 + hw_input_global_wrapper_s0_y, conv1_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -2 + hw_input_global_wrapper_s0_y, conv1_s1_x = hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = hw_input_global_wrapper_s0_y, conv1_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -1 + hw_input_global_wrapper_s0_y, conv1_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -2 + hw_input_global_wrapper_s0_y, conv1_s1_x = -1 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = hw_input_global_wrapper_s0_y, conv1_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -1 + hw_input_global_wrapper_s0_y, conv1_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 2 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -2 + hw_input_global_wrapper_s0_y, conv1_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 2 <= hw_input_global_wrapper_s0_x <= 63 }
  Dep = { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv2_s0_y, conv2_s1_x = conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
  Dep = { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> op_hcompute_conv1_shift_stencil[root' = 0, conv1_shift_s0_y = conv1_s1_y, conv1_shift_s0_x = conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Got deps
Schedule dim = 3
  scheduling dimension 0
  { op_hcompute_conv1_stencil[root = 0] -> op_hcompute_conv1_stencil_1[root' = 0] }
  { op_hcompute_conv1_shift_stencil[root = 0] -> op_hcompute_conv2_stencil_1[root' = 0] }
  { op_hcompute_conv2_stencil_1[root = 0] -> op_hcompute_hw_output_stencil[root' = 0] }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0] -> op_hcompute_conv1_stencil_1[root' = 0] }
  { op_hcompute_conv2_stencil[root = 0] -> op_hcompute_conv2_stencil_1[root' = 0] }
  { op_hcompute_conv1_stencil_1[root = 0] -> op_hcompute_conv1_shift_stencil[root' = 0] }
Consumed data...
  { op_hcompute_conv1_stencil_1[root = 0] -> op_hcompute_conv1_stencil[root' = 0] }
bound: { op_hcompute_conv1_stencil_1[root] -> op_hcompute_conv1_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv1_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv1_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv1_stencil_1[root] -> [(0)] }
  { op_hcompute_conv2_stencil_1[root = 0] -> op_hcompute_conv1_shift_stencil[root' = 0] }
bound: { op_hcompute_conv2_stencil_1[root] -> op_hcompute_conv1_shift_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv2_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv2_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv2_stencil_1[root] -> [(0)] }
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_conv2_stencil_1[root' = 0] }
bound: { op_hcompute_hw_output_stencil[root] -> op_hcompute_conv2_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_hw_output_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[root] -> [(0)] }
  { op_hcompute_conv1_stencil_1[root = 0] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0] }
bound: { op_hcompute_conv1_stencil_1[root] -> op_hcompute_hw_input_global_wrapper_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv1_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv1_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv1_stencil_1[root] -> [(0)] }
  { op_hcompute_conv2_stencil_1[root = 0] -> op_hcompute_conv2_stencil[root' = 0] }
bound: { op_hcompute_conv2_stencil_1[root] -> op_hcompute_conv2_stencil[(0)] }
    affine upper bound on data needed: { op_hcompute_conv2_stencil_1[root] -> [(0)] }
      domain of bound: { op_hcompute_conv2_stencil_1[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv2_stencil_1[root] -> [(0)] }
  { op_hcompute_conv1_shift_stencil[root = 0] -> op_hcompute_conv1_stencil_1[root' = 0] }
bound: { op_hcompute_conv1_shift_stencil[root] -> op_hcompute_conv1_stencil_1[(0)] }
    affine upper bound on data needed: { op_hcompute_conv1_shift_stencil[root] -> [(0)] }
      domain of bound: { op_hcompute_conv1_shift_stencil[root = 0] }
Extracting linear rational approximation: { op_hcompute_conv1_shift_stencil[root] -> [(0)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv1_stencil_1, s_op_hcompute_conv1_stencil, s_op_hcompute_hw_output_stencil, s_op_hcompute_conv2_stencil_1, s_op_hcompute_conv2_stencil, s_op_hcompute_conv1_shift_stencil, s_op_hcompute_hw_input_global_wrapper_stencil] : s_op_hcompute_conv1_stencil_1 > 0 and s_op_hcompute_conv1_stencil > 0 and s_op_hcompute_hw_output_stencil > 0 and s_op_hcompute_conv2_stencil_1 > 0 and s_op_hcompute_conv2_stencil > 0 and s_op_hcompute_conv1_shift_stencil > 0 and s_op_hcompute_hw_input_global_wrapper_stencil > 0 }
Writing problem to mod file...
  # of constraints: 7
  legal point  : { [1, 1, 1, 1, 1, 1, 1] }
  minimal point: 0
Schedule params...
  { op_hcompute_conv1_stencil_1[root = 0] -> op_hcompute_conv1_stencil[root' = 0] }
  { op_hcompute_hw_output_stencil[root = 0] -> op_hcompute_conv2_stencil_1[root' = 0] }
  { op_hcompute_conv2_stencil_1[root = 0] -> op_hcompute_conv2_stencil[root' = 0] }
  { op_hcompute_conv1_shift_stencil[root = 0] -> op_hcompute_conv1_stencil_1[root' = 0] }
  { op_hcompute_conv2_stencil_1[root = 0] -> op_hcompute_conv1_shift_stencil[root' = 0] }
  { op_hcompute_conv1_stencil_1[root = 0] -> op_hcompute_hw_input_global_wrapper_stencil[root' = 0] }
Done with schedule
Clockwork schedules...
  op_hcompute_conv1_shift_stencil: { [i] -> [(i)] }
  op_hcompute_conv1_stencil: { [i] -> [(i)] }
  op_hcompute_conv1_stencil_1: { [i] -> [(i)] }
  op_hcompute_conv2_stencil: { [i] -> [(i)] }
  op_hcompute_conv2_stencil_1: { [i] -> [(i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(i)] }
  scheduling dimension 1
  { op_hcompute_conv1_stencil[conv1_s0_y] -> op_hcompute_conv1_stencil_1[conv1_s1_y = conv1_s0_y] : 0 <= conv1_s0_y <= 61 }
  { op_hcompute_conv1_shift_stencil[conv1_shift_s0_y] -> op_hcompute_conv2_stencil_1[conv2_s1_y = conv1_shift_s0_y] : 0 <= conv1_shift_s0_y <= 59; op_hcompute_conv1_shift_stencil[conv1_shift_s0_y] -> op_hcompute_conv2_stencil_1[conv2_s1_y = -1 + conv1_shift_s0_y] : 0 < conv1_shift_s0_y <= 60; op_hcompute_conv1_shift_stencil[conv1_shift_s0_y] -> op_hcompute_conv2_stencil_1[conv2_s1_y = -2 + conv1_shift_s0_y] : 2 <= conv1_shift_s0_y <= 61 }
  { op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_hw_output_stencil[hw_output_s0_y_xo = conv2_s1_y] : 0 <= conv2_s1_y <= 59 }
  { op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv1_stencil_1[conv1_s1_y = hw_input_global_wrapper_s0_y] : 0 <= hw_input_global_wrapper_s0_y <= 61; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv1_stencil_1[conv1_s1_y = -1 + hw_input_global_wrapper_s0_y] : 0 < hw_input_global_wrapper_s0_y <= 62; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y] -> op_hcompute_conv1_stencil_1[conv1_s1_y = -2 + hw_input_global_wrapper_s0_y] : 2 <= hw_input_global_wrapper_s0_y <= 63 }
  { op_hcompute_conv2_stencil[conv2_s0_y] -> op_hcompute_conv2_stencil_1[conv2_s1_y = conv2_s0_y] : 0 <= conv2_s0_y <= 59 }
  { op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_y = conv1_s1_y] : 0 <= conv1_s1_y <= 61 }
Consumed data...
  { op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_conv1_stencil[conv1_s0_y = conv1_s1_y] : 0 <= conv1_s1_y <= 61 }
bound: { op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_conv1_stencil[(conv1_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv1_stencil_1[conv1_s1_y] -> [(conv1_s1_y)] }
      domain of bound: { op_hcompute_conv1_stencil_1[conv1_s1_y] : 0 <= conv1_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_conv1_stencil_1[conv1_s1_y] -> [(conv1_s1_y)] }
  { op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_y = 2 + conv2_s1_y] : 0 <= conv2_s1_y <= 59; op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_y = 1 + conv2_s1_y] : 0 <= conv2_s1_y <= 59; op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_y = conv2_s1_y] : 0 <= conv2_s1_y <= 59 }
bound: { op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv1_shift_stencil[(2 + conv2_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv2_stencil_1[conv2_s1_y] -> [(2 + conv2_s1_y)] }
      domain of bound: { op_hcompute_conv2_stencil_1[conv2_s1_y] : 0 <= conv2_s1_y <= 59 }
Extracting linear rational approximation: { op_hcompute_conv2_stencil_1[conv2_s1_y] -> [(2 + conv2_s1_y)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_xo] -> op_hcompute_conv2_stencil_1[conv2_s1_y = hw_output_s0_y_xo] : 0 <= hw_output_s0_y_xo <= 59 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_xo] -> op_hcompute_conv2_stencil_1[(hw_output_s0_y_xo)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_y_xo] -> [(hw_output_s0_y_xo)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_y_xo] : 0 <= hw_output_s0_y_xo <= 59 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_y_xo] -> [(hw_output_s0_y_xo)] }
  { op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 2 + conv1_s1_y] : 0 <= conv1_s1_y <= 61; op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 1 + conv1_s1_y] : 0 <= conv1_s1_y <= 61; op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = conv1_s1_y] : 0 <= conv1_s1_y <= 61 }
bound: { op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[(2 + conv1_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv1_stencil_1[conv1_s1_y] -> [(2 + conv1_s1_y)] }
      domain of bound: { op_hcompute_conv1_stencil_1[conv1_s1_y] : 0 <= conv1_s1_y <= 61 }
Extracting linear rational approximation: { op_hcompute_conv1_stencil_1[conv1_s1_y] -> [(2 + conv1_s1_y)] }
  { op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv2_stencil[conv2_s0_y = conv2_s1_y] : 0 <= conv2_s1_y <= 59 }
bound: { op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv2_stencil[(conv2_s1_y)] }
    affine upper bound on data needed: { op_hcompute_conv2_stencil_1[conv2_s1_y] -> [(conv2_s1_y)] }
      domain of bound: { op_hcompute_conv2_stencil_1[conv2_s1_y] : 0 <= conv2_s1_y <= 59 }
Extracting linear rational approximation: { op_hcompute_conv2_stencil_1[conv2_s1_y] -> [(conv2_s1_y)] }
  { op_hcompute_conv1_shift_stencil[conv1_shift_s0_y] -> op_hcompute_conv1_stencil_1[conv1_s1_y = conv1_shift_s0_y] : 0 <= conv1_shift_s0_y <= 61 }
bound: { op_hcompute_conv1_shift_stencil[conv1_shift_s0_y] -> op_hcompute_conv1_stencil_1[(conv1_shift_s0_y)] }
    affine upper bound on data needed: { op_hcompute_conv1_shift_stencil[conv1_shift_s0_y] -> [(conv1_shift_s0_y)] }
      domain of bound: { op_hcompute_conv1_shift_stencil[conv1_shift_s0_y] : 0 <= conv1_shift_s0_y <= 61 }
Extracting linear rational approximation: { op_hcompute_conv1_shift_stencil[conv1_shift_s0_y] -> [(conv1_shift_s0_y)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv2_stencil_1, s_op_hcompute_conv1_shift_stencil, s_op_hcompute_conv1_stencil_1, s_op_hcompute_conv1_stencil, s_op_hcompute_conv2_stencil, s_op_hcompute_hw_output_stencil, s_op_hcompute_hw_input_global_wrapper_stencil] : s_op_hcompute_conv1_shift_stencil = s_op_hcompute_conv2_stencil_1 and s_op_hcompute_conv1_stencil_1 = s_op_hcompute_conv2_stencil_1 and s_op_hcompute_conv1_stencil = s_op_hcompute_conv2_stencil_1 and s_op_hcompute_conv2_stencil = s_op_hcompute_conv2_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_conv2_stencil_1 and s_op_hcompute_hw_input_global_wrapper_stencil = s_op_hcompute_conv2_stencil_1 and s_op_hcompute_conv2_stencil_1 > 0 }
Writing problem to mod file...
  # of constraints: 13
  legal point  : { [1, 1, 1, 1, 1, 1, 1] }
  minimal point: -7
Schedule params...
  { op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_y = 2 + conv2_s1_y] : 0 <= conv2_s1_y <= 59; op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_y = 1 + conv2_s1_y] : 0 <= conv2_s1_y <= 59; op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_y = conv2_s1_y] : 0 <= conv2_s1_y <= 59 }
  { op_hcompute_conv1_shift_stencil[conv1_shift_s0_y] -> op_hcompute_conv1_stencil_1[conv1_s1_y = conv1_shift_s0_y] : 0 <= conv1_shift_s0_y <= 61 }
  { op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_conv1_stencil[conv1_s0_y = conv1_s1_y] : 0 <= conv1_s1_y <= 61 }
  { op_hcompute_conv2_stencil_1[conv2_s1_y] -> op_hcompute_conv2_stencil[conv2_s0_y = conv2_s1_y] : 0 <= conv2_s1_y <= 59 }
  { op_hcompute_hw_output_stencil[hw_output_s0_y_xo] -> op_hcompute_conv2_stencil_1[conv2_s1_y = hw_output_s0_y_xo] : 0 <= hw_output_s0_y_xo <= 59 }
  { op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 2 + conv1_s1_y] : 0 <= conv1_s1_y <= 61; op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = 1 + conv1_s1_y] : 0 <= conv1_s1_y <= 61; op_hcompute_conv1_stencil_1[conv1_s1_y] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y = conv1_s1_y] : 0 <= conv1_s1_y <= 61 }
Done with schedule
Clockwork schedules...
  op_hcompute_conv1_shift_stencil: { [i] -> [(2 + i)] }
  op_hcompute_conv1_stencil: { [i] -> [(2 + i)] }
  op_hcompute_conv1_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_conv2_stencil: { [i] -> [(4 + i)] }
  op_hcompute_conv2_stencil_1: { [i] -> [(4 + i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(4 + i)] }
  scheduling dimension 2
  { op_hcompute_conv1_stencil[conv1_s0_x] -> op_hcompute_conv1_stencil_1[conv1_s1_x = conv1_s0_x] : 0 <= conv1_s0_x <= 61 }
  { op_hcompute_conv1_shift_stencil[conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[conv2_s1_x = conv1_shift_s0_x] : 0 <= conv1_shift_s0_x <= 59; op_hcompute_conv1_shift_stencil[conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[conv2_s1_x = -1 + conv1_shift_s0_x] : 0 < conv1_shift_s0_x <= 60; op_hcompute_conv1_shift_stencil[conv1_shift_s0_x] -> op_hcompute_conv2_stencil_1[conv2_s1_x = -2 + conv1_shift_s0_x] : 2 <= conv1_shift_s0_x <= 61 }
  { op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_hw_output_stencil[hw_output_s0_x_xi = conv2_s1_x] : 0 <= conv2_s1_x <= 59 }
  { op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[conv1_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[conv1_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_x <= 62; op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x] -> op_hcompute_conv1_stencil_1[conv1_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv2_stencil[conv2_s0_x] -> op_hcompute_conv2_stencil_1[conv2_s1_x = conv2_s0_x] : 0 <= conv2_s0_x <= 59 }
  { op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_x = conv1_s1_x] : 0 <= conv1_s1_x <= 61 }
Consumed data...
  { op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_conv1_stencil[conv1_s0_x = conv1_s1_x] : 0 <= conv1_s1_x <= 61 }
bound: { op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_conv1_stencil[(conv1_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv1_stencil_1[conv1_s1_x] -> [(conv1_s1_x)] }
      domain of bound: { op_hcompute_conv1_stencil_1[conv1_s1_x] : 0 <= conv1_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_conv1_stencil_1[conv1_s1_x] -> [(conv1_s1_x)] }
  { op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_x = 2 + conv2_s1_x] : 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_x = 1 + conv2_s1_x] : 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_x = conv2_s1_x] : 0 <= conv2_s1_x <= 59 }
bound: { op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv1_shift_stencil[(2 + conv2_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv2_stencil_1[conv2_s1_x] -> [(2 + conv2_s1_x)] }
      domain of bound: { op_hcompute_conv2_stencil_1[conv2_s1_x] : 0 <= conv2_s1_x <= 59 }
Extracting linear rational approximation: { op_hcompute_conv2_stencil_1[conv2_s1_x] -> [(2 + conv2_s1_x)] }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv2_stencil_1[conv2_s1_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 59 }
bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv2_stencil_1[(hw_output_s0_x_xi)] }
    affine upper bound on data needed: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
      domain of bound: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 59 }
Extracting linear rational approximation: { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> [(hw_output_s0_x_xi)] }
  { op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 2 + conv1_s1_x] : 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 1 + conv1_s1_x] : 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = conv1_s1_x] : 0 <= conv1_s1_x <= 61 }
bound: { op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[(2 + conv1_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv1_stencil_1[conv1_s1_x] -> [(2 + conv1_s1_x)] }
      domain of bound: { op_hcompute_conv1_stencil_1[conv1_s1_x] : 0 <= conv1_s1_x <= 61 }
Extracting linear rational approximation: { op_hcompute_conv1_stencil_1[conv1_s1_x] -> [(2 + conv1_s1_x)] }
  { op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv2_stencil[conv2_s0_x = conv2_s1_x] : 0 <= conv2_s1_x <= 59 }
bound: { op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv2_stencil[(conv2_s1_x)] }
    affine upper bound on data needed: { op_hcompute_conv2_stencil_1[conv2_s1_x] -> [(conv2_s1_x)] }
      domain of bound: { op_hcompute_conv2_stencil_1[conv2_s1_x] : 0 <= conv2_s1_x <= 59 }
Extracting linear rational approximation: { op_hcompute_conv2_stencil_1[conv2_s1_x] -> [(conv2_s1_x)] }
  { op_hcompute_conv1_shift_stencil[conv1_shift_s0_x] -> op_hcompute_conv1_stencil_1[conv1_s1_x = conv1_shift_s0_x] : 0 <= conv1_shift_s0_x <= 61 }
bound: { op_hcompute_conv1_shift_stencil[conv1_shift_s0_x] -> op_hcompute_conv1_stencil_1[(conv1_shift_s0_x)] }
    affine upper bound on data needed: { op_hcompute_conv1_shift_stencil[conv1_shift_s0_x] -> [(conv1_shift_s0_x)] }
      domain of bound: { op_hcompute_conv1_shift_stencil[conv1_shift_s0_x] : 0 <= conv1_shift_s0_x <= 61 }
Extracting linear rational approximation: { op_hcompute_conv1_shift_stencil[conv1_shift_s0_x] -> [(conv1_shift_s0_x)] }
Extracted sched params
ILP Problem: { [s_op_hcompute_conv1_stencil_1, s_op_hcompute_conv1_stencil, s_op_hcompute_hw_output_stencil, s_op_hcompute_conv2_stencil_1, s_op_hcompute_conv1_shift_stencil, s_op_hcompute_conv2_stencil, s_op_hcompute_hw_input_global_wrapper_stencil] : s_op_hcompute_conv1_stencil = s_op_hcompute_conv1_stencil_1 and s_op_hcompute_hw_output_stencil = s_op_hcompute_conv1_stencil_1 and s_op_hcompute_conv2_stencil_1 = s_op_hcompute_conv1_stencil_1 and s_op_hcompute_conv1_shift_stencil = s_op_hcompute_conv1_stencil_1 and s_op_hcompute_conv2_stencil = s_op_hcompute_conv1_stencil_1 and s_op_hcompute_hw_input_global_wrapper_stencil = s_op_hcompute_conv1_stencil_1 and s_op_hcompute_conv1_stencil_1 > 0 }
Writing problem to mod file...
  # of constraints: 13
  legal point  : { [1, 1, 1, 1, 1, 1, 1] }
  minimal point: -7
Schedule params...
  { op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_conv1_stencil[conv1_s0_x = conv1_s1_x] : 0 <= conv1_s1_x <= 61 }
  { op_hcompute_hw_output_stencil[hw_output_s0_x_xi] -> op_hcompute_conv2_stencil_1[conv2_s1_x = hw_output_s0_x_xi] : 0 <= hw_output_s0_x_xi <= 59 }
  { op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_x = 2 + conv2_s1_x] : 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_x = 1 + conv2_s1_x] : 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv1_shift_stencil[conv1_shift_s0_x = conv2_s1_x] : 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv1_shift_stencil[conv1_shift_s0_x] -> op_hcompute_conv1_stencil_1[conv1_s1_x = conv1_shift_s0_x] : 0 <= conv1_shift_s0_x <= 61 }
  { op_hcompute_conv2_stencil_1[conv2_s1_x] -> op_hcompute_conv2_stencil[conv2_s0_x = conv2_s1_x] : 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 2 + conv1_s1_x] : 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = 1 + conv1_s1_x] : 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[conv1_s1_x] -> op_hcompute_hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_x = conv1_s1_x] : 0 <= conv1_s1_x <= 61 }
Done with schedule
Clockwork schedules...
  op_hcompute_conv1_shift_stencil: { [i] -> [(2 + i)] }
  op_hcompute_conv1_stencil: { [i] -> [(2 + i)] }
  op_hcompute_conv1_stencil_1: { [i] -> [(2 + i)] }
  op_hcompute_conv2_stencil: { [i] -> [(4 + i)] }
  op_hcompute_conv2_stencil_1: { [i] -> [(4 + i)] }
  op_hcompute_hw_input_global_wrapper_stencil: { [i] -> [(i)] }
  op_hcompute_hw_output_stencil: { [i] -> [(4 + i)] }
Original Loop iis
op_hcompute_hw_input_global_wrapper_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_hw_input_global_wrapper_stencil
  hw_input_global_wrapper_s0_y q: 1, d = 0
    ii = 64
op_hcompute_hw_input_global_wrapper_stencil
  hw_input_global_wrapper_s0_x q: 1, d = 0
    ii = 1
op_hcompute_conv1_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_conv1_stencil
  conv1_s0_y q: 1, d = 2
    ii = 64
op_hcompute_conv1_stencil
  conv1_s0_x q: 1, d = 2
    ii = 1
op_hcompute_conv1_stencil_1
  root q: 1, d = 0
    ii = 4096
op_hcompute_conv1_stencil_1
  conv1_s1_y q: 1, d = 2
    ii = 64
op_hcompute_conv1_stencil_1
  conv1_s1_x q: 1, d = 2
    ii = 1
op_hcompute_conv1_shift_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_conv1_shift_stencil
  conv1_shift_s0_y q: 1, d = 2
    ii = 64
op_hcompute_conv1_shift_stencil
  conv1_shift_s0_x q: 1, d = 2
    ii = 1
op_hcompute_conv2_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_conv2_stencil
  conv2_s0_y q: 1, d = 4
    ii = 64
op_hcompute_conv2_stencil
  conv2_s0_x q: 1, d = 4
    ii = 1
op_hcompute_conv2_stencil_1
  root q: 1, d = 0
    ii = 4096
op_hcompute_conv2_stencil_1
  conv2_s1_y q: 1, d = 4
    ii = 64
op_hcompute_conv2_stencil_1
  conv2_s1_x q: 1, d = 4
    ii = 1
op_hcompute_hw_output_stencil
  root q: 1, d = 0
    ii = 4096
op_hcompute_hw_output_stencil
  hw_output_s0_y_xo q: 1, d = 4
    ii = 64
op_hcompute_hw_output_stencil
  hw_output_s0_x_xi q: 1, d = 4
    ii = 1
inner ops: op_hcompute_hw_input_global_wrapper_stencil
inner ops: op_hcompute_hw_input_global_wrapper_stencil, offset: 0
inner ops: op_hcompute_conv1_stencil
inner ops: op_hcompute_conv1_stencil, offset: 0
inner ops: op_hcompute_conv1_stencil_1
force inner op: op_hcompute_conv1_stencil, has same offset as update: 0
inner ops: op_hcompute_conv1_stencil_1, offset: 0
inner ops: op_hcompute_conv1_shift_stencil
inner ops: op_hcompute_conv1_shift_stencil, offset: 0
inner ops: op_hcompute_conv2_stencil
inner ops: op_hcompute_conv2_stencil, offset: 0
inner ops: op_hcompute_conv2_stencil_1
force inner op: op_hcompute_conv2_stencil, has same offset as update: 0
inner ops: op_hcompute_conv2_stencil_1, offset: 0
inner ops: op_hcompute_hw_output_stencil
inner ops: op_hcompute_hw_output_stencil, offset: 0
schedule for n: { start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedmap = { start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
orginal schedule before relax: { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedmap = { start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
Start times...
{ start_op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; start_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; start_op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; start_op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; start_op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; start_op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; start_op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
  pre adjustment min: { [0] }
Adjusting delays of cascade
schedule for n: { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedmap = { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedmap = { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedule for n: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x] }
schedmap = { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedule for n: { op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x] }
schedmap = { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedule for n: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x] }
schedmap = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedule for n: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedule for n: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi] }
schedmap = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
sorted kernel: {}
sorted kernel: {conv1_s0_y}
sorted kernel: {conv1_s0_y}
sorted kernel: {conv1_s0_y}
sorted kernel: {conv1_s0_y, conv2_s0_y}
sorted kernel: {conv1_s0_y, conv2_s0_y}
sorted kernel: {conv1_s0_y, conv2_s0_y}
sorted kernel: {conv1_s0_y, conv2_s0_y}
sorted kernel: {conv1_s0_y, conv2_s0_y, hw_input_global_wrapper_s0_y}
sorted kernel: {conv1_s0_y, conv2_s0_y, hw_input_global_wrapper_s0_y, conv1_s1_y}
sorted kernel: {conv1_s0_y, conv2_s0_y, hw_input_global_wrapper_s0_y, conv1_s1_y, conv1_shift_s0_y}
sorted kernel: {conv1_s0_y, conv2_s0_y, hw_input_global_wrapper_s0_y, conv1_s1_y, conv1_shift_s0_y, conv2_s1_y}
Adjusting delay of conv1_s0_y
Adjusting delay of conv2_s0_y
Adjusting delay of hw_input_global_wrapper_s0_y
read map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Kernel <hw_input_global_wrapper_s0_y> has Delay slack: 0
Offset with in parent: 0
Adjusting delay of conv1_s1_y
read map: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> conv1_stencil_clkwrk_dsa0[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
write map: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> conv1_stencil_clkwrk_dsa0[conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
writes: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> conv1_stencil_clkwrk_dsa0[conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
reads : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> conv1_stencil_clkwrk_dsa0[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Schedule...
  { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
  { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
  { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Time to write: { [i0] -> conv1_stencil_clkwrk_dsa0[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -1 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -2 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -64 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -65 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -66 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -128 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -129 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> conv1_stencil_clkwrk_dsa0[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_conv1_stencil
    sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
    Consumers: op_hcompute_conv1_stencil_1
    sched: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
write map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> conv1_stencil_clkwrk_dsa0[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Schedule...
  { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
  { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
  { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -1 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -2 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -64 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -65 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -66 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -128 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -129 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> hw_input_global_wrapper_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0; [i0] -> conv1_stencil_clkwrk_dsa0[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [130 + i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0; [i0] -> [129 + i0] : -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) < i0; [i0] -> [128 + i0] : 0 <= i0 <= 3967 and 64*floor((i0)/64) <= -2 + i0; [i0] -> [66 + i0] : 62 <= i0 <= 4029 and 64*floor((2 + i0)/64) <= i0; [i0] -> [65 + i0] : 63 <= i0 <= 4030 and 64*floor((1 + i0)/64) < i0; [i0] -> [64 + i0] : 64 <= i0 <= 4031 and 64*floor((i0)/64) <= -2 + i0; [i0] -> [2 + i0] : 126 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= i0; [i0] -> [1 + i0] : 127 <= i0 <= 4094 and 64*floor((1 + i0)/64) < i0; [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [130]; [129]; [128]; [66]; [65]; [64]; [2]; [1]; [0] }
    Producers: op_hcompute_hw_input_global_wrapper_stencil
    sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
    Consumers: op_hcompute_conv1_stencil_1
    sched: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Kernel <conv1_s1_y> has Delay slack: 0
Offset with in parent: 128
Adjusting delay of conv1_shift_s0_y
read map: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
write map: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> conv1_stencil[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
writes: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> conv1_stencil[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
reads : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
Schedule...
  { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
  { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
  { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Time to write: { [i0] -> conv1_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> conv1_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_conv1_stencil_1
    sched: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
    Consumers: op_hcompute_conv1_shift_stencil
    sched: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
Kernel <conv1_shift_s0_y> has Delay slack: 0
Offset with in parent: 128
Adjusting delay of conv2_s1_y
read map: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv2_stencil_clkwrk_dsa1[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
write map: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
writes: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
reads : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv2_stencil_clkwrk_dsa1[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Schedule...
  { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
  { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
  { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Time to write: { [i0] -> conv1_shift_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> conv2_stencil_clkwrk_dsa1[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> conv1_shift_stencil[o0, -130 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> conv1_shift_stencil[o0, -131 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> conv1_shift_stencil[o0, -132 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> conv1_shift_stencil[o0, -194 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> conv1_shift_stencil[o0, -195 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> conv1_shift_stencil[o0, -196 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> conv1_shift_stencil[o0, -258 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> conv1_shift_stencil[o0, -259 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> conv1_shift_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [130 + i0] : 126 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= -2 + i0; [i0] -> [129 + i0] : 127 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -3 + i0; [i0] -> [128 + i0] : 128 <= i0 <= 3967 and 64*floor((i0)/64) <= -4 + i0; [i0] -> [66 + i0] : 190 <= i0 <= 4029 and 64*floor((2 + i0)/64) <= -2 + i0; [i0] -> [65 + i0] : 191 <= i0 <= 4030 and 64*floor((1 + i0)/64) <= -3 + i0; [i0] -> [64 + i0] : 192 <= i0 <= 4031 and 64*floor((i0)/64) <= -4 + i0; [i0] -> [2 + i0] : 254 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= -2 + i0; [i0] -> [1 + i0] : 255 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -3 + i0; [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [130]; [129]; [128]; [66]; [65]; [64]; [2]; [1]; [0] }
    Producers: op_hcompute_conv1_shift_stencil
    sched: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
    Consumers: op_hcompute_conv2_stencil_1
    sched: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
write map: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> conv2_stencil_clkwrk_dsa1[conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
writes: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> conv2_stencil_clkwrk_dsa1[conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
reads : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv2_stencil_clkwrk_dsa1[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Schedule...
  { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
  { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
  { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Time to write: { [i0] -> conv2_stencil_clkwrk_dsa1[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> conv2_stencil_clkwrk_dsa1[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> conv1_shift_stencil[o0, -130 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> conv1_shift_stencil[o0, -131 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> conv1_shift_stencil[o0, -132 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0; [i0] -> conv1_shift_stencil[o0, -194 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> conv1_shift_stencil[o0, -195 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> conv1_shift_stencil[o0, -196 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0; [i0] -> conv1_shift_stencil[o0, -258 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> conv1_shift_stencil[o0, -259 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0; [i0] -> conv1_shift_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_conv2_stencil
    sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
    Consumers: op_hcompute_conv2_stencil_1
    sched: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Kernel <conv2_s1_y> has Delay slack: 0
Offset with in parent: 256
Adjusting delay of hw_output_s0_y_xo
read map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> conv2_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
write map: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv2_stencil[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
writes: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv2_stencil[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
reads : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> conv2_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Schedule...
  { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
  { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
  { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Time to write: { [i0] -> conv2_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> conv2_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
    Producers: op_hcompute_conv2_stencil_1
    sched: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
    Consumers: op_hcompute_hw_output_stencil
    sched: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Kernel <hw_output_s0_y_xo> has Delay slack: 0
Offset with in parent: 256
    Find buffers need to be rewritten: conv1_stencil_clkwrk_dsa0
    Find buffers need to be rewritten: conv2_stencil_clkwrk_dsa1
    Find buffers need to be rewritten: hw_input_global_wrapper_stencil

Filter buffers...

schedule for n: { start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedmap = { start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
Final schedule after relax: { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedmap = { end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedmap = { end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x] }
schedmap = { end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x] }
schedmap = { end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x] }
schedmap = { end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi] }
schedmap = { end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi]; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
Final end schedule after relax: { end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi]; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedmap = { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedmap = { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedule for n: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x] }
schedmap = { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedule for n: { op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x] }
schedmap = { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedule for n: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x] }
schedmap = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedule for n: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedule for n: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi] }
schedmap = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
Computing validity deps for conv1_shift_stencil
Computing validity deps for conv1_stencil
Computing validity deps for conv1_stencil_clkwrk_dsa0
Computing validity deps for conv2_stencil
Computing validity deps for conv2_stencil_clkwrk_dsa1
Computing validity deps for hw_input_global_wrapper_stencil
Computing validity deps for hw_input_stencil
Computing validity deps for hw_output_stencil
program: cascade
Inputs...
  hw_input_stencil
Outputs...
  hw_output_stencil
buffers...
  hw_input_stencil[]
operations...
for (int root = 0; root < 1; root++) {
  for (int hw_input_global_wrapper_s0_y = 0; hw_input_global_wrapper_s0_y < 64; hw_input_global_wrapper_s0_y++) {
    for (int hw_input_global_wrapper_s0_x = 0; hw_input_global_wrapper_s0_x < 64; hw_input_global_wrapper_s0_x++) {
      op_hcompute_hw_input_global_wrapper_stencil: hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] = hcompute_hw_input_global_wrapper_stencil(hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0])
    }
  }
  for (int conv1_s0_y = 0; conv1_s0_y < 62; conv1_s0_y++) {
    for (int conv1_s0_x = 0; conv1_s0_x < 62; conv1_s0_x++) {
      op_hcompute_conv1_stencil: conv1_stencil_clkwrk_dsa0[conv1_s0_y+0,  conv1_s0_x+0] = hcompute_conv1_stencil()
    }
  }
  for (int conv1_s1_y = 0; conv1_s1_y < 62; conv1_s1_y++) {
    for (int conv1_s1_x = 0; conv1_s1_x < 62; conv1_s1_x++) {
      op_hcompute_conv1_stencil_1: conv1_stencil[conv1_s1_y+0,  conv1_s1_x+0] = hcompute_conv1_stencil_1(conv1_stencil_clkwrk_dsa0[conv1_s1_y+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[conv1_s1_y+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[conv1_s1_y+0,  (conv1_s1_x + 1)+0], hw_input_global_wrapper_stencil[conv1_s1_y+0,  (conv1_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  (conv1_s1_x + 1)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  (conv1_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  conv1_s1_x+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  (conv1_s1_x + 2)+0], hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  (conv1_s1_x + 1)+0])
    }
  }
  for (int conv1_shift_s0_y = 0; conv1_shift_s0_y < 62; conv1_shift_s0_y++) {
    for (int conv1_shift_s0_x = 0; conv1_shift_s0_x < 62; conv1_shift_s0_x++) {
      op_hcompute_conv1_shift_stencil: conv1_shift_stencil[conv1_shift_s0_y+0,  conv1_shift_s0_x+0] = hcompute_conv1_shift_stencil(conv1_stencil[conv1_shift_s0_y+0,  conv1_shift_s0_x+0])
    }
  }
  for (int conv2_s0_y = 0; conv2_s0_y < 60; conv2_s0_y++) {
    for (int conv2_s0_x = 0; conv2_s0_x < 60; conv2_s0_x++) {
      op_hcompute_conv2_stencil: conv2_stencil_clkwrk_dsa1[conv2_s0_y+0,  conv2_s0_x+0] = hcompute_conv2_stencil()
    }
  }
  for (int conv2_s1_y = 0; conv2_s1_y < 60; conv2_s1_y++) {
    for (int conv2_s1_x = 0; conv2_s1_x < 60; conv2_s1_x++) {
      op_hcompute_conv2_stencil_1: conv2_stencil[conv2_s1_y+0,  conv2_s1_x+0] = hcompute_conv2_stencil_1(conv1_shift_stencil[conv2_s1_y+0,  conv2_s1_x+0], conv1_shift_stencil[conv2_s1_y+0,  (conv2_s1_x + 1)+0], conv1_shift_stencil[conv2_s1_y+0,  (conv2_s1_x + 2)+0], conv1_shift_stencil[(conv2_s1_y + 1)+0,  conv2_s1_x+0], conv1_shift_stencil[(conv2_s1_y + 1)+0,  (conv2_s1_x + 1)+0], conv1_shift_stencil[(conv2_s1_y + 1)+0,  (conv2_s1_x + 2)+0], conv1_shift_stencil[(conv2_s1_y + 2)+0,  conv2_s1_x+0], conv1_shift_stencil[(conv2_s1_y + 2)+0,  (conv2_s1_x + 2)+0], conv1_shift_stencil[(conv2_s1_y + 2)+0,  (conv2_s1_x + 1)+0], conv2_stencil_clkwrk_dsa1[conv2_s1_y+0,  conv2_s1_x+0])
    }
  }
  for (int hw_output_s0_y_xo = 0; hw_output_s0_y_xo < 60; hw_output_s0_y_xo++) {
    for (int hw_output_s0_x_xi = 0; hw_output_s0_x_xi < 60; hw_output_s0_x_xi++) {
      op_hcompute_hw_output_stencil: hw_output_stencil[hw_output_s0_y_xo+0,  hw_output_s0_x_xi+0] = hcompute_hw_output_stencil(conv2_stencil[hw_output_s0_y_xo+0,  hw_output_s0_x_xi+0])
    }
  }
}
schedule for n: { start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedmap = { start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
Start times...
  { start_op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  { start_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  { start_op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
  { start_op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
  { start_op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { start_op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
  { start_op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
  min: { [0] }
schedule for n: { start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedmap = { start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi] }
schedmap = { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi]; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedule for n: { end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedmap = { end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedmap = { end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x] }
schedmap = { end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x] }
schedmap = { end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x] }
schedmap = { end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi] }
schedmap = { end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x]; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi]; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
Schedule...
  { start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
  { start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x] }
  { start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x] }
  { start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x] }
  { start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
  { start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi] }
  { start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
  Cycle deps: { end_op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> start_op_hcompute_conv1_shift_stencil[root' = 0, conv1_shift_s0_y = conv1_s1_y, conv1_shift_s0_x = conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; end_op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> start_op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = conv1_s0_y, conv1_s1_x = conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; end_op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> start_op_hcompute_hw_output_stencil[root' = 0, hw_output_s0_y_xo = conv2_s1_y, hw_output_s0_x_xi = conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; end_op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> start_op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv2_s0_y, conv2_s1_x = conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; end_op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv1_shift_s0_y, conv2_s1_x = conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 59 and 0 <= conv1_shift_s0_x <= 59; end_op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -1 + conv1_shift_s0_y, conv2_s1_x = conv1_shift_s0_x] : 0 < conv1_shift_s0_y <= 60 and 0 <= conv1_shift_s0_x <= 59; end_op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -2 + conv1_shift_s0_y, conv2_s1_x = conv1_shift_s0_x] : 2 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 59; end_op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv1_shift_s0_y, conv2_s1_x = -1 + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 59 and 0 < conv1_shift_s0_x <= 60; end_op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -1 + conv1_shift_s0_y, conv2_s1_x = -1 + conv1_shift_s0_x] : 0 < conv1_shift_s0_y <= 60 and 0 < conv1_shift_s0_x <= 60; end_op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -2 + conv1_shift_s0_y, conv2_s1_x = -1 + conv1_shift_s0_x] : 2 <= conv1_shift_s0_y <= 61 and 0 < conv1_shift_s0_x <= 60; end_op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = conv1_shift_s0_y, conv2_s1_x = -2 + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 59 and 2 <= conv1_shift_s0_x <= 61; end_op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -1 + conv1_shift_s0_y, conv2_s1_x = -2 + conv1_shift_s0_x] : 0 < conv1_shift_s0_y <= 60 and 2 <= conv1_shift_s0_x <= 61; end_op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv2_stencil_1[root' = 0, conv2_s1_y = -2 + conv1_shift_s0_y, conv2_s1_x = -2 + conv1_shift_s0_x] : 2 <= conv1_shift_s0_y <= 61 and 2 <= conv1_shift_s0_x <= 61; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = hw_input_global_wrapper_s0_y, conv1_s1_x = hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 <= hw_input_global_wrapper_s0_x <= 61; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -1 + hw_input_global_wrapper_s0_y, conv1_s1_x = hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 <= hw_input_global_wrapper_s0_x <= 61; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -2 + hw_input_global_wrapper_s0_y, conv1_s1_x = hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 61; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = hw_input_global_wrapper_s0_y, conv1_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 0 < hw_input_global_wrapper_s0_x <= 62; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -1 + hw_input_global_wrapper_s0_y, conv1_s1_x = -1 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 0 < hw_input_global_wrapper_s0_x <= 62; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -2 + hw_input_global_wrapper_s0_y, conv1_s1_x = -1 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 0 < hw_input_global_wrapper_s0_x <= 62; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = hw_input_global_wrapper_s0_y, conv1_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 61 and 2 <= hw_input_global_wrapper_s0_x <= 63; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -1 + hw_input_global_wrapper_s0_y, conv1_s1_x = -2 + hw_input_global_wrapper_s0_x] : 0 < hw_input_global_wrapper_s0_y <= 62 and 2 <= hw_input_global_wrapper_s0_x <= 63; end_op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv1_stencil_1[root' = 0, conv1_s1_y = -2 + hw_input_global_wrapper_s0_y, conv1_s1_x = -2 + hw_input_global_wrapper_s0_x] : 2 <= hw_input_global_wrapper_s0_y <= 63 and 2 <= hw_input_global_wrapper_s0_x <= 63 }
  Earlier deps: { start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> start_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x >= -129 + 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv2_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 261 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> end_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y', conv1_shift_s0_x'] : conv1_shift_s0_x' > 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv1_shift_s0_y'; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> start_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x >= -129 + 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv2_s0_y; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 261 + 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> start_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x >= 131 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv1_s1_y; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> start_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x > 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv1_shift_s0_y; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> start_op_hcompute_conv1_stencil[root', conv1_s0_y', conv1_s0_x'] : conv1_s0_x' > 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv1_s0_y'; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 131 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> start_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x >= 131 + 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv1_s1_y; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64hw_output_s0_y_xo; end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 261 + 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x >= -129 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv1_s1_y; start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> start_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x >= -129 + 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv2_s1_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x >= -129 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv1_s1_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_xo; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64hw_output_s0_y_xo; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> end_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x >= 131 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv1_s1_y; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> start_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x >= 131 + 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv1_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> start_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x > 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv2_s1_y; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64hw_output_s0_y_xo; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 131 + 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> end_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x >= 131 + 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv1_s1_y; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 131 + 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> end_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x > 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv1_s0_y; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> start_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x > 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv1_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> end_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x >= 131 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv1_shift_s0_y; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 261 + 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x >= -129 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv1_s1_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x >= -129 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv1_s0_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x >= -259 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv2_s1_y; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64hw_output_s0_y_xo; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> end_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x >= 131 + 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv1_s0_y; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x >= -129 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv2_s0_y; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> start_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x > 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv1_shift_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> start_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x >= 131 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv1_s0_y; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> start_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x >= -129 + 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv2_s1_y; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> end_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x >= -129 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv2_s0_y; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> end_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x > 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv1_shift_s0_y; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> end_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x >= -129 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv2_s0_y; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> end_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x >= -129 + 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv2_s1_y; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x > 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv1_s0_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x >= -259 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv2_s0_y; start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64hw_output_s0_y_xo; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 261 + 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64hw_output_s0_y_xo; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 261 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> start_op_hcompute_conv2_stencil[root', conv2_s0_y', conv2_s0_x'] : conv2_s0_x' > 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv2_s0_y'; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> end_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x >= -129 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv2_s1_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> end_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x >= 131 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv1_s1_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x >= -129 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv1_shift_s0_y; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> end_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x >= -129 + 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv2_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> end_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x > 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv2_s1_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 261 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> start_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x >= -129 + 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv2_s1_y; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x >= -129 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv2_s0_y; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> start_op_hcompute_conv1_stencil_1[root', conv1_s1_y', conv1_s1_x'] : conv1_s1_x' > 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv1_s1_y'; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 261 + 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64hw_output_s0_y_xo; end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> start_op_hcompute_conv2_stencil[root', conv2_s0_y', conv2_s0_x'] : conv2_s0_x' > 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv2_s0_y'; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_x'] : hw_input_global_wrapper_s0_x' > 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y'; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> end_op_hcompute_conv1_stencil[root', conv1_s0_y', conv1_s0_x'] : conv1_s0_x' > 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv1_s0_y'; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> end_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x > 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv1_s1_y; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> end_op_hcompute_conv2_stencil[root', conv2_s0_y', conv2_s0_x'] : conv2_s0_x' > 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv2_s0_y'; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> end_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x >= 131 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv1_s0_y; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> end_op_hcompute_conv1_stencil_1[root', conv1_s1_y', conv1_s1_x'] : conv1_s1_x' > 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv1_s1_y'; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> start_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x >= 131 + 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv1_s0_y; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> end_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x > 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv2_s1_y; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> start_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x >= -129 + 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv2_s0_y; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x >= -129 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv2_s1_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x >= -129 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv1_s0_y; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> end_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x >= 131 + 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv1_shift_s0_y; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x >= -129 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv2_s1_y; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> start_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x >= -129 + 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv2_s1_y; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> start_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x > 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv2_s1_y; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64hw_output_s0_y_xo; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> end_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x >= -129 + 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv2_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64hw_output_s0_y_xo'; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> start_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x >= 131 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv1_shift_s0_y; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 131 + 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> start_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x >= -129 + 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv2_s0_y; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 261 + 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> end_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x >= -129 + 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv2_s1_y; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> start_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x > 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv1_shift_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> end_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x > 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv2_s0_y; start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> end_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x >= -129 + 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv2_s0_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_xo; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> end_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x >= 131 + 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv1_s0_y; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> start_op_hcompute_conv2_stencil_1[root', conv2_s1_y', conv2_s1_x'] : conv2_s1_x' > 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv2_s1_y'; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64hw_output_s0_y_xo; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> end_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x >= 131 + 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv1_shift_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> start_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x > 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv2_s1_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x >= -259 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv2_s1_y; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> end_op_hcompute_conv1_stencil_1[root', conv1_s1_y', conv1_s1_x'] : conv1_s1_x' > 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv1_s1_y'; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> end_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x > 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv2_s0_y; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> end_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x > 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv1_s1_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x >= -129 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv1_s0_y; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x > 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv1_s1_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> start_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x > 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv2_s0_y; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64hw_output_s0_y_xo; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_xo; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> start_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x >= 131 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv1_s0_y; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> end_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x >= -129 + 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv2_s1_y; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> start_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x > 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv1_s1_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> end_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x >= 131 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv1_s0_y; end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> start_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x > 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv2_s1_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> start_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x > 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv2_s0_y; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 261 + 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> start_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x >= 131 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv1_s1_y; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 131 + 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> end_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x >= 131 + 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv1_s1_y; end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> end_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x >= 131 + 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv1_shift_s0_y; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 131 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64hw_output_s0_y_xo'; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x >= -129 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv1_s0_y; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> start_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x >= 131 + 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv1_shift_s0_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -259 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_output_s0_y_xo; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64hw_output_s0_y_xo; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> end_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x >= 131 + 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv1_s1_y; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 131 + 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 261 + 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> end_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x > 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv2_s1_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x >= -259 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv2_s1_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x >= -129 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv1_shift_s0_y; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> end_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x > 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv1_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> start_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x >= 131 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv1_shift_s0_y; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> end_op_hcompute_conv2_stencil_1[root', conv2_s1_y', conv2_s1_x'] : conv2_s1_x' > 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv2_s1_y'; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> end_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x > 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv1_s1_y; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> end_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x > 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv1_s0_y; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> start_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x > 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv2_s0_y; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> end_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x >= 131 + 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv1_shift_s0_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64hw_output_s0_y_xo'; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> end_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x >= 131 + 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv1_s1_y; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> end_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x > 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv1_shift_s0_y; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64hw_output_s0_y_xo; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 131 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 131 + 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> start_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x >= 131 + 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv1_s0_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x >= -259 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv2_s0_y; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> start_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x >= 131 + 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv1_s0_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x >= -129 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv1_s1_y; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> end_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x >= 131 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv1_shift_s0_y; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x > 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv1_s0_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x >= -259 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv2_s0_y; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> start_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x >= 131 + 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv1_shift_s0_y; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> start_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x >= 131 + 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv1_shift_s0_y; start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> end_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x > 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv1_s1_y; end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64hw_output_s0_y_xo; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> end_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x > 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv2_s0_y; end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> end_op_hcompute_conv2_stencil[root', conv2_s0_y', conv2_s0_x'] : conv2_s0_x' > 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv2_s0_y'; start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> start_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x > 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv1_shift_s0_y; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y', conv1_shift_s0_x'] : conv1_shift_s0_x' > 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv1_shift_s0_y'; end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> start_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x >= 131 + 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv1_shift_s0_y; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> end_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x >= -129 + 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv2_s1_y; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64hw_output_s0_y_xo; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> end_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x >= 131 + 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv1_s0_y; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> end_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x > 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv1_s0_y; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x > 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv1_s1_y; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y', conv1_shift_s0_x'] : conv1_shift_s0_x' > 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv1_shift_s0_y'; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 261 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64hw_output_s0_y_xo; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_x'] : hw_input_global_wrapper_s0_x' > 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y'; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64hw_output_s0_y_xo; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> end_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y', conv1_shift_s0_x'] : conv1_shift_s0_x' > 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv1_shift_s0_y'; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> start_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x >= 131 + 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv1_s1_y; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> end_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x >= -129 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64conv2_s1_y; start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 131 + 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> end_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x > 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv1_shift_s0_y; start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> start_op_hcompute_conv1_stencil[root', conv1_s0_y', conv1_s0_x'] : conv1_s0_x' > 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv1_s0_y'; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64hw_output_s0_y_xo; start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> start_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x > 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv1_s1_y; start_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> end_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x > 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64conv2_s0_y; end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64hw_output_s0_y_xo; end_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi >= -129 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64hw_output_s0_y_xo; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> start_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x > 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv1_s0_y; end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> end_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x > 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv2_s1_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_x'] : hw_input_global_wrapper_s0_x' > 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y'; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> end_op_hcompute_conv2_stencil_1[root', conv2_s1_y', conv2_s1_x'] : conv2_s1_x' > 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv2_s1_y'; start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> end_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x > 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv1_shift_s0_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x >= -129 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv1_shift_s0_y; start_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> start_op_hcompute_conv1_stencil_1[root', conv1_s1_y', conv1_s1_x'] : conv1_s1_x' > 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv1_s1_y'; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> end_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo, hw_output_s0_x_xi] : hw_output_s0_x_xi > 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64hw_output_s0_y_xo; start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 131 + 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; start_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> start_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x >= 131 + 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv1_s1_y; start_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> start_op_hcompute_conv2_stencil_1[root', conv2_s1_y', conv2_s1_x'] : conv2_s1_x' > 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv2_s1_y'; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_conv1_shift_stencil[root', conv1_shift_s0_y, conv1_shift_s0_x] : conv1_shift_s0_x >= -129 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv1_shift_s0_y; end_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv2_stencil_1[root', conv2_s1_y, conv2_s1_x] : conv2_s1_x >= -259 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv2_s1_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> end_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x >= -259 + 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64conv2_s0_y; start_op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> end_op_hcompute_conv1_stencil[root', conv1_s0_y', conv1_s0_x'] : conv1_s0_x' > 4096root + 64conv1_s0_y + conv1_s0_x - 4096root' - 64conv1_s0_y'; end_op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> end_op_hcompute_conv1_stencil[root', conv1_s0_y, conv1_s0_x] : conv1_s0_x >= 131 + 4096root + 64conv2_s0_y + conv2_s0_x - 4096root' - 64conv1_s0_y; start_op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> start_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y', hw_input_global_wrapper_s0_x'] : hw_input_global_wrapper_s0_x' > 4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y'; end_op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> start_op_hcompute_hw_output_stencil[root', hw_output_s0_y_xo', hw_output_s0_x_xi'] : hw_output_s0_x_xi' > 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi - 4096root' - 64hw_output_s0_y_xo'; end_op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> end_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x >= -129 + 4096root + 64conv1_s1_y + conv1_s1_x - 4096root' - 64conv2_s0_y; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> start_op_hcompute_conv2_stencil[root', conv2_s0_y, conv2_s0_x] : conv2_s0_x > 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv2_s0_y; start_op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> end_op_hcompute_hw_input_global_wrapper_stencil[root', hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : hw_input_global_wrapper_s0_x >= 131 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x - 4096root' - 64hw_input_global_wrapper_s0_y; end_op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> start_op_hcompute_conv1_stencil_1[root', conv1_s1_y, conv1_s1_x] : conv1_s1_x >= 131 + 4096root + 64conv2_s1_y + conv2_s1_x - 4096root' - 64conv1_s1_y }
  Violated deps: {  }
schedule for n: { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedmap = { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x] }
schedule for n: { op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedmap = { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedule for n: { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x] }
schedmap = { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedule for n: { op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x] }
schedmap = { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedule for n: { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x] }
schedmap = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedule for n: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] }
schedmap = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
schedule for n: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi] }
schedmap = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> [260 + 4096root + 64conv2_s1_y + conv2_s1_x]; op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 4096root + 64conv1_shift_s0_y + conv1_shift_s0_x]; op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> [130 + 4096root + 64conv1_s1_y + conv1_s1_x]; op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> [260 + 4096root + 64conv2_s0_y + conv2_s0_x]; op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 4096root + 64hw_output_s0_y_xo + hw_output_s0_x_xi]; op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [4096root + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x]; op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> [130 + 4096root + 64conv1_s0_y + conv1_s0_x] }
result schedule: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Creating ports for op: hw_output_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_xo+0,  hw_output_s0_x_xi+0] }
	Adding output port: hw_output_stencil_op_hcompute_hw_output_stencil_0
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
current out port name: 
	hw_output_stencil_op_hcompute_hw_output_stencil_0
Creating ports for op: conv2_stencil
cond = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> conv2_stencil[hw_output_s0_y_xo+0,  hw_output_s0_x_xi+0] }
	Adding output port: conv2_stencil_op_hcompute_hw_output_stencil_1
		Consumed: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> conv2_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_hw_output_stencil
  other_dspace_id = op_hcompute_hw_output_stencil
  Schedule domain set: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
  Domain set from prg: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
  ITS: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
ITS      : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
current out port name: 
	conv2_stencil_op_hcompute_hw_output_stencil_1
Creating ports for op: hw_input_global_wrapper_stencil
cond = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
		Consumed: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Creating ports for op: hw_input_stencil
cond = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y+0,  hw_input_global_wrapper_s0_x+0] }
	Adding output port: hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_3
		Consumed: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_hw_input_global_wrapper_stencil
  other_dspace_id = op_hcompute_hw_input_global_wrapper_stencil
  Schedule domain set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  Domain set from prg: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  ITS: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
ITS      : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
current out port name: 
	hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_3
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv2_stencil[conv2_s1_y+0,  conv2_s1_x+0] }
	Adding output port: conv2_stencil_op_hcompute_conv2_stencil_1_4
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv2_stencil[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv2_stencil_op_hcompute_conv2_stencil_1_4
Creating ports for op: conv1_shift_stencil
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y+0,  conv2_s1_x+0] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_5
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv2_stencil_1_5
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y+0,  (conv2_s1_x + 1)+0] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_6
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv2_stencil_1_5	conv1_shift_stencil_op_hcompute_conv2_stencil_1_6
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y+0,  (conv2_s1_x + 2)+0] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv2_stencil_1_5	conv1_shift_stencil_op_hcompute_conv2_stencil_1_6	conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[(conv2_s1_y + 1)+0,  conv2_s1_x+0] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_8
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv2_stencil_1_5	conv1_shift_stencil_op_hcompute_conv2_stencil_1_6	conv1_shift_stencil_op_hcompute_conv2_stencil_1_7	conv1_shift_stencil_op_hcompute_conv2_stencil_1_8
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[(conv2_s1_y + 1)+0,  (conv2_s1_x + 1)+0] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv2_stencil_1_5	conv1_shift_stencil_op_hcompute_conv2_stencil_1_6	conv1_shift_stencil_op_hcompute_conv2_stencil_1_7	conv1_shift_stencil_op_hcompute_conv2_stencil_1_8	conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[(conv2_s1_y + 1)+0,  (conv2_s1_x + 2)+0] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv2_stencil_1_10	conv1_shift_stencil_op_hcompute_conv2_stencil_1_5	conv1_shift_stencil_op_hcompute_conv2_stencil_1_6	conv1_shift_stencil_op_hcompute_conv2_stencil_1_7	conv1_shift_stencil_op_hcompute_conv2_stencil_1_8	conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[(conv2_s1_y + 2)+0,  conv2_s1_x+0] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_11
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv2_stencil_1_10	conv1_shift_stencil_op_hcompute_conv2_stencil_1_11	conv1_shift_stencil_op_hcompute_conv2_stencil_1_5	conv1_shift_stencil_op_hcompute_conv2_stencil_1_6	conv1_shift_stencil_op_hcompute_conv2_stencil_1_7	conv1_shift_stencil_op_hcompute_conv2_stencil_1_8	conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[(conv2_s1_y + 2)+0,  (conv2_s1_x + 2)+0] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_12
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv2_stencil_1_10	conv1_shift_stencil_op_hcompute_conv2_stencil_1_11	conv1_shift_stencil_op_hcompute_conv2_stencil_1_12	conv1_shift_stencil_op_hcompute_conv2_stencil_1_5	conv1_shift_stencil_op_hcompute_conv2_stencil_1_6	conv1_shift_stencil_op_hcompute_conv2_stencil_1_7	conv1_shift_stencil_op_hcompute_conv2_stencil_1_8	conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[(conv2_s1_y + 2)+0,  (conv2_s1_x + 1)+0] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_13
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv2_stencil_1_10	conv1_shift_stencil_op_hcompute_conv2_stencil_1_11	conv1_shift_stencil_op_hcompute_conv2_stencil_1_12	conv1_shift_stencil_op_hcompute_conv2_stencil_1_13	conv1_shift_stencil_op_hcompute_conv2_stencil_1_5	conv1_shift_stencil_op_hcompute_conv2_stencil_1_6	conv1_shift_stencil_op_hcompute_conv2_stencil_1_7	conv1_shift_stencil_op_hcompute_conv2_stencil_1_8	conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
Creating ports for op: conv2_stencil_clkwrk_dsa1
cond = { op_hcompute_conv2_stencil_1[root, conv2_s1_y, conv2_s1_x] -> conv2_stencil_clkwrk_dsa1[conv2_s1_y+0,  conv2_s1_x+0] }
	Adding output port: conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14
		Consumed: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv2_stencil_clkwrk_dsa1[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv2_stencil_1
  other_dspace_id = op_hcompute_conv2_stencil_1
  Schedule domain set: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  Domain set from prg: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  ITS: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
ITS      : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
current out port name: 
	conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14
cond = { op_hcompute_conv2_stencil[root, conv2_s0_y, conv2_s0_x] -> conv2_stencil_clkwrk_dsa1[conv2_s0_y+0,  conv2_s0_x+0] }
	Adding output port: conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
		Consumed: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> conv2_stencil_clkwrk_dsa1[conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
current out port name: 
	conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
Creating ports for op: conv1_stencil
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> conv1_stencil[conv1_s1_y+0,  conv1_s1_x+0] }
	Adding output port: conv1_stencil_op_hcompute_conv1_stencil_1_16
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> conv1_stencil[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	conv1_stencil_op_hcompute_conv1_stencil_1_16
Creating ports for op: conv1_stencil_clkwrk_dsa0
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> conv1_stencil_clkwrk_dsa0[conv1_s1_y+0,  conv1_s1_x+0] }
	Adding output port: conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> conv1_stencil_clkwrk_dsa0[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y+0,  conv1_s1_x+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y+0,  (conv1_s1_x + 1)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y+0,  (conv1_s1_x + 2)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  conv1_s1_x+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  (conv1_s1_x + 1)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[(conv1_s1_y + 1)+0,  (conv1_s1_x + 2)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  conv1_s1_x+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  (conv1_s1_x + 2)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25
cond = { op_hcompute_conv1_stencil_1[root, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[(conv1_s1_y + 2)+0,  (conv1_s1_x + 1)+0] }
	Adding output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26
		Consumed: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_stencil_1
  other_dspace_id = op_hcompute_conv1_stencil_1
  Schedule domain set: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  ITS: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
ITS      : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
current out port name: 
	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25	hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26
cond = { op_hcompute_conv1_stencil[root, conv1_s0_y, conv1_s0_x] -> conv1_stencil_clkwrk_dsa0[conv1_s0_y+0,  conv1_s0_x+0] }
	Adding output port: conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
		Consumed: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> conv1_stencil_clkwrk_dsa0[conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
current out port name: 
	conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
cond = { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y+0,  conv1_shift_s0_x+0] }
	Adding output port: conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
		Consumed: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
current out port name: 
	conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
cond = { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_stencil[conv1_shift_s0_y+0,  conv1_shift_s0_x+0] }
	Adding output port: conv1_stencil_op_hcompute_conv1_shift_stencil_29
		Consumed: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
Opt sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Dom      : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
SDom     : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Dom ITS  : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
Dom UNN  : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Per group...
  dspace_id       = op_hcompute_conv1_shift_stencil
  other_dspace_id = op_hcompute_conv1_shift_stencil
  Schedule domain set: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
  Domain set from prg: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
  ITS: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
ITS      : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
current out port name: 
	conv1_stencil_op_hcompute_conv1_shift_stencil_29
Latency of application is: { [4095] }
Global schedule: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59; op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61; op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59; op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59; op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
# in bundles: 1
Generating compute unit for op_hcompute_hw_input_global_wrapper_stencil
getting incoming buffers to op_hcompute_hw_input_global_wrapper_stencil
  consumed: hw_input_stencil
Found compute file for cascade
getting incoming buffers to op_hcompute_hw_input_global_wrapper_stencil
  consumed: hw_input_stencil
Looking for connection for hw_input_stencil.op_hcompute_hw_input_global_wrapper_stencil_read
# of selects = 0
inner_compute() : global.hcompute_hw_input_global_wrapper_stencil
name = in0_hw_input_stencil
More than oune outgoing bundle
# of selects = 1
inner_compute() : global.hcompute_hw_input_global_wrapper_stencil
  name = in0_hw_input_stencil
  bundle.first = hw_input_global_wrapper_stencil
  after split  = hw_input_global_wrapper_stencil
  name = out_hw_input_global_wrapper_stencil
  bundle.first = hw_input_global_wrapper_stencil
  after split  = hw_input_global_wrapper_stencil
Generating compute unit for op_hcompute_conv1_stencil
getting incoming buffers to op_hcompute_conv1_stencil
Found compute file for cascade
getting incoming buffers to op_hcompute_conv1_stencil
More than oune outgoing bundle
# of selects = 0
inner_compute() : global.hcompute_conv1_stencil
  name = out_conv1_stencil
  bundle.first = conv1_stencil_clkwrk_dsa0
  after split  = conv1_stencil
Generating compute unit for op_hcompute_conv1_stencil_1
getting incoming buffers to op_hcompute_conv1_stencil_1
  consumed: conv1_stencil_clkwrk_dsa0
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
Found compute file for cascade
getting incoming buffers to op_hcompute_conv1_stencil_1
  consumed: conv1_stencil_clkwrk_dsa0
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
Looking for connection for conv1_stencil_clkwrk_dsa0.op_hcompute_conv1_stencil_1_read
# of selects = 0
inner_compute() : global.hcompute_conv1_stencil_1
name = in0_conv1_stencil
Looking for connection for hw_input_global_wrapper_stencil.op_hcompute_conv1_stencil_1_read
# of selects = 1
inner_compute() : global.hcompute_conv1_stencil_1
name = in0_conv1_stencil
name = in1_hw_input_global_wrapper_stencil
More than oune outgoing bundle
# of selects = 2
inner_compute() : global.hcompute_conv1_stencil_1
  name = in0_conv1_stencil
  bundle.first = conv1_stencil
  after split  = conv1_stencil
  name = in1_hw_input_global_wrapper_stencil
  bundle.first = conv1_stencil
  after split  = conv1_stencil
  name = out_conv1_stencil
  bundle.first = conv1_stencil
  after split  = conv1_stencil
Generating compute unit for op_hcompute_conv1_shift_stencil
getting incoming buffers to op_hcompute_conv1_shift_stencil
  consumed: conv1_stencil
Found compute file for cascade
getting incoming buffers to op_hcompute_conv1_shift_stencil
  consumed: conv1_stencil
Looking for connection for conv1_stencil.op_hcompute_conv1_shift_stencil_read
# of selects = 0
inner_compute() : global.hcompute_conv1_shift_stencil
name = in0_conv1_stencil
More than oune outgoing bundle
# of selects = 1
inner_compute() : global.hcompute_conv1_shift_stencil
  name = in0_conv1_stencil
  bundle.first = conv1_shift_stencil
  after split  = conv1_shift_stencil
  name = out_conv1_shift_stencil
  bundle.first = conv1_shift_stencil
  after split  = conv1_shift_stencil
Generating compute unit for op_hcompute_conv2_stencil
getting incoming buffers to op_hcompute_conv2_stencil
Found compute file for cascade
getting incoming buffers to op_hcompute_conv2_stencil
More than oune outgoing bundle
# of selects = 0
inner_compute() : global.hcompute_conv2_stencil
  name = out_conv2_stencil
  bundle.first = conv2_stencil_clkwrk_dsa1
  after split  = conv2_stencil
Generating compute unit for op_hcompute_conv2_stencil_1
getting incoming buffers to op_hcompute_conv2_stencil_1
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv2_stencil_clkwrk_dsa1
Found compute file for cascade
getting incoming buffers to op_hcompute_conv2_stencil_1
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv2_stencil_clkwrk_dsa1
Looking for connection for conv1_shift_stencil.op_hcompute_conv2_stencil_1_read
# of selects = 0
inner_compute() : global.hcompute_conv2_stencil_1
name = in0_conv1_shift_stencil
Looking for connection for conv2_stencil_clkwrk_dsa1.op_hcompute_conv2_stencil_1_read
# of selects = 1
inner_compute() : global.hcompute_conv2_stencil_1
name = in0_conv1_shift_stencil
name = in1_conv2_stencil
More than oune outgoing bundle
# of selects = 2
inner_compute() : global.hcompute_conv2_stencil_1
  name = in0_conv1_shift_stencil
  bundle.first = conv2_stencil
  after split  = conv2_stencil
  name = in1_conv2_stencil
  bundle.first = conv2_stencil
  after split  = conv2_stencil
  name = out_conv2_stencil
  bundle.first = conv2_stencil
  after split  = conv2_stencil
Generating compute unit for op_hcompute_hw_output_stencil
getting incoming buffers to op_hcompute_hw_output_stencil
  consumed: conv2_stencil
Found compute file for cascade
getting incoming buffers to op_hcompute_hw_output_stencil
  consumed: conv2_stencil
Looking for connection for conv2_stencil.op_hcompute_hw_output_stencil_read
# of selects = 0
inner_compute() : global.hcompute_hw_output_stencil
name = in0_conv2_stencil
More than oune outgoing bundle
# of selects = 1
inner_compute() : global.hcompute_hw_output_stencil
  name = in0_conv2_stencil
  bundle.first = hw_output_stencil
  after split  = hw_output_stencil
  name = out_hw_output_stencil
  bundle.first = hw_output_stencil
  after split  = hw_output_stencil
create shift register for --- conv1_shift_stencil
	---- 1 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
			dom : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil[0, 0] }
			max location: { conv1_shift_stencil[61, 61] }

	---- 9 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
			dom : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			acc : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			sched: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			min location: { conv1_shift_stencil[1, 2] }
			max location: { conv1_shift_stencil[60, 61] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_11
			dom : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			acc : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			sched: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			min location: { conv1_shift_stencil[2, 0] }
			max location: { conv1_shift_stencil[61, 59] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_12
			dom : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			acc : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			sched: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			min location: { conv1_shift_stencil[2, 2] }
			max location: { conv1_shift_stencil[61, 61] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_13
			dom : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			acc : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			sched: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			min location: { conv1_shift_stencil[2, 1] }
			max location: { conv1_shift_stencil[61, 60] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_5
			dom : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			acc : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			sched: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			min location: { conv1_shift_stencil[0, 0] }
			max location: { conv1_shift_stencil[59, 59] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_6
			dom : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			acc : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			sched: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			min location: { conv1_shift_stencil[0, 1] }
			max location: { conv1_shift_stencil[59, 60] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
			dom : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			acc : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			sched: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			min location: { conv1_shift_stencil[0, 2] }
			max location: { conv1_shift_stencil[59, 61] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_8
			dom : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			acc : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			sched: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			min location: { conv1_shift_stencil[1, 0] }
			max location: { conv1_shift_stencil[60, 59] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
			dom : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			acc : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			sched: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			min location: { conv1_shift_stencil[1, 1] }
			max location: { conv1_shift_stencil[60, 60] }

	---- Input Bundles
		op_hcompute_conv1_shift_stencil_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
	---- Output Bundles
		op_hcompute_conv2_stencil_1_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_5
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_6
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_8
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_11
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_12
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_13

==== No reduce ops on this buffer
Writer name: op_hcompute_conv1_shift_stencil
read_op read: {conv1_shift_stencil, conv2_stencil_clkwrk_dsa1}
read_op write: {conv2_stencil, }
write_op write: {conv2_stencil}
write_op read: {conv1_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
reads : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Schedule...
  { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
Time to write: { [i0] -> conv1_shift_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> conv1_shift_stencil[o0, -194 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0 }
PC times     : { [i0] -> [64 + i0] : 192 <= i0 <= 4031 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [64] }
DD           : 64
writer op    : op_hcompute_conv1_shift_stencil
Writer name: op_hcompute_conv1_shift_stencil
read_op read: {conv1_shift_stencil, conv2_stencil_clkwrk_dsa1}
read_op write: {conv2_stencil, }
write_op write: {conv2_stencil}
write_op read: {conv1_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
reads : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Schedule...
  { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
Time to write: { [i0] -> conv1_shift_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> conv1_shift_stencil[o0, -132 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0 }
PC times     : { [i0] -> [2 + i0] : 254 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= -2 + i0 }
DDs          : { [2] }
DD           : 2
writer op    : op_hcompute_conv1_shift_stencil
Writer name: op_hcompute_conv1_shift_stencil
read_op read: {conv1_shift_stencil, conv2_stencil_clkwrk_dsa1}
read_op write: {conv2_stencil, }
write_op write: {conv2_stencil}
write_op read: {conv1_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
reads : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Schedule...
  { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
Time to write: { [i0] -> conv1_shift_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> conv1_shift_stencil[o0, -130 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_conv1_shift_stencil
Writer name: op_hcompute_conv1_shift_stencil
read_op read: {conv1_shift_stencil, conv2_stencil_clkwrk_dsa1}
read_op write: {conv2_stencil, }
write_op write: {conv2_stencil}
write_op read: {conv1_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
reads : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[2 + conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Schedule...
  { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
Time to write: { [i0] -> conv1_shift_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> conv1_shift_stencil[o0, -131 + i0 - 64o0] : 2 <= o0 <= 61 and -191 + i0 <= 64o0 <= -132 + i0 }
PC times     : { [i0] -> [1 + i0] : 255 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -3 + i0 }
DDs          : { [1] }
DD           : 1
writer op    : op_hcompute_conv1_shift_stencil
Writer name: op_hcompute_conv1_shift_stencil
read_op read: {conv1_shift_stencil, conv2_stencil_clkwrk_dsa1}
read_op write: {conv2_stencil, }
write_op write: {conv2_stencil}
write_op read: {conv1_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
reads : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Schedule...
  { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
Time to write: { [i0] -> conv1_shift_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> conv1_shift_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [130 + i0] : 126 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= -2 + i0 }
DDs          : { [130] }
DD           : 130
writer op    : op_hcompute_conv1_shift_stencil
Writer name: op_hcompute_conv1_shift_stencil
read_op read: {conv1_shift_stencil, conv2_stencil_clkwrk_dsa1}
read_op write: {conv2_stencil, }
write_op write: {conv2_stencil}
write_op read: {conv1_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
reads : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Schedule...
  { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
Time to write: { [i0] -> conv1_shift_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> conv1_shift_stencil[o0, -259 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [129 + i0] : 127 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -3 + i0 }
DDs          : { [129] }
DD           : 129
writer op    : op_hcompute_conv1_shift_stencil
Writer name: op_hcompute_conv1_shift_stencil
read_op read: {conv1_shift_stencil, conv2_stencil_clkwrk_dsa1}
read_op write: {conv2_stencil, }
write_op write: {conv2_stencil}
write_op read: {conv1_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
reads : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[conv2_s1_y, 2 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Schedule...
  { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
Time to write: { [i0] -> conv1_shift_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> conv1_shift_stencil[o0, -258 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [128 + i0] : 128 <= i0 <= 3967 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [128] }
DD           : 128
writer op    : op_hcompute_conv1_shift_stencil
Writer name: op_hcompute_conv1_shift_stencil
read_op read: {conv1_shift_stencil, conv2_stencil_clkwrk_dsa1}
read_op write: {conv2_stencil, }
write_op write: {conv2_stencil}
write_op read: {conv1_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
reads : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Schedule...
  { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
Time to write: { [i0] -> conv1_shift_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> conv1_shift_stencil[o0, -196 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0 }
PC times     : { [i0] -> [66 + i0] : 190 <= i0 <= 4029 and 64*floor((2 + i0)/64) <= -2 + i0 }
DDs          : { [66] }
DD           : 66
writer op    : op_hcompute_conv1_shift_stencil
Writer name: op_hcompute_conv1_shift_stencil
read_op read: {conv1_shift_stencil, conv2_stencil_clkwrk_dsa1}
read_op write: {conv2_stencil, }
write_op write: {conv2_stencil}
write_op read: {conv1_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
reads : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv1_shift_stencil[1 + conv2_s1_y, 1 + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Schedule...
  { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
Time to write: { [i0] -> conv1_shift_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> conv1_shift_stencil[o0, -195 + i0 - 64o0] : 0 < o0 <= 60 and -255 + i0 <= 64o0 <= -196 + i0 }
PC times     : { [i0] -> [65 + i0] : 191 <= i0 <= 4030 and 64*floor((1 + i0)/64) <= -3 + i0 }
DDs          : { [65] }
DD           : 65
writer op    : op_hcompute_conv1_shift_stencil
DG: ...
# nodes: 10
# edges: 9
Group:     conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (64) conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (2) conv1_shift_stencil_op_hcompute_conv2_stencil_1_11
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (0) conv1_shift_stencil_op_hcompute_conv2_stencil_1_12
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_13
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (130) conv1_shift_stencil_op_hcompute_conv2_stencil_1_5
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (129) conv1_shift_stencil_op_hcompute_conv2_stencil_1_6
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (128) conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (66) conv1_shift_stencil_op_hcompute_conv2_stencil_1_8
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (65) conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
Fanin Group:     conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_10 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_11 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_12 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_13 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_5 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_6 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_7 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_8 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_9 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28

Naive Shift registers...
# nodes: 10
# edges: 9
Group:     conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (64) conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (2) conv1_shift_stencil_op_hcompute_conv2_stencil_1_11
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (0) conv1_shift_stencil_op_hcompute_conv2_stencil_1_12
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_13
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (130) conv1_shift_stencil_op_hcompute_conv2_stencil_1_5
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (129) conv1_shift_stencil_op_hcompute_conv2_stencil_1_6
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (128) conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (66) conv1_shift_stencil_op_hcompute_conv2_stencil_1_8
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (65) conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
Fanin Group:     conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_10 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_11 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_12 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_13 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_5 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_6 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_7 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_8 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_9 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28

inpt: conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
  conv1_shift_stencil_op_hcompute_conv2_stencil_1_12 -(0)-> 0
  conv1_shift_stencil_op_hcompute_conv2_stencil_1_13 -(1)-> 1
  conv1_shift_stencil_op_hcompute_conv2_stencil_1_11 -(2)-> 2
  conv1_shift_stencil_op_hcompute_conv2_stencil_1_10 -(64)-> 64
  conv1_shift_stencil_op_hcompute_conv2_stencil_1_9 -(65)-> 65
  conv1_shift_stencil_op_hcompute_conv2_stencil_1_8 -(66)-> 66
  conv1_shift_stencil_op_hcompute_conv2_stencil_1_7 -(128)-> 128
  conv1_shift_stencil_op_hcompute_conv2_stencil_1_6 -(129)-> 129
  conv1_shift_stencil_op_hcompute_conv2_stencil_1_5 -(130)-> 130
Groups...
  Group...
  Group...
  Group...
# nodes: 10
# edges: 9
Group:     conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (64) conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (0) conv1_shift_stencil_op_hcompute_conv2_stencil_1_12
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (128) conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_10 -> (1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_12
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_12 -> (1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_13
Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_13
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_13 -> (1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_11
Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_6
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_6 -> (1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_5
Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_7 -> (1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_6
Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_9 -> (1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_8
Fanin Group:     conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_10 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_12 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_7 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
Fanin Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_9 -> (-1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
Fanin Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_12
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_13 -> (-1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_12
Fanin Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_13
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_11 -> (-1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_13
Fanin Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_6
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_5 -> (-1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_6
Fanin Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_6 -> (-1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
Fanin Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_8 -> (-1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_9

edge: conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28=>conv1_shift_stencil_op_hcompute_conv2_stencil_1_10, w=64
edge: conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28=>conv1_shift_stencil_op_hcompute_conv2_stencil_1_12, w=0
edge: conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28=>conv1_shift_stencil_op_hcompute_conv2_stencil_1_7, w=128
after sort: outpt->conv1_shift_stencil_op_hcompute_conv2_stencil_1_7, w=128
after sort: outpt->conv1_shift_stencil_op_hcompute_conv2_stencil_1_10, w=64
after sort: outpt->conv1_shift_stencil_op_hcompute_conv2_stencil_1_12, w=0
	delay of conv1_shift_stencil_op_hcompute_conv2_stencil_1_13 = 1
	delay of conv1_shift_stencil_op_hcompute_conv2_stencil_1_12 = 2
	subbranch size: 2
	delay of conv1_shift_stencil_op_hcompute_conv2_stencil_1_9 = 1
	delay of conv1_shift_stencil_op_hcompute_conv2_stencil_1_10 = 2
	subbranch size: 2
	delay of conv1_shift_stencil_op_hcompute_conv2_stencil_1_6 = 1
	delay of conv1_shift_stencil_op_hcompute_conv2_stencil_1_7 = 2
	subbranch size: 2
# nodes: 10
# edges: 9
Group:     conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (64) conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (0) conv1_shift_stencil_op_hcompute_conv2_stencil_1_12
        conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 -> (128) conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_10 -> (1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_12
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_12 -> (1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_13
Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_13
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_13 -> (1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_11
Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_6
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_6 -> (1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_5
Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_7 -> (1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_6
Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_9 -> (1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_8
Fanin Group:     conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_10 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_12 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_7 -> (-1) conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
Fanin Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_9 -> (-1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
Fanin Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_12
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_13 -> (-1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_12
Fanin Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_13
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_11 -> (-1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_13
Fanin Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_6
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_5 -> (-1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_6
Fanin Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_6 -> (-1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
Fanin Group:     conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
        conv1_shift_stencil_op_hcompute_conv2_stencil_1_8 -> (-1) conv1_shift_stencil_op_hcompute_conv2_stencil_1_9
Bank writers: 
	 bank NO.0
		writers: {conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28}
	 bank NO.1
		writers: {conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28}
Bank readers: 
	 bank NO.0
		readers: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_10}
	 bank NO.1
		readers: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_7}
Shift Register Output: 
	memtiles IO:: 
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_10, delay = 64
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_12, delay = 0
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_7, delay = 128
	register IO:: 
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_12->conv1_shift_stencil_op_hcompute_conv2_stencil_1_13, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_13->conv1_shift_stencil_op_hcompute_conv2_stencil_1_11, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_10->conv1_shift_stencil_op_hcompute_conv2_stencil_1_9, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_9->conv1_shift_stencil_op_hcompute_conv2_stencil_1_8, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_7->conv1_shift_stencil_op_hcompute_conv2_stencil_1_6, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_6->conv1_shift_stencil_op_hcompute_conv2_stencil_1_5, delay = 1
Bank writers: 
	 bank NO.0
		writers: {conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28}
	 bank NO.1
		writers: {conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28}
Bank readers: 
	 bank NO.0
		readers: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_10}
	 bank NO.1
		readers: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_7}
Shift Register Output: 
	memtiles IO:: 
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_10, delay = 64
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_12, delay = 0
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_7, delay = 128
	register IO:: 
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_12->conv1_shift_stencil_op_hcompute_conv2_stencil_1_13, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_13->conv1_shift_stencil_op_hcompute_conv2_stencil_1_11, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_10->conv1_shift_stencil_op_hcompute_conv2_stencil_1_9, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_9->conv1_shift_stencil_op_hcompute_conv2_stencil_1_8, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_7->conv1_shift_stencil_op_hcompute_conv2_stencil_1_6, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_6->conv1_shift_stencil_op_hcompute_conv2_stencil_1_5, delay = 1

After shift register optimization: Bank writers: 
	 bank NO.0
		writers: {conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28}
	 bank NO.1
		writers: {conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28}
Bank readers: 
	 bank NO.0
		readers: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_10}
	 bank NO.1
		readers: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_7}
Shift Register Output: 
	memtiles IO:: 
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_10, delay = 64
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_12, delay = 0
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_7, delay = 128
	register IO:: 
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_12->conv1_shift_stencil_op_hcompute_conv2_stencil_1_13, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_13->conv1_shift_stencil_op_hcompute_conv2_stencil_1_11, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_10->conv1_shift_stencil_op_hcompute_conv2_stencil_1_9, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_9->conv1_shift_stencil_op_hcompute_conv2_stencil_1_8, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_7->conv1_shift_stencil_op_hcompute_conv2_stencil_1_6, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_6->conv1_shift_stencil_op_hcompute_conv2_stencil_1_5, delay = 1

Done ports: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_10, conv1_shift_stencil_op_hcompute_conv2_stencil_1_11, conv1_shift_stencil_op_hcompute_conv2_stencil_1_12, conv1_shift_stencil_op_hcompute_conv2_stencil_1_13, conv1_shift_stencil_op_hcompute_conv2_stencil_1_5, conv1_shift_stencil_op_hcompute_conv2_stencil_1_6, conv1_shift_stencil_op_hcompute_conv2_stencil_1_7, conv1_shift_stencil_op_hcompute_conv2_stencil_1_8, conv1_shift_stencil_op_hcompute_conv2_stencil_1_9}
reduced buffer: --- conv1_shift_stencil
	---- 1 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
			dom : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil[0, 0] }
			max location: { conv1_shift_stencil[61, 61] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_conv1_shift_stencil_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
	---- Output Bundles

SR outputs: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_10, conv1_shift_stencil_op_hcompute_conv2_stencil_1_11, conv1_shift_stencil_op_hcompute_conv2_stencil_1_12, conv1_shift_stencil_op_hcompute_conv2_stencil_1_13, conv1_shift_stencil_op_hcompute_conv2_stencil_1_5, conv1_shift_stencil_op_hcompute_conv2_stencil_1_6, conv1_shift_stencil_op_hcompute_conv2_stencil_1_7, conv1_shift_stencil_op_hcompute_conv2_stencil_1_8, conv1_shift_stencil_op_hcompute_conv2_stencil_1_9}
BUF outputs: {}
After banking optimization: Bank writers: 
	 bank NO.0
		writers: {conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28}
	 bank NO.1
		writers: {conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28}
Bank readers: 
	 bank NO.0
		readers: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_10}
	 bank NO.1
		readers: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_7}
Shift Register Output: 
	memtiles IO:: 
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_10, delay = 64
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_12, delay = 0
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_7, delay = 128
	register IO:: 
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_12->conv1_shift_stencil_op_hcompute_conv2_stencil_1_13, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_13->conv1_shift_stencil_op_hcompute_conv2_stencil_1_11, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_10->conv1_shift_stencil_op_hcompute_conv2_stencil_1_9, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_9->conv1_shift_stencil_op_hcompute_conv2_stencil_1_8, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_7->conv1_shift_stencil_op_hcompute_conv2_stencil_1_6, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_6->conv1_shift_stencil_op_hcompute_conv2_stencil_1_5, delay = 1

After bank merging: Bank writers: 
	 bank NO.0
		writers: {conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28}
	 bank NO.1
		writers: {conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28}
Bank readers: 
	 bank NO.0
		readers: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_10}
	 bank NO.1
		readers: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_7}
Shift Register Output: 
	memtiles IO:: 
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_10, delay = 64
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_12, delay = 0
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_7, delay = 128
	register IO:: 
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_12->conv1_shift_stencil_op_hcompute_conv2_stencil_1_13, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_13->conv1_shift_stencil_op_hcompute_conv2_stencil_1_11, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_10->conv1_shift_stencil_op_hcompute_conv2_stencil_1_9, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_9->conv1_shift_stencil_op_hcompute_conv2_stencil_1_8, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_7->conv1_shift_stencil_op_hcompute_conv2_stencil_1_6, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_6->conv1_shift_stencil_op_hcompute_conv2_stencil_1_5, delay = 1

CGPL level :0
impl inputs: {conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28}
impl outpts: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_10}
rddom: { conv1_shift_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
ls = { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] }
v = 0
Bank writers: 
	 bank NO.0
		writers: {conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28}
	 bank NO.1
		writers: {conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28}
Bank readers: 
	 bank NO.0
		readers: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_10}
	 bank NO.1
		readers: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_7}
Shift Register Output: 
	memtiles IO:: 
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_10, delay = 64
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_12, delay = 0
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_7, delay = 128
	register IO:: 
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_12->conv1_shift_stencil_op_hcompute_conv2_stencil_1_13, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_13->conv1_shift_stencil_op_hcompute_conv2_stencil_1_11, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_10->conv1_shift_stencil_op_hcompute_conv2_stencil_1_9, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_9->conv1_shift_stencil_op_hcompute_conv2_stencil_1_8, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_7->conv1_shift_stencil_op_hcompute_conv2_stencil_1_6, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_6->conv1_shift_stencil_op_hcompute_conv2_stencil_1_5, delay = 1

--- conv1_shift_stencil_BANK_0
	---- 1 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
			dom : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_0[0, 0] }
			max location: { conv1_shift_stencil_BANK_0[61, 61] }

	---- 1 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [194 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_0[0, 0] }
			max location: { conv1_shift_stencil_BANK_0[61, 61] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10

Stride inner most:  1
{conv1_shift_stencil[d0, d1] -> conv1_shift_stencil[floor((1*d1 + 64*d0)/1)] }
reduce map: { conv1_shift_stencil_BANK_0[d0, d1] -> conv1_shift_stencil_BANK_0[64d0 + d1] }
linear map: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
linear map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
after ubuffer regen: --- conv1_shift_stencil_BANK_0
	---- 1 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
			dom : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_0[0] }
			max location: { conv1_shift_stencil_BANK_0[3965] }

	---- 1 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [194 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_0[0] }
			max location: { conv1_shift_stencil_BANK_0[3965] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10

addr need tight: {}
before dim id set :{ op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
After dim id set: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
before dim id set :{ op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
After dim id set: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [194 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [194 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }

	UBuffer after address tighten--- conv1_shift_stencil_BANK_0
	---- 1 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
			dom : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_0[0] }
			max location: { conv1_shift_stencil_BANK_0[3965] }

	---- 1 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [194 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_0[0] }
			max location: { conv1_shift_stencil_BANK_0[3965] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10

getting rddom
rddom = { conv1_shift_stencil_BANK_0[i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
Vectorization buffer capacity: 3966

	UBuffer after cgpl optimization--- conv1_shift_stencil_BANK_0
	---- 1 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
			dom : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_0[0] }
			max location: { conv1_shift_stencil_BANK_0[3965] }

	---- 1 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [194 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_0[0] }
			max location: { conv1_shift_stencil_BANK_0[3965] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10

find bd for op :op_hcompute_conv1_shift_stencil
	find candidate: conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
find bd for op :op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64
	find candidate: conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_read
	aff : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(64conv1_shift_s0_y + conv1_shift_s0_x)] }
	div dim: 0
getting rddom
rddom = { conv1_shift_stencil_BANK_0[i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
vectorization buffer capacity: 3966
vectorization buf name: conv1_shift_stencil_BANK_0
	 original range input access map: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
	 dim id: 2
Ext by dim: {3966}
  buffer_vectorization Vectorizing: conv1_shift_stencil_BANK_0
   On addr dim: 0, fetch_width: 4
--- conv1_shift_stencil_BANK_0
	---- 1 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
			dom : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_0[0] }
			max location: { conv1_shift_stencil_BANK_0[3965] }

	---- 1 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [194 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_0[0] }
			max location: { conv1_shift_stencil_BANK_0[3965] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10

in bundle  = 1
out bundle = 1
Vectorize input port bundle: conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
	vectorize input port: conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 62, 62, ]
	---- Out range: [3844, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

origin: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }, transform: { conv1_shift_stencil_BANK_0[d0] -> conv1_shift_stencil_BANK_0_0_agg[d0] }
access map : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_conv1_shift_stencil[i0, i1, i2] -> op_hcompute_conv1_shift_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_conv1_shift_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_conv1_shift_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
	sched after trans: { op_hcompute_conv1_shift_stencil[i0 = 0, i1, i2] -> [130 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_conv1_shift_stencil[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Autogen slice:{ conv1_shift_stencil_BANK_0[i0] -> conv1_shift_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
trans max: 991 , origin max: 991
agg2sram sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0_0_agg[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
After dim id set: { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0_0_agg[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
before dim id set :{ op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
After dim id set: { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
AGG : --- conv1_shift_stencil_BANK_0_0_agg
	---- 1 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in
			dom : { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0_0_agg[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_0_0_agg[0] }
			max location: { conv1_shift_stencil_BANK_0_0_agg[3965] }

	---- 4 out ports:
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_0
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_0_agg[0] }
			max location: { conv1_shift_stencil_BANK_0_0_agg[3964] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_1
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_0_agg[1] }
			max location: { conv1_shift_stencil_BANK_0_0_agg[3965] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_2
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_0_agg[2] }
			max location: { conv1_shift_stencil_BANK_0_0_agg[3966] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_3
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_0_agg[3] }
			max location: { conv1_shift_stencil_BANK_0_0_agg[3967] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write_agg_in
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write_agg_out
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_0
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_1
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_2
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_3

AGG Schedule: { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Vectorize output port bundle: conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_read
	Vectorize output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
Autogen slice:{ conv1_shift_stencil_BANK_0[i0] -> conv1_shift_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
Range slice: { conv1_shift_stencil_BANK_0[i0] -> conv1_shift_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
after slice{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(16conv1_shift_s0_y + floor((conv1_shift_s0_x)/4))] }
	aff : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(16conv1_shift_s0_y + floor((conv1_shift_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(conv1_shift_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 2 denom: 4
	Trans str{op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[d0, d1, d2]->op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[d0, d1, floor(d2/4), d2%4]}
{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[d0, d1, d2] -> op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[d0, d1, o2, o3] : (-d2 + o3) mod 4 = 0 and -3 + d2 <= 4o2 <= d2 and 0 <= o3 <= 3 }
access map : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[0, i1, i2, i3] -> conv1_shift_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Preliminary vectorization dim: 2
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
after removal: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
new: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[0, i1, i2, i3] -> conv1_shift_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
remove: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[0, i1, i2, i3] -> conv1_shift_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
access map : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[0, i1, i2, i3] -> conv1_shift_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Vectorization dimension: 2
	aff : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
	div dim: 0
rem: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[0, i1, i2, i3] -> conv1_shift_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
new: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[0, i1, i2, i3] -> conv1_shift_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
base_str : {op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[i0=0, i1=0, i2=0, i3]}
base_str : {op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[i0=0, i1=0, i2=0, i3]}
	new: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[i0 = 0, i1 = 0, i2 = 0, i3] }
	rem: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[i0 = 0, i1 = 0, i2 = 0, i3] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[i0, i1, i2, i3 = 0] }
sched domain: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[i0, i1, i2, i3 = 0] }
remove dimension: {3}
before:{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[0, i1, i2, i3] -> conv1_shift_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
after:{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[0, i1, i2, 0] -> conv1_shift_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
remove dimension: {3}
sched before projection: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[0, i1, i2] -> [194 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[0, i1, i2] -> conv1_shift_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[0, i1, i2] -> conv1_shift_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vectorization dimension after irrelevant dimension removal: 2
sched before adjust: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[0, i1, i2] -> [194 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[0, i1, i2] -> [194 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
final schedule: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
final access: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[0, i1, i2] -> conv1_shift_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 62, 62, ]
	---- Out range: [3844, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

Autogen slice:{ conv1_shift_stencil_BANK_0[i0] -> conv1_shift_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(16conv1_shift_s0_y + floor((conv1_shift_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(conv1_shift_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[0, i1, i2] -> conv1_shift_stencil_BANK_0[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2]
domain: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[64i1 + 4i2] }
	 rewrite access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[0, i1, i2] -> conv1_shift_stencil_BANK_0[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+1]
domain: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[0, i1, i2] -> conv1_shift_stencil_BANK_0[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+2]
domain: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[0, i1, i2] -> conv1_shift_stencil_BANK_0[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+3]
domain: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] }
	Add TB output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
Autogen slice:{ conv1_shift_stencil_BANK_0[i0] -> conv1_shift_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(16conv1_shift_s0_y + floor((conv1_shift_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(conv1_shift_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
access map expr:[64*i1+i2]
domain: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0[64i1 + i2] }
tb output access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
	Access map decouple reuse: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [194 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [194 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
TB  : --- conv1_shift_stencil_BANK_0_0_tb
	---- 4 in ports
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_0
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_0_tb[0] }
			max location: { conv1_shift_stencil_BANK_0_0_tb[3964] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_1
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_0_tb[1] }
			max location: { conv1_shift_stencil_BANK_0_0_tb[3965] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_2
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_0_tb[2] }
			max location: { conv1_shift_stencil_BANK_0_0_tb[3966] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_3
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_0_tb[3] }
			max location: { conv1_shift_stencil_BANK_0_0_tb[3967] }

	---- 1 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [194 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_0_0_tb[0] }
			max location: { conv1_shift_stencil_BANK_0_0_tb[3965] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_read_tb_in
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_0
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_1
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_2
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_3
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_read_tb_out
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out

TB Schedule: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [194 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
SRAM: --- conv1_shift_stencil_BANK_0_sram
	---- 4 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_0
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[0] }
			max location: { conv1_shift_stencil_BANK_0_sram[3964] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_1
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[1] }
			max location: { conv1_shift_stencil_BANK_0_sram[3965] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_2
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[2] }
			max location: { conv1_shift_stencil_BANK_0_sram[3966] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_3
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[3] }
			max location: { conv1_shift_stencil_BANK_0_sram[3967] }

	---- 4 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_0
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[0] }
			max location: { conv1_shift_stencil_BANK_0_sram[3964] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_1
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[1] }
			max location: { conv1_shift_stencil_BANK_0_sram[3965] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_2
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[2] }
			max location: { conv1_shift_stencil_BANK_0_sram[3966] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_3
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[3] }
			max location: { conv1_shift_stencil_BANK_0_sram[3967] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_0
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_1
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_2
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_3
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_0
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_1
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_2
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_3

SRAM Schedule: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15; op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
after vectorization codegen: conv1_shift_stencil_BANK_0_0_agg
--- conv1_shift_stencil_BANK_0_0_agg
	---- 1 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in
			dom : { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_0_0_agg[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_0_0_agg[0] }
			max location: { conv1_shift_stencil_BANK_0_0_agg[3965] }

	---- 4 out ports:
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_0
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_0_agg[0] }
			max location: { conv1_shift_stencil_BANK_0_0_agg[3964] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_1
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_0_agg[1] }
			max location: { conv1_shift_stencil_BANK_0_0_agg[3965] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_2
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_0_agg[2] }
			max location: { conv1_shift_stencil_BANK_0_0_agg[3966] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_3
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_0_agg[3] }
			max location: { conv1_shift_stencil_BANK_0_0_agg[3967] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write_agg_in
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write_agg_out
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_0
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_1
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_2
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_3

after vectorization codegen: conv1_shift_stencil_BANK_0_0_tb
--- conv1_shift_stencil_BANK_0_0_tb
	---- 4 in ports
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_0
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_0_tb[0] }
			max location: { conv1_shift_stencil_BANK_0_0_tb[3964] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_1
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_0_tb[1] }
			max location: { conv1_shift_stencil_BANK_0_0_tb[3965] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_2
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_0_tb[2] }
			max location: { conv1_shift_stencil_BANK_0_0_tb[3966] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_3
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_0_tb[3] }
			max location: { conv1_shift_stencil_BANK_0_0_tb[3967] }

	---- 1 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [194 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_0_0_tb[0] }
			max location: { conv1_shift_stencil_BANK_0_0_tb[3965] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_read_tb_in
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_0
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_1
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_2
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_3
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_read_tb_out
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out

after vectorization codegen: conv1_shift_stencil_BANK_0_sram
--- conv1_shift_stencil_BANK_0_sram
	---- 4 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_0
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[0] }
			max location: { conv1_shift_stencil_BANK_0_sram[3964] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_1
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[1] }
			max location: { conv1_shift_stencil_BANK_0_sram[3965] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_2
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[2] }
			max location: { conv1_shift_stencil_BANK_0_sram[3966] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_3
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[3] }
			max location: { conv1_shift_stencil_BANK_0_sram[3967] }

	---- 4 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_0
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[0] }
			max location: { conv1_shift_stencil_BANK_0_sram[3964] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_1
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[1] }
			max location: { conv1_shift_stencil_BANK_0_sram[3965] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_2
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[2] }
			max location: { conv1_shift_stencil_BANK_0_sram[3966] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_3
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[3] }
			max location: { conv1_shift_stencil_BANK_0_sram[3967] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_0
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_1
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_2
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_3
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_0
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_1
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_2
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_3

CGPL level :0
impl inputs: {conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28}
impl outpts: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_7}
rddom: { conv1_shift_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
ls = { op_hcompute_conv1_shift_stencil[root, conv1_shift_s0_y, conv1_shift_s0_x] }
v = 0
Bank writers: 
	 bank NO.0
		writers: {conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28}
	 bank NO.1
		writers: {conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28}
Bank readers: 
	 bank NO.0
		readers: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_10}
	 bank NO.1
		readers: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_7}
Shift Register Output: 
	memtiles IO:: 
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_10, delay = 64
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_12, delay = 0
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_7, delay = 128
	register IO:: 
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_12->conv1_shift_stencil_op_hcompute_conv2_stencil_1_13, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_13->conv1_shift_stencil_op_hcompute_conv2_stencil_1_11, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_10->conv1_shift_stencil_op_hcompute_conv2_stencil_1_9, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_9->conv1_shift_stencil_op_hcompute_conv2_stencil_1_8, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_7->conv1_shift_stencil_op_hcompute_conv2_stencil_1_6, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_6->conv1_shift_stencil_op_hcompute_conv2_stencil_1_5, delay = 1

--- conv1_shift_stencil_BANK_1
	---- 1 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
			dom : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_1[0, 0] }
			max location: { conv1_shift_stencil_BANK_1[61, 61] }

	---- 1 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [258 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_1[0, 0] }
			max location: { conv1_shift_stencil_BANK_1[61, 61] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7

Stride inner most:  1
{conv1_shift_stencil[d0, d1] -> conv1_shift_stencil[floor((1*d1 + 64*d0)/1)] }
reduce map: { conv1_shift_stencil_BANK_1[d0, d1] -> conv1_shift_stencil_BANK_1[64d0 + d1] }
linear map: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
linear map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
after ubuffer regen: --- conv1_shift_stencil_BANK_1
	---- 1 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
			dom : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_1[0] }
			max location: { conv1_shift_stencil_BANK_1[3965] }

	---- 1 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [258 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_1[0] }
			max location: { conv1_shift_stencil_BANK_1[3965] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7

addr need tight: {}
before dim id set :{ op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
After dim id set: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
before dim id set :{ op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
After dim id set: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [258 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [258 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }

	UBuffer after address tighten--- conv1_shift_stencil_BANK_1
	---- 1 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
			dom : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_1[0] }
			max location: { conv1_shift_stencil_BANK_1[3965] }

	---- 1 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [258 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_1[0] }
			max location: { conv1_shift_stencil_BANK_1[3965] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7

getting rddom
rddom = { conv1_shift_stencil_BANK_1[i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
Vectorization buffer capacity: 3966

	UBuffer after cgpl optimization--- conv1_shift_stencil_BANK_1
	---- 1 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
			dom : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_1[0] }
			max location: { conv1_shift_stencil_BANK_1[3965] }

	---- 1 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [258 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_1[0] }
			max location: { conv1_shift_stencil_BANK_1[3965] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7

find bd for op :op_hcompute_conv1_shift_stencil
	find candidate: conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
find bd for op :op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128
	find candidate: conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_read
	aff : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(64conv1_shift_s0_y + conv1_shift_s0_x)] }
	div dim: 0
getting rddom
rddom = { conv1_shift_stencil_BANK_1[i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
vectorization buffer capacity: 3966
vectorization buf name: conv1_shift_stencil_BANK_1
	 original range input access map: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
	 dim id: 2
Ext by dim: {3966}
  buffer_vectorization Vectorizing: conv1_shift_stencil_BANK_1
   On addr dim: 0, fetch_width: 4
--- conv1_shift_stencil_BANK_1
	---- 1 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
			dom : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_1[0] }
			max location: { conv1_shift_stencil_BANK_1[3965] }

	---- 1 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [258 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_1[0] }
			max location: { conv1_shift_stencil_BANK_1[3965] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7

in bundle  = 1
out bundle = 1
Vectorize input port bundle: conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
	vectorize input port: conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 62, 62, ]
	---- Out range: [3844, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

origin: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }, transform: { conv1_shift_stencil_BANK_1[d0] -> conv1_shift_stencil_BANK_1_0_agg[d0] }
access map : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_conv1_shift_stencil[i0, i1, i2] -> op_hcompute_conv1_shift_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_conv1_shift_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_conv1_shift_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
	sched after trans: { op_hcompute_conv1_shift_stencil[i0 = 0, i1, i2] -> [130 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_conv1_shift_stencil[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Autogen slice:{ conv1_shift_stencil_BANK_1[i0] -> conv1_shift_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
trans max: 991 , origin max: 991
agg2sram sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1_0_agg[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
After dim id set: { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1_0_agg[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
before dim id set :{ op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
After dim id set: { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
AGG : --- conv1_shift_stencil_BANK_1_0_agg
	---- 1 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in
			dom : { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1_0_agg[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_1_0_agg[0] }
			max location: { conv1_shift_stencil_BANK_1_0_agg[3965] }

	---- 4 out ports:
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_0
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_0_agg[0] }
			max location: { conv1_shift_stencil_BANK_1_0_agg[3964] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_1
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_0_agg[1] }
			max location: { conv1_shift_stencil_BANK_1_0_agg[3965] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_2
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_0_agg[2] }
			max location: { conv1_shift_stencil_BANK_1_0_agg[3966] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_3
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_0_agg[3] }
			max location: { conv1_shift_stencil_BANK_1_0_agg[3967] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write_agg_in
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write_agg_out
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_0
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_1
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_2
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_3

AGG Schedule: { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Vectorize output port bundle: conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_read
	Vectorize output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
Autogen slice:{ conv1_shift_stencil_BANK_1[i0] -> conv1_shift_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
Range slice: { conv1_shift_stencil_BANK_1[i0] -> conv1_shift_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
after slice{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(16conv1_shift_s0_y + floor((conv1_shift_s0_x)/4))] }
	aff : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(16conv1_shift_s0_y + floor((conv1_shift_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(conv1_shift_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 2 denom: 4
	Trans str{op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[d0, d1, d2]->op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[d0, d1, floor(d2/4), d2%4]}
{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[d0, d1, d2] -> op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[d0, d1, o2, o3] : (-d2 + o3) mod 4 = 0 and -3 + d2 <= 4o2 <= d2 and 0 <= o3 <= 3 }
access map : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[0, i1, i2, i3] -> conv1_shift_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Preliminary vectorization dim: 2
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[i0, i1, i2, i3] -> [(16i1 + i2)] }
after removal: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[i0, i1, i2, i3] -> [(16i1 + i2)] }
new: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[0, i1, i2, i3] -> conv1_shift_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
remove: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[0, i1, i2, i3] -> conv1_shift_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
access map : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[0, i1, i2, i3] -> conv1_shift_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Vectorization dimension: 2
	aff : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[i0, i1, i2, i3] -> [(16i1 + i2)] }
	div dim: 0
rem: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[0, i1, i2, i3] -> conv1_shift_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
new: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[0, i1, i2, i3] -> conv1_shift_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
base_str : {op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[i0=0, i1=0, i2=0, i3]}
base_str : {op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[i0=0, i1=0, i2=0, i3]}
	new: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[i0 = 0, i1 = 0, i2 = 0, i3] }
	rem: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[i0 = 0, i1 = 0, i2 = 0, i3] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[i0, i1, i2, i3 = 0] }
sched domain: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[i0, i1, i2, i3 = 0] }
remove dimension: {3}
before:{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[0, i1, i2, i3] -> conv1_shift_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and i3 >= 0 and -4i2 <= i3 <= 61 - 4i2 and i3 <= 3 }
after:{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[0, i1, i2, 0] -> conv1_shift_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
remove dimension: {3}
sched before projection: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[0, i1, i2] -> [258 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[0, i1, i2] -> conv1_shift_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[0, i1, i2] -> conv1_shift_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vectorization dimension after irrelevant dimension removal: 2
sched before adjust: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[0, i1, i2] -> [258 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[0, i1, i2] -> [258 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
final schedule: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
final access: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[0, i1, i2] -> conv1_shift_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 62, 62, ]
	---- Out range: [3844, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

Autogen slice:{ conv1_shift_stencil_BANK_1[i0] -> conv1_shift_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(16conv1_shift_s0_y + floor((conv1_shift_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(conv1_shift_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[0, i1, i2] -> conv1_shift_stencil_BANK_1[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2]
domain: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[64i1 + 4i2] }
	 rewrite access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[0, i1, i2] -> conv1_shift_stencil_BANK_1[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+1]
domain: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[0, i1, i2] -> conv1_shift_stencil_BANK_1[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+2]
domain: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[0, i1, i2] -> conv1_shift_stencil_BANK_1[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 992, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+3]
domain: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] }
	Add TB output port: conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
Autogen slice:{ conv1_shift_stencil_BANK_1[i0] -> conv1_shift_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(16conv1_shift_s0_y + floor((conv1_shift_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root, conv1_shift_s0_y, conv1_shift_s0_x] -> [(conv1_shift_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 61]
Domain space on <i2> is: [0, 61]
Stride : 1	Origin: 1
ADDR dim <0> range: 3844, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
access map expr:[64*i1+i2]
domain: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1[64i1 + i2] }
tb output access map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
	Access map decouple reuse: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [258 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [258 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
TB  : --- conv1_shift_stencil_BANK_1_0_tb
	---- 4 in ports
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_0
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_0_tb[0] }
			max location: { conv1_shift_stencil_BANK_1_0_tb[3964] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_1
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_0_tb[1] }
			max location: { conv1_shift_stencil_BANK_1_0_tb[3965] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_2
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_0_tb[2] }
			max location: { conv1_shift_stencil_BANK_1_0_tb[3966] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_3
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_0_tb[3] }
			max location: { conv1_shift_stencil_BANK_1_0_tb[3967] }

	---- 1 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [258 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_1_0_tb[0] }
			max location: { conv1_shift_stencil_BANK_1_0_tb[3965] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_read_tb_in
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_0
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_1
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_2
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_3
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_read_tb_out
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out

TB Schedule: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [258 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61; op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
SRAM: --- conv1_shift_stencil_BANK_1_sram
	---- 4 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_0
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[0] }
			max location: { conv1_shift_stencil_BANK_1_sram[3964] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_1
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[1] }
			max location: { conv1_shift_stencil_BANK_1_sram[3965] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_2
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[2] }
			max location: { conv1_shift_stencil_BANK_1_sram[3966] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_3
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[3] }
			max location: { conv1_shift_stencil_BANK_1_sram[3967] }

	---- 4 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_0
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[0] }
			max location: { conv1_shift_stencil_BANK_1_sram[3964] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_1
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[1] }
			max location: { conv1_shift_stencil_BANK_1_sram[3965] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_2
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[2] }
			max location: { conv1_shift_stencil_BANK_1_sram[3966] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_3
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[3] }
			max location: { conv1_shift_stencil_BANK_1_sram[3967] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_0
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_1
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_2
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_3
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_0
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_1
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_2
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_3

SRAM Schedule: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15; op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
after vectorization codegen: conv1_shift_stencil_BANK_1_0_agg
--- conv1_shift_stencil_BANK_1_0_agg
	---- 1 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in
			dom : { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_BANK_1_0_agg[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_1_0_agg[0] }
			max location: { conv1_shift_stencil_BANK_1_0_agg[3965] }

	---- 4 out ports:
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_0
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_0_agg[0] }
			max location: { conv1_shift_stencil_BANK_1_0_agg[3964] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_1
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_0_agg[1] }
			max location: { conv1_shift_stencil_BANK_1_0_agg[3965] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_2
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_0_agg[2] }
			max location: { conv1_shift_stencil_BANK_1_0_agg[3966] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_3
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_0_agg[3] }
			max location: { conv1_shift_stencil_BANK_1_0_agg[3967] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write_agg_in
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write_agg_out
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_0
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_1
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_2
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_out_3

after vectorization codegen: conv1_shift_stencil_BANK_1_0_tb
--- conv1_shift_stencil_BANK_1_0_tb
	---- 4 in ports
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_0
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_0_tb[0] }
			max location: { conv1_shift_stencil_BANK_1_0_tb[3964] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_1
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_0_tb[1] }
			max location: { conv1_shift_stencil_BANK_1_0_tb[3965] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_2
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_0_tb[2] }
			max location: { conv1_shift_stencil_BANK_1_0_tb[3966] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_3
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_0_tb[3] }
			max location: { conv1_shift_stencil_BANK_1_0_tb[3967] }

	---- 1 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> conv1_shift_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [258 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_BANK_1_0_tb[0] }
			max location: { conv1_shift_stencil_BANK_1_0_tb[3965] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_read_tb_in
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_0
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_1
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_2
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_3
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_read_tb_out
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out

after vectorization codegen: conv1_shift_stencil_BANK_1_sram
--- conv1_shift_stencil_BANK_1_sram
	---- 4 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_0
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[0] }
			max location: { conv1_shift_stencil_BANK_1_sram[3964] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_1
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[1] }
			max location: { conv1_shift_stencil_BANK_1_sram[3965] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_2
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[2] }
			max location: { conv1_shift_stencil_BANK_1_sram[3966] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_3
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[3] }
			max location: { conv1_shift_stencil_BANK_1_sram[3967] }

	---- 4 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_0
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[0] }
			max location: { conv1_shift_stencil_BANK_1_sram[3964] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_1
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[1] }
			max location: { conv1_shift_stencil_BANK_1_sram[3965] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_2
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[2] }
			max location: { conv1_shift_stencil_BANK_1_sram[3966] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_3
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[3] }
			max location: { conv1_shift_stencil_BANK_1_sram[3967] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_0
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_1
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_2
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_3
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_0
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_1
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_2
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_3

bank id: 0
rd dom: { conv1_shift_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
	rel map: {0, 1, 1}
	rel dim: 2
	rel dim stride: 4
out_fetch_ii: 4
bank id: 1
rd dom: { conv1_shift_stencil[i0, i1] : 0 <= i0 <= 61 and 0 <= i1 <= 61 }
	rel map: {0, 1, 1}
	rel dim: 2
	rel dim stride: 4
out_fetch_ii: 4
bank id: 0, to be merged: {0, 1}
	Group: 0: {0, 1}
	Perform bank merging!
	subcomponent keys:conv1_shift_stencil_BANK_1_0_agg
	subcomponent keys:conv1_shift_stencil_BANK_1_0_tb
	subcomponent keys:conv1_shift_stencil_BANK_1_sram
--- conv1_shift_stencil_BANK_1_sram
	---- 4 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_0
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[0] }
			max location: { conv1_shift_stencil_BANK_1_sram[3964] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_1
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[1] }
			max location: { conv1_shift_stencil_BANK_1_sram[3965] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_2
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[2] }
			max location: { conv1_shift_stencil_BANK_1_sram[3966] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_3
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[3] }
			max location: { conv1_shift_stencil_BANK_1_sram[3967] }

	---- 4 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_0
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[0] }
			max location: { conv1_shift_stencil_BANK_1_sram[3964] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_1
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[1] }
			max location: { conv1_shift_stencil_BANK_1_sram[3965] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_2
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[2] }
			max location: { conv1_shift_stencil_BANK_1_sram[3966] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_3
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_1_sram[3] }
			max location: { conv1_shift_stencil_BANK_1_sram[3967] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_0
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_1
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_2
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_3
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_0
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_1
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_2
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_3

	subcomponent keys:conv1_shift_stencil_BANK_0_0_agg
	subcomponent keys:conv1_shift_stencil_BANK_0_0_tb
	subcomponent keys:conv1_shift_stencil_BANK_0_sram
--- conv1_shift_stencil_BANK_0_sram
	---- 4 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_0
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[0] }
			max location: { conv1_shift_stencil_BANK_0_sram[3964] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_1
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[1] }
			max location: { conv1_shift_stencil_BANK_0_sram[3965] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_2
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[2] }
			max location: { conv1_shift_stencil_BANK_0_sram[3966] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_3
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[3] }
			max location: { conv1_shift_stencil_BANK_0_sram[3967] }

	---- 4 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_0
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[0] }
			max location: { conv1_shift_stencil_BANK_0_sram[3964] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_1
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[1] }
			max location: { conv1_shift_stencil_BANK_0_sram[3965] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_2
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[2] }
			max location: { conv1_shift_stencil_BANK_0_sram[3966] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_3
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_BANK_0_sram[3] }
			max location: { conv1_shift_stencil_BANK_0_sram[3967] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_0
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_1
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_2
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_3
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_0
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_1
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_2
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_3

new banks id: 2
get SRAM port schedule: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
get SRAM port schedule: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
get SRAM port schedule: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
	 output sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [192 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
	adjust temp sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
--- conv1_shift_stencil_bank_2_sram
	---- 4 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_0
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_sram[0] }
			max location: { conv1_shift_stencil_bank_2_sram[3964] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_1
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_bank_2_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_sram[1] }
			max location: { conv1_shift_stencil_bank_2_sram[3965] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_2
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_bank_2_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_sram[2] }
			max location: { conv1_shift_stencil_bank_2_sram[3966] }

		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_3
			dom : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_bank_2_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_sram[3] }
			max location: { conv1_shift_stencil_bank_2_sram[3967] }

	---- 8 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_0
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_sram[0] }
			max location: { conv1_shift_stencil_bank_2_sram[3964] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_1
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_bank_2_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_sram[1] }
			max location: { conv1_shift_stencil_bank_2_sram[3965] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_2
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_bank_2_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_sram[2] }
			max location: { conv1_shift_stencil_bank_2_sram[3966] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_3
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_bank_2_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_sram[3] }
			max location: { conv1_shift_stencil_bank_2_sram[3967] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_0
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[d0 = 0, d1, d2] -> conv1_shift_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_sram[0] }
			max location: { conv1_shift_stencil_bank_2_sram[3964] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_1
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[d0 = 0, d1, d2] -> conv1_shift_stencil_bank_2_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_sram[1] }
			max location: { conv1_shift_stencil_bank_2_sram[3965] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_2
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[d0 = 0, d1, d2] -> conv1_shift_stencil_bank_2_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_sram[2] }
			max location: { conv1_shift_stencil_bank_2_sram[3966] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_3
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[d0 = 0, d1, d2] -> conv1_shift_stencil_bank_2_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_sram[3] }
			max location: { conv1_shift_stencil_bank_2_sram[3967] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_0
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_1
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_2
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_in_3
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_0
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_1
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_2
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_3
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_0
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_1
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_2
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_3

--- conv1_shift_stencil_bank_2
	---- 1 in ports
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
			dom : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_bank_2[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_bank_2[0] }
			max location: { conv1_shift_stencil_bank_2[3965] }

	---- 2 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_bank_2[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [194 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_bank_2[0] }
			max location: { conv1_shift_stencil_bank_2[3965] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_bank_2[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [258 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_bank_2[0] }
			max location: { conv1_shift_stencil_bank_2[3965] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28_write
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_read
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7

sub component buf: agg
sub component buf: tb
sub component buf: sram
sub component buf: agg
sub component buf: tb
sub component buf: sram
micor buf: --- conv1_shift_stencil_bank_2_0_tb
	---- 4 in ports
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_0
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_0_tb[0] }
			max location: { conv1_shift_stencil_bank_2_0_tb[3964] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_1
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_bank_2_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_0_tb[1] }
			max location: { conv1_shift_stencil_bank_2_0_tb[3965] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_2
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_bank_2_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_0_tb[2] }
			max location: { conv1_shift_stencil_bank_2_0_tb[3966] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_3
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_bank_2_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_0_tb[3] }
			max location: { conv1_shift_stencil_bank_2_0_tb[3967] }

	---- 1 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> conv1_shift_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [194 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_bank_2_0_tb[0] }
			max location: { conv1_shift_stencil_bank_2_0_tb[3965] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_read_tb_in
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_0
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_1
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_2
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out_3
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_read_tb_out
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_10_out

micor buf: --- conv1_shift_stencil_bank_2_1_tb
	---- 4 in ports
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_0
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[root = 0, i1, i2] -> conv1_shift_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_1_tb[0] }
			max location: { conv1_shift_stencil_bank_2_1_tb[3964] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_1
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[root = 0, i1, i2] -> conv1_shift_stencil_bank_2_1_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_1_tb[1] }
			max location: { conv1_shift_stencil_bank_2_1_tb[3965] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_2
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[root = 0, i1, i2] -> conv1_shift_stencil_bank_2_1_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_1_tb[2] }
			max location: { conv1_shift_stencil_bank_2_1_tb[3966] }

		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_3
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[root = 0, i1, i2] -> conv1_shift_stencil_bank_2_1_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
			min location: { conv1_shift_stencil_bank_2_1_tb[3] }
			max location: { conv1_shift_stencil_bank_2_1_tb[3967] }

	---- 1 out ports:
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out
			dom : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_1[root = 0, i1, i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			acc : { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_1[root = 0, i1, i2] -> conv1_shift_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
			sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_1[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [258 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_shift_stencil_bank_2_1_tb[0] }
			max location: { conv1_shift_stencil_bank_2_1_tb[3965] }

	---- Input Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_read_tb_in
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_0
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_1
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_2
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out_3
	---- Output Bundles
		conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_read_tb_out
		---- Ports...
			conv1_shift_stencil_op_hcompute_conv2_stencil_1_7_out

Bank writers: 
	 bank NO.2
		writers: {conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28}
Bank readers: 
	 bank NO.2
		readers: {conv1_shift_stencil_op_hcompute_conv2_stencil_1_10, conv1_shift_stencil_op_hcompute_conv2_stencil_1_7}
Shift Register Output: 
	memtiles IO:: 
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_10, delay = 64
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_12, delay = 0
		 conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28->conv1_shift_stencil_op_hcompute_conv2_stencil_1_7, delay = 128
	register IO:: 
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_12->conv1_shift_stencil_op_hcompute_conv2_stencil_1_13, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_13->conv1_shift_stencil_op_hcompute_conv2_stencil_1_11, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_10->conv1_shift_stencil_op_hcompute_conv2_stencil_1_9, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_9->conv1_shift_stencil_op_hcompute_conv2_stencil_1_8, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_7->conv1_shift_stencil_op_hcompute_conv2_stencil_1_6, delay = 1
		 conv1_shift_stencil_op_hcompute_conv2_stencil_1_6->conv1_shift_stencil_op_hcompute_conv2_stencil_1_5, delay = 1

add input: conv1_shift_stencil_op_hcompute_conv1_shift_stencil_28 to pt2wire
add output: conv1_shift_stencil_op_hcompute_conv2_stencil_1_5 to pt2wire
add output: conv1_shift_stencil_op_hcompute_conv2_stencil_1_6 to pt2wire
add output: conv1_shift_stencil_op_hcompute_conv2_stencil_1_7 to pt2wire
add output: conv1_shift_stencil_op_hcompute_conv2_stencil_1_8 to pt2wire
add output: conv1_shift_stencil_op_hcompute_conv2_stencil_1_9 to pt2wire
add output: conv1_shift_stencil_op_hcompute_conv2_stencil_1_10 to pt2wire
add output: conv1_shift_stencil_op_hcompute_conv2_stencil_1_11 to pt2wire
add output: conv1_shift_stencil_op_hcompute_conv2_stencil_1_12 to pt2wire
add output: conv1_shift_stencil_op_hcompute_conv2_stencil_1_13 to pt2wire
agg2sram_opt debug start 
sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
write map: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
{ conv1_shift_stencil_bank_2_sram[i0] : -3 <= i0 <= 3967 and (((2 + i0) mod 4 = 0 and -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3964 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
read map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[d0 = 0, d1, d2] -> conv1_shift_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
sched: { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
op_name: op_hcompute_conv1_shift_stencil_agg2sram_0, extent_0: 62, stride_0: 1
sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
write map: { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_bank_2_0_agg[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
{ conv1_shift_stencil_bank_2_0_agg[i0] : -3 <= i0 <= 3967 and ((-2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0) or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3964 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_bank_2_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [194 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
write map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
{ conv1_shift_stencil_bank_2_0_tb[i0] : -3 <= i0 <= 3967 and ((-2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0) or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3964 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> conv1_shift_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_1[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [258 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
write map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[root = 0, i1, i2] -> conv1_shift_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
{ conv1_shift_stencil_bank_2_1_tb[i0] : -3 <= i0 <= 3967 and ((-2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0) or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 3964 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_1[root = 0, i1, i2] -> conv1_shift_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
	op name: op_hcompute_conv1_shift_stencil_agg2sram_0
	Sched: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> [134 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",134,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
adding new agg2sram opt cfg for: op_hcompute_conv1_shift_stencil_agg2sram_0: mode 0, agg_read_padding 3, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",16,0
"write_data_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_conv1_shift_stencil_agg2sram_0[i0 = 0, i1, i2] -> conv1_shift_stencil_bank_2_0_agg[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_conv1_shift_stencil_in2agg_0
	Sched: { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",130,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_conv1_shift_stencil_in2agg_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_shift_stencil_bank_2_0_agg[64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	op name: op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1
	Sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[i0 = 0, i1, i2] -> [256 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",256,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[root = 0, i1, i2] -> conv1_shift_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_sram2tb_1[d0 = 0, d1, d2] -> conv1_shift_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_1
	Sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_1[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [258 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",258,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_128_tb2out_1[root = 0, i1, i2] -> conv1_shift_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0
	Sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [191 + 64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",191,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> conv1_shift_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 61 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> conv1_shift_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 61 and 0 <= d2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0
	Sched: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [194 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }

"dimensionality",3,0
"cycle_starting_addr",194,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",62,0
"cycle_stride_1",64,0
"extent_0",62,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_conv1_shift_stencilop_hcompute_conv1_shift_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> conv1_shift_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 61 and 0 <= i2 <= 61 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
{"agg2sram_0":{"agg_read_padding":[3],"cycle_starting_addr":[134],"cycle_stride":[4,64],"delay":[0],"dimensionality":2,"extent":[16,62],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[1,0],"write_data_starting_addr":[0],"write_data_stride":[1,16]},"in2agg_0":{"cycle_starting_addr":[130],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_0":{"cycle_starting_addr":[191],"cycle_stride":[4,64],"dimensionality":2,"extent":[16,62],"read_data_starting_addr":[0],"read_data_stride":[1,16],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_1":{"cycle_starting_addr":[256],"cycle_stride":[4,64],"dimensionality":2,"extent":[16,62],"read_data_starting_addr":[0],"read_data_stride":[1,16],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"tb2out_0":{"cycle_starting_addr":[194],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"read_data_starting_addr":[0],"read_data_stride":[1,0]},"tb2out_1":{"cycle_starting_addr":[258],"cycle_stride":[1,64],"dimensionality":2,"extent":[62,62],"read_data_starting_addr":[0],"read_data_stride":[1,0]}}
Add lake node:ub_conv1_shift_stencil_bank_2 with input_num = 1, output_num = 2
Config mode: lake
Generating Verilog Testing Collateral for: ub_conv1_shift_stencil_bank_2
Module: cgralib.Mem_amber(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'data_out_1':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U0__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs2__use_prebuilt_memTrue__width16
create shift register for --- conv1_stencil
	---- 1 in ports
		conv1_stencil_op_hcompute_conv1_stencil_1_16
			dom : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			acc : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> conv1_stencil[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			sched: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			min location: { conv1_stencil[0, 0] }
			max location: { conv1_stencil[61, 61] }

	---- 1 out ports:
		conv1_stencil_op_hcompute_conv1_shift_stencil_29
			dom : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			acc : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			sched: { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
			min location: { conv1_stencil[0, 0] }
			max location: { conv1_stencil[61, 61] }

	---- Input Bundles
		op_hcompute_conv1_stencil_1_write
		---- Ports...
			conv1_stencil_op_hcompute_conv1_stencil_1_16
	---- Output Bundles
		op_hcompute_conv1_shift_stencil_read
		---- Ports...
			conv1_stencil_op_hcompute_conv1_shift_stencil_29

==== No reduce ops on this buffer
Writer name: op_hcompute_conv1_stencil_1
read_op read: {conv1_stencil}
read_op write: {conv1_shift_stencil, }
write_op write: {conv1_shift_stencil}
write_op read: {conv1_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> conv1_stencil[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
reads : { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> conv1_stencil[conv1_shift_s0_y, conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
Schedule...
  { op_hcompute_conv1_shift_stencil[root = 0, conv1_shift_s0_y, conv1_shift_s0_x] -> [130 + 64conv1_shift_s0_y + conv1_shift_s0_x] : 0 <= conv1_shift_s0_y <= 61 and 0 <= conv1_shift_s0_x <= 61 }
  { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Time to write: { [i0] -> conv1_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> conv1_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_conv1_stencil_1
DG: ...
# nodes: 2
# edges: 1
Group:     conv1_stencil_op_hcompute_conv1_stencil_1_16
        conv1_stencil_op_hcompute_conv1_stencil_1_16 -> (0) conv1_stencil_op_hcompute_conv1_shift_stencil_29
Fanin Group:     conv1_stencil_op_hcompute_conv1_stencil_1_16
        conv1_stencil_op_hcompute_conv1_shift_stencil_29 -> (-1) conv1_stencil_op_hcompute_conv1_stencil_1_16

Naive Shift registers...
# nodes: 2
# edges: 1
Group:     conv1_stencil_op_hcompute_conv1_stencil_1_16
        conv1_stencil_op_hcompute_conv1_stencil_1_16 -> (0) conv1_stencil_op_hcompute_conv1_shift_stencil_29
Fanin Group:     conv1_stencil_op_hcompute_conv1_stencil_1_16
        conv1_stencil_op_hcompute_conv1_shift_stencil_29 -> (-1) conv1_stencil_op_hcompute_conv1_stencil_1_16

inpt: conv1_stencil_op_hcompute_conv1_stencil_1_16
  conv1_stencil_op_hcompute_conv1_shift_stencil_29 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     conv1_stencil_op_hcompute_conv1_stencil_1_16
        conv1_stencil_op_hcompute_conv1_stencil_1_16 -> (0) conv1_stencil_op_hcompute_conv1_shift_stencil_29
Fanin Group:     conv1_stencil_op_hcompute_conv1_stencil_1_16
        conv1_stencil_op_hcompute_conv1_shift_stencil_29 -> (-1) conv1_stencil_op_hcompute_conv1_stencil_1_16

edge: conv1_stencil_op_hcompute_conv1_stencil_1_16=>conv1_stencil_op_hcompute_conv1_shift_stencil_29, w=0
after sort: outpt->conv1_stencil_op_hcompute_conv1_shift_stencil_29, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     conv1_stencil_op_hcompute_conv1_stencil_1_16
        conv1_stencil_op_hcompute_conv1_stencil_1_16 -> (0) conv1_stencil_op_hcompute_conv1_shift_stencil_29
Fanin Group:     conv1_stencil_op_hcompute_conv1_stencil_1_16
        conv1_stencil_op_hcompute_conv1_shift_stencil_29 -> (-1) conv1_stencil_op_hcompute_conv1_stencil_1_16
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv1_stencil_op_hcompute_conv1_stencil_1_16->conv1_stencil_op_hcompute_conv1_shift_stencil_29, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv1_stencil_op_hcompute_conv1_stencil_1_16->conv1_stencil_op_hcompute_conv1_shift_stencil_29, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv1_stencil_op_hcompute_conv1_stencil_1_16->conv1_stencil_op_hcompute_conv1_shift_stencil_29, delay = 0
	register IO:: 

Done ports: {conv1_stencil_op_hcompute_conv1_shift_stencil_29}
reduced buffer: --- conv1_stencil
	---- 1 in ports
		conv1_stencil_op_hcompute_conv1_stencil_1_16
			dom : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			acc : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> conv1_stencil[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			sched: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			min location: { conv1_stencil[0, 0] }
			max location: { conv1_stencil[61, 61] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_conv1_stencil_1_write
		---- Ports...
			conv1_stencil_op_hcompute_conv1_stencil_1_16
	---- Output Bundles

SR outputs: {conv1_stencil_op_hcompute_conv1_shift_stencil_29}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv1_stencil_op_hcompute_conv1_stencil_1_16->conv1_stencil_op_hcompute_conv1_shift_stencil_29, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv1_stencil_op_hcompute_conv1_stencil_1_16->conv1_stencil_op_hcompute_conv1_shift_stencil_29, delay = 0
	register IO:: 

add input: conv1_stencil_op_hcompute_conv1_stencil_1_16 to pt2wire
add output: conv1_stencil_op_hcompute_conv1_shift_stencil_29 to pt2wire
create shift register for --- conv1_stencil_clkwrk_dsa0
	---- 1 in ports
		conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
			dom : { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
			acc : { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> conv1_stencil_clkwrk_dsa0[conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
			sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
			min location: { conv1_stencil_clkwrk_dsa0[0, 0] }
			max location: { conv1_stencil_clkwrk_dsa0[61, 61] }

	---- 1 out ports:
		conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17
			dom : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			acc : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> conv1_stencil_clkwrk_dsa0[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			sched: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			min location: { conv1_stencil_clkwrk_dsa0[0, 0] }
			max location: { conv1_stencil_clkwrk_dsa0[61, 61] }

	---- Input Bundles
		op_hcompute_conv1_stencil_write
		---- Ports...
			conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
	---- Output Bundles
		op_hcompute_conv1_stencil_1_read
		---- Ports...
			conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17

==== No reduce ops on this buffer
Writer name: op_hcompute_conv1_stencil
read_op read: {conv1_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv1_stencil, }
write_op write: {conv1_stencil}
write_op read: 
Calculate DDs for creating shift registers.
writes: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> conv1_stencil_clkwrk_dsa0[conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
reads : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> conv1_stencil_clkwrk_dsa0[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Schedule...
  { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
Time to write: { [i0] -> conv1_stencil_clkwrk_dsa0[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
Time to read : { [i0] -> conv1_stencil_clkwrk_dsa0[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_conv1_stencil
DG: ...
# nodes: 2
# edges: 1
Group:     conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
        conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27 -> (0) conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17
Fanin Group:     conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
        conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17 -> (-1) conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27

Naive Shift registers...
# nodes: 2
# edges: 1
Group:     conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
        conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27 -> (0) conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17
Fanin Group:     conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
        conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17 -> (-1) conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27

inpt: conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
  conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
        conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27 -> (0) conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17
Fanin Group:     conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
        conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17 -> (-1) conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27

edge: conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27=>conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17, w=0
after sort: outpt->conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
        conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27 -> (0) conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17
Fanin Group:     conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
        conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17 -> (-1) conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27->conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27->conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27->conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17, delay = 0
	register IO:: 

Done ports: {conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17}
reduced buffer: --- conv1_stencil_clkwrk_dsa0
	---- 1 in ports
		conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
			dom : { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
			acc : { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> conv1_stencil_clkwrk_dsa0[conv1_s0_y, conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
			sched: { op_hcompute_conv1_stencil[root = 0, conv1_s0_y, conv1_s0_x] -> [130 + 64conv1_s0_y + conv1_s0_x] : 0 <= conv1_s0_y <= 61 and 0 <= conv1_s0_x <= 61 }
			min location: { conv1_stencil_clkwrk_dsa0[0, 0] }
			max location: { conv1_stencil_clkwrk_dsa0[61, 61] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_conv1_stencil_write
		---- Ports...
			conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27
	---- Output Bundles

SR outputs: {conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27->conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27->conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17, delay = 0
	register IO:: 

add input: conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_27 to pt2wire
add output: conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_17 to pt2wire
create shift register for --- conv2_stencil
	---- 1 in ports
		conv2_stencil_op_hcompute_conv2_stencil_1_4
			dom : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			acc : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv2_stencil[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			sched: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			min location: { conv2_stencil[0, 0] }
			max location: { conv2_stencil[59, 59] }

	---- 1 out ports:
		conv2_stencil_op_hcompute_hw_output_stencil_1
			dom : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
			acc : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> conv2_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
			sched: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
			min location: { conv2_stencil[0, 0] }
			max location: { conv2_stencil[59, 59] }

	---- Input Bundles
		op_hcompute_conv2_stencil_1_write
		---- Ports...
			conv2_stencil_op_hcompute_conv2_stencil_1_4
	---- Output Bundles
		op_hcompute_hw_output_stencil_read
		---- Ports...
			conv2_stencil_op_hcompute_hw_output_stencil_1

==== No reduce ops on this buffer
Writer name: op_hcompute_conv2_stencil_1
read_op read: {conv2_stencil}
read_op write: {hw_output_stencil, }
write_op write: {hw_output_stencil}
write_op read: {conv1_shift_stencil, conv2_stencil_clkwrk_dsa1, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv2_stencil[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
reads : { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> conv2_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Schedule...
  { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
Time to write: { [i0] -> conv2_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> conv2_stencil[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_conv2_stencil_1
DG: ...
# nodes: 2
# edges: 1
Group:     conv2_stencil_op_hcompute_conv2_stencil_1_4
        conv2_stencil_op_hcompute_conv2_stencil_1_4 -> (0) conv2_stencil_op_hcompute_hw_output_stencil_1
Fanin Group:     conv2_stencil_op_hcompute_conv2_stencil_1_4
        conv2_stencil_op_hcompute_hw_output_stencil_1 -> (-1) conv2_stencil_op_hcompute_conv2_stencil_1_4

Naive Shift registers...
# nodes: 2
# edges: 1
Group:     conv2_stencil_op_hcompute_conv2_stencil_1_4
        conv2_stencil_op_hcompute_conv2_stencil_1_4 -> (0) conv2_stencil_op_hcompute_hw_output_stencil_1
Fanin Group:     conv2_stencil_op_hcompute_conv2_stencil_1_4
        conv2_stencil_op_hcompute_hw_output_stencil_1 -> (-1) conv2_stencil_op_hcompute_conv2_stencil_1_4

inpt: conv2_stencil_op_hcompute_conv2_stencil_1_4
  conv2_stencil_op_hcompute_hw_output_stencil_1 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     conv2_stencil_op_hcompute_conv2_stencil_1_4
        conv2_stencil_op_hcompute_conv2_stencil_1_4 -> (0) conv2_stencil_op_hcompute_hw_output_stencil_1
Fanin Group:     conv2_stencil_op_hcompute_conv2_stencil_1_4
        conv2_stencil_op_hcompute_hw_output_stencil_1 -> (-1) conv2_stencil_op_hcompute_conv2_stencil_1_4

edge: conv2_stencil_op_hcompute_conv2_stencil_1_4=>conv2_stencil_op_hcompute_hw_output_stencil_1, w=0
after sort: outpt->conv2_stencil_op_hcompute_hw_output_stencil_1, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     conv2_stencil_op_hcompute_conv2_stencil_1_4
        conv2_stencil_op_hcompute_conv2_stencil_1_4 -> (0) conv2_stencil_op_hcompute_hw_output_stencil_1
Fanin Group:     conv2_stencil_op_hcompute_conv2_stencil_1_4
        conv2_stencil_op_hcompute_hw_output_stencil_1 -> (-1) conv2_stencil_op_hcompute_conv2_stencil_1_4
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv2_stencil_op_hcompute_conv2_stencil_1_4->conv2_stencil_op_hcompute_hw_output_stencil_1, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv2_stencil_op_hcompute_conv2_stencil_1_4->conv2_stencil_op_hcompute_hw_output_stencil_1, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv2_stencil_op_hcompute_conv2_stencil_1_4->conv2_stencil_op_hcompute_hw_output_stencil_1, delay = 0
	register IO:: 

Done ports: {conv2_stencil_op_hcompute_hw_output_stencil_1}
reduced buffer: --- conv2_stencil
	---- 1 in ports
		conv2_stencil_op_hcompute_conv2_stencil_1_4
			dom : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			acc : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv2_stencil[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			sched: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			min location: { conv2_stencil[0, 0] }
			max location: { conv2_stencil[59, 59] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_conv2_stencil_1_write
		---- Ports...
			conv2_stencil_op_hcompute_conv2_stencil_1_4
	---- Output Bundles

SR outputs: {conv2_stencil_op_hcompute_hw_output_stencil_1}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv2_stencil_op_hcompute_conv2_stencil_1_4->conv2_stencil_op_hcompute_hw_output_stencil_1, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv2_stencil_op_hcompute_conv2_stencil_1_4->conv2_stencil_op_hcompute_hw_output_stencil_1, delay = 0
	register IO:: 

add input: conv2_stencil_op_hcompute_conv2_stencil_1_4 to pt2wire
add output: conv2_stencil_op_hcompute_hw_output_stencil_1 to pt2wire
create shift register for --- conv2_stencil_clkwrk_dsa1
	---- 1 in ports
		conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
			dom : { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
			acc : { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> conv2_stencil_clkwrk_dsa1[conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
			sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
			min location: { conv2_stencil_clkwrk_dsa1[0, 0] }
			max location: { conv2_stencil_clkwrk_dsa1[59, 59] }

	---- 1 out ports:
		conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14
			dom : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			acc : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv2_stencil_clkwrk_dsa1[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			sched: { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
			min location: { conv2_stencil_clkwrk_dsa1[0, 0] }
			max location: { conv2_stencil_clkwrk_dsa1[59, 59] }

	---- Input Bundles
		op_hcompute_conv2_stencil_write
		---- Ports...
			conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
	---- Output Bundles
		op_hcompute_conv2_stencil_1_read
		---- Ports...
			conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14

==== No reduce ops on this buffer
Writer name: op_hcompute_conv2_stencil
read_op read: {conv1_shift_stencil, conv2_stencil_clkwrk_dsa1}
read_op write: {conv2_stencil, }
write_op write: {conv2_stencil}
write_op read: 
Calculate DDs for creating shift registers.
writes: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> conv2_stencil_clkwrk_dsa1[conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
reads : { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> conv2_stencil_clkwrk_dsa1[conv2_s1_y, conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
Schedule...
  { op_hcompute_conv2_stencil_1[root = 0, conv2_s1_y, conv2_s1_x] -> [260 + 64conv2_s1_y + conv2_s1_x] : 0 <= conv2_s1_y <= 59 and 0 <= conv2_s1_x <= 59 }
  { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
Time to write: { [i0] -> conv2_stencil_clkwrk_dsa1[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
Time to read : { [i0] -> conv2_stencil_clkwrk_dsa1[o0, -260 + i0 - 64o0] : 0 <= o0 <= 59 and -319 + i0 <= 64o0 <= -260 + i0 }
PC times     : { [i0] -> [i0] : 256 <= i0 <= 4095 and 64*floor((i0)/64) <= -4 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_conv2_stencil
DG: ...
# nodes: 2
# edges: 1
Group:     conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
        conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15 -> (0) conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14
Fanin Group:     conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
        conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14 -> (-1) conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15

Naive Shift registers...
# nodes: 2
# edges: 1
Group:     conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
        conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15 -> (0) conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14
Fanin Group:     conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
        conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14 -> (-1) conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15

inpt: conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
  conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14 -(0)-> 0
Groups...
  Group...
# nodes: 2
# edges: 1
Group:     conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
        conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15 -> (0) conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14
Fanin Group:     conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
        conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14 -> (-1) conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15

edge: conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15=>conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14, w=0
after sort: outpt->conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14, w=0
	subbranch size: 0
# nodes: 2
# edges: 1
Group:     conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
        conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15 -> (0) conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14
Fanin Group:     conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
        conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14 -> (-1) conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15->conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14, delay = 0
	register IO:: 
Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15->conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14, delay = 0
	register IO:: 

After shift register optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15->conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14, delay = 0
	register IO:: 

Done ports: {conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14}
reduced buffer: --- conv2_stencil_clkwrk_dsa1
	---- 1 in ports
		conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
			dom : { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
			acc : { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> conv2_stencil_clkwrk_dsa1[conv2_s0_y, conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
			sched: { op_hcompute_conv2_stencil[root = 0, conv2_s0_y, conv2_s0_x] -> [260 + 64conv2_s0_y + conv2_s0_x] : 0 <= conv2_s0_y <= 59 and 0 <= conv2_s0_x <= 59 }
			min location: { conv2_stencil_clkwrk_dsa1[0, 0] }
			max location: { conv2_stencil_clkwrk_dsa1[59, 59] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_conv2_stencil_write
		---- Ports...
			conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15
	---- Output Bundles

SR outputs: {conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14}
BUF outputs: {}
After banking optimization: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15->conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14, delay = 0
	register IO:: 

After bank merging: Bank writers: 
Bank readers: 
Shift Register Output: 
	memtiles IO:: 
		 conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15->conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14, delay = 0
	register IO:: 

add input: conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_15 to pt2wire
add output: conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_14 to pt2wire
create shift register for --- hw_input_global_wrapper_stencil
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil[0, 0] }
			max location: { hw_input_global_wrapper_stencil[63, 63] }

	---- 9 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18
			dom : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			acc : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			sched: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[0, 0] }
			max location: { hw_input_global_wrapper_stencil[61, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19
			dom : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			acc : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			sched: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[0, 1] }
			max location: { hw_input_global_wrapper_stencil[61, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
			dom : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			acc : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			sched: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[0, 2] }
			max location: { hw_input_global_wrapper_stencil[61, 63] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21
			dom : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			acc : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			sched: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[1, 0] }
			max location: { hw_input_global_wrapper_stencil[62, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22
			dom : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			acc : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			sched: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[1, 1] }
			max location: { hw_input_global_wrapper_stencil[62, 62] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
			dom : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			acc : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			sched: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[1, 2] }
			max location: { hw_input_global_wrapper_stencil[62, 63] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24
			dom : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			acc : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			sched: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[2, 0] }
			max location: { hw_input_global_wrapper_stencil[63, 61] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25
			dom : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			acc : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			sched: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[2, 2] }
			max location: { hw_input_global_wrapper_stencil[63, 63] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26
			dom : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			acc : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			sched: { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
			min location: { hw_input_global_wrapper_stencil[2, 1] }
			max location: { hw_input_global_wrapper_stencil[63, 62] }

	---- Input Bundles
		op_hcompute_hw_input_global_wrapper_stencil_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		op_hcompute_conv1_stencil_1_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26

==== No reduce ops on this buffer
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv1_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv1_stencil, }
write_op write: {conv1_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Schedule...
  { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -130 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [130 + i0] : -2 <= i0 <= 3965 and 64*floor((2 + i0)/64) <= i0 }
DDs          : { [130] }
DD           : 130
writer op    : op_hcompute_hw_input_global_wrapper_stencil
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv1_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv1_stencil, }
write_op write: {conv1_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Schedule...
  { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -129 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [129 + i0] : -1 <= i0 <= 3966 and 64*floor((1 + i0)/64) < i0 }
DDs          : { [129] }
DD           : 129
writer op    : op_hcompute_hw_input_global_wrapper_stencil
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv1_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv1_stencil, }
write_op write: {conv1_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Schedule...
  { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -128 + i0 - 64o0] : 0 <= o0 <= 61 and -191 + i0 <= 64o0 <= -130 + i0 }
PC times     : { [i0] -> [128 + i0] : 0 <= i0 <= 3967 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [128] }
DD           : 128
writer op    : op_hcompute_hw_input_global_wrapper_stencil
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv1_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv1_stencil, }
write_op write: {conv1_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Schedule...
  { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -66 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0 }
PC times     : { [i0] -> [66 + i0] : 62 <= i0 <= 4029 and 64*floor((2 + i0)/64) <= i0 }
DDs          : { [66] }
DD           : 66
writer op    : op_hcompute_hw_input_global_wrapper_stencil
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv1_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv1_stencil, }
write_op write: {conv1_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Schedule...
  { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -65 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0 }
PC times     : { [i0] -> [65 + i0] : 63 <= i0 <= 4030 and 64*floor((1 + i0)/64) < i0 }
DDs          : { [65] }
DD           : 65
writer op    : op_hcompute_hw_input_global_wrapper_stencil
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv1_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv1_stencil, }
write_op write: {conv1_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[1 + conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Schedule...
  { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -64 + i0 - 64o0] : 0 < o0 <= 62 and -127 + i0 <= 64o0 <= -66 + i0 }
PC times     : { [i0] -> [64 + i0] : 64 <= i0 <= 4031 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [64] }
DD           : 64
writer op    : op_hcompute_hw_input_global_wrapper_stencil
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv1_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv1_stencil, }
write_op write: {conv1_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Schedule...
  { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -2 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0 }
PC times     : { [i0] -> [2 + i0] : 126 <= i0 <= 4093 and 64*floor((2 + i0)/64) <= i0 }
DDs          : { [2] }
DD           : 2
writer op    : op_hcompute_hw_input_global_wrapper_stencil
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv1_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv1_stencil, }
write_op write: {conv1_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, 2 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Schedule...
  { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0 }
PC times     : { [i0] -> [i0] : 128 <= i0 <= 4095 and 64*floor((i0)/64) <= -2 + i0 }
DDs          : { [0] }
DD           : 0
writer op    : op_hcompute_hw_input_global_wrapper_stencil
Writer name: op_hcompute_hw_input_global_wrapper_stencil
read_op read: {conv1_stencil_clkwrk_dsa0, hw_input_global_wrapper_stencil}
read_op write: {conv1_stencil, }
write_op write: {conv1_stencil}
write_op read: {hw_input_stencil, }
Calculate DDs for creating shift registers.
writes: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
reads : { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> hw_input_global_wrapper_stencil[2 + conv1_s1_y, 1 + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
Schedule...
  { op_hcompute_conv1_stencil_1[root = 0, conv1_s1_y, conv1_s1_x] -> [130 + 64conv1_s1_y + conv1_s1_x] : 0 <= conv1_s1_y <= 61 and 0 <= conv1_s1_x <= 61 }
  { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
Time to write: { [i0] -> hw_input_global_wrapper_stencil[o0, i0 - 64o0] : 0 <= o0 <= 63 and -63 + i0 <= 64o0 <= i0 }
Time to read : { [i0] -> hw_input_global_wrapper_stencil[o0, -1 + i0 - 64o0] : 2 <= o0 <= 63 and -63 + i0 <= 64o0 <= -2 + i0 }
PC times     : { [i0] -> [1 + i0] : 127 <= i0 <= 4094 and 64*floor((1 + i0)/64) < i0 }
DDs          : { [1] }
DD           : 1
writer op    : op_hcompute_hw_input_global_wrapper_stencil
DG: ...
# nodes: 10
# edges: 9
Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (130) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (129) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (128) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (66) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (65) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (64) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (2) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (0) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2

Naive Shift registers...
# nodes: 10
# edges: 9
Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (130) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (129) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (128) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (66) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (65) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (64) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (2) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (0) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2

inpt: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
  hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25 -(0)-> 0
  hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26 -(1)-> 1
  hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24 -(2)-> 2
  hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23 -(64)-> 64
  hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22 -(65)-> 65
  hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21 -(66)-> 66
  hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20 -(128)-> 128
  hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19 -(129)-> 129
  hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18 -(130)-> 130
Groups...
  Group...
  Group...
  Group...
# nodes: 10
# edges: 9
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24
Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (128) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (64) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (0) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2

edge: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2=>hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20, w=128
edge: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2=>hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23, w=64
edge: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2=>hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25, w=0
after sort: outpt->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20, w=128
after sort: outpt->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23, w=64
after sort: outpt->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25, w=0
	delay of hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26 = 1
	delay of hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25 = 2
	subbranch size: 2
	delay of hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22 = 1
	delay of hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23 = 2
	subbranch size: 2
	delay of hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19 = 1
	delay of hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20 = 2
	subbranch size: 2
# nodes: 10
# edges: 9
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26
Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26 -> (1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24
Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (128) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (64) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
        hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 -> (0) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26
Fanin Group:     hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
        hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25 -> (-1) hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20, delay = 128
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23, delay = 64
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25, delay = 0
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18, delay = 1
Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20, delay = 128
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23, delay = 64
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25, delay = 0
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18, delay = 1

After shift register optimization: Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20, delay = 128
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23, delay = 64
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25, delay = 0
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18, delay = 1

Done ports: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18, hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19, hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20, hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21, hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22, hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23, hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24, hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25, hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26}
reduced buffer: --- hw_input_global_wrapper_stencil
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil[0, 0] }
			max location: { hw_input_global_wrapper_stencil[63, 63] }

	---- 0 out ports:
	---- Input Bundles
		op_hcompute_hw_input_global_wrapper_stencil_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles

SR outputs: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18, hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19, hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20, hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21, hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22, hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23, hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24, hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25, hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26}
BUF outputs: {}
After banking optimization: Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20, delay = 128
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23, delay = 64
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25, delay = 0
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18, delay = 1

After bank merging: Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20, delay = 128
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23, delay = 64
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25, delay = 0
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18, delay = 1

CGPL level :0
impl inputs: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
impl outpts: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23}
rddom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
ls = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
v = 0
Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20, delay = 128
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23, delay = 64
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25, delay = 0
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18, delay = 1

--- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23

Stride inner most:  1
{hw_input_global_wrapper_stencil[d0, d1] -> hw_input_global_wrapper_stencil[floor((1*d1 + 64*d0)/1)] }
reduce map: { hw_input_global_wrapper_stencil_BANK_0[d0, d1] -> hw_input_global_wrapper_stencil_BANK_0[64d0 + d1] }
linear map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
linear map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
after ubuffer regen: --- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23

addr need tight: {}
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }

	UBuffer after address tighten--- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23

getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_0[i0] : 0 <= i0 <= 4095 }
Vectorization buffer capacity: 4096

	UBuffer after cgpl optimization--- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23

find bd for op :op_hcompute_hw_input_global_wrapper_stencil
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
find bd for op :op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_read
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x)] }
	div dim: 0
getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_0[i0] : 0 <= i0 <= 4095 }
vectorization buffer capacity: 4096
vectorization buf name: hw_input_global_wrapper_stencil_BANK_0
	 original range input access map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	 dim id: 2
Ext by dim: {4096}
  buffer_vectorization Vectorizing: hw_input_global_wrapper_stencil_BANK_0
   On addr dim: 0, fetch_width: 4
--- hw_input_global_wrapper_stencil_BANK_0
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23

in bundle  = 1
out bundle = 1
Vectorize input port bundle: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
	vectorize input port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [4096, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

origin: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }, transform: { hw_input_global_wrapper_stencil_BANK_0[d0] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[d0] }
access map : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] -> op_hcompute_hw_input_global_wrapper_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	sched after trans: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_0[i0] -> hw_input_global_wrapper_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
trans max: 1023 , origin max: 1023
agg2sram sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
AGG : --- hw_input_global_wrapper_stencil_BANK_0_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

AGG Schedule: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Vectorize output port bundle: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_read
	Vectorize output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_0[i0] -> hw_input_global_wrapper_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
Range slice: { hw_input_global_wrapper_stencil_BANK_0[i0] -> hw_input_global_wrapper_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
after slice{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(16hw_input_global_wrapper_s0_y + floor((hw_input_global_wrapper_s0_x)/4))] }
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(16hw_input_global_wrapper_s0_y + floor((hw_input_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 2 denom: 4
	Trans str{op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[d0, d1, d2]->op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[d0, d1, floor(d2/4), d2%4]}
{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[d0, d1, d2] -> op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[d0, d1, o2, o3] : (-d2 + o3) mod 4 = 0 and -3 + d2 <= 4o2 <= d2 and 0 <= o3 <= 3 }
access map : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Preliminary vectorization dim: 2
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
after removal: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
new: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
remove: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
access map : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Vectorization dimension: 2
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0, i1, i2, i3] -> [(16i1 + i2)] }
	div dim: 0
rem: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
new: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
base_str : {op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0=0, i1=0, i2=0, i3]}
base_str : {op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0=0, i1=0, i2=0, i3]}
	new: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0 = 0, i1 = 0, i2 = 0, i3] }
	rem: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0 = 0, i1 = 0, i2 = 0, i3] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0, i1, i2, i3 = 0] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0, i1, i2, i3 = 0] }
remove dimension: {3}
before:{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
after:{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[0, i1, i2, 0] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
remove dimension: {3}
sched before projection: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[0, i1, i2] -> [64 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vectorization dimension after irrelevant dimension removal: 2
sched before adjust: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[0, i1, i2] -> [64 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[0, i1, i2] -> [64 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
final schedule: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
final access: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [4096, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

Autogen slice:{ hw_input_global_wrapper_stencil_BANK_0[i0] -> hw_input_global_wrapper_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(16hw_input_global_wrapper_s0_y + floor((hw_input_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] }
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+1]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+2]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+3]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] }
	Add TB output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_0[i0] -> hw_input_global_wrapper_stencil_BANK_0[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(16hw_input_global_wrapper_s0_y + floor((hw_input_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
access map expr:[64*i1+i2]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[64i1 + i2] }
tb output access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
	Access map decouple reuse: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
TB  : --- hw_input_global_wrapper_stencil_BANK_0_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out

TB Schedule: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
SRAM: --- hw_input_global_wrapper_stencil_BANK_0_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_3

SRAM Schedule: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15; op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
after vectorization codegen: hw_input_global_wrapper_stencil_BANK_0_0_agg
--- hw_input_global_wrapper_stencil_BANK_0_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_agg[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_0_0_tb
--- hw_input_global_wrapper_stencil_BANK_0_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_0_tb[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_0_sram
--- hw_input_global_wrapper_stencil_BANK_0_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_3

CGPL level :0
impl inputs: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
impl outpts: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20}
rddom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
ls = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
v = 0
Bank writers: 
	 bank NO.0
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
	 bank NO.1
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.0
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23}
	 bank NO.1
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20, delay = 128
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23, delay = 64
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25, delay = 0
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18, delay = 1

--- hw_input_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[63, 63] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [128 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0, 0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[63, 63] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20

Stride inner most:  1
{hw_input_global_wrapper_stencil[d0, d1] -> hw_input_global_wrapper_stencil[floor((1*d1 + 64*d0)/1)] }
reduce map: { hw_input_global_wrapper_stencil_BANK_1[d0, d1] -> hw_input_global_wrapper_stencil_BANK_1[64d0 + d1] }
linear map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
linear map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
after ubuffer regen: --- hw_input_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [128 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20

addr need tight: {}
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [128 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [128 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }

	UBuffer after address tighten--- hw_input_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [128 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20

getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_1[i0] : 0 <= i0 <= 4095 }
Vectorization buffer capacity: 4096

	UBuffer after cgpl optimization--- hw_input_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [128 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20

find bd for op :op_hcompute_hw_input_global_wrapper_stencil
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
find bd for op :op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128
	find candidate: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_read
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x)] }
	div dim: 0
getting rddom
rddom = { hw_input_global_wrapper_stencil_BANK_1[i0] : 0 <= i0 <= 4095 }
vectorization buffer capacity: 4096
vectorization buf name: hw_input_global_wrapper_stencil_BANK_1
	 original range input access map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	 dim id: 2
Ext by dim: {4096}
  buffer_vectorization Vectorizing: hw_input_global_wrapper_stencil_BANK_1
   On addr dim: 0, fetch_width: 4
--- hw_input_global_wrapper_stencil_BANK_1
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [128 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20

in bundle  = 1
out bundle = 1
Vectorize input port bundle: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
	vectorize input port: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [4096, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

origin: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }, transform: { hw_input_global_wrapper_stencil_BANK_1[d0] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[d0] }
access map : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vec loop dim: 2
Autogen trans:{ op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] -> op_hcompute_hw_input_global_wrapper_stencil[i0, i1, 4i2] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched domain: { op_hcompute_hw_input_global_wrapper_stencil[i0, i1, i2] }
	sched before trans: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
	sched after trans: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Fetch_ii: 4
	final sched: { op_hcompute_hw_input_global_wrapper_stencil[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_1[i0] -> hw_input_global_wrapper_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
trans max: 1023 , origin max: 1023
agg2sram sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
AGG : --- hw_input_global_wrapper_stencil_BANK_1_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

AGG Schedule: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Vectorize output port bundle: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_read
	Vectorize output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_1[i0] -> hw_input_global_wrapper_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
Range slice: { hw_input_global_wrapper_stencil_BANK_1[i0] -> hw_input_global_wrapper_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
after slice{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(16hw_input_global_wrapper_s0_y + floor((hw_input_global_wrapper_s0_x)/4))] }
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(16hw_input_global_wrapper_s0_y + floor((hw_input_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	Dim: 2 denom: 4
	Trans str{op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[d0, d1, d2]->op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[d0, d1, floor(d2/4), d2%4]}
{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[d0, d1, d2] -> op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[d0, d1, o2, o3] : (-d2 + o3) mod 4 = 0 and -3 + d2 <= 4o2 <= d2 and 0 <= o3 <= 3 }
access map : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Preliminary vectorization dim: 2
Extracting linear rational approximation for multi-in-dim affine: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[i0, i1, i2, i3] -> [(16i1 + i2)] }
after removal: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[i0, i1, i2, i3] -> [(16i1 + i2)] }
new: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
remove: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
access map : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }need to find inner dim
dim id: 0
Relation map{0, 1, 1, 0}
Vectorization dimension: 2
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[i0, i1, i2, i3] -> [(16i1 + i2)] }
	div dim: 0
rem: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
new: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
base_str : {op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[i0=0, i1=0, i2=0, i3]}
base_str : {op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[i0=0, i1=0, i2=0, i3]}
	new: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[i0 = 0, i1 = 0, i2 = 0, i3] }
	rem: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[i0 = 0, i1 = 0, i2 = 0, i3] }
origin max: 0
trans max: 0
ahead_step : 0
sched domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[i0, i1, i2, i3 = 0] }
sched domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[i0, i1, i2, i3 = 0] }
remove dimension: {3}
before:{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[0, i1, i2, i3] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 and 0 <= i3 <= 3 }
after:{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[0, i1, i2, 0] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
remove dimension: {3}
sched before projection: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[0, i1, i2] -> [128 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }need to find inner dim
dim id: 0
Relation map{0, 1, 1}
vectorization dimension after irrelevant dimension removal: 2
sched before adjust: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[0, i1, i2] -> [128 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
schedule adjust forward step: 0
	 output sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[0, i1, i2] -> [128 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
final schedule: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
final access: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1[16i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
before rewrite: --- Variable Dimension: 4
	---nameid map: 
		 name: const	 id: 0
		 name: i0	 id: 1
		 name: i1	 id: 2
		 name: i2	 id: 3
	---- In range: [1, 64, 64, ]
	---- Out range: [4096, ]
	---- Stride: 
	---- Start Addr: [0, ]
	---- Access Matrix: 
		[[0, 0, 64, 1, ]
		]

Autogen slice:{ hw_input_global_wrapper_stencil_BANK_1[i0] -> hw_input_global_wrapper_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(16hw_input_global_wrapper_s0_y + floor((hw_input_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + 4i2] }
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 1
output_dim: 0
	var_name: const, idx: 0, coef: 1, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+1]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 2
output_dim: 0
	var_name: const, idx: 0, coef: 2, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+2]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] }
	 rewrite access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 15]
Stride : 4	Origin: 4
ADDR dim <0> range: 1024, offset: 3
output_dim: 0
	var_name: const, idx: 0, coef: 3, vec_stride_in_addr:4
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:4
	var_name: i2, idx: 3, coef: 4, vec_stride_in_addr:4
access map expr:[64*i1+4*i2+3]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] }
	Add TB output port: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
Autogen slice:{ hw_input_global_wrapper_stencil_BANK_1[i0] -> hw_input_global_wrapper_stencil_BANK_1[o0] : -3 + i0 <= 4o0 <= i0 }
	aff : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(16hw_input_global_wrapper_s0_y + floor((hw_input_global_wrapper_s0_x)/4))] }
	div dim: 1
    === div: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(hw_input_global_wrapper_s0_x)/4] }
      denom = 4
      coeff  = 1/4
      num = 1
      denom= 4
Domain space on <i0> is: [0, 0]
Domain space on <i1> is: [0, 63]
Domain space on <i2> is: [0, 63]
Stride : 1	Origin: 1
ADDR dim <0> range: 4096, offset: 0
output_dim: 0
	var_name: const, idx: 0, coef: 0, vec_stride_in_addr:1
	var_name: i1, idx: 2, coef: 64, vec_stride_in_addr:1
	var_name: i2, idx: 3, coef: 1, vec_stride_in_addr:1
access map expr:[64*i1+i2]
domain: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1[64i1 + i2] }
tb output access map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
	Access map decouple reuse: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [128 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [128 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
TB  : --- hw_input_global_wrapper_stencil_BANK_1_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [128 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out

TB Schedule: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15; op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [128 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
before dim id set :{ op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
After dim id set: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
SRAM: --- hw_input_global_wrapper_stencil_BANK_1_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_3

SRAM Schedule: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15; op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
after vectorization codegen: hw_input_global_wrapper_stencil_BANK_1_0_agg
--- hw_input_global_wrapper_stencil_BANK_1_0_agg
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
			dom : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_agg[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_agg[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write_agg_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_out_3

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_1_0_tb
--- hw_input_global_wrapper_stencil_BANK_1_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [128 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_0_tb[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out

after vectorization codegen: hw_input_global_wrapper_stencil_BANK_1_sram
--- hw_input_global_wrapper_stencil_BANK_1_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_3

bank id: 0
rd dom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
	rel map: {0, 1, 1}
	rel dim: 2
	rel dim stride: 4
out_fetch_ii: 4
bank id: 1
rd dom: { hw_input_global_wrapper_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
	rel map: {0, 1, 1}
	rel dim: 2
	rel dim stride: 4
out_fetch_ii: 4
bank id: 0, to be merged: {0, 1}
	Group: 0: {0, 1}
	Perform bank merging!
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_1_0_agg
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_1_0_tb
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_1_sram
--- hw_input_global_wrapper_stencil_BANK_1_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_1_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_1_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_1_sram[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_3

	subcomponent keys:hw_input_global_wrapper_stencil_BANK_0_0_agg
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_0_0_tb
	subcomponent keys:hw_input_global_wrapper_stencil_BANK_0_sram
--- hw_input_global_wrapper_stencil_BANK_0_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4095] }

	---- 4 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[0] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[1] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[2] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_BANK_0_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_BANK_0_sram[3] }
			max location: { hw_input_global_wrapper_stencil_BANK_0_sram[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_3

new banks id: 2
get SRAM port schedule: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
get SRAM port schedule: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
get SRAM port schedule: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
	 output sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
vectorized dim: 2
	 temp sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [62 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
	adjust temp sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_0[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
--- hw_input_global_wrapper_stencil_bank_2_sram
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_sram[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[1] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_sram[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[2] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
			dom : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_sram[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[3] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4095] }

	---- 8 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[1] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[2] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[3] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4095] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[1 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[1] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[2 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[2] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[3 + 64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_sram[3] }
			max location: { hw_input_global_wrapper_stencil_bank_2_sram[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_0
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_1
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_2
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_in_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_3
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_3

--- hw_input_global_wrapper_stencil_bank_2
	---- 1 in ports
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
			dom : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_2[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_bank_2[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2[4095] }

	---- 2 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_2[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [128 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_bank_2[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2[4095] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_2[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_bank_2[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2_write
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_read
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23

sub component buf: agg
sub component buf: tb
sub component buf: sram
sub component buf: agg
sub component buf: tb
sub component buf: sram
micor buf: --- hw_input_global_wrapper_stencil_bank_2_0_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2_0_tb[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_0_tb[1] }
			max location: { hw_input_global_wrapper_stencil_bank_2_0_tb[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_0_tb[2] }
			max location: { hw_input_global_wrapper_stencil_bank_2_0_tb[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_0_tb[3] }
			max location: { hw_input_global_wrapper_stencil_bank_2_0_tb[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [128 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_bank_2_0_tb[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2_0_tb[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20_out

micor buf: --- hw_input_global_wrapper_stencil_bank_2_1_tb
	---- 4 in ports
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_0
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_1_tb[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2_1_tb[4092] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_1
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_1_tb[1 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_1_tb[1] }
			max location: { hw_input_global_wrapper_stencil_bank_2_1_tb[4093] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_2
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_1_tb[2 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_1_tb[2] }
			max location: { hw_input_global_wrapper_stencil_bank_2_1_tb[4094] }

		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_3
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_1_tb[3 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
			min location: { hw_input_global_wrapper_stencil_bank_2_1_tb[3] }
			max location: { hw_input_global_wrapper_stencil_bank_2_1_tb[4095] }

	---- 1 out ports:
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out
			dom : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_1[root = 0, i1, i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			acc : { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_1[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
			sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_1[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
			min location: { hw_input_global_wrapper_stencil_bank_2_1_tb[0] }
			max location: { hw_input_global_wrapper_stencil_bank_2_1_tb[4095] }

	---- Input Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_read_tb_in
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_0
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_1
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_2
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out_3
	---- Output Bundles
		hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_read_tb_out
		---- Ports...
			hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23_out

Bank writers: 
	 bank NO.2
		writers: {hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2}
Bank readers: 
	 bank NO.2
		readers: {hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20, hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23}
Shift Register Output: 
	memtiles IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20, delay = 128
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23, delay = 64
		 hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25, delay = 0
	register IO:: 
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19, delay = 1
		 hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19->hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18, delay = 1

add input: hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_2 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_18 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_19 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_20 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_21 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_22 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_23 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_24 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_25 to pt2wire
add output: hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_26 to pt2wire
agg2sram_opt debug start 
sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
write map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
{ hw_input_global_wrapper_stencil_bank_2_sram[i0] : -3 <= i0 <= 4095 and (((2 + i0) mod 4 = 0 and -1 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 4092 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 4093 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
read map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
op_name: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0, extent_0: 64, stride_0: 1
sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
write map: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_2_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
{ hw_input_global_wrapper_stencil_bank_2_0_agg[i0] : -3 <= i0 <= 4095 and (i0 >= 0 or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 4092 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 4093 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [128 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
write map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
{ hw_input_global_wrapper_stencil_bank_2_0_tb[i0] : -3 <= i0 <= 4095 and (i0 >= 0 or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 4092 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 4093 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_1[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
write map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
{ hw_input_global_wrapper_stencil_bank_2_1_tb[i0] : -3 <= i0 <= 4095 and (i0 >= 0 or ((2 + i0) mod 4 = 0 and -1 <= i0 <= 4094 and 64*floor((1 + i0)/64) <= -2 + i0) or ((1 + i0) mod 4 = 0 and i0 >= 0 and 64*floor((i0)/64) <= -3 + i0) or ((i0) mod 4 = 0 and i0 <= 4092 and 64*floor((3 + i0)/64) <= i0) or ((-1 + i0) mod 4 = 0 and -2 <= i0 <= 4093 and 64*floor((2 + i0)/64) < i0)) }
read map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_1[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
	op name: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0
	Sched: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> [4 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",4,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
adding new agg2sram opt cfg for: op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0: mode 0, agg_read_padding 0, delay 0. 
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_sram[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",16,0
"write_data_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_agg2sram_0[i0 = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_agg[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencil_in2agg_0
	Sched: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }

"dimensionality",3,0
"cycle_starting_addr",0,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
	Micro buf name: agg
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil_in2agg_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_global_wrapper_stencil_bank_2_0_agg[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0
	Sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[i0 = 0, i1, i2] -> [126 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",126,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_sram2tb_0[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0
	Sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [128 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }

"dimensionality",3,0
"cycle_starting_addr",128,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_128_tb2out_0[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_0_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1
	Sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[i0 = 0, i1, i2] -> [61 + 64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }

"dimensionality",3,0
"cycle_starting_addr",61,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",16,0
"cycle_stride_0",4,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_1_tb[64i1 + 4i2] : 0 <= i1 <= 63 and 0 <= i2 <= 15 }
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",0,0
"write_data_stride_0",1,0
	Micro buf name: sram
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_sram2tb_1[d0 = 0, d1, d2] -> hw_input_global_wrapper_stencil_bank_2_sram[64d1 + 4d2] : 0 <= d1 <= 63 and 0 <= d2 <= 15 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",16,0
"read_data_stride_0",1,0
	op name: op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_1
	Sched: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_1[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64 + 64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }

"dimensionality",3,0
"cycle_starting_addr",64,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
	Micro buf name: tb
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencilop_hcompute_hw_input_global_wrapper_stencil_delay_64_tb2out_1[root = 0, i1, i2] -> hw_input_global_wrapper_stencil_bank_2_1_tb[64i1 + i2] : 0 <= i1 <= 63 and 0 <= i2 <= 63 }
"read_data_starting_addr",0,0
"read_data_stride_2",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
{"agg2sram_0":{"agg_read_padding":[0],"cycle_starting_addr":[4],"cycle_stride":[4,64],"delay":[0],"dimensionality":2,"extent":[16,64],"mode":[0],"read_data_starting_addr":[0],"read_data_stride":[1,0],"write_data_starting_addr":[0],"write_data_stride":[1,16]},"in2agg_0":{"cycle_starting_addr":[0],"cycle_stride":[1,64],"dimensionality":2,"extent":[64,64],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_0":{"cycle_starting_addr":[126],"cycle_stride":[4,64],"dimensionality":2,"extent":[16,64],"read_data_starting_addr":[0],"read_data_stride":[1,16],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"sram2tb_1":{"cycle_starting_addr":[61],"cycle_stride":[4,64],"dimensionality":2,"extent":[16,64],"read_data_starting_addr":[0],"read_data_stride":[1,16],"write_data_starting_addr":[0],"write_data_stride":[1,0]},"tb2out_0":{"cycle_starting_addr":[128],"cycle_stride":[1,64],"dimensionality":2,"extent":[64,64],"read_data_starting_addr":[0],"read_data_stride":[1,0]},"tb2out_1":{"cycle_starting_addr":[64],"cycle_stride":[1,64],"dimensionality":2,"extent":[64,64],"read_data_starting_addr":[0],"read_data_stride":[1,0]}}
Add lake node:ub_hw_input_global_wrapper_stencil_bank_2 with input_num = 1, output_num = 2
Config mode: lake
Generating Verilog Testing Collateral for: ub_hw_input_global_wrapper_stencil_bank_2
Module: cgralib.Mem_amber(ID:_U7, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'data_out_1':Bit[16], 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U7__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validFalse__has_validFalse__is_romFalse__num_inputs1__num_outputs2__use_prebuilt_memTrue__width16
addr need tight: {}
Global range: { hw_input_stencil[i0, i1] : 0 <= i0 <= 63 and 0 <= i1 <= 63 }
Sorted ops: {op_hcompute_hw_input_global_wrapper_stencil}
  Before Merge: 
    acc map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
    sched: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
    reduce_map: { hw_input_stencil[d0, d1] -> hw_input_stencil[64d0 + d1] }
  Dim: 2
    Schedule dom range: 64, current_level_stride : 1, up_level_stride : 64
    Address dom range: 64, current_level_stride : 1, up_level_stride : 64
span range: 64, up_level_stride : 64
span range: 64, up_level_stride : 64
	access map merge pair: {{0, 1} }
	schedule merge pair: {{0, 1} }
merge pair: {0, 1} , {0, 1} 
access map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
  After Merge: 
    schedule: { op_hcompute_hw_input_global_wrapper_stencil[0, i1] -> [i1] : 0 <= i1 <= 4095 }
"dimensionality",2,0
"cycle_starting_addr",0,0
"extent_1",1,0
"cycle_stride_1",0,0
"extent_0",4096,0
"cycle_stride_0",1,0
"read_data_starting_addr",0,0
"read_data_stride_1",0,0
"read_data_stride_0",1,0
	Read map: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> hw_input_stencil[hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
{"glb2out_0":{"cycle_starting_addr":[0],"cycle_stride":[1],"dimensionality":1,"extent":[4096],"read_data_starting_addr":[0],"read_data_stride":[1]}}
addr need tight: {}
Global range: { hw_output_stencil[i0, i1] : 0 <= i0 <= 59 and 0 <= i1 <= 59 }
Sorted ops: {op_hcompute_hw_output_stencil}
  Before Merge: 
    acc map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
    sched: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
    reduce_map: { hw_output_stencil[d0, d1] -> hw_output_stencil[60d0 + d1] }
    1d acc map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> hw_output_stencil[60hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
  Dim: 2
    Schedule dom range: 60, current_level_stride : 1, up_level_stride : 64
    Address dom range: 60, current_level_stride : 1, up_level_stride : 60
Find dim: 2 pad = 4
span range: 60, up_level_stride : 60
span range: 60, up_level_stride : 64
	access map merge pair: {{0, 1} }
	schedule merge pair: {}
  After Merge: 
    schedule: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
"dimensionality",3,0
"cycle_starting_addr",260,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",60,0
"cycle_stride_1",64,0
"extent_0",60,0
"cycle_stride_0",1,0
"write_data_starting_addr",0,0
"write_data_stride_2",0,0
"write_data_stride_1",60,0
"write_data_stride_0",1,0
	Write map: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> hw_output_stencil[hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
{"in2glb_0":{"cycle_starting_addr":[260],"cycle_stride":[1,64],"dimensionality":2,"extent":[60,60],"write_data_starting_addr":[0],"write_data_stride":[1,60]}}
Visit op: op_hcompute_hw_output_stencil
Schedule to generate affine controller: { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
pma: { op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [(260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi)] : root = 0 and 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
sched = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] -> [(260 + 64hw_output_s0_y_xo + hw_output_s0_x_xi)] }
  dom = { op_hcompute_hw_output_stencil[root = 0, hw_output_s0_y_xo, hw_output_s0_x_xi] : 0 <= hw_output_s0_y_xo <= 59 and 0 <= hw_output_s0_x_xi <= 59 }
ls = { op_hcompute_hw_output_stencil[root, hw_output_s0_y_xo, hw_output_s0_x_xi] }
v = 0
Add ub node to be aff ctrl
"dimensionality",3,0
"cycle_starting_addr",260,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",60,0
"cycle_stride_1",64,0
"extent_0",60,0
"cycle_stride_0",1,0
Generating Verilog Testing Collateral for: op_hcompute_hw_output_stencil_port_controller
Module: cgralib.Mem_amber(ID:_U14, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'stencil_valid':Bit, 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U14__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validTrue__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
Find compute
Done Finding compute , op Latency : 0, read Latency: 0
Delaying read
Returning delayed...
Delaying exe
Returning delayed...
Delaying writes
Returning delayed...
getting incoming buffers to op_hcompute_hw_output_stencil
  consumed: conv2_stencil
Visit op: op_hcompute_conv2_stencil_1
getting incoming buffers to op_hcompute_conv2_stencil_1
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv1_shift_stencil
  consumed: conv2_stencil_clkwrk_dsa1
Visit op: op_hcompute_conv2_stencil
getting incoming buffers to op_hcompute_conv2_stencil
Visit op: op_hcompute_conv1_shift_stencil
getting incoming buffers to op_hcompute_conv1_shift_stencil
  consumed: conv1_stencil
Visit op: op_hcompute_conv1_stencil_1
getting incoming buffers to op_hcompute_conv1_stencil_1
  consumed: conv1_stencil_clkwrk_dsa0
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
  consumed: hw_input_global_wrapper_stencil
Visit op: op_hcompute_conv1_stencil
getting incoming buffers to op_hcompute_conv1_stencil
Visit op: op_hcompute_hw_input_global_wrapper_stencil
getting incoming buffers to op_hcompute_hw_input_global_wrapper_stencil
  consumed: hw_input_stencil
Schedule to generate affine controller: { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
pma: { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x)] : root = 0 and 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
sched = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] -> [(64hw_input_global_wrapper_s0_y + hw_input_global_wrapper_s0_x)] }
  dom = { op_hcompute_hw_input_global_wrapper_stencil[root = 0, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] : 0 <= hw_input_global_wrapper_s0_y <= 63 and 0 <= hw_input_global_wrapper_s0_x <= 63 }
ls = { op_hcompute_hw_input_global_wrapper_stencil[root, hw_input_global_wrapper_s0_y, hw_input_global_wrapper_s0_x] }
v = 0
Add ub node to be aff ctrl
"dimensionality",3,0
"cycle_starting_addr",0,0
"extent_2",1,0
"cycle_stride_2",0,0
"extent_1",64,0
"cycle_stride_1",64,0
"extent_0",64,0
"cycle_stride_0",1,0
Generating Verilog Testing Collateral for: op_hcompute_hw_input_global_wrapper_stencil_port_controller
Module: cgralib.Mem_amber(ID:_U18, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
  Type: {'rst_n':BitIn, 'clk_en':BitIn, 'clk':coreir.clkIn, 'data_in_0':BitIn[16], 'chain_data_in_0':BitIn[16], 'data_out_0':Bit[16], 'stencil_valid':Bit, 'flush':BitIn}
  Def? No
Verilog module type: cgralib_Mem_amber__ID_U18__ctrl_width16__has_chain_enFalse__has_external_addrgenFalse__has_flushTrue__has_read_validFalse__has_resetFalse__has_stencil_validTrue__has_validFalse__is_romFalse__num_inputs1__num_outputs1__use_prebuilt_memTrue__width16
Find compute
Done Finding compute , op Latency : 0, read Latency: 0
Delaying read
Returning delayed...
Delaying exe
Returning delayed...
Delaying writes
Returning delayed...
Module: global.cascade
  Type: {'clk':coreir.clkIn, 'reset':BitIn, 'hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read_en':Bit, 'hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read':BitIn[16][1], 'hw_output_stencil_op_hcompute_hw_output_stencil_write_valid':Bit, 'hw_output_stencil_op_hcompute_hw_output_stencil_write':Bit[16][1]}
  Def? Yes
  Def:
    Instances:
      _U22 : reg(has_clr:False, has_en:False, has_rst:False, width:16)
      conv1_shift_stencil : conv1_shift_stencil_ub
      conv1_stencil : conv1_stencil_ub
      conv1_stencil_clkwrk_dsa0 : conv1_stencil_clkwrk_dsa0_ub
      conv2_stencil : conv2_stencil_ub
      conv2_stencil_clkwrk_dsa1 : conv2_stencil_clkwrk_dsa1_ub
      hw_input_global_wrapper_stencil : hw_input_global_wrapper_stencil_ub
      op_hcompute_conv1_shift_stencil : cu_op_hcompute_conv1_shift_stencil
      op_hcompute_conv1_stencil : cu_op_hcompute_conv1_stencil
      op_hcompute_conv1_stencil_1 : cu_op_hcompute_conv1_stencil_1
      op_hcompute_conv2_stencil : cu_op_hcompute_conv2_stencil
      op_hcompute_conv2_stencil_1 : cu_op_hcompute_conv2_stencil_1
      op_hcompute_hw_input_global_wrapper_stencil : cu_op_hcompute_hw_input_global_wrapper_stencil
      op_hcompute_hw_input_global_wrapper_stencil_exe_start : op_hcompute_hw_input_global_wrapper_stencil_exe_start_pt__U20
      op_hcompute_hw_input_global_wrapper_stencil_port_controller : Mem_amber(ID:_U18, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
      op_hcompute_hw_input_global_wrapper_stencil_port_controller_clk_en_const : const
      op_hcompute_hw_input_global_wrapper_stencil_read_start : op_hcompute_hw_input_global_wrapper_stencil_read_start_pt__U19
      op_hcompute_hw_input_global_wrapper_stencil_write_start : op_hcompute_hw_input_global_wrapper_stencil_write_start_pt__U21
      op_hcompute_hw_output_stencil : cu_op_hcompute_hw_output_stencil
      op_hcompute_hw_output_stencil_exe_start : op_hcompute_hw_output_stencil_exe_start_pt__U16
      op_hcompute_hw_output_stencil_port_controller : Mem_amber(ID:_U14, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)
      op_hcompute_hw_output_stencil_port_controller_clk_en_const : const
      op_hcompute_hw_output_stencil_read_start : op_hcompute_hw_output_stencil_read_start_pt__U15
      op_hcompute_hw_output_stencil_write_start : op_hcompute_hw_output_stencil_write_start_pt__U17
    Connections:
      conv1_shift_stencil.reset <=> self.reset
      conv1_stencil.reset <=> self.reset
      conv1_stencil_clkwrk_dsa0.reset <=> self.reset
      conv2_stencil.reset <=> self.reset
      conv2_stencil_clkwrk_dsa1.reset <=> self.reset
      hw_input_global_wrapper_stencil.reset <=> self.reset
      op_hcompute_hw_output_stencil_port_controller.flush <=> self.reset
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.flush <=> self.reset
      op_hcompute_hw_output_stencil.hw_output_stencil_op_hcompute_hw_output_stencil_write <=> self.hw_output_stencil_op_hcompute_hw_output_stencil_write
      op_hcompute_hw_output_stencil_port_controller.clk <=> self.clk
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.clk <=> self.clk
      op_hcompute_hw_output_stencil_port_controller.clk_en <=> op_hcompute_hw_output_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_output_stencil_port_controller.rst_n <=> op_hcompute_hw_output_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_output_stencil_port_controller.stencil_valid <=> op_hcompute_hw_output_stencil_read_start.in
      op_hcompute_hw_output_stencil_exe_start.in <=> op_hcompute_hw_output_stencil_port_controller.stencil_valid
      op_hcompute_hw_output_stencil_port_controller.stencil_valid <=> op_hcompute_hw_output_stencil_write_start.in
      op_hcompute_hw_output_stencil_write_start.out <=> self.hw_output_stencil_op_hcompute_hw_output_stencil_write_valid
      conv2_stencil.op_hcompute_hw_output_stencil_read <=> op_hcompute_hw_output_stencil.conv2_stencil_op_hcompute_hw_output_stencil_read
      conv2_stencil.op_hcompute_conv2_stencil_1_write <=> op_hcompute_conv2_stencil_1.conv2_stencil_op_hcompute_conv2_stencil_1_write
      conv1_shift_stencil.op_hcompute_conv2_stencil_1_read <=> op_hcompute_conv2_stencil_1.conv1_shift_stencil_op_hcompute_conv2_stencil_1_read
      conv2_stencil_clkwrk_dsa1.op_hcompute_conv2_stencil_1_read <=> op_hcompute_conv2_stencil_1.conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_1_read
      conv2_stencil_clkwrk_dsa1.op_hcompute_conv2_stencil_write <=> op_hcompute_conv2_stencil.conv2_stencil_clkwrk_dsa1_op_hcompute_conv2_stencil_write
      conv1_shift_stencil.op_hcompute_conv1_shift_stencil_write <=> op_hcompute_conv1_shift_stencil.conv1_shift_stencil_op_hcompute_conv1_shift_stencil_write
      conv1_stencil.op_hcompute_conv1_shift_stencil_read <=> op_hcompute_conv1_shift_stencil.conv1_stencil_op_hcompute_conv1_shift_stencil_read
      conv1_stencil.op_hcompute_conv1_stencil_1_write <=> op_hcompute_conv1_stencil_1.conv1_stencil_op_hcompute_conv1_stencil_1_write
      conv1_stencil_clkwrk_dsa0.op_hcompute_conv1_stencil_1_read <=> op_hcompute_conv1_stencil_1.conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_1_read
      hw_input_global_wrapper_stencil.op_hcompute_conv1_stencil_1_read <=> op_hcompute_conv1_stencil_1.hw_input_global_wrapper_stencil_op_hcompute_conv1_stencil_1_read
      conv1_stencil_clkwrk_dsa0.op_hcompute_conv1_stencil_write <=> op_hcompute_conv1_stencil.conv1_stencil_clkwrk_dsa0_op_hcompute_conv1_stencil_write
      hw_input_global_wrapper_stencil.op_hcompute_hw_input_global_wrapper_stencil_write <=> op_hcompute_hw_input_global_wrapper_stencil.hw_input_global_wrapper_stencil_op_hcompute_hw_input_global_wrapper_stencil_write
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.clk_en <=> op_hcompute_hw_input_global_wrapper_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.rst_n <=> op_hcompute_hw_input_global_wrapper_stencil_port_controller_clk_en_const.out
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.stencil_valid <=> op_hcompute_hw_input_global_wrapper_stencil_read_start.in
      op_hcompute_hw_input_global_wrapper_stencil_exe_start.in <=> op_hcompute_hw_input_global_wrapper_stencil_port_controller.stencil_valid
      op_hcompute_hw_input_global_wrapper_stencil_port_controller.stencil_valid <=> op_hcompute_hw_input_global_wrapper_stencil_write_start.in
      op_hcompute_hw_input_global_wrapper_stencil_read_start.out <=> self.hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read_en
      op_hcompute_hw_input_global_wrapper_stencil.hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read <=> self.hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read
      _U22.in <=> self.hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read[0]

Find top interface: clk
Find top interface: hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read
Find top interface: hw_input_stencil_op_hcompute_hw_input_global_wrapper_stencil_read_en
Find top interface: hw_output_stencil_op_hcompute_hw_output_stencil_write
Find top interface: hw_output_stencil_op_hcompute_hw_output_stencil_write_valid
Find top interface: reset
    Connect the read directly to write port of GLB!
    ub_conv1_shift_stencil_bank_2(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    ub_hw_input_global_wrapper_stencil_bank_2(ID:_U7, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
    Connect the read directly to write port of GLB!
    op_hcompute_hw_output_stencil_port_controller(ID:_U14, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
    Connect the read directly to write port of GLB!
    op_hcompute_hw_input_global_wrapper_stencil_port_controller(ID:_U18, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
inlining op_hcompute_hw_output_stencil_write_start
inlining op_hcompute_hw_output_stencil_read_start
inlining op_hcompute_hw_output_stencil_exe_start
inlining op_hcompute_hw_input_global_wrapper_stencil_write_start
inlining op_hcompute_hw_input_global_wrapper_stencil_read_start
inlining op_hcompute_hw_input_global_wrapper_stencil_exe_start
inlining inner_compute$lshr_conv1_stencil_2_324_325_i2134_i1730
inlining inner_compute$i2140_i2141_i131
inlining inner_compute$add_hw_input_global_wrapper_stencil_1_290_291_tree$_join_i2174_i364
inlining inner_compute$add_hw_input_global_wrapper_stencil_1_290_291_tree$opN_0$opN_0$_join_i2154_i364
inlining inner_compute$add_hw_input_global_wrapper_stencil_1_290_291_tree$opN_0$opN_0$opN_1$_join_i2153_i1110
inlining inner_compute$add_hw_input_global_wrapper_stencil_1_290_291_tree$opN_0$opN_1$_join_i2167_i1808
inlining inner_compute$add_hw_input_global_wrapper_stencil_1_290_291_tree$opN_0$opN_1$opN_0$_join_i2161_i2127
inlining inner_compute$add_hw_input_global_wrapper_stencil_1_290_291_tree$opN_0$opN_1$opN_1$_join_i2166_i1110
inlining inner_compute$add_hw_input_global_wrapper_stencil_1_290_291_tree$opN_1$_join_i2173_i2127
inlining inner_compute$mul_hw_input_global_wrapper_stencil_4_276_278_i2157_i1461
inlining inner_compute$i2199_i2200_i131
inlining inner_compute$add_conv1_shift_stencil_1_362_363_tree$_join_i2233_i364
inlining inner_compute$add_conv1_shift_stencil_1_362_363_tree$opN_0$opN_0$_join_i2213_i364
inlining inner_compute$add_conv1_shift_stencil_1_362_363_tree$opN_0$opN_0$opN_1$_join_i2212_i1110
inlining inner_compute$add_conv1_shift_stencil_1_362_363_tree$opN_0$opN_1$_join_i2226_i1808
inlining inner_compute$add_conv1_shift_stencil_1_362_363_tree$opN_0$opN_1$opN_0$_join_i2220_i2127
inlining inner_compute$add_conv1_shift_stencil_1_362_363_tree$opN_0$opN_1$opN_1$_join_i2225_i1110
inlining inner_compute$add_conv1_shift_stencil_1_362_363_tree$opN_1$_join_i2232_i2127
inlining inner_compute$mul_conv1_shift_stencil_4_348_350_i2216_i1461
inlining inner_compute$lshr_conv2_stencil_2_396_397_i2262_i1730
inlining lshr_conv1_stencil_2_324_325_i2134_i1730
inlining i2140_i2141_i131
inlining add_hw_input_global_wrapper_stencil_1_290_291_tree$_join_i2174_i364
inlining add_hw_input_global_wrapper_stencil_1_290_291_tree$opN_0$opN_0$_join_i2154_i364
inlining add_hw_input_global_wrapper_stencil_1_290_291_tree$opN_0$opN_0$opN_1$_join_i2153_i1110
inlining add_hw_input_global_wrapper_stencil_1_290_291_tree$opN_0$opN_1$_join_i2167_i1808
inlining add_hw_input_global_wrapper_stencil_1_290_291_tree$opN_0$opN_1$opN_0$_join_i2161_i2127
inlining add_hw_input_global_wrapper_stencil_1_290_291_tree$opN_0$opN_1$opN_1$_join_i2166_i1110
inlining add_hw_input_global_wrapper_stencil_1_290_291_tree$opN_1$_join_i2173_i2127
inlining mul_hw_input_global_wrapper_stencil_4_276_278_i2157_i1461
inlining i2199_i2200_i131
inlining add_conv1_shift_stencil_1_362_363_tree$_join_i2233_i364
inlining add_conv1_shift_stencil_1_362_363_tree$opN_0$opN_0$_join_i2213_i364
inlining add_conv1_shift_stencil_1_362_363_tree$opN_0$opN_0$opN_1$_join_i2212_i1110
inlining add_conv1_shift_stencil_1_362_363_tree$opN_0$opN_1$_join_i2226_i1808
inlining add_conv1_shift_stencil_1_362_363_tree$opN_0$opN_1$opN_0$_join_i2220_i2127
inlining add_conv1_shift_stencil_1_362_363_tree$opN_0$opN_1$opN_1$_join_i2225_i1110
inlining add_conv1_shift_stencil_1_362_363_tree$opN_1$_join_i2232_i2127
inlining mul_conv1_shift_stencil_4_348_350_i2216_i1461
inlining lshr_conv2_stencil_2_396_397_i2262_i1730
inlining _U22
inlining d_reg__U1
inlining d_reg__U2
inlining d_reg__U3
inlining d_reg__U4
inlining d_reg__U5
inlining d_reg__U6
inlining d_reg__U10
inlining d_reg__U11
inlining d_reg__U12
inlining d_reg__U13
inlining d_reg__U8
inlining d_reg__U9
inlining op_hcompute_hw_input_global_wrapper_stencil
inlining inner_compute$c0
inlining inner_compute$c0
inlining inner_compute$c0
inlining inner_compute$c1
inlining inner_compute$c2
inlining inner_compute$c3
inlining inner_compute$c4
inlining inner_compute$c5
inlining inner_compute$c6
inlining inner_compute$c7
inlining inner_compute$c0
inlining inner_compute$c0
inlining inner_compute$c1
inlining inner_compute$c2
inlining inner_compute$c3
inlining inner_compute$c4
inlining inner_compute$c5
inlining inner_compute$c6
inlining inner_compute$c7
inlining inner_compute$c0
inlining c0
inlining c0
inlining c0
inlining c1
inlining c2
inlining c3
inlining c4
inlining c5
inlining c6
inlining c7
inlining c0
inlining c0
inlining c1
inlining c2
inlining c3
inlining c4
inlining c5
inlining c6
inlining c7
inlining c0
inlining op_hcompute_hw_output_stencil
inlining op_hcompute_conv2_stencil_1
inlining op_hcompute_conv2_stencil
inlining op_hcompute_conv1_stencil_1
inlining op_hcompute_conv1_stencil
inlining op_hcompute_conv1_shift_stencil
inlining op_hcompute_hw_input_global_wrapper_stencil_port_controller_clk_en_const
inlining op_hcompute_hw_output_stencil_port_controller_clk_en_const
inlining ub_conv1_shift_stencil_bank_2_clk_en_const
inlining ub_hw_input_global_wrapper_stencil_bank_2_clk_en_const
inlining conv2_stencil
inlining conv2_stencil_clkwrk_dsa1
inlining conv1_stencil
inlining conv1_stencil_clkwrk_dsa0
inlining ub_hw_input_global_wrapper_stencil_bank_2
inlining hw_input_global_wrapper_stencil
inlining op_hcompute_hw_input_global_wrapper_stencil_port_controller
inlining op_hcompute_hw_output_stencil_port_controller
inlining ub_conv1_shift_stencil_bank_2
inlining conv1_shift_stencil
    new memory syntax transformation!
    ub_conv1_shift_stencil_bank_2(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    ub_hw_input_global_wrapper_stencil_bank_2(ID:_U7, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    op_hcompute_hw_output_stencil_port_controller(ID:_U14, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: stencil_valid to O4
Connecting cnst_port: flush
    new memory syntax transformation!
    op_hcompute_hw_input_global_wrapper_stencil_port_controller(ID:_U18, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:True, has_valid:False, is_rom:False, num_inputs:1, num_outputs:1, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: flush
    Sel: rst_n
    Sel: stencil_valid
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: stencil_valid to O4
Connecting cnst_port: flush
    new memory syntax transformation!
    hw_input_global_wrapper_stencil$ub_hw_input_global_wrapper_stencil_bank_2(ID:_U7, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
    new memory syntax transformation!
    conv1_shift_stencil$ub_conv1_shift_stencil_bank_2(ID:_U0, ctrl_width:16, has_chain_en:False, has_external_addrgen:False, has_flush:True, has_read_valid:False, has_reset:False, has_stencil_valid:False, has_valid:False, is_rom:False, num_inputs:1, num_outputs:2, use_prebuilt_mem:True, width:16)() : cgralib.Mem_amber
    Sel: clk
    Sel: clk_en
    Sel: data_in_0
    Sel: data_out_0
    Sel: data_out_1
    Sel: flush
    Sel: rst_n
Connecting cnst_port: data_in_0
Connecting cnst_port: chain_data_in_0
Connecting output cnst_port: data_out_0 to O0
Connecting output cnst_port: data_out_1 to O1
Connecting cnst_port: flush
