{
"namespaces":{
  "cgralib":{
    "modules":{
      "BitIO":{
        "type":["Record",[
          ["in","BitIn"],
          ["out","Bit"]
        ]],
        "modparams":{"mode":"String"}
      }
    },
    "generators":{
      "IO":{
        "typegen":"cgralib.unary",
        "genparams":{"width":"Int"}
      },
      "Mem":{
        "typegen":"cgralib.cgralib_mem_type",
        "genparams":{"ID":"String", "ctrl_width":"Int", "has_chain_en":"Bool", "has_external_addrgen":"Bool", "has_flush":"Bool", "has_read_valid":"Bool", "has_reset":"Bool", "has_stencil_valid":"Bool", "has_valid":"Bool", "is_rom":"Bool", "num_inputs":"Int", "num_outputs":"Int", "use_prebuilt_mem":"Bool", "width":"Int"},
        "defaultgenargs":{"ID":["String",""], "ctrl_width":["Int",16], "has_chain_en":["Bool",true], "has_external_addrgen":["Bool",false], "has_flush":["Bool",false], "has_read_valid":["Bool",false], "has_reset":["Bool",false], "has_stencil_valid":["Bool",false], "has_valid":["Bool",false], "num_inputs":["Int",1], "num_outputs":["Int",1], "use_prebuilt_mem":["Bool",false]}
      },
      "Mem_amber":{
        "typegen":"cgralib.cgralib_mem_amber_type",
        "genparams":{"ID":"String", "ctrl_width":"Int", "has_chain_en":"Bool", "has_external_addrgen":"Bool", "has_flush":"Bool", "has_read_valid":"Bool", "has_reset":"Bool", "has_stencil_valid":"Bool", "has_valid":"Bool", "is_rom":"Bool", "num_inputs":"Int", "num_outputs":"Int", "use_prebuilt_mem":"Bool", "width":"Int"},
        "defaultgenargs":{"ID":["String",""], "ctrl_width":["Int",16], "has_chain_en":["Bool",true], "has_external_addrgen":["Bool",false], "has_flush":["Bool",false], "has_read_valid":["Bool",false], "has_reset":["Bool",false], "has_stencil_valid":["Bool",false], "has_valid":["Bool",false], "is_rom":["Bool",false], "num_inputs":["Int",1], "num_outputs":["Int",1], "use_prebuilt_mem":["Bool",false]}
      },
      "Mem_jade":{
        "typegen":"cgralib.MemType",
        "genparams":{"total_depth":"Int", "width":"Int"},
        "defaultgenargs":{"total_depth":["Int",1024], "width":["Int",16]}
      },
      "PE":{
        "typegen":"cgralib.PEType",
        "genparams":{"numbitports":"Int", "numdataports":"Int", "op_kind":"String", "width":"Int"},
        "defaultgenargs":{"numbitports":["Int",3], "numdataports":["Int",2], "width":["Int",16]}
      },
      "Pond":{
        "typegen":"cgralib.cgralib_pond_type",
        "genparams":{"ID":"String", "num_inputs":"Int", "num_outputs":"Int", "width":"Int"},
        "defaultgenargs":{"ID":["String",""], "num_inputs":["Int",1], "num_outputs":["Int",1]}
      },
      "Pond_amber":{
        "typegen":"cgralib.cgralib_pond_amber_type",
        "genparams":{"ID":"String", "num_inputs":"Int", "num_outputs":"Int", "width":"Int"},
        "defaultgenargs":{"ID":["String",""], "num_inputs":["Int",1], "num_outputs":["Int",1]}
      }
    },
    "typegens":{
      "MemType":[{"total_depth":"Int", "width":"Int"},"implicit"],
      "PEType":[{"numbitports":"Int", "numdataports":"Int", "op_kind":"String", "width":"Int"},"implicit"],
      "cgralib_mem_amber_type":[{"ID":"String", "ctrl_width":"Int", "has_chain_en":"Bool", "has_external_addrgen":"Bool", "has_flush":"Bool", "has_read_valid":"Bool", "has_reset":"Bool", "has_stencil_valid":"Bool", "has_valid":"Bool", "is_rom":"Bool", "num_inputs":"Int", "num_outputs":"Int", "use_prebuilt_mem":"Bool", "width":"Int"},"implicit"],
      "cgralib_mem_type":[{"ID":"String", "ctrl_width":"Int", "has_chain_en":"Bool", "has_external_addrgen":"Bool", "has_flush":"Bool", "has_read_valid":"Bool", "has_reset":"Bool", "has_stencil_valid":"Bool", "has_valid":"Bool", "is_rom":"Bool", "num_inputs":"Int", "num_outputs":"Int", "use_prebuilt_mem":"Bool", "width":"Int"},"implicit"],
      "cgralib_pond_amber_type":[{"ID":"String", "num_inputs":"Int", "num_outputs":"Int", "width":"Int"},"implicit"],
      "cgralib_pond_type":[{"ID":"String", "num_inputs":"Int", "num_outputs":"Int", "width":"Int"},"implicit"],
      "unary":[{"width":"Int"},"implicit"]
    }
  },
  "commonlib":{
    "generators":{
      "MAD":{
        "typegen":"coreir.ternary",
        "genparams":{"width":"Int"}
      },
      "abs":{
        "typegen":"coreir.unary",
        "genparams":{"width":"Int"}
      },
      "absd":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "accumulation_register":{
        "typegen":"commonlib.accumulation_register_type",
        "genparams":{"iterations":"Int", "width":"Int"}
      },
      "bitopn":{
        "typegen":"commonlib.bitopN_type",
        "genparams":{"N":"Int", "operator":"String"}
      },
      "const_array":{
        "typegen":"coreir.constArrayTG",
        "genparams":{"type":"CoreIRType", "value":"Int"},
        "defaultgenargs":{"value":["Int",0]}
      },
      "counter":{
        "typegen":"commonlib.counter_type",
        "genparams":{"inc":"Int", "max":"Int", "min":"Int", "width":"Int"}
      },
      "deserializer":{
        "typegen":"commonlib.deserializer_type",
        "genparams":{"rate":"Int", "width":"Int"}
      },
      "div":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "lutN":{
        "typegen":"commonlib.lutNType",
        "genparams":{"N":"Int"},
        "metadata":{"verilog":{"definition":"  assign out = init[in];","interface":["input [N-1:0] in","output out"],"parameters":["init"]}}
      },
      "mult_high":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "mult_middle":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "muxn":{
        "typegen":"commonlib.muxN_type",
        "genparams":{"N":"Int", "width":"Int"}
      },
      "opn":{
        "typegen":"commonlib.opN_type",
        "genparams":{"N":"Int", "operator":"String", "width":"Int"},
        "modules":[
          [{"N":["Int",49], "operator":["String","coreir.add"], "width":["Int",16]},{
              "type":["Record",[
                ["in",["Array",49,["Array",16,"BitIn"]]],
                ["out",["Array",16,"Bit"]]
              ]]
            }]
        ]
      },
      "reg_array":{
        "typegen":"coreir.regArrayTG",
        "genparams":{"has_clr":"Bool", "has_en":"Bool", "has_rst":"Bool", "init":"Int", "type":"CoreIRType"},
        "defaultgenargs":{"has_clr":["Bool",false], "has_en":["Bool",false], "has_rst":["Bool",false], "init":["Int",0]}
      },
      "reshape":{
        "typegen":"commonlib.reshape_type",
        "genparams":{"input_type":"CoreIRType", "output_type":"CoreIRType"}
      },
      "sclamp":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "serializer":{
        "typegen":"commonlib.serializer_type",
        "genparams":{"rate":"Int", "width":"Int"}
      },
      "smax":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "smin":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "transpose":{
        "typegen":"commonlib.transpose_type",
        "genparams":{"input_type":"CoreIRType"}
      },
      "transpose_reshape":{
        "typegen":"commonlib.reshape_type",
        "genparams":{"input_type":"CoreIRType", "output_type":"CoreIRType"}
      },
      "uclamp":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "umax":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "umin":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      }
    },
    "typegens":{
      "accumulation_register_type":[{"iterations":"Int", "width":"Int"},"implicit"],
      "bitopN_type":[{"N":"Int", "operator":"String"},"implicit"],
      "counter_type":[{"inc":"Int", "max":"Int", "min":"Int", "width":"Int"},"implicit"],
      "deserializer_type":[{"rate":"Int", "width":"Int"},"implicit"],
      "lutNType":[{"N":"Int"},"implicit"],
      "muxN_type":[{"N":"Int", "width":"Int"},"implicit"],
      "opN_type":[{"N":"Int", "operator":"String", "width":"Int"},"sparse",[
        [{"N":["Int",49], "operator":["String","coreir.add"], "width":["Int",16]},["Record",[["in",["Array",49,["Array",16,"BitIn"]]],["out",["Array",16,"Bit"]]]]]
      ]],
      "reshape_type":[{"input_type":"CoreIRType", "output_type":"CoreIRType"},"implicit"],
      "serializer_type":[{"rate":"Int", "width":"Int"},"implicit"],
      "transpose_type":[{"input_type":"CoreIRType"},"implicit"]
    }
  },
  "corebit":{
    "modules":{
      "and":{
        "type":["Record",[
          ["in0","BitIn"],
          ["in1","BitIn"],
          ["out","Bit"]
        ]]
      },
      "concat":{
        "type":["Record",[
          ["in0","BitIn"],
          ["in1","BitIn"],
          ["out",["Array",2,"Bit"]]
        ]]
      },
      "const":{
        "type":["Record",[
          ["out","Bit"]
        ]],
        "modparams":{"value":"Bool"}
      },
      "ibuf":{
        "type":["Record",[
          ["in","BitInOut"],
          ["out","Bit"]
        ]]
      },
      "mux":{
        "type":["Record",[
          ["in0","BitIn"],
          ["in1","BitIn"],
          ["sel","BitIn"],
          ["out","Bit"]
        ]]
      },
      "not":{
        "type":["Record",[
          ["in","BitIn"],
          ["out","Bit"]
        ]]
      },
      "or":{
        "type":["Record",[
          ["in0","BitIn"],
          ["in1","BitIn"],
          ["out","Bit"]
        ]]
      },
      "pullresistor":{
        "type":["Record",[
          ["out","BitInOut"]
        ]],
        "modparams":{"value":"Bool"}
      },
      "reg":{
        "type":["Record",[
          ["clk",["Named","coreir.clkIn"]],
          ["in","BitIn"],
          ["out","Bit"]
        ]],
        "modparams":{"clk_posedge":"Bool", "init":"Bool"},
        "defaultmodargs":{"clk_posedge":["Bool",true], "init":["Bool",false]}
      },
      "reg_arst":{
        "type":["Record",[
          ["clk",["Named","coreir.clkIn"]],
          ["arst",["Named","coreir.arstIn"]],
          ["in","BitIn"],
          ["out","Bit"]
        ]],
        "modparams":{"arst_posedge":"Bool", "clk_posedge":"Bool", "init":"Bool"},
        "defaultmodargs":{"arst_posedge":["Bool",true], "clk_posedge":["Bool",true], "init":["Bool",false]}
      },
      "term":{
        "type":["Record",[
          ["in","BitIn"]
        ]]
      },
      "tribuf":{
        "type":["Record",[
          ["in","BitIn"],
          ["en","BitIn"],
          ["out","BitInOut"]
        ]]
      },
      "undriven":{
        "type":["Record",[
          ["out","Bit"]
        ]]
      },
      "wire":{
        "type":["Record",[
          ["in","BitIn"],
          ["out","Bit"]
        ]]
      },
      "xnor":{
        "type":["Record",[
          ["in0","BitIn"],
          ["in1","BitIn"],
          ["out","Bit"]
        ]]
      },
      "xor":{
        "type":["Record",[
          ["in0","BitIn"],
          ["in1","BitIn"],
          ["out","Bit"]
        ]]
      }
    }
  },
  "coreir":{
    "generators":{
      "add":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"},
        "modules":[
          [{"width":["Int",16]},{
              "type":["Record",[
                ["in0",["Array",16,"BitIn"]],
                ["in1",["Array",16,"BitIn"]],
                ["out",["Array",16,"Bit"]]
              ]]
            }]
        ]
      },
      "and":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "andr":{
        "typegen":"coreir.unaryReduce",
        "genparams":{"width":"Int"}
      },
      "ashr":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "concat":{
        "typegen":"coreir.concatTypeFun",
        "genparams":{"width0":"Int", "width1":"Int"}
      },
      "const":{
        "typegen":"coreir.singleOutType",
        "genparams":{"width":"Int"},
        "modules":[
          [{"width":["Int",16]},{
              "type":["Record",[
                ["out",["Array",16,"Bit"]]
              ]],
              "modparams":{"value":["BitVector",16]}
            }]
        ]
      },
      "eq":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "ibuf":{
        "typegen":"coreir.iBuf",
        "genparams":{"width":"Int"}
      },
      "lshr":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "mem":{
        "typegen":"coreir.memType",
        "genparams":{"depth":"Int", "has_init":"Bool", "sync_read":"Bool", "width":"Int"},
        "defaultgenargs":{"has_init":["Bool",false], "sync_read":["Bool",false]}
      },
      "mul":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"},
        "modules":[
          [{"width":["Int",16]},{
              "type":["Record",[
                ["in0",["Array",16,"BitIn"]],
                ["in1",["Array",16,"BitIn"]],
                ["out",["Array",16,"Bit"]]
              ]]
            }]
        ]
      },
      "mux":{
        "typegen":"coreir.muxType",
        "genparams":{"width":"Int"}
      },
      "neg":{
        "typegen":"coreir.unary",
        "genparams":{"width":"Int"}
      },
      "neq":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "not":{
        "typegen":"coreir.unary",
        "genparams":{"width":"Int"}
      },
      "or":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "orr":{
        "typegen":"coreir.unaryReduce",
        "genparams":{"width":"Int"}
      },
      "pullresistor":{
        "typegen":"coreir.pullResistor",
        "genparams":{"width":"Int"}
      },
      "reg":{
        "typegen":"coreir.regType",
        "genparams":{"width":"Int"}
      },
      "reg_arst":{
        "typegen":"coreir.regRstType",
        "genparams":{"width":"Int"}
      },
      "sdiv":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "sext":{
        "typegen":"coreir.extTypeFun",
        "genparams":{"width_in":"Int", "width_out":"Int"}
      },
      "sge":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "sgt":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "shl":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "sle":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "slice":{
        "typegen":"coreir.sliceTypeFun",
        "genparams":{"hi":"Int", "lo":"Int", "width":"Int"},
        "defaultgenargs":{"hi":["Int",1], "lo":["Int",0]}
      },
      "slt":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "smod":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "srem":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "strip":{
        "typegen":"coreir.stripTypeFun",
        "genparams":{"type":"CoreIRType"}
      },
      "sub":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "term":{
        "typegen":"coreir.sngleInType",
        "genparams":{"width":"Int"}
      },
      "tribuf":{
        "typegen":"coreir.triBuf",
        "genparams":{"width":"Int"}
      },
      "udiv":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "uge":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "ugt":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "ule":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "ult":{
        "typegen":"coreir.binaryReduce",
        "genparams":{"width":"Int"}
      },
      "undriven":{
        "typegen":"coreir.singleOutType",
        "genparams":{"width":"Int"}
      },
      "urem":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "wire":{
        "typegen":"coreir.unary",
        "genparams":{"width":"Int"}
      },
      "wrap":{
        "typegen":"coreir.wrapTypeFun",
        "genparams":{"type":"CoreIRType"}
      },
      "xor":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "xorr":{
        "typegen":"coreir.unaryReduce",
        "genparams":{"width":"Int"}
      },
      "zext":{
        "typegen":"coreir.extTypeFun",
        "genparams":{"width_in":"Int", "width_out":"Int"}
      }
    },
    "typegens":{
      "binary":[{"width":"Int"},"sparse",[
        [{"width":["Int",16]},["Record",[["in0",["Array",16,"BitIn"]],["in1",["Array",16,"BitIn"]],["out",["Array",16,"Bit"]]]]]
      ]],
      "binaryReduce":[{"width":"Int"},"implicit"],
      "concatTypeFun":[{"width0":"Int", "width1":"Int"},"implicit"],
      "constArrayTG":[{"type":"CoreIRType", "value":"Int"},"implicit"],
      "extTypeFun":[{"width_in":"Int", "width_out":"Int"},"implicit"],
      "iBuf":[{"width":"Int"},"implicit"],
      "memType":[{"depth":"Int", "has_init":"Bool", "sync_read":"Bool", "width":"Int"},"implicit"],
      "muxType":[{"width":"Int"},"implicit"],
      "pullResistor":[{"width":"Int"},"implicit"],
      "regArrayTG":[{"has_clr":"Bool", "has_en":"Bool", "has_rst":"Bool", "init":"Int", "type":"CoreIRType"},"implicit"],
      "regRstType":[{"width":"Int"},"implicit"],
      "regType":[{"width":"Int"},"implicit"],
      "singleOutType":[{"width":"Int"},"sparse",[
        [{"width":["Int",16]},["Record",[["out",["Array",16,"Bit"]]]]]
      ]],
      "sliceTypeFun":[{"hi":"Int", "lo":"Int", "width":"Int"},"implicit"],
      "sngleInType":[{"width":"Int"},"implicit"],
      "stripTypeFun":[{"type":"CoreIRType"},"implicit"],
      "ternary":[{"width":"Int"},"implicit"],
      "triBuf":[{"width":"Int"},"implicit"],
      "unary":[{"width":"Int"},"implicit"],
      "unaryReduce":[{"width":"Int"},"implicit"],
      "wrapTypeFun":[{"type":"CoreIRType"},"implicit"]
    }
  },
  "float":{
    "generators":{
      "abs":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "acos":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "add":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "asin":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "atan":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "atan2":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "ceil":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "cos":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "div":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "eq":{
        "typegen":"float.binaryReduce",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "exp":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "flr":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "ge":{
        "typegen":"float.binaryReduce",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "gt":{
        "typegen":"float.binaryReduce",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "le":{
        "typegen":"float.binaryReduce",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "ln":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "lt":{
        "typegen":"float.binaryReduce",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "max":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "min":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "mul":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "mux":{
        "typegen":"float.muxType",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "neg":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "neq":{
        "typegen":"float.binaryReduce",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "power":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "rem":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "rnd":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "sin":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "sqr":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "sqrt":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "sub":{
        "typegen":"float.binary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "tan":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      },
      "tanh":{
        "typegen":"float.unary",
        "genparams":{"exp_bits":"Int", "frac_bits":"Int"}
      }
    },
    "typegens":{
      "binary":[{"exp_bits":"Int", "frac_bits":"Int"},"implicit"],
      "binaryReduce":[{"exp_bits":"Int", "frac_bits":"Int"},"implicit"],
      "muxType":[{"exp_bits":"Int", "frac_bits":"Int"},"implicit"],
      "unary":[{"exp_bits":"Int", "frac_bits":"Int"},"implicit"]
    }
  },
  "float_DW":{
    "generators":{
      "fp_add":{
        "typegen":"float_DW.binary",
        "genparams":{"exp_width":"Int", "ieee_compliance":"Bool", "sig_width":"Int"},
        "metadata":{"verilog":{"definition":"DW_fp_add #(.sig_width(sig_width), .exp_width(exp_width), .ieee_compliance(ieee_compliance)) add_inst (.a(a),.b(b),.rnd(rnd),.z(z),.status(status));","interface":["input [exp_width+sig_width:0] a","input [exp_width+sig_width:0] b","input [2:0] rnd","output [exp_width+sig_width:0] z","output [7:0] status"]}}
      },
      "fp_mul":{
        "typegen":"float_DW.binary",
        "genparams":{"exp_width":"Int", "ieee_compliance":"Bool", "sig_width":"Int"},
        "metadata":{"verilog":{"definition":"DW_fp_mult #(.sig_width(sig_width), .exp_width(exp_width), .ieee_compliance(ieee_compliance)) mul_inst (.a(a),.b(b),.rnd(rnd),.z(z),.status(status));","interface":["input [exp_width+sig_width:0] a","input [exp_width+sig_width:0] b","input [2:0] rnd","output [exp_width+sig_width:0] z","output [7:0] status"]}}
      }
    },
    "typegens":{
      "binary":[{"exp_width":"Int", "ieee_compliance":"Bool", "sig_width":"Int"},"implicit"]
    }
  },
  "global":{
    "modules":{
      "hcompute_conv_stencil":{
        "type":["Record",[
          ["out_conv_stencil",["Array",16,"Bit"]]
        ]],
        "instances":{
          "const_p0__258":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0000"]}
          }
        },
        "connections":[
          ["self.out_conv_stencil","const_p0__258.out"]
        ]
      },
      "hcompute_conv_stencil_1":{
        "type":["Record",[
          ["out_conv_stencil",["Array",16,"Bit"]],
          ["in0_conv_stencil",["Array",1,["Array",16,"BitIn"]]],
          ["in1_hw_input_global_wrapper_stencil",["Array",48,["Array",16,"BitIn"]]]
        ]],
        "instances":{
          "add_395_526_527_tree":{
            "genref":"commonlib.opn",
            "genargs":{"N":["Int",49], "operator":["String","coreir.add"], "width":["Int",16]}
          },
          "const_p11__394":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h000b"]}
          },
          "const_p12__408":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h000c"]}
          },
          "const_p13__420":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h000d"]}
          },
          "const_p14__396":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h000e"]}
          },
          "const_p16__422":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0010"]}
          },
          "const_p17__398":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0011"]}
          },
          "const_p18__410":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0012"]}
          },
          "const_p19__424":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0013"]}
          },
          "const_p20__400":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0014"]}
          },
          "const_p21__436":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0015"]}
          },
          "const_p22__426":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0016"]}
          },
          "const_p23__434":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0017"]}
          },
          "const_p24__440":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0018"]}
          },
          "const_p26__438":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h001a"]}
          },
          "const_p29__412":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h001d"]}
          },
          "const_p30__402":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h001e"]}
          },
          "const_p31__450":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h001f"]}
          },
          "const_p32__428":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0020"]}
          },
          "const_p32__428$2":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0020"]}
          },
          "const_p33__448":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0021"]}
          },
          "const_p34__442$1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0022"]}
          },
          "const_p34__442$3":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0022"]}
          },
          "const_p37__454":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0025"]}
          },
          "const_p39__414":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0027"]}
          },
          "const_p40__404":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0028"]}
          },
          "const_p41__462":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0029"]}
          },
          "const_p42__430":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h002a"]}
          },
          "const_p42__430$1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h002a"]}
          },
          "const_p43__460":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h002b"]}
          },
          "const_p44__444":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h002c"]}
          },
          "const_p44__444$1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h002c"]}
          },
          "const_p47__456":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h002f"]}
          },
          "const_p47__456$1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h002f"]}
          },
          "const_p48__467":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0030"]}
          },
          "const_p49__416":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0031"]}
          },
          "const_p50__406":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0032"]}
          },
          "const_p51__473":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0033"]}
          },
          "const_p52__432":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0034"]}
          },
          "const_p52__432$1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0034"]}
          },
          "const_p53__471":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0035"]}
          },
          "const_p54__446":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0036"]}
          },
          "const_p54__446$1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0036"]}
          },
          "const_p54__446$2":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0036"]}
          },
          "const_p57__458":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0039"]}
          },
          "const_p57__458$1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0039"]}
          },
          "const_p58__469":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h003a"]}
          },
          "const_p58__469$1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h003a"]}
          },
          "const_p59__418":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h003b"]}
          },
          "mul_hw_input_global_wrapper_stencil_10_412_413":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_11_414_415":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_12_416_417":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_13_418_419":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_14_420_421":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_15_422_423":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_16_424_425":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_17_426_427":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_18_428_429":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_19_430_431":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_1_394_395":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_20_432_433":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_21_434_435":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_22_436_437":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_23_438_439":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_24_440_441":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_25_442_443":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_26_444_445":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_27_446_447":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_28_448_449":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_29_450_451":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_2_396_397":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_30_428_452":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_31_442_453":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_32_454_455":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_33_456_457":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_34_458_459":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_35_460_461":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_36_462_463":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_37_430_464":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_38_444_465":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_39_456_466":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_3_398_399":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_40_467_468":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_41_469_470":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_42_471_472":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_43_473_474":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_44_432_475":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_45_446_476":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_46_458_477":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_47_446_478":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_48_469_479":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_4_400_401":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_5_402_403":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_6_404_405":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_7_406_407":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_8_408_409":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          },
          "mul_hw_input_global_wrapper_stencil_9_410_411":{
            "genref":"coreir.mul",
            "genargs":{"width":["Int",16]}
          }
        },
        "connections":[
          ["mul_hw_input_global_wrapper_stencil_1_394_395.out","add_395_526_527_tree.in.0"],
          ["mul_hw_input_global_wrapper_stencil_10_412_413.out","add_395_526_527_tree.in.10"],
          ["mul_hw_input_global_wrapper_stencil_11_414_415.out","add_395_526_527_tree.in.11"],
          ["mul_hw_input_global_wrapper_stencil_12_416_417.out","add_395_526_527_tree.in.12"],
          ["mul_hw_input_global_wrapper_stencil_13_418_419.out","add_395_526_527_tree.in.13"],
          ["mul_hw_input_global_wrapper_stencil_14_420_421.out","add_395_526_527_tree.in.14"],
          ["mul_hw_input_global_wrapper_stencil_15_422_423.out","add_395_526_527_tree.in.15"],
          ["mul_hw_input_global_wrapper_stencil_16_424_425.out","add_395_526_527_tree.in.16"],
          ["mul_hw_input_global_wrapper_stencil_17_426_427.out","add_395_526_527_tree.in.17"],
          ["mul_hw_input_global_wrapper_stencil_18_428_429.out","add_395_526_527_tree.in.18"],
          ["mul_hw_input_global_wrapper_stencil_19_430_431.out","add_395_526_527_tree.in.19"],
          ["self.in0_conv_stencil.0","add_395_526_527_tree.in.1"],
          ["mul_hw_input_global_wrapper_stencil_20_432_433.out","add_395_526_527_tree.in.20"],
          ["mul_hw_input_global_wrapper_stencil_21_434_435.out","add_395_526_527_tree.in.21"],
          ["mul_hw_input_global_wrapper_stencil_22_436_437.out","add_395_526_527_tree.in.22"],
          ["mul_hw_input_global_wrapper_stencil_23_438_439.out","add_395_526_527_tree.in.23"],
          ["mul_hw_input_global_wrapper_stencil_24_440_441.out","add_395_526_527_tree.in.24"],
          ["mul_hw_input_global_wrapper_stencil_25_442_443.out","add_395_526_527_tree.in.25"],
          ["mul_hw_input_global_wrapper_stencil_26_444_445.out","add_395_526_527_tree.in.26"],
          ["mul_hw_input_global_wrapper_stencil_27_446_447.out","add_395_526_527_tree.in.27"],
          ["mul_hw_input_global_wrapper_stencil_28_448_449.out","add_395_526_527_tree.in.28"],
          ["mul_hw_input_global_wrapper_stencil_29_450_451.out","add_395_526_527_tree.in.29"],
          ["mul_hw_input_global_wrapper_stencil_2_396_397.out","add_395_526_527_tree.in.2"],
          ["mul_hw_input_global_wrapper_stencil_30_428_452.out","add_395_526_527_tree.in.30"],
          ["mul_hw_input_global_wrapper_stencil_31_442_453.out","add_395_526_527_tree.in.31"],
          ["mul_hw_input_global_wrapper_stencil_32_454_455.out","add_395_526_527_tree.in.32"],
          ["mul_hw_input_global_wrapper_stencil_33_456_457.out","add_395_526_527_tree.in.33"],
          ["mul_hw_input_global_wrapper_stencil_34_458_459.out","add_395_526_527_tree.in.34"],
          ["mul_hw_input_global_wrapper_stencil_35_460_461.out","add_395_526_527_tree.in.35"],
          ["mul_hw_input_global_wrapper_stencil_36_462_463.out","add_395_526_527_tree.in.36"],
          ["mul_hw_input_global_wrapper_stencil_37_430_464.out","add_395_526_527_tree.in.37"],
          ["mul_hw_input_global_wrapper_stencil_38_444_465.out","add_395_526_527_tree.in.38"],
          ["mul_hw_input_global_wrapper_stencil_39_456_466.out","add_395_526_527_tree.in.39"],
          ["mul_hw_input_global_wrapper_stencil_3_398_399.out","add_395_526_527_tree.in.3"],
          ["mul_hw_input_global_wrapper_stencil_40_467_468.out","add_395_526_527_tree.in.40"],
          ["mul_hw_input_global_wrapper_stencil_41_469_470.out","add_395_526_527_tree.in.41"],
          ["mul_hw_input_global_wrapper_stencil_42_471_472.out","add_395_526_527_tree.in.42"],
          ["mul_hw_input_global_wrapper_stencil_43_473_474.out","add_395_526_527_tree.in.43"],
          ["mul_hw_input_global_wrapper_stencil_44_432_475.out","add_395_526_527_tree.in.44"],
          ["mul_hw_input_global_wrapper_stencil_45_446_476.out","add_395_526_527_tree.in.45"],
          ["mul_hw_input_global_wrapper_stencil_46_458_477.out","add_395_526_527_tree.in.46"],
          ["mul_hw_input_global_wrapper_stencil_47_446_478.out","add_395_526_527_tree.in.47"],
          ["mul_hw_input_global_wrapper_stencil_48_469_479.out","add_395_526_527_tree.in.48"],
          ["mul_hw_input_global_wrapper_stencil_4_400_401.out","add_395_526_527_tree.in.4"],
          ["mul_hw_input_global_wrapper_stencil_5_402_403.out","add_395_526_527_tree.in.5"],
          ["mul_hw_input_global_wrapper_stencil_6_404_405.out","add_395_526_527_tree.in.6"],
          ["mul_hw_input_global_wrapper_stencil_7_406_407.out","add_395_526_527_tree.in.7"],
          ["mul_hw_input_global_wrapper_stencil_8_408_409.out","add_395_526_527_tree.in.8"],
          ["mul_hw_input_global_wrapper_stencil_9_410_411.out","add_395_526_527_tree.in.9"],
          ["self.out_conv_stencil","add_395_526_527_tree.out"],
          ["mul_hw_input_global_wrapper_stencil_1_394_395.in1","const_p11__394.out"],
          ["mul_hw_input_global_wrapper_stencil_8_408_409.in1","const_p12__408.out"],
          ["mul_hw_input_global_wrapper_stencil_14_420_421.in1","const_p13__420.out"],
          ["mul_hw_input_global_wrapper_stencil_2_396_397.in1","const_p14__396.out"],
          ["mul_hw_input_global_wrapper_stencil_15_422_423.in1","const_p16__422.out"],
          ["mul_hw_input_global_wrapper_stencil_3_398_399.in1","const_p17__398.out"],
          ["mul_hw_input_global_wrapper_stencil_9_410_411.in1","const_p18__410.out"],
          ["mul_hw_input_global_wrapper_stencil_16_424_425.in1","const_p19__424.out"],
          ["mul_hw_input_global_wrapper_stencil_4_400_401.in1","const_p20__400.out"],
          ["mul_hw_input_global_wrapper_stencil_22_436_437.in1","const_p21__436.out"],
          ["mul_hw_input_global_wrapper_stencil_17_426_427.in1","const_p22__426.out"],
          ["mul_hw_input_global_wrapper_stencil_21_434_435.in1","const_p23__434.out"],
          ["mul_hw_input_global_wrapper_stencil_24_440_441.in1","const_p24__440.out"],
          ["mul_hw_input_global_wrapper_stencil_23_438_439.in1","const_p26__438.out"],
          ["mul_hw_input_global_wrapper_stencil_10_412_413.in1","const_p29__412.out"],
          ["mul_hw_input_global_wrapper_stencil_5_402_403.in1","const_p30__402.out"],
          ["mul_hw_input_global_wrapper_stencil_29_450_451.in1","const_p31__450.out"],
          ["mul_hw_input_global_wrapper_stencil_30_428_452.in1","const_p32__428$2.out"],
          ["mul_hw_input_global_wrapper_stencil_18_428_429.in1","const_p32__428.out"],
          ["mul_hw_input_global_wrapper_stencil_28_448_449.in1","const_p33__448.out"],
          ["mul_hw_input_global_wrapper_stencil_25_442_443.in1","const_p34__442$1.out"],
          ["mul_hw_input_global_wrapper_stencil_31_442_453.in1","const_p34__442$3.out"],
          ["mul_hw_input_global_wrapper_stencil_32_454_455.in1","const_p37__454.out"],
          ["mul_hw_input_global_wrapper_stencil_11_414_415.in1","const_p39__414.out"],
          ["mul_hw_input_global_wrapper_stencil_6_404_405.in1","const_p40__404.out"],
          ["mul_hw_input_global_wrapper_stencil_36_462_463.in1","const_p41__462.out"],
          ["mul_hw_input_global_wrapper_stencil_37_430_464.in1","const_p42__430$1.out"],
          ["mul_hw_input_global_wrapper_stencil_19_430_431.in1","const_p42__430.out"],
          ["mul_hw_input_global_wrapper_stencil_35_460_461.in1","const_p43__460.out"],
          ["mul_hw_input_global_wrapper_stencil_38_444_465.in1","const_p44__444$1.out"],
          ["mul_hw_input_global_wrapper_stencil_26_444_445.in1","const_p44__444.out"],
          ["mul_hw_input_global_wrapper_stencil_39_456_466.in1","const_p47__456$1.out"],
          ["mul_hw_input_global_wrapper_stencil_33_456_457.in1","const_p47__456.out"],
          ["mul_hw_input_global_wrapper_stencil_40_467_468.in1","const_p48__467.out"],
          ["mul_hw_input_global_wrapper_stencil_12_416_417.in1","const_p49__416.out"],
          ["mul_hw_input_global_wrapper_stencil_7_406_407.in1","const_p50__406.out"],
          ["mul_hw_input_global_wrapper_stencil_43_473_474.in1","const_p51__473.out"],
          ["mul_hw_input_global_wrapper_stencil_44_432_475.in1","const_p52__432$1.out"],
          ["mul_hw_input_global_wrapper_stencil_20_432_433.in1","const_p52__432.out"],
          ["mul_hw_input_global_wrapper_stencil_42_471_472.in1","const_p53__471.out"],
          ["mul_hw_input_global_wrapper_stencil_45_446_476.in1","const_p54__446$1.out"],
          ["mul_hw_input_global_wrapper_stencil_47_446_478.in1","const_p54__446$2.out"],
          ["mul_hw_input_global_wrapper_stencil_27_446_447.in1","const_p54__446.out"],
          ["mul_hw_input_global_wrapper_stencil_46_458_477.in1","const_p57__458$1.out"],
          ["mul_hw_input_global_wrapper_stencil_34_458_459.in1","const_p57__458.out"],
          ["mul_hw_input_global_wrapper_stencil_48_469_479.in1","const_p58__469$1.out"],
          ["mul_hw_input_global_wrapper_stencil_41_469_470.in1","const_p58__469.out"],
          ["mul_hw_input_global_wrapper_stencil_13_418_419.in1","const_p59__418.out"],
          ["self.in1_hw_input_global_wrapper_stencil.1","mul_hw_input_global_wrapper_stencil_10_412_413.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.2","mul_hw_input_global_wrapper_stencil_11_414_415.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.3","mul_hw_input_global_wrapper_stencil_12_416_417.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.4","mul_hw_input_global_wrapper_stencil_13_418_419.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.5","mul_hw_input_global_wrapper_stencil_14_420_421.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.6","mul_hw_input_global_wrapper_stencil_15_422_423.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.7","mul_hw_input_global_wrapper_stencil_16_424_425.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.8","mul_hw_input_global_wrapper_stencil_17_426_427.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.9","mul_hw_input_global_wrapper_stencil_18_428_429.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.10","mul_hw_input_global_wrapper_stencil_19_430_431.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.0","mul_hw_input_global_wrapper_stencil_1_394_395.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.12","mul_hw_input_global_wrapper_stencil_20_432_433.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.13","mul_hw_input_global_wrapper_stencil_21_434_435.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.14","mul_hw_input_global_wrapper_stencil_22_436_437.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.15","mul_hw_input_global_wrapper_stencil_23_438_439.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.16","mul_hw_input_global_wrapper_stencil_24_440_441.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.17","mul_hw_input_global_wrapper_stencil_25_442_443.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.18","mul_hw_input_global_wrapper_stencil_26_444_445.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.19","mul_hw_input_global_wrapper_stencil_27_446_447.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.20","mul_hw_input_global_wrapper_stencil_28_448_449.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.21","mul_hw_input_global_wrapper_stencil_29_450_451.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.11","mul_hw_input_global_wrapper_stencil_2_396_397.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.23","mul_hw_input_global_wrapper_stencil_30_428_452.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.24","mul_hw_input_global_wrapper_stencil_31_442_453.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.25","mul_hw_input_global_wrapper_stencil_32_454_455.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.26","mul_hw_input_global_wrapper_stencil_33_456_457.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.27","mul_hw_input_global_wrapper_stencil_34_458_459.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.28","mul_hw_input_global_wrapper_stencil_35_460_461.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.29","mul_hw_input_global_wrapper_stencil_36_462_463.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.30","mul_hw_input_global_wrapper_stencil_37_430_464.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.31","mul_hw_input_global_wrapper_stencil_38_444_465.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.32","mul_hw_input_global_wrapper_stencil_39_456_466.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.22","mul_hw_input_global_wrapper_stencil_3_398_399.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.34","mul_hw_input_global_wrapper_stencil_40_467_468.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.35","mul_hw_input_global_wrapper_stencil_41_469_470.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.36","mul_hw_input_global_wrapper_stencil_42_471_472.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.37","mul_hw_input_global_wrapper_stencil_43_473_474.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.38","mul_hw_input_global_wrapper_stencil_44_432_475.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.39","mul_hw_input_global_wrapper_stencil_45_446_476.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.40","mul_hw_input_global_wrapper_stencil_46_458_477.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.41","mul_hw_input_global_wrapper_stencil_47_446_478.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.42","mul_hw_input_global_wrapper_stencil_48_469_479.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.33","mul_hw_input_global_wrapper_stencil_4_400_401.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.43","mul_hw_input_global_wrapper_stencil_5_402_403.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.44","mul_hw_input_global_wrapper_stencil_6_404_405.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.45","mul_hw_input_global_wrapper_stencil_7_406_407.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.46","mul_hw_input_global_wrapper_stencil_8_408_409.in0"],
          ["self.in1_hw_input_global_wrapper_stencil.47","mul_hw_input_global_wrapper_stencil_9_410_411.in0"]
        ]
      },
      "hcompute_hw_input_global_wrapper_stencil":{
        "type":["Record",[
          ["out_hw_input_global_wrapper_stencil",["Array",16,"Bit"]],
          ["in0_hw_input_stencil",["Array",1,["Array",16,"BitIn"]]]
        ]],
        "connections":[
          ["self.out_hw_input_global_wrapper_stencil","self.in0_hw_input_stencil.0"]
        ]
      },
      "hcompute_hw_output_stencil":{
        "type":["Record",[
          ["out_hw_output_stencil",["Array",16,"Bit"]],
          ["in0_conv_stencil",["Array",1,["Array",16,"BitIn"]]]
        ]],
        "connections":[
          ["self.out_hw_output_stencil","self.in0_conv_stencil.0"]
        ]
      }
    }
  },
  "lakelib":{
    "generators":{
      "FifoMem":{
        "typegen":"lakelib.FifoMemType",
        "genparams":{"depth":"Int", "width":"Int"},
        "defaultgenargs":{"depth":["Int",1024], "width":["Int",16]}
      },
      "LinebufferMem":{
        "typegen":"lakelib.LinebufferMemType",
        "genparams":{"depth":"Int", "width":"Int"},
        "defaultgenargs":{"depth":["Int",1024], "width":["Int",16]}
      },
      "Ram":{
        "typegen":"lakelib.RamType",
        "genparams":{"depth":"Int", "width":"Int"}
      },
      "abstract_unified_buffer":{
        "typegen":"lakelib.abstract_unified_buffer_type",
        "genparams":{"capacity":"CoreIRType", "dim_ref":"CoreIRType", "input_ports":"CoreIRType", "output_ports":"CoreIRType", "range":"CoreIRType", "stride":"CoreIRType"}
      },
      "linebuffer":{
        "typegen":"lakelib.lb_type",
        "genparams":{"has_stencil_valid":"Bool", "has_valid":"Bool", "image_type":"CoreIRType", "input_type":"CoreIRType", "output_type":"CoreIRType"},
        "defaultgenargs":{"has_stencil_valid":["Bool",false], "has_valid":["Bool",false]}
      },
      "linebuffer_recursive":{
        "typegen":"lakelib.lb_recursive_type",
        "genparams":{"has_stencil_valid":"Bool", "has_valid":"Bool", "image_type":"CoreIRType", "input_type":"CoreIRType", "is_last_lb":"Bool", "output_type":"CoreIRType"}
      },
      "new_unified_buffer":{
        "typegen":"lakelib.new_unified_buffer_type",
        "genparams":{"chain_en":"Bool", "chain_idx":"Int", "init":"Json", "istreams":"Json", "logical_size":"Json", "ostreams":"Json", "width":"Int"},
        "defaultgenargs":{"init":["Json",{"init":[0]}], "istreams":["Json",{"input0":{"input_block":[1],"input_chunk":[1],"input_range":[1],"input_starting_addrs":[0],"input_stride":[0],"num_input_ports":[1]}}], "ostreams":["Json",{"output0":{"iter_cnt":1,"num_output_ports":1,"num_stencil_acc_dim":[0],"output_block":[1],"output_range":[1],"output_starting_addrs":[0],"output_stencil":[1],"output_stride":[1],"stencil_width":[1]}}]}
      },
      "unified_buffer":{
        "typegen":"lakelib.unified_buffer_type",
        "genparams":{"chain_en":"Bool", "chain_idx":"Int", "depth":"Int", "dimensionality":"Int", "init":"Json", "input_chunk":"Json", "input_range_0":"Int", "input_range_1":"Int", "input_range_2":"Int", "input_range_3":"Int", "input_range_4":"Int", "input_range_5":"Int", "input_starting_addrs":"Json", "input_stride_0":"Int", "input_stride_1":"Int", "input_stride_2":"Int", "input_stride_3":"Int", "input_stride_4":"Int", "input_stride_5":"Int", "iter_cnt":"Int", "logical_size":"Json", "num_input_ports":"Int", "num_output_ports":"Int", "num_reduction_iter":"Int", "num_stencil_acc_dim":"Int", "output_starting_addrs":"Json", "output_stencil":"Json", "range_0":"Int", "range_1":"Int", "range_2":"Int", "range_3":"Int", "range_4":"Int", "range_5":"Int", "rate_matched":"Bool", "stencil_width":"Int", "stride_0":"Int", "stride_1":"Int", "stride_2":"Int", "stride_3":"Int", "stride_4":"Int", "stride_5":"Int", "width":"Int"},
        "defaultgenargs":{"init":["Json",{"init":[0]}], "input_chunk":["Json",{"input_chunk":[1]}], "input_range_0":["Int",1], "input_range_1":["Int",0], "input_range_2":["Int",0], "input_range_3":["Int",0], "input_range_4":["Int",0], "input_range_5":["Int",0], "input_starting_addrs":["Json",{"input_start":[0]}], "input_stride_0":["Int",0], "input_stride_1":["Int",0], "input_stride_2":["Int",0], "input_stride_3":["Int",0], "input_stride_4":["Int",0], "input_stride_5":["Int",0], "num_input_ports":["Int",1], "num_output_ports":["Int",1], "num_reduction_iter":["Int",1], "num_stencil_acc_dim":["Int",0], "output_starting_addrs":["Json",{"output_start":[0],"output_stencil":[1]}], "output_stencil":["Json",null], "range_0":["Int",1], "range_1":["Int",0], "range_2":["Int",0], "range_3":["Int",0], "range_4":["Int",0], "range_5":["Int",0], "stride_0":["Int",1], "stride_1":["Int",0], "stride_2":["Int",0], "stride_3":["Int",0], "stride_4":["Int",0], "stride_5":["Int",0]}
      }
    },
    "typegens":{
      "FifoMemType":[{"depth":"Int", "width":"Int"},"implicit"],
      "LinebufferMemType":[{"depth":"Int", "width":"Int"},"implicit"],
      "RamType":[{"depth":"Int", "width":"Int"},"implicit"],
      "abstract_unified_buffer_type":[{"capacity":"CoreIRType", "dim_ref":"CoreIRType", "input_ports":"CoreIRType", "output_ports":"CoreIRType", "range":"CoreIRType", "stride":"CoreIRType"},"implicit"],
      "lb_recursive_type":[{"has_stencil_valid":"Bool", "has_valid":"Bool", "image_type":"CoreIRType", "input_type":"CoreIRType", "is_last_lb":"Bool", "output_type":"CoreIRType"},"implicit"],
      "lb_type":[{"has_stencil_valid":"Bool", "has_valid":"Bool", "image_type":"CoreIRType", "input_type":"CoreIRType", "output_type":"CoreIRType"},"implicit"],
      "new_unified_buffer_type":[{"chain_en":"Bool", "chain_idx":"Int", "init":"Json", "istreams":"Json", "logical_size":"Json", "ostreams":"Json", "width":"Int"},"implicit"],
      "unified_buffer_type":[{"chain_en":"Bool", "chain_idx":"Int", "depth":"Int", "dimensionality":"Int", "init":"Json", "input_chunk":"Json", "input_range_0":"Int", "input_range_1":"Int", "input_range_2":"Int", "input_range_3":"Int", "input_range_4":"Int", "input_range_5":"Int", "input_starting_addrs":"Json", "input_stride_0":"Int", "input_stride_1":"Int", "input_stride_2":"Int", "input_stride_3":"Int", "input_stride_4":"Int", "input_stride_5":"Int", "iter_cnt":"Int", "logical_size":"Json", "num_input_ports":"Int", "num_output_ports":"Int", "num_reduction_iter":"Int", "num_stencil_acc_dim":"Int", "output_starting_addrs":"Json", "output_stencil":"Json", "range_0":"Int", "range_1":"Int", "range_2":"Int", "range_3":"Int", "range_4":"Int", "range_5":"Int", "rate_matched":"Bool", "stencil_width":"Int", "stride_0":"Int", "stride_1":"Int", "stride_2":"Int", "stride_3":"Int", "stride_4":"Int", "stride_5":"Int", "width":"Int"},"implicit"]
    }
  },
  "mantle":{
    "generators":{
      "add":{
        "typegen":"mantle.addType",
        "genparams":{"has_cin":"Bool", "has_cout":"Bool", "width":"Int"},
        "defaultgenargs":{"has_cin":["Bool",false], "has_cout":["Bool",false]}
      },
      "counter":{
        "typegen":"mantle.counter_type",
        "genparams":{"has_en":"Bool", "has_max":"Bool", "has_srst":"Bool", "width":"Int"},
        "defaultgenargs":{"has_en":["Bool",false], "has_max":["Bool",false], "has_srst":["Bool",false]}
      },
      "reg":{
        "typegen":"mantle.regType",
        "genparams":{"has_clr":"Bool", "has_en":"Bool", "has_rst":"Bool", "width":"Int"},
        "defaultgenargs":{"has_clr":["Bool",false], "has_en":["Bool",false], "has_rst":["Bool",false]}
      },
      "regCE":{
        "typegen":"mantle.regCEType",
        "genparams":{"width":"Int"},
        "metadata":{"verilog":{"definition":"  reg [width-1:0] value;\n  always @(posedge clk) begin\n    if (ce) begin\n      value <= in;\n    end\n  end\n  assign out = value;","interface":["input [width-1:0] in","input ce","output [width-1:0] out","input clk"]}}
      },
      "regCE_arst":{
        "typegen":"mantle.regCEArstType",
        "genparams":{"width":"Int"},
        "metadata":{"verilog":{"definition":"  reg [width-1:0] value;\n  always @(posedge clk, posedge arst) begin\n    if (arst) begin\n      value <= init;\n    end\n    else if (ce) begin\n      value <= in;\n    end\n  end\n  assign out = value;","interface":["input [width-1:0] in","input ce","output [width-1:0] out","input clk","input arst"],"parameters":["init"]}}
      },
      "sub":{
        "typegen":"mantle.addType",
        "genparams":{"has_cin":"Bool", "has_cout":"Bool", "width":"Int"},
        "defaultgenargs":{"has_cin":["Bool",false], "has_cout":["Bool",false]}
      },
      "wire":{
        "typegen":"mantle.wire",
        "genparams":{"type":"CoreIRType"}
      }
    },
    "typegens":{
      "addType":[{"has_cin":"Bool", "has_cout":"Bool", "width":"Int"},"implicit"],
      "counter_type":[{"has_en":"Bool", "has_max":"Bool", "has_srst":"Bool", "width":"Int"},"implicit"],
      "regCEArstType":[{"width":"Int"},"implicit"],
      "regCEType":[{"width":"Int"},"implicit"],
      "regType":[{"has_clr":"Bool", "has_en":"Bool", "has_rst":"Bool", "width":"Int"},"implicit"],
      "wire":[{"type":"CoreIRType"},"implicit"]
    }
  },
  "memory":{
    "generators":{
      "fifo":{
        "typegen":"memory.FifoMemType",
        "genparams":{"depth":"Int", "width":"Int"},
        "defaultgenargs":{"depth":["Int",1024], "width":["Int",16]}
      },
      "ram":{
        "typegen":"memory.RamType",
        "genparams":{"depth":"Int", "width":"Int"}
      },
      "ram2":{
        "typegen":"memory.RamType2",
        "genparams":{"depth":"Int", "width":"Int"}
      },
      "rom":{
        "typegen":"memory.RomType",
        "genparams":{"depth":"Int", "width":"Int"}
      },
      "rom2":{
        "typegen":"memory.Rom2Type",
        "genparams":{"depth":"Int", "width":"Int"}
      },
      "rowbuffer":{
        "typegen":"memory.rowbufferType",
        "genparams":{"depth":"Int", "width":"Int"}
      },
      "rowbuffer_stencil_valid":{
        "typegen":"memory.rowbufferWithStencilValidType",
        "genparams":{"depth":"Int", "stencil_width":"Int", "width":"Int"}
      },
      "sync_read_mem":{
        "typegen":"memory.syncReadMemType",
        "genparams":{"depth":"Int", "has_init":"Bool", "width":"Int"},
        "defaultgenargs":{"has_init":["Bool",false]}
      }
    },
    "typegens":{
      "FifoMemType":[{"depth":"Int", "width":"Int"},"implicit"],
      "RamType":[{"depth":"Int", "width":"Int"},"implicit"],
      "RamType2":[{"depth":"Int", "width":"Int"},"implicit"],
      "Rom2Type":[{"depth":"Int", "width":"Int"},"implicit"],
      "RomType":[{"depth":"Int", "width":"Int"},"implicit"],
      "rowbufferType":[{"depth":"Int", "width":"Int"},"implicit"],
      "rowbufferWithStencilValidType":[{"depth":"Int", "stencil_width":"Int", "width":"Int"},"implicit"],
      "syncReadMemType":[{"depth":"Int", "has_init":"Bool", "width":"Int"},"implicit"]
    }
  }
}
}
